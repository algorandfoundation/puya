{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0dA;;;;;;AAEW;;AAAA;AAAA;AAAA;AAAY;AAAZ;AAAP;AAGJ;;;;;;AAEW;;AAAA;AAAA;AAAP;AAGJ;;;;;;AAEmB;;AAAM;AAAN;AAAA;AAAR;;AAAA;;AAAA;AAAA;AAAA;AAAP;;;;AAxYC;;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;;;;AAoCA;;;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;AAAA;;;;AAaA;;;AAAA;AAAA;;;;AAMA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AASA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;;AASA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAgCA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAsBA;;;AAAA;;;AAAA;AAAA;;;;AAcA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAUA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAYA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAWA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAUA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAeA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAWA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;;AASA;;;AAAA;AAAA;;;;AAUA;;;AAAA;AAAA;;;;AAgDA;;;AAAA;AAAA;;;;AAwBA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AA5XU;;;AAAoB;;AAApB;AAAP;;AAKR;;;;;;AAEQ;;AAAA;AAAA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;;AAAA;;AAAA;AACA;AAAA;;AAAA;AAAA;;AAAA;AACmB;;AAAA;;;AAAnB;;AAAA;;AAAA;;AAAA;;AAAA;AACA;;AAAA;;;AAAA;;AACA;;AAAA;AAAA;AAAyB;;AAAzB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAC2B;;;AAAqB;;AAArB;AAA3B;;AAAA;;AAAmD;;;;;;;;;;AAAnD;AAEU;;AAAA;AAAA;AACH;;AAAA;AAAA;AAAA;AAAA;AAA2B;;AAAA;AAAA;AAA3B;AAAP;AAEA;;AAAA;AAAA;AAAA;AAAoB;;AAApB;AAAA;AAAA;;AAAA;;AAAA;AAGO;;AAAA;AAAA;AAAqB;AAArB;AAAP;AACO;;AAAA;AAAA;AAAqB;;AAAA;AAArB;AAAP;AACO;AAAA;AAAA;AAAqB;;AAAA;AAArB;AAAP;AACO;;AAAA;AAAA;AAAqB;;AAAA;;;AAAA;AAArB;AAAP;AAGO;AAAuB;AAAvB;AAAA;AAA6B;;AAAQ;AAAR;AAAA;AAA7B;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAA8B;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAA9B;AAAP;AACO;AAAA;AAAA;;AAAwB;AAAxB;;AAAA;AAAA;;AAAA;AAAwB;AAAxB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA+B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAA/B;AAAP;AACO;AAAA;AAAA;;AAAwB;AAAxB;;AAAA;AAAA;;AAAwB;AAAxB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA8B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAA9B;AAAP;AAGO;;AAAiB;AAAjB;AAAA;AAAuB;;AAAA;;;AAAS;AAAT;AAAA;AAAvB;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAwB;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAP;AACO;;AAAA;AAAA;;AAAkB;AAAlB;;AAAA;AAAA;;AAAA;AAAkB;AAAlB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAyB;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAzB;AAAP;AACO;;AAAA;AAAA;;AAAkB;;AAAlB;;AAAA;AAAA;;AAAkB;;AAAlB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAwB;;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAxB;AAAP;AACO;;AAAA;AAAA;;AAAmB;AAAnB;;AAAA;AAAA;;AAAmB;AAAnB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAiC;;AAAA;;;AAAA;AAAA;AAAW;AAAX;;AAAA;AAAW;AAAX;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAjC;AAAP;AAEO;;AAAA;AAAA;AAAyB;;;AAAzB;AAAP;;;;;AAIO;;AAAkB;;AAAlB;AAAP;AACO;;AAAkB;;AAAlB;AAAP;AACO;AAAkB;AAAlB;AAAP;AACO;;AAAsB;;AAAtB;AAAP;;;;;AAIA;;AAAA;;;AAAA;;;AAER;;;;;;AAEQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;;;;AAEsB;;;AAAd;AAAA;;;AACQ;AACG;;AAAA;AAAA;;;;;AAAnB;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AACoB;;AAAA;AAAR;;;;;;;;;;;;;;AACJ;;;;AAII;;AAAJ;;AACI;;AAAJ;;AACI;AAAJ;;AACO;;AAAA;AAAA;;AAAA;AAAuB;;AAAvB;;AAAA;;AAAA;AAAsC;;AAAtC;AAAP;AAC8B;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAvB;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAA2D;;AAA3D;AAAP;AAC8B;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAvB;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAA6C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA7C;AAAP;AACc;;AAAA;AAAA;;AAAA;AAAd;;AACO;AAAP;AACY;AAAL;AAAP;AACI;;AAAJ;;;;;;AAIQ;;AAAA;AAAA;AACR;AAAA;;AAAA;AAAA;AAAA;AAAW;AAAX;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;;;;;AAKyB;;AAArB;;;AAAmC;AAAnC;AACA;;AAAA;AAAA;AAAA;;;AACA;AAAA;AAAA;AACA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAJJ;;AAAA;;AAAA;;AAAA;;AAAA;AAOR;;;;;;AAEoB;;AAAL;AAAuB;;AAAL;AAAA;;AAAA;;AAAuB;AAAL;AAAA;;AAAA;;AAAuB;;AAAL;AAAA;;AAAA;;AAA7D;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;AAKM;;AACE;AAAA;AAAA;;;AAAA;;AACF;;AAAmB;AAAnB;AAAA;;AACG;AAAA;AAAA;;;AAAA;;AAJuB;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAhC;AAAA;;AAAA;AAAA;;AAAA;;;;;AASI;AAAJ;;;AAER;;;;;;;;;;;;AAIe;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAP;AACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAV;AACW;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAI4B;;AAAA;;AAAA;AAAA;;AAAnC;;;AAkS6C;;AAAA;;AAAlC;;;AAPZ;AAAkB;AAAlB;AAAyC;AAAzC;AAA2D;AAA3D;AACgC;;AAAQ;AAAR;AAAvB;AAAA;AACT;;;AAKY;;;AAAnB;;AACwC;;AAAa;AAAb;AAAvB;AAAA;AACV;;;AApSC;;;AADJ;AAAA;;AAAA;AAKsC;;AAAA;;AAAlC;;;AAuRD;AAAkB;AAAlB;AAAyC;AAAzC;AAA2D;AAA3D;AACgC;;AAAQ;AAAR;AAAvB;AAAA;AACT;AAAA;;AAzRC;;;AAAwD;;AAAQ;AAAR;AAAT;AADnD;AAAA;;AACgD;AADhD;;AAAA;AAKS;AAAjB;AAAiB;AAAL;;;;;AAAK;;AAAA;;AAAA;AAAjB;;;AAAA;;;AAD2C;AAE/B;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAF+B;AAE/B;;AAAA;AACW;AAAX;AAAA;;;;;AAFK;;AAAA;AAAA;AAAA;;;;;AAGc;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAJY;AAInC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAJmC;AAInC;;AAAA;AAEiD;;AAAnC;;;AAqRmC;;AAAA;;AAAlC;;;AAPZ;AAAkB;AAAlB;AAAyC;AAAzC;AAA2D;AAA3D;AACgC;;AAAQ;AAAR;AAAvB;AAAA;AACT;;;AAKY;;;AAAnB;;AArR8D;AAsRT;AAAb;AAAvB;AAAA;AACV;;;AAvRW;;;AAAA;;AAAyD;AAAzD;AACU;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAPW;AAOnC;AAAA;AAAA;;AAAA;;AAAA;AAPmC;AAOnC;;AAAA;AAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AADJ;AAGO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAA6C;AAA7C;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAP;;AAAA;AAER;;;;;;;;;;;;AAKkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAV;AACW;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAX;;AAGc;;;AAmQmC;;AAAA;;AAAlC;;;AAPZ;AAAkB;AAAlB;AAAyC;AAAzC;AAA2D;AAA3D;AACgC;;AAAQ;AAAR;AAAvB;AAAA;AACT;;;AAKY;;;AAAnB;;AAnQ8D;AAoQT;AAAb;AAAvB;AAAA;AACV;AAAA;;AArQW;;;AAAA;;AAAyD;AAAzD;AACS;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFY;AAEnC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAFmC;AAEnC;;AAAA;AACwB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAHW;AAGnC;AAAA;AAAA;;AAAA;;AAAA;AAHmC;AAGnC;;AAAA;AAC0C;;AAAlC;;;AAyPL;AAAkB;AAAlB;AAAyC;AAAzC;AAA2D;AAA3D;AACgC;;AAAQ;AAAR;AAAvB;AAAA;AACT;;;AA3PK;;;AAAR;;AACsB;;AAAQ;AAAR;AALa;AAKnC;;AAAA;;AAA+C;AAA/C;AAI0C;;AAAA;;AAAS;;AAAA;;AAA5C;;;AA2P0C;;AAAA;;AAAlC;;;AAPZ;AAAkB;AAAlB;AAAyC;AAAzC;AAA2D;AAA3D;AACgC;;AAAQ;AAAR;AAAvB;AAAA;AACT;;;AAKY;;;AAAnB;;AACwC;;AAAa;AAAb;AAAvB;AAAA;AACV;;;AA7PI;;;AAAP;;AACA;AAAA;;AAAA;AAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAP;;AAAA;AAER;;;;;;AAGe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AACe;;;AACD;AAAA;AACA;;AAEE;AANiB;AAMjC;;AAAA;;AAFc;;AAIgB;AAAd;AAJF;;AAImB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AARA;AAQjC;;AAAA;;AAAA;AARiC;AAInB;;AAMd;;AAAA;;AAER;;;;;;AAEyC;AACjC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AADiC;AACjC;;AADiC;AACjC;;AAAA;AACqB;;AAAQ;AAAR;AAFY;AAEjC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAFiC;AAEjC;;AAFiC;AAEjC;;AAAA;AAC+C;;AAAQ;AAAR;AAHd;AAGjiC;AAGjC;;AAHiC;AAGjC;;AAAA;AAC2B;;AAAQ;;AAAR;AAJM;AAIjC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAJiC;AAIjC;;AAJiC;AAIjC;;AAAA;AAC2B;;AAAQ;;AAAR;AALM;AAKjC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AALiC;AAKjC;;AALiC;AAKjC;;AAAA;AACqD;;AAAQ;;AAAR;AANpB;AAMjiC;AAMjC;;AANiC;AAMjC;;AAAA;;AAER;;;;;;AAEyC;AAC7B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAD6B;AAE7B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAF6B;AAGvB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAHuB;AAI7B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAJ6B;AAK7B;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAL6B;AAMle;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAmC;AAAnC;AAAP;AACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAlC;AACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAnB;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACY;;AAAA;AAAA;;;;;;;;;;;;;;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAnB;AAAA;AAAA;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACY;;AAAA;AAAA;;;;;;;;;;;;;;AACJ;;AAAA;;AAAA;;;;AAIA;;AAAA;;;AAAA;;;AAER;;;;;;AAEQ;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;;;;;AAEgB;AACK;;AAAA;AAAA;;;;;AAArB;;AAAA;;AAAA;;;;;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;;;;;AACA;;;AAAA;;;AACgB;;AAAS;AAAT;;;;;;;;;;;AACD;;AAAA;AAAf;;;AAAA;;;;;;;AACgB;;;AACR;;;;;;;;;;;;;;;;AAIyB;AAAA;AAAA;;;AAAzB;;AAAA;;AAAA;;AAAA;;AAAA;;;;;AAII;;AAAJ;;;AAER;;;;;;AAIwC;;AACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAV;AAEiC;;AAAA;AAAmB;AAApB;AAAJ;AAAA;AAA5B;;AAAA;;AAAA;AACS;AAAjB;AAAiB;;;;AAAA;;AAAA;;AAAA;AAAjB;;;AAAA;;;AAJwC;;AAK5B;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAL4B;;AAK5B;;AAAA;AACW;AAAX;AAAA;;;;;AAFK;;AAAA;AAAA;AAAA;;;;;AAIU;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AARa;;AAQhC;AAAA;AAAA;AAAA;;AAAA;AARgC;;AAQhC;;AAAA;AACO;;AAAA;AAAA;AAAA;AAAA;AAAP;;AAAA;AAER;;;;;;AAIwC;;AACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACS;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFa;;AAEhC;AAAA;AAAA;AAAA;;AAAA;AAFgC;;AAEhC;;AAAA;AAC0C;AAAV;AAAJ;AAAA;AAA5B;;AAAA;;AAAA;AAEO;;AAAA;AAAA;AAAA;AAAA;AAAP;AAER;;;;;;AAEgB;AACG;;AAAA;AAAA;AAAA;AAAnB;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACY;;AAAA;AAAA;;;;;;;;;;;;;;AACJ;AAER;;;;;;AAEQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAER;;;;;;AAEQ;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAER;;;;;;AAE+B;;AACvB;;AADuB;;AACT;;;;;;;;;;;;;;;;;;;;;AAAd;AADuB;;AAEhB;AAAA;;AAAY;AAAZ;;AAAA;AAAA;;AAAA;AAAY;AAAZ;;AAAA;AAAA;;AAAc;;AAAd;;AAAA;AAAA;;AAAc;;AAAd;;AAAA;AAAA;;AAAA;AAFgB;;AAEhB;;AAAA;;AAAA;AAAoB;;;;;;;;;AAApB;AAAP;AAEmB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAnB;AAAA;;AAAA;AAAA;;AAAA;AACO;AAAA;AAAA;;AAAuB;AAAvB;;AAAA;AAAA;;AAAA;AAAuB;AAAvB;;AAAA;AAAA;;AAAyB;;AAAzB;;AAAA;AAAA;;AAAyB;;AAAzB;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAgC;;AAAhC;AAAP;;;;;AAKc;AAAW;;AAAX;AAA0B;;;AAA1B;AAAyC;;;AAAzC;AAAwD;;;AAAxD;AADc;;AAC5B;;AAAA;AAD4B;;AAGrB;AAAA;AAAY;AAAZ;AAAA;AAAA;AAAA;AAAkB;;AAAlB;AAAP;AAH4B;;AAIrB;AAAA;AAAY;AAAZ;AAAA;AAAA;AAAA;AAAkB;;;AAAlB;AAAP;AAJ4B;;AAKrB;AAAA;AAAY;AAAZ;AAAA;AAAA;AAAA;AAAkB;;;AAAlB;AAAP;AAL4B;;AAMrB;AAAA;AAAY;;AAAZ;AAAA;AAAA;AAAA;AAAkB;;;AAAlB;AAAP;;AAER;;;;;;AAG6B;;AACd;AAAA;AAAP;AACqB;;AACd;AAAA;AAAP;AACqB;;AACd;AAAA;AAAP;AACqB;;AACd;AAAA;AAAP;AADqB;;AAIM;;AAApB;AAAP;AAJqB;;AAKd;AAAP;AAGe;;AACD;;AAAd;;AATqB;;AAWL;AAAhB;;AAAA;AAXqB;;AAYN;;;AAAf;AAZqB;;AAaN;AAAG;AAAlB;;AAAA;AAbqB;;AAcL;;AAJN;;AAIV;AAJU;;AAK2B;AAAT;;AAAA;AAfP;;AAeI;AAAhB;;AAAA;AACQ;;AAAA;;AAAA;AANP;;AAMO;AAAV;AAAP;AAhBqB;;AAmBd;AAAP;AAnBqB;;AAoBC;;AAAf;AAAP;AApBqB;;AAuBL;AACT;AAAP;AACgB;AAAT;AAAP;AAzBqB;;AA0Bd;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAGY;;AAAA;AA7BS;;AA6BrB;;AAAA;AA7BqB;;AA8Bd;AAAP;AA9BqB;;AA+Bd;AAAA;AAAkB;;AAAlB;AAAP;AA/BqB;;AAgCd;;;AAA+B;;AAA/B;AAAP;AAGA;;AAAyB;;AAAzB;;AACO;;AAAA;AAAP;AACA;;AAAA;;;AAER;;;;;;AAEgB;AAGK;AAAb;AAAA;;AAAA;AAAA;AAAA;;AADQ;;AACR;AAHQ;AAIiB;AAAjB;AAAA;;AAAA;AAJA;AAMY;AAAb;AAAA;;AAAA;AAAA;AAAA;AAJC;;AAImC;AAApC;AAAP;AANQ;AAOY;AAAb;AAAA;;AAAA;AAAA;AAAA;AAAoC;;AAAA;AAAA;AAApC;AAAP;AAPQ;AAQmB;AAApB;AAAA;;AAAA;AAAA;AAAA;AANC;;AAM6B;AAA9B;AAAP;AAPQ;AASgB;AAAjB;AAAA;;AAAA;AAAA;AAAA;;AAAgC;;AAAhC;;AAAA;;AAAA;AAAsD;;AAAtD;AAAP;AATQ;AAU2B;AAAnB;AAAA;;AAAA;AAAA;AACT;AAAP;AAZQ;AAaD;AAAS;AAAT;;AAAA;AAAA;AAAP;AACO;AAA2B;AAA3B;AAAP;AAbQ;AAiBI;AADoC;AAChD;;AAAA;AAAA;AAAA;;AAAqB;;AAArB;AADgD;AAEM;AAA/C;;;AAA6D;;AAA7D;AAAP;AAlBQ;AAmBQ;AAHgC;AAG5C;;AAAA;AAAJ;;;AAER;;;;;;AAEqB;;AAAA;AAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;;;;AAE4B;;AAAA;AAAb;AAAA;;AAAA;AAAA;AAAA;AAAP;AAER;;;;;;AAEyB;;AAAA;AAAb;AAAA;;AAAA;AAAJ;;;AAER;;;;;;AAEe;;AAAA;AAAO;AAAP;;AAAA;AAAA;AAAP;;AAAA;;;;;;;AAxYR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAAA;AAsYK;;;;;;AAJA;;;;;;AAJA;;;;;;AAJA;;;;;;AAxBA;;;;;;AAhDA;;;;;;AAVA;;;;;;AATA;;;;;;AAJA;;;;;;AAJA;;;;;;AAPA;;;;;;AAXA;;;;;;AAfA;;;;;;AAJA;;;;;;AAJA;;;;;;AAVA;;;;;;AAJA;;;;;;AAJA;;;;;;AAXA;;;;;;AAZA;;;;;;AAVA;;;;;;AAdA;;;;;;AAtBA;;;;;;AAhCA;;;;;;AAJA;;;;;;AATA;;;;;;AAJA;;;;;;AATA;;;;;;AANA;;;;;;AAbA;;;;;;AARA;;;;;;AAJA;;;;;;AAJA;;;;;;AAPA;;;;;;AApCA;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "examples.box_storage.contract.BoxContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 8 4096 4098 32762 33000 32760"
    },
    "20": {
      "op": "bytecblock 0x \"dynamic_arr_struct\" \"box\" 0x424f585f43 0x626c6f62 \"dynamic_box\" 0x151f7c75 \"box_d\" 0x626f785f6c61726765 0x626f785f61 0x62 0x3432 0x64 0x68656c6c6f 0x00 \"many_ints\" \"too_many_bools\" \"0\" 0x48656c6c6f \"box_ref\" \"Hmmmmm\" 0x068101 \"default\""
    },
    "171": {
      "op": "b block@0"
    },
    "174": {
      "block": "block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "176": {
      "op": "bnz after_if_else@2",
      "stack_out": []
    },
    "179": {
      "op": "b call___init__@1"
    },
    "182": {
      "block": "call___init__@1",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.__init__",
      "op": "callsub __init__"
    },
    "185": {
      "op": "b after_if_else@2"
    },
    "188": {
      "block": "after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "191": {
      "op": "return",
      "stack_out": []
    },
    "192": {
      "subroutine": "_puya_lib.util.ensure_budget",
      "params": {
        "required_budget#0": "uint64",
        "fee_source#0": "uint64"
      },
      "block": "ensure_budget",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "195": {
      "op": "b ensure_budget_block@0"
    },
    "198": {
      "block": "ensure_budget_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "required_budget#0 (copy)"
      ],
      "stack_out": [
        "required_budget#0 (copy)"
      ]
    },
    "200": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "required_budget#0 (copy)"
      ],
      "stack_out": [
        "required_budget#0 (copy)",
        "10"
      ]
    },
    "202": {
      "op": "+",
      "defined_out": [],
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "203": {
      "op": "b ensure_budget_while_top@1"
    },
    "206": {
      "block": "ensure_budget_while_top@1",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "global OpcodeBudget",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "tmp%1#0"
      ]
    },
    "208": {
      "op": "frame_dig 0",
      "defined_out": [
        "required_budget_with_buffer#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "tmp%1#0",
        "required_budget_with_buffer#0"
      ]
    },
    "210": {
      "op": "<",
      "defined_out": [
        "required_budget_with_buffer#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "tmp%2#0"
      ]
    },
    "211": {
      "op": "bz ensure_budget_after_while@7",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "214": {
      "op": "b ensure_budget_while_body@2"
    },
    "217": {
      "block": "ensure_budget_while_body@2",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "itxn_begin"
    },
    "218": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "appl"
      ]
    },
    "220": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "222": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "DeleteApplication"
      ]
    },
    "224": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "226": {
      "op": "bytec 21 // 0x068101",
      "defined_out": [
        "0x068101"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "0x068101"
      ]
    },
    "228": {
      "op": "itxn_field ApprovalProgram",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "230": {
      "op": "bytec 21 // 0x068101",
      "stack_out": [
        "required_budget_with_buffer#0",
        "0x068101"
      ]
    },
    "232": {
      "op": "itxn_field ClearStateProgram",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "234": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "0"
      ]
    },
    "235": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "0",
        "1"
      ]
    },
    "236": {
      "op": "frame_dig -1",
      "defined_out": [
        "0",
        "1",
        "fee_source#0 (copy)"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "0",
        "1",
        "fee_source#0 (copy)"
      ]
    },
    "238": {
      "op": "match ensure_budget_switch_case_0@3 ensure_budget_switch_case_1@4",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "244": {
      "op": "b ensure_budget_switch_case_default@5"
    },
    "247": {
      "block": "ensure_budget_switch_case_default@5",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "b ensure_budget_switch_case_next@6"
    },
    "250": {
      "block": "ensure_budget_switch_case_next@6",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "itxn_submit"
    },
    "251": {
      "op": "b ensure_budget_while_top@1"
    },
    "254": {
      "block": "ensure_budget_switch_case_1@4",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "tmp%3#0"
      ]
    },
    "256": {
      "op": "itxn_field Fee",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "258": {
      "op": "b ensure_budget_switch_case_next@6"
    },
    "261": {
      "block": "ensure_budget_switch_case_0@3",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "required_budget_with_buffer#0",
        "0"
      ]
    },
    "262": {
      "op": "itxn_field Fee",
      "stack_out": [
        "required_budget_with_buffer#0"
      ]
    },
    "264": {
      "op": "b ensure_budget_switch_case_next@6"
    },
    "267": {
      "block": "ensure_budget_after_while@7",
      "stack_in": [
        "required_budget_with_buffer#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "268": {
      "subroutine": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "params": {
        "source#0": "bytes",
        "new_item#0": "bytes",
        "index#0": "uint64"
      },
      "block": "dynamic_array_replace_dynamic_element",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "271": {
      "op": "b dynamic_array_replace_dynamic_element_block@0"
    },
    "274": {
      "block": "dynamic_array_replace_dynamic_element_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "source#0 (copy)"
      ],
      "stack_out": [
        "source#0 (copy)"
      ]
    },
    "276": {
      "op": "substring 0 2",
      "defined_out": [
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0"
      ]
    },
    "279": {
      "op": "dup",
      "defined_out": [
        "size_b#0",
        "size_b#0 (copy)"
      ],
      "stack_out": [
        "size_b#0",
        "size_b#0 (copy)"
      ]
    },
    "280": {
      "op": "btoi",
      "defined_out": [
        "array_length#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0"
      ]
    },
    "281": {
      "op": "frame_dig -3",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "source#0 (copy)"
      ]
    },
    "283": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length#0",
        "size_b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "tmp%2#0"
      ]
    },
    "286": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_item#0 (copy)",
        "size_b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "tmp%2#0",
        "new_item#0 (copy)"
      ]
    },
    "288": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "index#0 (copy)",
        "new_item#0 (copy)",
        "size_b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "tmp%2#0",
        "new_item#0 (copy)",
        "index#0 (copy)"
      ]
    },
    "290": {
      "op": "uncover 3",
      "stack_out": [
        "size_b#0",
        "tmp%2#0",
        "new_item#0 (copy)",
        "index#0 (copy)",
        "array_length#0"
      ]
    },
    "292": {
      "callsub": "_puya_lib.arc4.static_array_replace_dynamic_element",
      "op": "callsub static_array_replace_dynamic_element",
      "defined_out": [
        "size_b#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "size_b#0",
        "tmp%3#0"
      ]
    },
    "295": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "296": {
      "retsub": true,
      "op": "retsub"
    },
    "297": {
      "subroutine": "_puya_lib.arc4.static_array_replace_dynamic_element",
      "params": {
        "array_head_and_tail#0": "bytes",
        "new_item#0": "bytes",
        "index#0": "uint64",
        "array_length#0": "uint64"
      },
      "block": "static_array_replace_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "300": {
      "op": "b static_array_replace_dynamic_element_block@0"
    },
    "303": {
      "block": "static_array_replace_dynamic_element_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "index#0 (copy)"
      ],
      "stack_out": [
        "index#0 (copy)"
      ]
    },
    "305": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "index#0 (copy)"
      ],
      "stack_out": [
        "index#0 (copy)",
        "2"
      ]
    },
    "306": {
      "op": "*",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "307": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "309": {
      "op": "uncover 1",
      "stack_out": [
        "array_head_and_tail#0 (copy)",
        "tmp%0#0"
      ]
    },
    "311": {
      "op": "extract_uint16",
      "defined_out": [
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0"
      ]
    },
    "312": {
      "op": "frame_dig -2",
      "stack_out": [
        "original_offset#0",
        "index#0 (copy)"
      ]
    },
    "314": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "index#0 (copy)",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "index#0 (copy)",
        "1"
      ]
    },
    "315": {
      "op": "+",
      "defined_out": [
        "original_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "original_offset#0",
        "tmp%2#0"
      ]
    },
    "316": {
      "op": "intc_2 // 2",
      "stack_out": [
        "original_offset#0",
        "tmp%2#0",
        "2"
      ]
    },
    "317": {
      "op": "*",
      "defined_out": [
        "original_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "original_offset#0",
        "tmp%3#0"
      ]
    },
    "318": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_offset#0",
        "tmp%3#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "320": {
      "op": "uncover 1",
      "stack_out": [
        "original_offset#0",
        "array_head_and_tail#0 (copy)",
        "tmp%3#0"
      ]
    },
    "322": {
      "op": "extract_uint16",
      "defined_out": [
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0"
      ]
    },
    "323": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "325": {
      "op": "len",
      "defined_out": [
        "end_of_tail#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0"
      ]
    },
    "326": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0 (copy)",
        "end_of_tail#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "array_length#0 (copy)"
      ]
    },
    "328": {
      "op": "frame_dig -2",
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "array_length#0 (copy)",
        "index#0 (copy)"
      ]
    },
    "330": {
      "op": "-",
      "defined_out": [
        "end_of_tail#0",
        "next_item_offset#0",
        "original_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "tmp%6#0"
      ]
    },
    "331": {
      "op": "intc_1 // 1",
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "tmp%6#0",
        "1"
      ]
    },
    "332": {
      "op": "-",
      "defined_out": [
        "end_of_tail#0",
        "is_before_end#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "is_before_end#0"
      ]
    },
    "333": {
      "op": "dig 1",
      "defined_out": [
        "end_of_tail#0",
        "end_of_tail#0 (copy)",
        "is_before_end#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "is_before_end#0",
        "end_of_tail#0 (copy)"
      ]
    },
    "335": {
      "op": "uncover 3",
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "is_before_end#0",
        "end_of_tail#0 (copy)",
        "next_item_offset#0"
      ]
    },
    "337": {
      "op": "uncover 2",
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_of_tail#0 (copy)",
        "next_item_offset#0",
        "is_before_end#0"
      ]
    },
    "339": {
      "op": "select",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "340": {
      "op": "dup",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)"
      ]
    },
    "341": {
      "op": "dig 3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0",
        "original_offset#0 (copy)"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0 (copy)"
      ]
    },
    "343": {
      "op": "-",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%9#0"
      ]
    },
    "344": {
      "op": "cover 3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "346": {
      "op": "frame_dig -3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "new_item#0 (copy)",
        "original_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "new_item#0 (copy)"
      ]
    },
    "348": {
      "op": "len",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%10#0"
      ]
    },
    "349": {
      "op": "cover 3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "351": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "353": {
      "op": "intc_0 // 0",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)",
        "0"
      ]
    },
    "354": {
      "op": "uncover 4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)",
        "0",
        "original_offset#0"
      ]
    },
    "356": {
      "op": "substring3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%11#0"
      ]
    },
    "357": {
      "op": "frame_dig -3",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%11#0",
        "new_item#0 (copy)"
      ]
    },
    "359": {
      "op": "concat",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%12#0"
      ]
    },
    "360": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "362": {
      "op": "uncover 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)",
        "end_offset#0"
      ]
    },
    "364": {
      "op": "uncover 3",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)",
        "end_offset#0",
        "end_of_tail#0"
      ]
    },
    "366": {
      "op": "substring3",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "367": {
      "op": "concat",
      "defined_out": [],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0"
      ]
    },
    "368": {
      "op": "frame_dig -1",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "array_length#0 (copy)"
      ]
    },
    "370": {
      "op": "intc_2 // 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "array_length#0 (copy)",
        "2"
      ]
    },
    "371": {
      "op": "*",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0"
      ]
    },
    "372": {
      "op": "frame_dig -2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "index#0 (copy)"
      ]
    },
    "374": {
      "op": "intc_1 // 1",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "index#0 (copy)",
        "1"
      ]
    },
    "375": {
      "op": "+",
      "defined_out": [
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "376": {
      "op": "intc_2 // 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%16#0",
        "2"
      ]
    },
    "377": {
      "op": "*",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "378": {
      "op": "intc_2 // 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%17#0",
        "2"
      ]
    },
    "379": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "380": {
      "op": "b static_array_replace_dynamic_element_for_header@1"
    },
    "383": {
      "block": "static_array_replace_dynamic_element_for_header@1",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "385": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "387": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "388": {
      "op": "bz static_array_replace_dynamic_element_after_for@4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "391": {
      "op": "b static_array_replace_dynamic_element_for_body@2"
    },
    "394": {
      "block": "static_array_replace_dynamic_element_for_body@2",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0"
      ]
    },
    "396": {
      "op": "dup",
      "defined_out": [
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "397": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "399": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "400": {
      "op": "cover 3",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "402": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "403": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "new_item_length#0"
      ]
    },
    "405": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "406": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "original_item_length#0"
      ]
    },
    "408": {
      "op": "-",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "409": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tmp%21#0"
      ]
    },
    "410": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset_bytes#0"
      ]
    },
    "413": {
      "op": "uncover 1",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "tail_offset_bytes#0",
        "new_head_and_tail#0"
      ]
    },
    "415": {
      "op": "uncover 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "tail_offset_bytes#0",
        "new_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "417": {
      "op": "uncover 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "head_offset#0",
        "tail_offset_bytes#0"
      ]
    },
    "419": {
      "op": "replace3",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "tmp%23#0"
      ]
    },
    "420": {
      "op": "frame_bury 2",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "422": {
      "op": "b static_array_replace_dynamic_element_for_footer@3"
    },
    "425": {
      "block": "static_array_replace_dynamic_element_for_footer@3",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "427": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "428": {
      "op": "+",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "429": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "431": {
      "op": "b static_array_replace_dynamic_element_for_header@1"
    },
    "434": {
      "block": "static_array_replace_dynamic_element_after_for@4",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0"
      ]
    },
    "436": {
      "op": "frame_bury 0"
    },
    "438": {
      "retsub": true,
      "op": "retsub"
    },
    "439": {
      "subroutine": "examples.box_storage.contract.get_box_value_plus_1",
      "params": {
        "box#0": "bytes"
      },
      "block": "get_box_value_plus_1",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "442": {
      "op": "b get_box_value_plus_1_block@0"
    },
    "445": {
      "block": "get_box_value_plus_1_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "box#0 (copy)"
      ],
      "stack_out": [
        "box#0 (copy)"
      ]
    },
    "447": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "448": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "449": {
      "op": "btoi",
      "defined_out": [
        "maybe_value_converted%0#0"
      ],
      "stack_out": [
        "maybe_value_converted%0#0"
      ]
    },
    "450": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value_converted%0#0"
      ],
      "stack_out": [
        "maybe_value_converted%0#0",
        "1"
      ]
    },
    "451": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "452": {
      "retsub": true,
      "op": "retsub"
    },
    "453": {
      "subroutine": "examples.box_storage.contract.get_box_ref_length",
      "params": {
        "ref#0": "bytes"
      },
      "block": "get_box_ref_length",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "456": {
      "op": "b get_box_ref_length_block@0"
    },
    "459": {
      "block": "get_box_ref_length_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "ref#0 (copy)"
      ],
      "stack_out": [
        "ref#0 (copy)"
      ]
    },
    "461": {
      "op": "box_len",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "462": {
      "error": "check BoxRef exists",
      "op": "assert // check BoxRef exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "463": {
      "retsub": true,
      "op": "retsub"
    },
    "464": {
      "subroutine": "examples.box_storage.contract.get_box_map_value_from_key_plus_1",
      "params": {
        "box_map#0": "bytes",
        "key#0": "uint64"
      },
      "block": "get_box_map_value_from_key_plus_1",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "467": {
      "op": "b get_box_map_value_from_key_plus_1_block@0"
    },
    "470": {
      "block": "get_box_map_value_from_key_plus_1_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0 (copy)"
      ]
    },
    "472": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0 (copy)",
        "1"
      ]
    },
    "473": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "474": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "475": {
      "op": "frame_dig -2",
      "defined_out": [
        "box_map#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "box_map#0 (copy)"
      ]
    },
    "477": {
      "op": "uncover 1",
      "stack_out": [
        "box_map#0 (copy)",
        "encoded_value%0#0"
      ]
    },
    "479": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "480": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "481": {
      "error": "check BoxMap entry exists",
      "op": "assert // check BoxMap entry exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "482": {
      "retsub": true,
      "op": "retsub"
    },
    "483": {
      "subroutine": "examples.box_storage.contract.BoxContract.set_boxes[routing]",
      "params": {},
      "block": "set_boxes",
      "stack_in": [],
      "op": "b set_boxes_block@0"
    },
    "486": {
      "block": "set_boxes_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "489": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "490": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "493": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "496": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0",
        "tmp%0#0"
      ]
    },
    "498": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0",
        "tmp%0#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "500": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "502": {
      "callsub": "examples.box_storage.contract.BoxContract.set_boxes",
      "op": "callsub examples.box_storage.contract.BoxContract.set_boxes",
      "stack_out": []
    },
    "505": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "506": {
      "op": "return",
      "stack_out": []
    },
    "507": {
      "subroutine": "examples.box_storage.contract.BoxContract.check_keys[routing]",
      "params": {},
      "block": "check_keys",
      "stack_in": [],
      "op": "b check_keys_block@0"
    },
    "510": {
      "block": "check_keys_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.check_keys",
      "op": "callsub examples.box_storage.contract.BoxContract.check_keys"
    },
    "513": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "514": {
      "op": "return",
      "stack_out": []
    },
    "515": {
      "subroutine": "examples.box_storage.contract.BoxContract.create_many_ints[routing]",
      "params": {},
      "block": "create_many_ints",
      "stack_in": [],
      "op": "b create_many_ints_block@0"
    },
    "518": {
      "block": "create_many_ints_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.create_many_ints",
      "op": "callsub examples.box_storage.contract.BoxContract.create_many_ints"
    },
    "521": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "522": {
      "op": "return",
      "stack_out": []
    },
    "523": {
      "subroutine": "examples.box_storage.contract.BoxContract.set_many_ints[routing]",
      "params": {},
      "block": "set_many_ints",
      "stack_in": [],
      "op": "b set_many_ints_block@0"
    },
    "526": {
      "block": "set_many_ints_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "529": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "530": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "533": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "534": {
      "callsub": "examples.box_storage.contract.BoxContract.set_many_ints",
      "op": "callsub examples.box_storage.contract.BoxContract.set_many_ints",
      "stack_out": []
    },
    "537": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "538": {
      "op": "return",
      "stack_out": []
    },
    "539": {
      "subroutine": "examples.box_storage.contract.BoxContract.sum_many_ints[routing]",
      "params": {},
      "block": "sum_many_ints",
      "stack_in": [],
      "op": "b sum_many_ints_block@0"
    },
    "542": {
      "block": "sum_many_ints_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.sum_many_ints",
      "op": "callsub examples.box_storage.contract.BoxContract.sum_many_ints",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "545": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "546": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "548": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "550": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "551": {
      "op": "log",
      "stack_out": []
    },
    "552": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "553": {
      "op": "return",
      "stack_out": []
    },
    "554": {
      "subroutine": "examples.box_storage.contract.BoxContract.delete_boxes[routing]",
      "params": {},
      "block": "delete_boxes",
      "stack_in": [],
      "op": "b delete_boxes_block@0"
    },
    "557": {
      "block": "delete_boxes_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.delete_boxes",
      "op": "callsub examples.box_storage.contract.BoxContract.delete_boxes"
    },
    "560": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "561": {
      "op": "return",
      "stack_out": []
    },
    "562": {
      "subroutine": "examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]",
      "params": {},
      "block": "indirect_extract_and_replace",
      "stack_in": [],
      "op": "b indirect_extract_and_replace_block@0"
    },
    "565": {
      "block": "indirect_extract_and_replace_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.indirect_extract_and_replace",
      "op": "callsub examples.box_storage.contract.BoxContract.indirect_extract_and_replace"
    },
    "568": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "569": {
      "op": "return",
      "stack_out": []
    },
    "570": {
      "subroutine": "examples.box_storage.contract.BoxContract.read_boxes[routing]",
      "params": {},
      "block": "read_boxes",
      "stack_in": [],
      "op": "b read_boxes_block@0"
    },
    "573": {
      "block": "read_boxes_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.read_boxes",
      "op": "callsub examples.box_storage.contract.BoxContract.read_boxes",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "576": {
      "op": "cover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "578": {
      "op": "cover 3",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "580": {
      "op": "cover 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "582": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "583": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "584": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "586": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%1#0",
        "aggregate%head%0#0"
      ]
    },
    "587": {
      "op": "cover 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "tmp%1#0"
      ]
    },
    "589": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "590": {
      "op": "len",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "tmp%1#0",
        "aggregate%length%0#0"
      ]
    },
    "591": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "tmp%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "592": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "tmp%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "595": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ]
    },
    "597": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "598": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "20"
      ]
    },
    "600": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "601": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "604": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "606": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "608": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "609": {
      "op": "cover 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "611": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "612": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "613": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "20"
      ]
    },
    "615": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "616": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "617": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "620": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%1#0"
      ]
    },
    "622": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "624": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0"
      ]
    },
    "625": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0",
        "tmp%3#0"
      ]
    },
    "627": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "628": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0"
      ]
    },
    "629": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "631": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%concat%0#0"
      ]
    },
    "632": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%0#0",
        "tmp%2#0"
      ]
    },
    "634": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "635": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "637": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%4#0"
      ]
    },
    "639": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "640": {
      "op": "log",
      "stack_out": []
    },
    "641": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "642": {
      "op": "return",
      "stack_out": []
    },
    "643": {
      "subroutine": "examples.box_storage.contract.BoxContract.boxes_exist[routing]",
      "params": {},
      "block": "boxes_exist",
      "stack_in": [],
      "op": "b boxes_exist_block@0"
    },
    "646": {
      "block": "boxes_exist_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.boxes_exist",
      "op": "callsub examples.box_storage.contract.BoxContract.boxes_exist",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "649": {
      "op": "cover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "651": {
      "op": "cover 2",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "653": {
      "op": "cover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "655": {
      "op": "bytec 14 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x00"
      ]
    },
    "657": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x00",
        "0"
      ]
    },
    "658": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x00",
        "0",
        "tmp%0#0"
      ]
    },
    "660": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "661": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "662": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%1#0"
      ]
    },
    "664": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "665": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%set_bit%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%set_bit%0#0",
        "2"
      ]
    },
    "666": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "aggregate%set_bit%0#0",
        "2",
        "tmp%2#0"
      ]
    },
    "668": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%set_bit%1#0"
      ]
    },
    "669": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%set_bit%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%set_bit%1#0",
        "3"
      ]
    },
    "671": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%set_bit%1#0",
        "3",
        "tmp%3#0"
      ]
    },
    "673": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%2#0"
      ],
      "stack_out": [
        "aggregate%set_bit%2#0"
      ]
    },
    "674": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%set_bit%2#0"
      ],
      "stack_out": [
        "aggregate%set_bit%2#0",
        "0x"
      ]
    },
    "675": {
      "op": "uncover 1",
      "stack_out": [
        "0x",
        "aggregate%set_bit%2#0"
      ]
    },
    "677": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "678": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "680": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%4#0"
      ]
    },
    "682": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "683": {
      "op": "log",
      "stack_out": []
    },
    "684": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "685": {
      "op": "return",
      "stack_out": []
    },
    "686": {
      "subroutine": "examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]",
      "params": {},
      "block": "create_dynamic_arr_struct",
      "stack_in": [],
      "op": "b create_dynamic_arr_struct_block@0"
    },
    "689": {
      "block": "create_dynamic_arr_struct_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.create_dynamic_arr_struct",
      "op": "callsub examples.box_storage.contract.BoxContract.create_dynamic_arr_struct"
    },
    "692": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "693": {
      "op": "return",
      "stack_out": []
    },
    "694": {
      "subroutine": "examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]",
      "params": {},
      "block": "delete_dynamic_arr_struct",
      "stack_in": [],
      "op": "b delete_dynamic_arr_struct_block@0"
    },
    "697": {
      "block": "delete_dynamic_arr_struct_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct",
      "op": "callsub examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct"
    },
    "700": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "701": {
      "op": "return",
      "stack_out": []
    },
    "702": {
      "subroutine": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]",
      "params": {},
      "block": "append_dynamic_arr_struct",
      "stack_in": [],
      "op": "b append_dynamic_arr_struct_block@0"
    },
    "705": {
      "block": "append_dynamic_arr_struct_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "708": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "709": {
      "callsub": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct",
      "op": "callsub examples.box_storage.contract.BoxContract.append_dynamic_arr_struct",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "712": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "713": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "715": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "717": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "718": {
      "op": "log",
      "stack_out": []
    },
    "719": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "720": {
      "op": "return",
      "stack_out": []
    },
    "721": {
      "subroutine": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]",
      "params": {},
      "block": "pop_dynamic_arr_struct",
      "stack_in": [],
      "op": "b pop_dynamic_arr_struct_block@0"
    },
    "724": {
      "block": "pop_dynamic_arr_struct_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "727": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "728": {
      "callsub": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct",
      "op": "callsub examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "731": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "732": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "734": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "736": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "737": {
      "op": "log",
      "stack_out": []
    },
    "738": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "739": {
      "op": "return",
      "stack_out": []
    },
    "740": {
      "subroutine": "examples.box_storage.contract.BoxContract.set_nested_struct[routing]",
      "params": {},
      "block": "set_nested_struct",
      "stack_in": [],
      "op": "b set_nested_struct_block@0"
    },
    "743": {
      "block": "set_nested_struct_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,(uint64,(len+(len+uint64[])[]),uint64),(len+(uint64,(len+(len+uint64[])[]),uint64)[]),uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,(uint64,(len+(len+uint64[])[]),uint64),(len+(uint64,(len+(len+uint64[])[]),uint64)[]),uint64)%0#0"
      ]
    },
    "746": {
      "callsub": "examples.box_storage.contract.BoxContract.set_nested_struct",
      "op": "callsub examples.box_storage.contract.BoxContract.set_nested_struct",
      "stack_out": []
    },
    "749": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "750": {
      "op": "return",
      "stack_out": []
    },
    "751": {
      "subroutine": "examples.box_storage.contract.BoxContract.nested_write[routing]",
      "params": {},
      "block": "nested_write",
      "stack_in": [],
      "op": "b nested_write_block@0"
    },
    "754": {
      "block": "nested_write_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "757": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "758": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "761": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "762": {
      "callsub": "examples.box_storage.contract.BoxContract.nested_write",
      "op": "callsub examples.box_storage.contract.BoxContract.nested_write",
      "stack_out": []
    },
    "765": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "766": {
      "op": "return",
      "stack_out": []
    },
    "767": {
      "subroutine": "examples.box_storage.contract.BoxContract.nested_read[routing]",
      "params": {},
      "block": "nested_read",
      "stack_in": [],
      "op": "b nested_read_block@0"
    },
    "770": {
      "block": "nested_read_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "773": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "774": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "777": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "778": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "781": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "782": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "784": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "786": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "788": {
      "callsub": "examples.box_storage.contract.BoxContract.nested_read",
      "op": "callsub examples.box_storage.contract.BoxContract.nested_read",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "791": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "792": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "794": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%4#0"
      ]
    },
    "796": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "797": {
      "op": "log",
      "stack_out": []
    },
    "798": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "799": {
      "op": "return",
      "stack_out": []
    },
    "800": {
      "subroutine": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]",
      "params": {},
      "block": "sum_dynamic_arr_struct",
      "stack_in": [],
      "op": "b sum_dynamic_arr_struct_block@0"
    },
    "803": {
      "block": "sum_dynamic_arr_struct_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct",
      "op": "callsub examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "806": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "807": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "809": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "811": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "812": {
      "op": "log",
      "stack_out": []
    },
    "813": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "814": {
      "op": "return",
      "stack_out": []
    },
    "815": {
      "subroutine": "examples.box_storage.contract.BoxContract.create_bools[routing]",
      "params": {},
      "block": "create_bools",
      "stack_in": [],
      "op": "b create_bools_block@0"
    },
    "818": {
      "block": "create_bools_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.create_bools",
      "op": "callsub examples.box_storage.contract.BoxContract.create_bools"
    },
    "821": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "822": {
      "op": "return",
      "stack_out": []
    },
    "823": {
      "subroutine": "examples.box_storage.contract.BoxContract.set_bool[routing]",
      "params": {},
      "block": "set_bool",
      "stack_in": [],
      "op": "b set_bool_block@0"
    },
    "826": {
      "block": "set_bool_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "829": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "830": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(bool8)%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(bool8)%0#0"
      ]
    },
    "833": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(bool8)%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(bool8)%0#0",
        "0"
      ]
    },
    "834": {
      "op": "getbit",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "835": {
      "callsub": "examples.box_storage.contract.BoxContract.set_bool",
      "op": "callsub examples.box_storage.contract.BoxContract.set_bool",
      "stack_out": []
    },
    "838": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "839": {
      "op": "return",
      "stack_out": []
    },
    "840": {
      "subroutine": "examples.box_storage.contract.BoxContract.sum_bools[routing]",
      "params": {},
      "block": "sum_bools",
      "stack_in": [],
      "op": "b sum_bools_block@0"
    },
    "843": {
      "block": "sum_bools_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "846": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "847": {
      "callsub": "examples.box_storage.contract.BoxContract.sum_bools",
      "op": "callsub examples.box_storage.contract.BoxContract.sum_bools",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "850": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "851": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "853": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "855": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "856": {
      "op": "log",
      "stack_out": []
    },
    "857": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "858": {
      "op": "return",
      "stack_out": []
    },
    "859": {
      "subroutine": "examples.box_storage.contract.BoxContract.create_dynamic_box[routing]",
      "params": {},
      "block": "create_dynamic_box",
      "stack_in": [],
      "op": "b create_dynamic_box_block@0"
    },
    "862": {
      "block": "create_dynamic_box_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.create_dynamic_box",
      "op": "callsub examples.box_storage.contract.BoxContract.create_dynamic_box"
    },
    "865": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "866": {
      "op": "return",
      "stack_out": []
    },
    "867": {
      "subroutine": "examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]",
      "params": {},
      "block": "delete_dynamic_box",
      "stack_in": [],
      "op": "b delete_dynamic_box_block@0"
    },
    "870": {
      "block": "delete_dynamic_box_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.delete_dynamic_box",
      "op": "callsub examples.box_storage.contract.BoxContract.delete_dynamic_box"
    },
    "873": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "874": {
      "op": "return",
      "stack_out": []
    },
    "875": {
      "subroutine": "examples.box_storage.contract.BoxContract.append_dynamic_box[routing]",
      "params": {},
      "block": "append_dynamic_box",
      "stack_in": [],
      "op": "b append_dynamic_box_block@0"
    },
    "878": {
      "block": "append_dynamic_box_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "881": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "882": {
      "callsub": "examples.box_storage.contract.BoxContract.append_dynamic_box",
      "op": "callsub examples.box_storage.contract.BoxContract.append_dynamic_box",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "885": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "886": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "888": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "890": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "891": {
      "op": "log",
      "stack_out": []
    },
    "892": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "893": {
      "op": "return",
      "stack_out": []
    },
    "894": {
      "subroutine": "examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]",
      "params": {},
      "block": "pop_dynamic_box",
      "stack_in": [],
      "op": "b pop_dynamic_box_block@0"
    },
    "897": {
      "block": "pop_dynamic_box_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "900": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "901": {
      "callsub": "examples.box_storage.contract.BoxContract.pop_dynamic_box",
      "op": "callsub examples.box_storage.contract.BoxContract.pop_dynamic_box",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "904": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "905": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "907": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "909": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "910": {
      "op": "log",
      "stack_out": []
    },
    "911": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "912": {
      "op": "return",
      "stack_out": []
    },
    "913": {
      "subroutine": "examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]",
      "params": {},
      "block": "sum_dynamic_box",
      "stack_in": [],
      "op": "b sum_dynamic_box_block@0"
    },
    "916": {
      "block": "sum_dynamic_box_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.sum_dynamic_box",
      "op": "callsub examples.box_storage.contract.BoxContract.sum_dynamic_box",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "919": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "920": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "922": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "924": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "925": {
      "op": "log",
      "stack_out": []
    },
    "926": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "927": {
      "op": "return",
      "stack_out": []
    },
    "928": {
      "subroutine": "examples.box_storage.contract.BoxContract.write_dynamic_box[routing]",
      "params": {},
      "block": "write_dynamic_box",
      "stack_in": [],
      "op": "b write_dynamic_box_block@0"
    },
    "931": {
      "block": "write_dynamic_box_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "934": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "935": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "938": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "939": {
      "callsub": "examples.box_storage.contract.BoxContract.write_dynamic_box",
      "op": "callsub examples.box_storage.contract.BoxContract.write_dynamic_box",
      "stack_out": []
    },
    "942": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "943": {
      "op": "return",
      "stack_out": []
    },
    "944": {
      "subroutine": "examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]",
      "params": {},
      "block": "write_dynamic_arr_struct",
      "stack_in": [],
      "op": "b write_dynamic_arr_struct_block@0"
    },
    "947": {
      "block": "write_dynamic_arr_struct_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "950": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "951": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "954": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "955": {
      "callsub": "examples.box_storage.contract.BoxContract.write_dynamic_arr_struct",
      "op": "callsub examples.box_storage.contract.BoxContract.write_dynamic_arr_struct",
      "stack_out": []
    },
    "958": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "959": {
      "op": "return",
      "stack_out": []
    },
    "960": {
      "subroutine": "examples.box_storage.contract.BoxContract.slice_box[routing]",
      "params": {},
      "block": "slice_box",
      "stack_in": [],
      "op": "b slice_box_block@0"
    },
    "963": {
      "block": "slice_box_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.slice_box",
      "op": "callsub examples.box_storage.contract.BoxContract.slice_box"
    },
    "966": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "967": {
      "op": "return",
      "stack_out": []
    },
    "968": {
      "subroutine": "examples.box_storage.contract.BoxContract.arc4_box[routing]",
      "params": {},
      "block": "arc4_box",
      "stack_in": [],
      "op": "b arc4_box_block@0"
    },
    "971": {
      "block": "arc4_box_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.arc4_box",
      "op": "callsub examples.box_storage.contract.BoxContract.arc4_box"
    },
    "974": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "975": {
      "op": "return",
      "stack_out": []
    },
    "976": {
      "subroutine": "examples.box_storage.contract.BoxContract.test_box_ref[routing]",
      "params": {},
      "block": "test_box_ref",
      "stack_in": [],
      "op": "b test_box_ref_block@0"
    },
    "979": {
      "block": "test_box_ref_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.test_box_ref",
      "op": "callsub examples.box_storage.contract.BoxContract.test_box_ref"
    },
    "982": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "983": {
      "op": "return",
      "stack_out": []
    },
    "984": {
      "subroutine": "examples.box_storage.contract.BoxContract.box_map_test[routing]",
      "params": {},
      "block": "box_map_test",
      "stack_in": [],
      "op": "b box_map_test_block@0"
    },
    "987": {
      "block": "box_map_test_block@0",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.box_map_test",
      "op": "callsub examples.box_storage.contract.BoxContract.box_map_test"
    },
    "990": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "991": {
      "op": "return",
      "stack_out": []
    },
    "992": {
      "subroutine": "examples.box_storage.contract.BoxContract.box_map_set[routing]",
      "params": {},
      "block": "box_map_set",
      "stack_in": [],
      "op": "b box_map_set_block@0"
    },
    "995": {
      "block": "box_map_set_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "998": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "999": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "1002": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1005": {
      "callsub": "examples.box_storage.contract.BoxContract.box_map_set",
      "op": "callsub examples.box_storage.contract.BoxContract.box_map_set",
      "stack_out": []
    },
    "1008": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1009": {
      "op": "return",
      "stack_out": []
    },
    "1010": {
      "subroutine": "examples.box_storage.contract.BoxContract.box_map_get[routing]",
      "params": {},
      "block": "box_map_get",
      "stack_in": [],
      "op": "b box_map_get_block@0"
    },
    "1013": {
      "block": "box_map_get_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1016": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1017": {
      "callsub": "examples.box_storage.contract.BoxContract.box_map_get",
      "op": "callsub examples.box_storage.contract.BoxContract.box_map_get",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1020": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "1021": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%length%0#0"
      ]
    },
    "1022": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1023": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "1026": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ]
    },
    "1028": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1029": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "1031": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "1033": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1034": {
      "op": "log",
      "stack_out": []
    },
    "1035": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1036": {
      "op": "return",
      "stack_out": []
    },
    "1037": {
      "subroutine": "examples.box_storage.contract.BoxContract.box_map_del[routing]",
      "params": {},
      "block": "box_map_del",
      "stack_in": [],
      "op": "b box_map_del_block@0"
    },
    "1040": {
      "block": "box_map_del_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1043": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1044": {
      "callsub": "examples.box_storage.contract.BoxContract.box_map_del",
      "op": "callsub examples.box_storage.contract.BoxContract.box_map_del",
      "stack_out": []
    },
    "1047": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1048": {
      "op": "return",
      "stack_out": []
    },
    "1049": {
      "subroutine": "examples.box_storage.contract.BoxContract.box_map_exists[routing]",
      "params": {},
      "block": "box_map_exists",
      "stack_in": [],
      "op": "b box_map_exists_block@0"
    },
    "1052": {
      "block": "box_map_exists_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1055": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1056": {
      "callsub": "examples.box_storage.contract.BoxContract.box_map_exists",
      "op": "callsub examples.box_storage.contract.BoxContract.box_map_exists",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1059": {
      "op": "bytec 14 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x00"
      ]
    },
    "1061": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x00",
        "0"
      ]
    },
    "1062": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "1064": {
      "op": "setbit",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1065": {
      "op": "bytec 6 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "1067": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%2#0"
      ]
    },
    "1069": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1070": {
      "op": "log",
      "stack_out": []
    },
    "1071": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1072": {
      "op": "return",
      "stack_out": []
    },
    "1073": {
      "subroutine": "examples.box_storage.contract.BoxContract.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "1076": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "pushint 4104 // 4104",
      "defined_out": [
        "4104"
      ],
      "stack_out": [
        "4104"
      ]
    },
    "1079": {
      "op": "intc 4 // 4096",
      "defined_out": [
        "4096",
        "4104"
      ],
      "stack_out": [
        "4104",
        "4096"
      ]
    },
    "1081": {
      "op": ">",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1082": {
      "error": "expected ManyInts to exceed max bytes size",
      "op": "assert // expected ManyInts to exceed max bytes size",
      "stack_out": []
    },
    "1083": {
      "retsub": true,
      "op": "retsub"
    },
    "1084": {
      "subroutine": "examples.box_storage.contract.BoxContract.set_boxes",
      "params": {
        "a#0": "uint64",
        "b#0": "bytes",
        "c#0": "bytes"
      },
      "block": "examples.box_storage.contract.BoxContract.set_boxes",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1087": {
      "op": "b examples.box_storage.contract.BoxContract.set_boxes_block@0"
    },
    "1090": {
      "block": "examples.box_storage.contract.BoxContract.set_boxes_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "1092": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "1093": {
      "op": "bytec 9 // \"box_a\"",
      "defined_out": [
        "\"box_a\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"box_a\""
      ]
    },
    "1095": {
      "op": "uncover 1",
      "stack_out": [
        "\"box_a\"",
        "encoded_value%0#0"
      ]
    },
    "1097": {
      "op": "box_put",
      "stack_out": []
    },
    "1098": {
      "op": "bytec 10 // \"b\"",
      "defined_out": [
        "\"b\""
      ],
      "stack_out": [
        "\"b\""
      ]
    },
    "1100": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1101": {
      "op": "pop",
      "stack_out": []
    },
    "1102": {
      "op": "bytec 10 // \"b\"",
      "stack_out": [
        "\"b\""
      ]
    },
    "1104": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"b\"",
        "b#0 (copy)"
      ],
      "stack_out": [
        "\"b\"",
        "b#0 (copy)"
      ]
    },
    "1106": {
      "op": "box_put",
      "stack_out": []
    },
    "1107": {
      "op": "bytec_3 // 0x424f585f43",
      "defined_out": [
        "0x424f585f43"
      ],
      "stack_out": [
        "0x424f585f43"
      ]
    },
    "1108": {
      "op": "box_del",
      "stack_out": [
        "{box_del}"
      ]
    },
    "1109": {
      "op": "pop",
      "stack_out": []
    },
    "1110": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "0x424f585f43"
      ]
    },
    "1111": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x424f585f43",
        "c#0 (copy)"
      ],
      "stack_out": [
        "0x424f585f43",
        "c#0 (copy)"
      ]
    },
    "1113": {
      "op": "box_put",
      "stack_out": []
    },
    "1114": {
      "op": "frame_dig -2",
      "stack_out": [
        "b#0 (copy)"
      ]
    },
    "1116": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1119": {
      "op": "bytec 7 // \"box_d\"",
      "defined_out": [
        "\"box_d\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"box_d\""
      ]
    },
    "1121": {
      "op": "box_del",
      "stack_out": [
        "tmp%0#0",
        "{box_del}"
      ]
    },
    "1122": {
      "op": "pop",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1123": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "tmp%0#0",
        "\"box_d\""
      ]
    },
    "1125": {
      "op": "uncover 1",
      "stack_out": [
        "\"box_d\"",
        "tmp%0#0"
      ]
    },
    "1127": {
      "op": "box_put",
      "stack_out": []
    },
    "1128": {
      "op": "bytec 8 // \"box_large\"",
      "defined_out": [
        "\"box_large\""
      ],
      "stack_out": [
        "\"box_large\""
      ]
    },
    "1130": {
      "op": "pushint 6160 // 6160",
      "defined_out": [
        "\"box_large\"",
        "6160"
      ],
      "stack_out": [
        "\"box_large\"",
        "6160"
      ]
    },
    "1133": {
      "op": "box_create",
      "defined_out": [
        "{box_create}"
      ],
      "stack_out": [
        "{box_create}"
      ]
    },
    "1134": {
      "op": "pop",
      "stack_out": []
    },
    "1135": {
      "op": "bytec 8 // \"box_large\"",
      "stack_out": [
        "\"box_large\""
      ]
    },
    "1137": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1138": {
      "error": "check self.box_large exists",
      "op": "assert // check self.box_large exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "1139": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "42"
      ]
    },
    "1141": {
      "op": "itob",
      "defined_out": [
        "encoded_value%1#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%1#0"
      ]
    },
    "1142": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%0#0"
      ]
    },
    "1144": {
      "op": "intc 4 // 4096",
      "defined_out": [
        "4096",
        "encoded_value%1#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%0#0",
        "4096"
      ]
    },
    "1146": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%0#0",
        "4096",
        "encoded_value%1#0"
      ]
    },
    "1148": {
      "op": "replace3",
      "defined_out": [
        "updated_tuple%0#0"
      ],
      "stack_out": [
        "updated_tuple%0#0"
      ]
    },
    "1149": {
      "op": "bytec 8 // \"box_large\"",
      "stack_out": [
        "updated_tuple%0#0",
        "\"box_large\""
      ]
    },
    "1151": {
      "op": "uncover 1",
      "stack_out": [
        "\"box_large\"",
        "updated_tuple%0#0"
      ]
    },
    "1153": {
      "op": "box_put",
      "stack_out": []
    },
    "1154": {
      "op": "pushint 1024 // 1024",
      "defined_out": [
        "1024"
      ],
      "stack_out": [
        "1024"
      ]
    },
    "1157": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "1024",
        "4"
      ],
      "stack_out": [
        "1024",
        "4"
      ]
    },
    "1159": {
      "op": "*",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1160": {
      "op": "bytec 8 // \"box_large\"",
      "stack_out": [
        "tmp%1#0",
        "\"box_large\""
      ]
    },
    "1162": {
      "op": "uncover 1",
      "stack_out": [
        "\"box_large\"",
        "tmp%1#0"
      ]
    },
    "1164": {
      "op": "pushbytes 0x000000000000002a",
      "defined_out": [
        "\"box_large\"",
        "0x000000000000002a",
        "tmp%1#0"
      ],
      "stack_out": [
        "\"box_large\"",
        "tmp%1#0",
        "0x000000000000002a"
      ]
    },
    "1174": {
      "op": "box_replace",
      "stack_out": []
    },
    "1175": {
      "op": "bytec 10 // \"b\"",
      "stack_out": [
        "\"b\""
      ]
    },
    "1177": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "1178": {
      "error": "check self.box_b exists",
      "op": "assert // check self.box_b exists",
      "defined_out": [
        "b_value#0"
      ],
      "stack_out": [
        "b_value#0"
      ]
    },
    "1179": {
      "op": "bytec 10 // \"b\"",
      "stack_out": [
        "b_value#0",
        "\"b\""
      ]
    },
    "1181": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0",
        "b_value#0"
      ],
      "stack_out": [
        "b_value#0",
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "1182": {
      "error": "check self.box_b exists",
      "op": "assert // check self.box_b exists",
      "defined_out": [
        "b_value#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "b_value#0",
        "storage_value%2#0"
      ]
    },
    "1183": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "b_value#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "b_value#0",
        "storage_value%2#0",
        "0"
      ]
    },
    "1184": {
      "op": "extract_uint16",
      "defined_out": [
        "b_value#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "b_value#0",
        "tmp%2#0"
      ]
    },
    "1185": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "b_value#0"
      ]
    },
    "1187": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "b_value#0",
        "0"
      ]
    },
    "1188": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1189": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1190": {
      "error": "direct reference should match copy",
      "op": "assert // direct reference should match copy",
      "stack_out": []
    },
    "1191": {
      "op": "bytec 9 // \"box_a\"",
      "stack_out": [
        "\"box_a\""
      ]
    },
    "1193": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ],
      "stack_out": [
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ]
    },
    "1194": {
      "error": "check self.box_a exists",
      "op": "assert // check self.box_a exists",
      "defined_out": [
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0"
      ]
    },
    "1195": {
      "op": "btoi",
      "defined_out": [
        "maybe_value_converted%0#0"
      ],
      "stack_out": [
        "maybe_value_converted%0#0"
      ]
    },
    "1196": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "maybe_value_converted%0#0"
      ],
      "stack_out": [
        "maybe_value_converted%0#0",
        "3"
      ]
    },
    "1198": {
      "op": "+",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1199": {
      "op": "itob",
      "defined_out": [
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0"
      ]
    },
    "1200": {
      "op": "bytec 9 // \"box_a\"",
      "stack_out": [
        "encoded_value%2#0",
        "\"box_a\""
      ]
    },
    "1202": {
      "op": "uncover 1",
      "stack_out": [
        "\"box_a\"",
        "encoded_value%2#0"
      ]
    },
    "1204": {
      "op": "box_put",
      "stack_out": []
    },
    "1205": {
      "op": "bytec 9 // \"box_a\"",
      "stack_out": [
        "\"box_a\""
      ]
    },
    "1207": {
      "op": "box_len",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "1208": {
      "error": "check self.box_a exists",
      "op": "assert // check self.box_a exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "1209": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "8"
      ]
    },
    "1210": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1211": {
      "op": "assert",
      "stack_out": []
    },
    "1212": {
      "op": "bytec 10 // \"b\"",
      "stack_out": [
        "\"b\""
      ]
    },
    "1214": {
      "op": "box_len",
      "defined_out": [
        "check%1#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%1#0",
        "check%1#0"
      ]
    },
    "1215": {
      "error": "check self.box_b exists",
      "op": "assert // check self.box_b exists",
      "stack_out": [
        "value%1#0"
      ]
    },
    "1216": {
      "op": "frame_dig -2",
      "stack_out": [
        "value%1#0",
        "b#0 (copy)"
      ]
    },
    "1218": {
      "op": "len",
      "defined_out": [
        "tmp%7#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%1#0",
        "tmp%7#0"
      ]
    },
    "1219": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1220": {
      "op": "assert",
      "stack_out": []
    },
    "1221": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "0x424f585f43"
      ]
    },
    "1222": {
      "op": "box_len",
      "defined_out": [
        "check%2#0",
        "value%2#0"
      ],
      "stack_out": [
        "value%2#0",
        "check%2#0"
      ]
    },
    "1223": {
      "error": "check self.box_c exists",
      "op": "assert // check self.box_c exists",
      "stack_out": [
        "value%2#0"
      ]
    },
    "1224": {
      "op": "frame_dig -1",
      "stack_out": [
        "value%2#0",
        "c#0 (copy)"
      ]
    },
    "1226": {
      "op": "len",
      "defined_out": [
        "tmp%9#0",
        "value%2#0"
      ],
      "stack_out": [
        "value%2#0",
        "tmp%9#0"
      ]
    },
    "1227": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1228": {
      "op": "assert",
      "stack_out": []
    },
    "1229": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "\"box_d\""
      ]
    },
    "1231": {
      "op": "box_len",
      "defined_out": [
        "check%3#0",
        "value%3#0"
      ],
      "stack_out": [
        "value%3#0",
        "check%3#0"
      ]
    },
    "1232": {
      "error": "check self.box_d exists",
      "op": "assert // check self.box_d exists",
      "stack_out": [
        "value%3#0"
      ]
    },
    "1233": {
      "op": "frame_dig -2",
      "stack_out": [
        "value%3#0",
        "b#0 (copy)"
      ]
    },
    "1235": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%11#0",
        "value%3#0"
      ],
      "stack_out": [
        "value%3#0",
        "tmp%11#0"
      ]
    },
    "1238": {
      "op": "len",
      "defined_out": [
        "tmp%12#0",
        "value%3#0"
      ],
      "stack_out": [
        "value%3#0",
        "tmp%12#0"
      ]
    },
    "1239": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1240": {
      "op": "assert",
      "stack_out": []
    },
    "1241": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "0x424f585f43"
      ]
    },
    "1242": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0x424f585f43",
        "0"
      ]
    },
    "1243": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "0x424f585f43",
        "1"
      ],
      "stack_out": [
        "0x424f585f43",
        "0",
        "1"
      ]
    },
    "1244": {
      "op": "box_extract",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1245": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%14#0",
        "c#0 (copy)"
      ]
    },
    "1247": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%14#0",
        "c#0 (copy)",
        "0"
      ]
    },
    "1248": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%14#0",
        "c#0 (copy)",
        "0",
        "1"
      ]
    },
    "1249": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "extract%0#0"
      ]
    },
    "1250": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1251": {
      "op": "assert",
      "stack_out": []
    },
    "1252": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "0x424f585f43"
      ]
    },
    "1253": {
      "op": "box_len",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1254": {
      "op": "cover 1",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%16#0"
      ]
    },
    "1256": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%16#0",
        "1"
      ]
    },
    "1257": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1258": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "tmp%17#0",
        "tmp%18#0",
        "0x424f585f43"
      ]
    },
    "1259": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%17#0",
        "0x424f585f43",
        "tmp%18#0"
      ]
    },
    "1261": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "0x424f585f43",
        "tmp%18#0",
        "1"
      ]
    },
    "1262": {
      "op": "box_extract",
      "defined_out": [
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "1263": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0",
        "c#0 (copy)"
      ]
    },
    "1265": {
      "op": "len",
      "defined_out": [
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "1266": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0",
        "tmp%20#0",
        "1"
      ]
    },
    "1267": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0",
        "tmp%21#0"
      ]
    },
    "1268": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0",
        "tmp%21#0",
        "c#0 (copy)"
      ]
    },
    "1270": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0",
        "c#0 (copy)",
        "tmp%21#0"
      ]
    },
    "1272": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0",
        "c#0 (copy)",
        "tmp%21#0",
        "1"
      ]
    },
    "1273": {
      "op": "extract3",
      "defined_out": [
        "extract%1#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0",
        "extract%1#0"
      ]
    },
    "1274": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%22#0"
      ]
    },
    "1275": {
      "op": "assert",
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1276": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "tmp%17#0",
        "0x424f585f43"
      ]
    },
    "1277": {
      "op": "box_len",
      "defined_out": [
        "tmp%17#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "1278": {
      "op": "cover 1",
      "defined_out": [
        "tmp%17#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%23#0"
      ]
    },
    "1280": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%23#0",
        "1"
      ]
    },
    "1281": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "tmp%17#0",
        "tmp%23#0",
        "tmp%23#0 (copy)",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%23#0",
        "1",
        "tmp%23#0 (copy)"
      ]
    },
    "1283": {
      "op": "<",
      "defined_out": [
        "tmp%17#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "1284": {
      "op": "cover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%23#0"
      ]
    },
    "1286": {
      "op": "dup",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%23#0",
        "tmp%23#0 (copy)"
      ]
    },
    "1287": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%23#0",
        "tmp%23#0 (copy)",
        "1"
      ]
    },
    "1288": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%23#0 (copy)",
        "1",
        "tmp%25#0"
      ]
    },
    "1290": {
      "op": "select",
      "defined_out": [
        "tmp%17#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%23#0",
        "tmp%26#0"
      ]
    },
    "1291": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%27#0"
      ]
    },
    "1292": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%27#0",
        "0"
      ]
    },
    "1293": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%28#0"
      ]
    },
    "1294": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%28#0",
        "0x424f585f43"
      ]
    },
    "1295": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%28#0",
        "0x424f585f43",
        "0"
      ]
    },
    "1296": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "0x424f585f43",
        "0",
        "tmp%28#0"
      ]
    },
    "1298": {
      "op": "box_extract",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0"
      ]
    },
    "1299": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "c#0 (copy)"
      ]
    },
    "1301": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "length%0#0"
      ]
    },
    "1302": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "length%0#0",
        "1"
      ]
    },
    "1303": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%0#0",
        "length%0#0 (copy)",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "length%0#0",
        "1",
        "length%0#0 (copy)"
      ]
    },
    "1305": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "length%0#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "length%0#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "1306": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "length%0#0",
        "is_out_of_bounds%0#0",
        "1"
      ]
    },
    "1307": {
      "op": "dig 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "length%0#0",
        "is_out_of_bounds%0#0",
        "1",
        "length%0#0 (copy)"
      ]
    },
    "1309": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "length%0#0",
        "1",
        "length%0#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "1311": {
      "op": "select",
      "defined_out": [
        "bounded_offset%0#0",
        "length%0#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "length%0#0",
        "bounded_offset%0#0"
      ]
    },
    "1312": {
      "op": "-",
      "defined_out": [
        "bounded_index%0#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "bounded_index%0#0"
      ]
    },
    "1313": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "bounded_index%0#0",
        "c#0 (copy)"
      ]
    },
    "1315": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "bounded_index%0#0",
        "c#0 (copy)",
        "0"
      ]
    },
    "1316": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "c#0 (copy)",
        "0",
        "bounded_index%0#0"
      ]
    },
    "1318": {
      "op": "substring3",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "1319": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%31#0"
      ]
    },
    "1320": {
      "op": "assert",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0"
      ]
    },
    "1321": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "0x424f585f43"
      ]
    },
    "1322": {
      "op": "box_len",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%32#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%32#0",
        "tmp%33#0"
      ]
    },
    "1323": {
      "op": "cover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%32#0"
      ]
    },
    "1325": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%32#0",
        "2"
      ]
    },
    "1326": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%32#0",
        "tmp%32#0 (copy)",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%32#0",
        "2",
        "tmp%32#0 (copy)"
      ]
    },
    "1328": {
      "op": "<",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%32#0",
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%32#0",
        "tmp%34#0"
      ]
    },
    "1329": {
      "op": "cover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%32#0"
      ]
    },
    "1331": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%34#0",
        "tmp%32#0",
        "2"
      ]
    },
    "1332": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%32#0",
        "2",
        "tmp%34#0"
      ]
    },
    "1334": {
      "op": "select",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%35#0"
      ]
    },
    "1335": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%35#0",
        "0"
      ]
    },
    "1336": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%36#0"
      ]
    },
    "1337": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%36#0",
        "0x424f585f43"
      ]
    },
    "1338": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%36#0",
        "0x424f585f43",
        "0"
      ]
    },
    "1339": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "0x424f585f43",
        "0",
        "tmp%36#0"
      ]
    },
    "1341": {
      "op": "box_extract",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0"
      ]
    },
    "1342": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "c#0 (copy)"
      ]
    },
    "1344": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "length%1#0"
      ]
    },
    "1345": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "length%1#0",
        "2"
      ]
    },
    "1346": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "length%1#0",
        "length%1#0 (copy)",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "length%1#0",
        "2",
        "length%1#0 (copy)"
      ]
    },
    "1348": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%1#0",
        "length%1#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "length%1#0",
        "is_out_of_bounds%1#0"
      ]
    },
    "1349": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "length%1#0",
        "is_out_of_bounds%1#0",
        "2"
      ]
    },
    "1350": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "is_out_of_bounds%1#0",
        "2",
        "length%1#0"
      ]
    },
    "1352": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "2",
        "length%1#0",
        "is_out_of_bounds%1#0"
      ]
    },
    "1354": {
      "op": "select",
      "defined_out": [
        "bounded_index%1#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "bounded_index%1#0"
      ]
    },
    "1355": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "bounded_index%1#0",
        "c#0 (copy)"
      ]
    },
    "1357": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "bounded_index%1#0",
        "c#0 (copy)",
        "0"
      ]
    },
    "1358": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "c#0 (copy)",
        "0",
        "bounded_index%1#0"
      ]
    },
    "1360": {
      "op": "substring3",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%37#0",
        "tmp%38#0"
      ]
    },
    "1361": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%39#0"
      ]
    },
    "1362": {
      "op": "assert",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0"
      ]
    },
    "1363": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "\"box_d\""
      ]
    },
    "1365": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "\"box_d\"",
        "0"
      ]
    },
    "1366": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "\"box_d\"",
        "0",
        "1"
      ]
    },
    "1367": {
      "op": "box_extract",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%40#0"
      ]
    },
    "1368": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%40#0",
        "b#0 (copy)"
      ]
    },
    "1370": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "1373": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%40#0",
        "tmp%41#0",
        "0"
      ]
    },
    "1374": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%40#0",
        "tmp%41#0",
        "0",
        "1"
      ]
    },
    "1375": {
      "op": "extract3",
      "defined_out": [
        "extract%2#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%40#0",
        "extract%2#0"
      ]
    },
    "1376": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%42#0"
      ]
    },
    "1377": {
      "op": "assert",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0"
      ]
    },
    "1378": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "\"box_d\""
      ]
    },
    "1380": {
      "op": "box_len",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%43#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%43#0",
        "tmp%44#0"
      ]
    },
    "1381": {
      "op": "cover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%43#0"
      ]
    },
    "1383": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%43#0",
        "1"
      ]
    },
    "1384": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "1385": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%45#0",
        "\"box_d\""
      ]
    },
    "1387": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "\"box_d\"",
        "tmp%45#0"
      ]
    },
    "1389": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "\"box_d\"",
        "tmp%45#0",
        "1"
      ]
    },
    "1390": {
      "op": "box_extract",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0"
      ]
    },
    "1391": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "b#0 (copy)"
      ]
    },
    "1393": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "1396": {
      "op": "dup",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%47#0 (copy)"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%47#0 (copy)"
      ]
    },
    "1397": {
      "op": "len",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0"
      ]
    },
    "1398": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0",
        "1"
      ]
    },
    "1399": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%49#0"
      ]
    },
    "1400": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%49#0",
        "1"
      ]
    },
    "1401": {
      "op": "extract3",
      "defined_out": [
        "extract%3#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%46#0",
        "extract%3#0"
      ]
    },
    "1402": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%50#0"
      ]
    },
    "1403": {
      "op": "assert",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0"
      ]
    },
    "1404": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "\"box_d\""
      ]
    },
    "1406": {
      "op": "box_len",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%51#0",
        "tmp%52#0"
      ]
    },
    "1407": {
      "op": "cover 1",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%51#0"
      ]
    },
    "1409": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%51#0",
        "1"
      ]
    },
    "1410": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%51#0",
        "tmp%51#0 (copy)",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%51#0",
        "1",
        "tmp%51#0 (copy)"
      ]
    },
    "1412": {
      "op": "<",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%53#0"
      ]
    },
    "1413": {
      "op": "cover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%51#0"
      ]
    },
    "1415": {
      "op": "dup",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%51#0",
        "tmp%51#0 (copy)"
      ]
    },
    "1416": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%51#0",
        "tmp%51#0 (copy)",
        "1"
      ]
    },
    "1417": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%51#0 (copy)",
        "1",
        "tmp%53#0"
      ]
    },
    "1419": {
      "op": "select",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%54#0"
      ]
    },
    "1420": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%55#0"
      ]
    },
    "1421": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%55#0",
        "0"
      ]
    },
    "1422": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%56#0"
      ]
    },
    "1423": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%56#0",
        "\"box_d\""
      ]
    },
    "1425": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%56#0",
        "\"box_d\"",
        "0"
      ]
    },
    "1426": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "\"box_d\"",
        "0",
        "tmp%56#0"
      ]
    },
    "1428": {
      "op": "box_extract",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0"
      ]
    },
    "1429": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "b#0 (copy)"
      ]
    },
    "1431": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0"
      ]
    },
    "1434": {
      "op": "dup",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "tmp%58#0 (copy)"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "tmp%58#0 (copy)"
      ]
    },
    "1435": {
      "op": "len",
      "defined_out": [
        "length%2#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "length%2#0"
      ]
    },
    "1436": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "length%2#0",
        "1"
      ]
    },
    "1437": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%2#0",
        "length%2#0 (copy)",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "length%2#0",
        "1",
        "length%2#0 (copy)"
      ]
    },
    "1439": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%2#0",
        "length%2#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "length%2#0",
        "is_out_of_bounds%2#0"
      ]
    },
    "1440": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "length%2#0",
        "is_out_of_bounds%2#0",
        "1"
      ]
    },
    "1441": {
      "op": "dig 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "length%2#0",
        "is_out_of_bounds%2#0",
        "1",
        "length%2#0 (copy)"
      ]
    },
    "1443": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "length%2#0",
        "1",
        "length%2#0 (copy)",
        "is_out_of_bounds%2#0"
      ]
    },
    "1445": {
      "op": "select",
      "defined_out": [
        "bounded_offset%1#0",
        "length%2#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "length%2#0",
        "bounded_offset%1#0"
      ]
    },
    "1446": {
      "op": "-",
      "defined_out": [
        "bounded_index%2#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "bounded_index%2#0"
      ]
    },
    "1447": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "bounded_index%2#0",
        "tmp%58#0"
      ]
    },
    "1449": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "bounded_index%2#0",
        "tmp%58#0",
        "0"
      ]
    },
    "1450": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%58#0",
        "0",
        "bounded_index%2#0"
      ]
    },
    "1452": {
      "op": "substring3",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%57#0",
        "tmp%59#0"
      ]
    },
    "1453": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%60#0"
      ]
    },
    "1454": {
      "op": "assert",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0"
      ]
    },
    "1455": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "\"box_d\""
      ]
    },
    "1457": {
      "op": "box_len",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%61#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%61#0",
        "tmp%62#0"
      ]
    },
    "1458": {
      "op": "cover 1",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%61#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%61#0"
      ]
    },
    "1460": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%61#0",
        "5"
      ]
    },
    "1462": {
      "op": "dig 1",
      "defined_out": [
        "5",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%61#0",
        "tmp%61#0 (copy)",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%61#0",
        "5",
        "tmp%61#0 (copy)"
      ]
    },
    "1464": {
      "op": "<",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%61#0",
        "tmp%62#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%61#0",
        "tmp%63#0"
      ]
    },
    "1465": {
      "op": "cover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%63#0",
        "tmp%61#0"
      ]
    },
    "1467": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%63#0",
        "tmp%61#0",
        "5"
      ]
    },
    "1469": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%61#0",
        "5",
        "tmp%63#0"
      ]
    },
    "1471": {
      "op": "select",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%64#0"
      ]
    },
    "1472": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%64#0",
        "0"
      ]
    },
    "1473": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%65#0"
      ]
    },
    "1474": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%65#0",
        "\"box_d\""
      ]
    },
    "1476": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%65#0",
        "\"box_d\"",
        "0"
      ]
    },
    "1477": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "\"box_d\"",
        "0",
        "tmp%65#0"
      ]
    },
    "1479": {
      "op": "box_extract",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0"
      ]
    },
    "1480": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "b#0 (copy)"
      ]
    },
    "1482": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0"
      ]
    },
    "1485": {
      "op": "dup",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "tmp%67#0 (copy)"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "tmp%67#0 (copy)"
      ]
    },
    "1486": {
      "op": "len",
      "defined_out": [
        "length%3#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "length%3#0"
      ]
    },
    "1487": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "length%3#0",
        "5"
      ]
    },
    "1489": {
      "op": "dig 1",
      "defined_out": [
        "5",
        "length%3#0",
        "length%3#0 (copy)",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "length%3#0",
        "5",
        "length%3#0 (copy)"
      ]
    },
    "1491": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%3#0",
        "length%3#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "length%3#0",
        "is_out_of_bounds%3#0"
      ]
    },
    "1492": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "length%3#0",
        "is_out_of_bounds%3#0",
        "5"
      ]
    },
    "1494": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "is_out_of_bounds%3#0",
        "5",
        "length%3#0"
      ]
    },
    "1496": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "5",
        "length%3#0",
        "is_out_of_bounds%3#0"
      ]
    },
    "1498": {
      "op": "select",
      "defined_out": [
        "bounded_index%3#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "bounded_index%3#0"
      ]
    },
    "1499": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "bounded_index%3#0",
        "tmp%67#0"
      ]
    },
    "1501": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "bounded_index%3#0",
        "tmp%67#0",
        "0"
      ]
    },
    "1502": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%67#0",
        "0",
        "bounded_index%3#0"
      ]
    },
    "1504": {
      "op": "substring3",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%66#0",
        "tmp%68#0"
      ]
    },
    "1505": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%69#0"
      ]
    },
    "1506": {
      "op": "assert",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0"
      ]
    },
    "1507": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "\"box_d\""
      ]
    },
    "1509": {
      "op": "box_len",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%70#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%70#0",
        "tmp%71#0"
      ]
    },
    "1510": {
      "op": "cover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%70#0"
      ]
    },
    "1512": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%70#0",
        "2"
      ]
    },
    "1513": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%70#0",
        "tmp%70#0 (copy)",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%70#0",
        "2",
        "tmp%70#0 (copy)"
      ]
    },
    "1515": {
      "op": "<",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%70#0",
        "tmp%71#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%70#0",
        "tmp%72#0"
      ]
    },
    "1516": {
      "op": "cover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%72#0",
        "tmp%70#0"
      ]
    },
    "1518": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%72#0",
        "tmp%70#0",
        "2"
      ]
    },
    "1519": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%70#0",
        "2",
        "tmp%72#0"
      ]
    },
    "1521": {
      "op": "select",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%73#0"
      ]
    },
    "1522": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%73#0",
        "0"
      ]
    },
    "1523": {
      "op": "-",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%74#0"
      ]
    },
    "1524": {
      "op": "bytec 7 // \"box_d\"",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%74#0",
        "\"box_d\""
      ]
    },
    "1526": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%74#0",
        "\"box_d\"",
        "0"
      ]
    },
    "1527": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "\"box_d\"",
        "0",
        "tmp%74#0"
      ]
    },
    "1529": {
      "op": "box_extract",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0"
      ]
    },
    "1530": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "b#0 (copy)"
      ]
    },
    "1532": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0"
      ]
    },
    "1535": {
      "op": "dup",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "tmp%76#0 (copy)"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "tmp%76#0 (copy)"
      ]
    },
    "1536": {
      "op": "len",
      "defined_out": [
        "length%4#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "length%4#0"
      ]
    },
    "1537": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "length%4#0",
        "2"
      ]
    },
    "1538": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "length%4#0",
        "length%4#0 (copy)",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "length%4#0",
        "2",
        "length%4#0 (copy)"
      ]
    },
    "1540": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%4#0",
        "length%4#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "length%4#0",
        "is_out_of_bounds%4#0"
      ]
    },
    "1541": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "length%4#0",
        "is_out_of_bounds%4#0",
        "2"
      ]
    },
    "1542": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "is_out_of_bounds%4#0",
        "2",
        "length%4#0"
      ]
    },
    "1544": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "2",
        "length%4#0",
        "is_out_of_bounds%4#0"
      ]
    },
    "1546": {
      "op": "select",
      "defined_out": [
        "bounded_index%4#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "bounded_index%4#0"
      ]
    },
    "1547": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "bounded_index%4#0",
        "tmp%76#0"
      ]
    },
    "1549": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "bounded_index%4#0",
        "tmp%76#0",
        "0"
      ]
    },
    "1550": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%76#0",
        "0",
        "bounded_index%4#0"
      ]
    },
    "1552": {
      "op": "substring3",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%75#0",
        "tmp%77#0"
      ]
    },
    "1553": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%78#0"
      ]
    },
    "1554": {
      "op": "assert",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0"
      ]
    },
    "1555": {
      "op": "bytec 8 // \"box_large\"",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "\"box_large\""
      ]
    },
    "1557": {
      "op": "box_len",
      "defined_out": [
        "check%4#0",
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "value%4#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "value%4#0",
        "check%4#0"
      ]
    },
    "1558": {
      "error": "check self.box_large exists",
      "op": "assert // check self.box_large exists",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "value%4#0"
      ]
    },
    "1559": {
      "op": "pushint 6160 // 6160",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "value%4#0",
        "6160"
      ]
    },
    "1562": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0",
        "tmp%79#0"
      ]
    },
    "1563": {
      "op": "assert",
      "stack_out": [
        "tmp%17#0",
        "tmp%24#0",
        "tmp%33#0",
        "tmp%44#0",
        "tmp%52#0",
        "tmp%62#0",
        "tmp%71#0"
      ]
    },
    "1564": {
      "retsub": true,
      "op": "retsub"
    },
    "1565": {
      "subroutine": "examples.box_storage.contract.BoxContract.check_keys",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.check_keys",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.check_keys_block@0"
    },
    "1568": {
      "block": "examples.box_storage.contract.BoxContract.check_keys_block@0",
      "stack_in": [],
      "op": "bytec 9 // \"box_a\"",
      "defined_out": [
        "\"box_a\""
      ],
      "stack_out": [
        "\"box_a\""
      ]
    },
    "1570": {
      "op": "bytec 9 // 0x626f785f61",
      "defined_out": [
        "\"box_a\"",
        "0x626f785f61"
      ],
      "stack_out": [
        "\"box_a\"",
        "0x626f785f61"
      ]
    },
    "1572": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1573": {
      "error": "box a key ok",
      "op": "assert // box a key ok",
      "stack_out": []
    },
    "1574": {
      "op": "bytec 10 // \"b\"",
      "defined_out": [
        "\"b\""
      ],
      "stack_out": [
        "\"b\""
      ]
    },
    "1576": {
      "op": "bytec 10 // 0x62",
      "defined_out": [
        "\"b\"",
        "0x62"
      ],
      "stack_out": [
        "\"b\"",
        "0x62"
      ]
    },
    "1578": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1579": {
      "error": "box b key ok",
      "op": "assert // box b key ok",
      "stack_out": []
    },
    "1580": {
      "op": "bytec_3 // 0x424f585f43",
      "defined_out": [
        "0x424f585f43"
      ],
      "stack_out": [
        "0x424f585f43"
      ]
    },
    "1581": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "0x424f585f43",
        "0x424f585f43"
      ]
    },
    "1582": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1583": {
      "error": "box c key ok",
      "op": "assert // box c key ok",
      "stack_out": []
    },
    "1584": {
      "op": "bytec 8 // \"box_large\"",
      "defined_out": [
        "\"box_large\""
      ],
      "stack_out": [
        "\"box_large\""
      ]
    },
    "1586": {
      "op": "bytec 8 // 0x626f785f6c61726765",
      "defined_out": [
        "\"box_large\"",
        "0x626f785f6c61726765"
      ],
      "stack_out": [
        "\"box_large\"",
        "0x626f785f6c61726765"
      ]
    },
    "1588": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1589": {
      "error": "box large key ok",
      "op": "assert // box large key ok",
      "stack_out": []
    },
    "1590": {
      "retsub": true,
      "op": "retsub"
    },
    "1591": {
      "subroutine": "examples.box_storage.contract.BoxContract.create_many_ints",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.create_many_ints",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.create_many_ints_block@0"
    },
    "1594": {
      "block": "examples.box_storage.contract.BoxContract.create_many_ints_block@0",
      "stack_in": [],
      "op": "bytec 15 // \"many_ints\"",
      "defined_out": [
        "\"many_ints\""
      ],
      "stack_out": [
        "\"many_ints\""
      ]
    },
    "1596": {
      "op": "pushint 4104 // 4104",
      "defined_out": [
        "\"many_ints\"",
        "4104"
      ],
      "stack_out": [
        "\"many_ints\"",
        "4104"
      ]
    },
    "1599": {
      "op": "box_create",
      "defined_out": [
        "{box_create}"
      ],
      "stack_out": [
        "{box_create}"
      ]
    },
    "1600": {
      "op": "pop",
      "stack_out": []
    },
    "1601": {
      "retsub": true,
      "op": "retsub"
    },
    "1602": {
      "subroutine": "examples.box_storage.contract.BoxContract.set_many_ints",
      "params": {
        "index#0": "uint64",
        "value#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.set_many_ints",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1605": {
      "op": "b examples.box_storage.contract.BoxContract.set_many_ints_block@0"
    },
    "1608": {
      "block": "examples.box_storage.contract.BoxContract.set_many_ints_block@0",
      "stack_in": [],
      "op": "bytec 15 // \"many_ints\"",
      "defined_out": [
        "\"many_ints\""
      ],
      "stack_out": [
        "\"many_ints\""
      ]
    },
    "1610": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1611": {
      "error": "check self.many_ints exists",
      "op": "assert // check self.many_ints exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "1612": {
      "op": "frame_dig -1",
      "defined_out": [
        "storage_value%0#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "value#0 (copy)"
      ]
    },
    "1614": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "1615": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_value%0#0",
        "index#0 (copy)",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "index#0 (copy)"
      ]
    },
    "1617": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "encoded_value%0#0",
        "index#0 (copy)",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "index#0 (copy)",
        "8"
      ]
    },
    "1618": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "1619": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%write_offset%0#0",
        "storage_value%0#0"
      ]
    },
    "1621": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "1623": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%write_offset%0#0",
        "encoded_value%0#0"
      ]
    },
    "1625": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "1626": {
      "op": "bytec 15 // \"many_ints\"",
      "stack_out": [
        "updated_array%0#0",
        "\"many_ints\""
      ]
    },
    "1628": {
      "op": "uncover 1",
      "stack_out": [
        "\"many_ints\"",
        "updated_array%0#0"
      ]
    },
    "1630": {
      "op": "box_put",
      "stack_out": []
    },
    "1631": {
      "retsub": true,
      "op": "retsub"
    },
    "1632": {
      "subroutine": "examples.box_storage.contract.BoxContract.sum_many_ints",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.sum_many_ints",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1635": {
      "op": "b examples.box_storage.contract.BoxContract.sum_many_ints_block@0"
    },
    "1638": {
      "block": "examples.box_storage.contract.BoxContract.sum_many_ints_block@0",
      "stack_in": [],
      "op": "pushint 10500 // 10500",
      "defined_out": [
        "10500"
      ],
      "stack_out": [
        "10500"
      ]
    },
    "1641": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "10500"
      ],
      "stack_out": [
        "10500",
        "0"
      ]
    },
    "1642": {
      "callsub": "_puya_lib.util.ensure_budget",
      "op": "callsub ensure_budget",
      "stack_out": []
    },
    "1645": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0"
      ]
    },
    "1646": {
      "op": "bytec 15 // \"many_ints\"",
      "defined_out": [
        "\"many_ints\""
      ],
      "stack_out": [
        "total#0",
        "\"many_ints\""
      ]
    },
    "1648": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1649": {
      "error": "check self.many_ints exists",
      "op": "assert // check self.many_ints exists",
      "defined_out": [],
      "stack_out": [
        "total#0",
        "storage_value%0#0"
      ]
    },
    "1650": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1651": {
      "op": "b examples.box_storage.contract.BoxContract.sum_many_ints_for_header@1"
    },
    "1654": {
      "block": "examples.box_storage.contract.BoxContract.sum_many_ints_for_header@1",
      "stack_in": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1656": {
      "op": "pushint 513 // 513",
      "defined_out": [
        "513",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "513"
      ]
    },
    "1659": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1660": {
      "op": "bz examples.box_storage.contract.BoxContract.sum_many_ints_after_for@4",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1663": {
      "op": "b examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2"
    },
    "1666": {
      "block": "examples.box_storage.contract.BoxContract.sum_many_ints_for_body@2",
      "stack_in": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1668": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "1669": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1670": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0",
        "storage_value%0#0"
      ]
    },
    "1672": {
      "op": "uncover 1",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1674": {
      "op": "intc_3 // 8",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "1675": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "array_item%0#0"
      ]
    },
    "1676": {
      "op": "btoi",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "val#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "val#0"
      ]
    },
    "1677": {
      "op": "frame_dig 0",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "total#0",
        "val#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "val#0",
        "total#0"
      ]
    },
    "1679": {
      "op": "+",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1680": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1682": {
      "op": "b examples.box_storage.contract.BoxContract.sum_many_ints_for_footer@3"
    },
    "1685": {
      "block": "examples.box_storage.contract.BoxContract.sum_many_ints_for_footer@3",
      "stack_in": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1687": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1688": {
      "op": "+",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1689": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1691": {
      "op": "b examples.box_storage.contract.BoxContract.sum_many_ints_for_header@1"
    },
    "1694": {
      "block": "examples.box_storage.contract.BoxContract.sum_many_ints_after_for@4",
      "stack_in": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1695": {
      "subroutine": "examples.box_storage.contract.BoxContract.delete_boxes",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.delete_boxes",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.delete_boxes_block@0"
    },
    "1698": {
      "block": "examples.box_storage.contract.BoxContract.delete_boxes_block@0",
      "stack_in": [],
      "op": "bytec 9 // \"box_a\"",
      "defined_out": [
        "\"box_a\""
      ],
      "stack_out": [
        "\"box_a\""
      ]
    },
    "1700": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1701": {
      "op": "pop",
      "stack_out": []
    },
    "1702": {
      "op": "bytec 10 // \"b\"",
      "defined_out": [
        "\"b\""
      ],
      "stack_out": [
        "\"b\""
      ]
    },
    "1704": {
      "op": "box_del",
      "stack_out": [
        "{box_del}"
      ]
    },
    "1705": {
      "op": "pop",
      "stack_out": []
    },
    "1706": {
      "op": "bytec_3 // 0x424f585f43",
      "defined_out": [
        "0x424f585f43"
      ],
      "stack_out": [
        "0x424f585f43"
      ]
    },
    "1707": {
      "op": "box_del",
      "stack_out": [
        "{box_del}"
      ]
    },
    "1708": {
      "op": "pop",
      "stack_out": []
    },
    "1709": {
      "op": "bytec 9 // \"box_a\"",
      "stack_out": [
        "\"box_a\""
      ]
    },
    "1711": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1712": {
      "op": "cover 1",
      "stack_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "1714": {
      "op": "btoi",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value_converted%0#0"
      ],
      "stack_out": [
        "maybe_exists%0#0",
        "maybe_value_converted%0#0"
      ]
    },
    "1715": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "maybe_exists%0#0",
        "maybe_value_converted%0#0"
      ],
      "stack_out": [
        "maybe_exists%0#0",
        "maybe_value_converted%0#0",
        "42"
      ]
    },
    "1717": {
      "op": "uncover 1",
      "stack_out": [
        "maybe_exists%0#0",
        "42",
        "maybe_value_converted%0#0"
      ]
    },
    "1719": {
      "op": "uncover 2",
      "stack_out": [
        "42",
        "maybe_value_converted%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1721": {
      "op": "select",
      "defined_out": [
        "state_get%0#0"
      ],
      "stack_out": [
        "state_get%0#0"
      ]
    },
    "1722": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "state_get%0#0",
        "42"
      ]
    },
    "1724": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1725": {
      "op": "assert",
      "stack_out": []
    },
    "1726": {
      "op": "bytec 11 // 0x3432",
      "defined_out": [
        "0x3432"
      ],
      "stack_out": [
        "0x3432"
      ]
    },
    "1728": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "1729": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "1730": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "1733": {
      "op": "bytec 11 // 0x3432",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "0x3432"
      ]
    },
    "1735": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1736": {
      "op": "bytec 10 // \"b\"",
      "stack_out": [
        "tmp%1#0",
        "\"b\""
      ]
    },
    "1738": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1739": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ]
    },
    "1741": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ]
    },
    "1743": {
      "op": "uncover 1",
      "stack_out": [
        "maybe_exists%1#0",
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1745": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1747": {
      "op": "select",
      "defined_out": [
        "state_get%1#0"
      ],
      "stack_out": [
        "state_get%1#0"
      ]
    },
    "1748": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1751": {
      "op": "bytec 11 // 0x3432",
      "stack_out": [
        "tmp%2#0",
        "0x3432"
      ]
    },
    "1753": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1754": {
      "op": "assert",
      "stack_out": []
    },
    "1755": {
      "op": "bytec 11 // \"42\"",
      "defined_out": [
        "\"42\""
      ],
      "stack_out": [
        "\"42\""
      ]
    },
    "1757": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0"
      ],
      "stack_out": [
        "aggregate%length%1#0"
      ]
    },
    "1758": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%1#0"
      ]
    },
    "1759": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%1#0"
      ]
    },
    "1762": {
      "op": "bytec 11 // \"42\"",
      "stack_out": [
        "aggregate%length_uint16%1#0",
        "\"42\""
      ]
    },
    "1764": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1765": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "tmp%4#0",
        "0x424f585f43"
      ]
    },
    "1766": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1767": {
      "op": "cover 1",
      "stack_out": [
        "tmp%4#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ]
    },
    "1769": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%4#0"
      ]
    },
    "1771": {
      "op": "uncover 1",
      "stack_out": [
        "maybe_exists%2#0",
        "tmp%4#0",
        "maybe_value%2#0"
      ]
    },
    "1773": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1775": {
      "op": "select",
      "defined_out": [
        "state_get%2#0"
      ],
      "stack_out": [
        "state_get%2#0"
      ]
    },
    "1776": {
      "op": "bytec 11 // \"42\"",
      "stack_out": [
        "state_get%2#0",
        "\"42\""
      ]
    },
    "1778": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#0",
        "state_get%2#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "aggregate%length%2#0"
      ]
    },
    "1779": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "state_get%2#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1780": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#0",
        "state_get%2#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "aggregate%length_uint16%2#0"
      ]
    },
    "1783": {
      "op": "bytec 11 // \"42\"",
      "stack_out": [
        "state_get%2#0",
        "aggregate%length_uint16%2#0",
        "\"42\""
      ]
    },
    "1785": {
      "op": "concat",
      "defined_out": [
        "state_get%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "tmp%5#0"
      ]
    },
    "1786": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1787": {
      "op": "assert",
      "stack_out": []
    },
    "1788": {
      "op": "bytec 9 // \"box_a\"",
      "stack_out": [
        "\"box_a\""
      ]
    },
    "1790": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1791": {
      "op": "cover 1",
      "stack_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ]
    },
    "1793": {
      "op": "btoi",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value_converted%1#0"
      ],
      "stack_out": [
        "maybe_exists%3#0",
        "maybe_value_converted%1#0"
      ]
    },
    "1794": {
      "op": "cover 1",
      "defined_out": [
        "a#0",
        "a_exists#0"
      ],
      "stack_out": [
        "a#0",
        "a_exists#0"
      ]
    },
    "1796": {
      "op": "!",
      "defined_out": [
        "a#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%7#0"
      ]
    },
    "1797": {
      "op": "assert",
      "stack_out": [
        "a#0"
      ]
    },
    "1798": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "0"
      ]
    },
    "1799": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1800": {
      "op": "assert",
      "stack_out": []
    },
    "1801": {
      "op": "bytec 8 // \"box_large\"",
      "defined_out": [
        "\"box_large\""
      ],
      "stack_out": [
        "\"box_large\""
      ]
    },
    "1803": {
      "op": "box_del",
      "stack_out": [
        "{box_del}"
      ]
    },
    "1804": {
      "op": "pop",
      "stack_out": []
    },
    "1805": {
      "retsub": true,
      "op": "retsub"
    },
    "1806": {
      "subroutine": "examples.box_storage.contract.BoxContract.indirect_extract_and_replace",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.indirect_extract_and_replace",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0"
    },
    "1809": {
      "block": "examples.box_storage.contract.BoxContract.indirect_extract_and_replace_block@0",
      "stack_in": [],
      "op": "bytec 8 // \"box_large\"",
      "defined_out": [
        "\"box_large\""
      ],
      "stack_out": [
        "\"box_large\""
      ]
    },
    "1811": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1812": {
      "error": "check self.box_large exists",
      "op": "assert // check self.box_large exists",
      "defined_out": [
        "large#0"
      ],
      "stack_out": [
        "large#0"
      ]
    },
    "1813": {
      "op": "dup",
      "defined_out": [
        "large#0",
        "large#0 (copy)"
      ],
      "stack_out": [
        "large#0",
        "large#0 (copy)"
      ]
    },
    "1814": {
      "op": "intc 4 // 4096",
      "defined_out": [
        "4096",
        "large#0",
        "large#0 (copy)"
      ],
      "stack_out": [
        "large#0",
        "large#0 (copy)",
        "4096"
      ]
    },
    "1816": {
      "op": "intc_3 // 8",
      "defined_out": [
        "4096",
        "8",
        "large#0",
        "large#0 (copy)"
      ],
      "stack_out": [
        "large#0",
        "large#0 (copy)",
        "4096",
        "8"
      ]
    },
    "1817": {
      "op": "extract3",
      "defined_out": [
        "large#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "large#0",
        "tuple_item%0#0"
      ]
    },
    "1818": {
      "op": "btoi",
      "defined_out": [
        "large#0",
        "values%0#0"
      ],
      "stack_out": [
        "large#0",
        "values%0#0"
      ]
    },
    "1819": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "large#0",
        "values%0#0"
      ],
      "stack_out": [
        "large#0",
        "values%0#0",
        "1"
      ]
    },
    "1820": {
      "op": "+",
      "defined_out": [
        "large#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "large#0",
        "tmp%0#0"
      ]
    },
    "1821": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "large#0"
      ],
      "stack_out": [
        "large#0",
        "encoded_value%0#0"
      ]
    },
    "1822": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%0#0",
        "large#0"
      ]
    },
    "1824": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "encoded_value%0#0",
        "large#0",
        "4096"
      ]
    },
    "1826": {
      "op": "uncover 2",
      "stack_out": [
        "large#0",
        "4096",
        "encoded_value%0#0"
      ]
    },
    "1828": {
      "op": "replace3",
      "defined_out": [
        "large#0"
      ],
      "stack_out": [
        "large#0"
      ]
    },
    "1829": {
      "op": "bytec 8 // \"box_large\"",
      "stack_out": [
        "large#0",
        "\"box_large\""
      ]
    },
    "1831": {
      "op": "uncover 1",
      "stack_out": [
        "\"box_large\"",
        "large#0"
      ]
    },
    "1833": {
      "op": "box_put",
      "stack_out": []
    },
    "1834": {
      "retsub": true,
      "op": "retsub"
    },
    "1835": {
      "subroutine": "examples.box_storage.contract.BoxContract.read_boxes",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.read_boxes",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.read_boxes_block@0"
    },
    "1838": {
      "block": "examples.box_storage.contract.BoxContract.read_boxes_block@0",
      "stack_in": [],
      "op": "bytec 9 // \"box_a\"",
      "defined_out": [
        "\"box_a\""
      ],
      "stack_out": [
        "\"box_a\""
      ]
    },
    "1840": {
      "callsub": "examples.box_storage.contract.get_box_value_plus_1",
      "op": "callsub get_box_value_plus_1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1843": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "1844": {
      "op": "-",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1845": {
      "op": "bytec 10 // \"b\"",
      "defined_out": [
        "\"b\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\"b\""
      ]
    },
    "1847": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1848": {
      "error": "check self.box_b exists",
      "op": "assert // check self.box_b exists",
      "defined_out": [
        "storage_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "storage_value%0#0"
      ]
    },
    "1849": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1852": {
      "op": "bytec_3 // 0x424f585f43",
      "defined_out": [
        "0x424f585f43",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "0x424f585f43"
      ]
    },
    "1853": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "1854": {
      "error": "check self.box_c exists",
      "op": "assert // check self.box_c exists",
      "defined_out": [
        "storage_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "storage_value%1#0"
      ]
    },
    "1855": {
      "op": "bytec 8 // \"box_large\"",
      "defined_out": [
        "\"box_large\"",
        "storage_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "storage_value%1#0",
        "\"box_large\""
      ]
    },
    "1857": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0",
        "storage_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "storage_value%1#0",
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "1858": {
      "error": "check self.box_large exists",
      "op": "assert // check self.box_large exists",
      "defined_out": [
        "storage_value%1#0",
        "storage_value%2#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "storage_value%1#0",
        "storage_value%2#0"
      ]
    },
    "1859": {
      "op": "intc 4 // 4096",
      "defined_out": [
        "4096",
        "storage_value%1#0",
        "storage_value%2#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "storage_value%1#0",
        "storage_value%2#0",
        "4096"
      ]
    },
    "1861": {
      "op": "intc_3 // 8",
      "defined_out": [
        "4096",
        "8",
        "storage_value%1#0",
        "storage_value%2#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "storage_value%1#0",
        "storage_value%2#0",
        "4096",
        "8"
      ]
    },
    "1862": {
      "op": "extract3",
      "defined_out": [
        "storage_value%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "storage_value%1#0",
        "tuple_item%0#0"
      ]
    },
    "1863": {
      "op": "btoi",
      "defined_out": [
        "storage_value%1#0",
        "tmp%1#0",
        "tmp%2#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "storage_value%1#0",
        "values%0#0"
      ]
    },
    "1864": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "storage_value%1#0",
        "values%0#0",
        "tmp%1#0"
      ]
    },
    "1866": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%1#0",
        "values%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1868": {
      "op": "uncover 3",
      "stack_out": [
        "values%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "storage_value%1#0"
      ]
    },
    "1870": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "storage_value%1#0",
        "values%0#0"
      ]
    },
    "1872": {
      "retsub": true,
      "op": "retsub"
    },
    "1873": {
      "subroutine": "examples.box_storage.contract.BoxContract.boxes_exist",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.boxes_exist",
      "stack_in": [],
      "op": "proto 0 4"
    },
    "1876": {
      "op": "b examples.box_storage.contract.BoxContract.boxes_exist_block@0"
    },
    "1879": {
      "block": "examples.box_storage.contract.BoxContract.boxes_exist_block@0",
      "stack_in": [],
      "op": "bytec 9 // \"box_a\"",
      "defined_out": [
        "\"box_a\""
      ],
      "stack_out": [
        "\"box_a\""
      ]
    },
    "1881": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1882": {
      "op": "bytec 10 // \"b\"",
      "defined_out": [
        "\"b\"",
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0",
        "\"b\""
      ]
    },
    "1884": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1885": {
      "op": "cover 1",
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "_%1#0"
      ]
    },
    "1887": {
      "op": "cover 2",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1889": {
      "op": "bytec_3 // 0x424f585f43",
      "defined_out": [
        "0x424f585f43",
        "_%0#0",
        "_%1#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "0x424f585f43"
      ]
    },
    "1890": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "_%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1891": {
      "op": "cover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0",
        "_%2#0"
      ]
    },
    "1893": {
      "op": "cover 3",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1895": {
      "op": "bytec 8 // \"box_large\"",
      "defined_out": [
        "\"box_large\"",
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0",
        "\"box_large\""
      ]
    },
    "1897": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0",
        "_%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1898": {
      "op": "cover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0",
        "maybe_exists%3#0",
        "_%3#0"
      ]
    },
    "1900": {
      "op": "cover 4",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0",
        "maybe_exists%3#0"
      ]
    },
    "1902": {
      "op": "uncover 3",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0",
        "maybe_exists%3#0",
        "maybe_exists%0#0"
      ]
    },
    "1904": {
      "op": "uncover 3",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "maybe_exists%2#0",
        "maybe_exists%3#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1906": {
      "op": "uncover 3",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "maybe_exists%3#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1908": {
      "op": "uncover 3",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "maybe_exists%0#0",
        "maybe_exists%1#0",
        "maybe_exists%2#0",
        "maybe_exists%3#0"
      ]
    },
    "1910": {
      "op": "uncover 7"
    },
    "1912": {
      "op": "uncover 7"
    },
    "1914": {
      "op": "uncover 7"
    },
    "1916": {
      "op": "uncover 7"
    },
    "1918": {
      "retsub": true,
      "op": "retsub"
    },
    "1919": {
      "subroutine": "examples.box_storage.contract.BoxContract.create_dynamic_arr_struct",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.create_dynamic_arr_struct",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0"
    },
    "1922": {
      "block": "examples.box_storage.contract.BoxContract.create_dynamic_arr_struct_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1924": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1925": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1926": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint64[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(len+uint64[])%0#0"
      ]
    },
    "1929": {
      "op": "cover 1",
      "defined_out": [
        "encoded_array%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "tmp%0#0"
      ]
    },
    "1931": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "encoded_array%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1933": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "encoded_array%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "2"
      ]
    },
    "1934": {
      "op": "*",
      "defined_out": [
        "encoded_array%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1935": {
      "op": "cover 2",
      "stack_out": [
        "tmp%2#0",
        "encoded_array%0#0",
        "tmp%0#0"
      ]
    },
    "1937": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "encoded_array%0#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1938": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "encoded_array%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_array%0#0",
        "tmp%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1939": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint64[])%1#0",
        "encoded_array%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_array%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(len+uint64[])%1#0"
      ]
    },
    "1942": {
      "op": "cover 3",
      "defined_out": [
        "encoded_array%0#0",
        "encoded_array%1#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "tmp%0#0"
      ]
    },
    "1944": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "encoded_array%0#0",
        "encoded_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1945": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "encoded_array%0#0",
        "encoded_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1946": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1948": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "encoded_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%head%0#0"
      ]
    },
    "1949": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "encoded_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%head%0#0",
        "20"
      ]
    },
    "1951": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "encoded_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1952": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "encoded_array%0#0",
        "encoded_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1955": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "encoded_array%0#0",
        "encoded_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%head%1#0"
      ]
    },
    "1956": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%1#0",
        "encoded_array%0#0",
        "encoded_array%0#0 (copy)",
        "encoded_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0 (copy)"
      ]
    },
    "1958": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0",
        "encoded_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%data_length%0#0"
      ]
    },
    "1959": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%data_length%0#0",
        "20"
      ]
    },
    "1961": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0",
        "encoded_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%2#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1962": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_array%1#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0"
      ]
    },
    "1964": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1965": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_array%1#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%1#0"
      ]
    },
    "1967": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%1#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1969": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0"
      ]
    },
    "1970": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%1#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1972": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "aggregate%head%2#0",
        "encoded_array%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1973": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%1#0",
        "encoded_array%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "encoded_array%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1976": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "encoded_array%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "encoded_array%0#0",
        "aggregate%head%3#0"
      ]
    },
    "1977": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%1#0",
        "aggregate%head%3#0",
        "encoded_array%0#0"
      ]
    },
    "1979": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "aggregate%concat%0#0"
      ]
    },
    "1980": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%0#0",
        "encoded_array%1#0"
      ]
    },
    "1982": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1983": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "1984": {
      "op": "box_del",
      "defined_out": [
        "tmp%3#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%3#0",
        "{box_del}"
      ]
    },
    "1985": {
      "op": "pop",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1986": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "tmp%3#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "1987": {
      "op": "uncover 1",
      "stack_out": [
        "\"dynamic_arr_struct\"",
        "tmp%3#0"
      ]
    },
    "1989": {
      "op": "box_put",
      "stack_out": []
    },
    "1990": {
      "retsub": true,
      "op": "retsub"
    },
    "1991": {
      "subroutine": "examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct_block@0"
    },
    "1994": {
      "block": "examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct_block@0",
      "stack_in": [],
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\""
      ],
      "stack_out": [
        "\"dynamic_arr_struct\""
      ]
    },
    "1995": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1996": {
      "op": "pop",
      "stack_out": []
    },
    "1997": {
      "retsub": true,
      "op": "retsub"
    },
    "1998": {
      "subroutine": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct",
      "params": {
        "times#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2001": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0"
      ]
    },
    "2002": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0",
        "index#0"
      ]
    },
    "2003": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1"
      ]
    },
    "2004": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0"
      ]
    },
    "2005": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0"
      ]
    },
    "2006": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2007": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0"
    },
    "2010": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@0",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\""
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2011": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "2012": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "storage_value%0#0"
      ]
    },
    "2013": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "storage_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "storage_value%0#0",
        "10"
      ]
    },
    "2015": {
      "op": "intc_3 // 8",
      "defined_out": [
        "10",
        "8",
        "storage_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "storage_value%0#0",
        "10",
        "8"
      ]
    },
    "2016": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tuple_item%0#0"
      ]
    },
    "2017": {
      "op": "btoi",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "values%0#0"
      ]
    },
    "2018": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "values%0#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "values%0#0",
        "2"
      ]
    },
    "2019": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%0#0"
      ]
    },
    "2020": {
      "error": "expected 2",
      "op": "assert // expected 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2021": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2022": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "2023": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "storage_value%1#0"
      ]
    },
    "2024": {
      "op": "dup",
      "defined_out": [
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "2025": {
      "op": "intc_3 // 8",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "8"
      ]
    },
    "2026": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2027": {
      "op": "cover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%1#0"
      ]
    },
    "2029": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "2030": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%extract_uint16%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "18"
      ]
    },
    "2032": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2033": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%1#0"
      ]
    },
    "2035": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2037": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2039": {
      "op": "substring3",
      "defined_out": [
        "tuple_item%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tuple_item%1#0"
      ]
    },
    "2040": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tuple_item%1#0",
        "0"
      ]
    },
    "2041": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%1#0"
      ]
    },
    "2042": {
      "op": "dup",
      "defined_out": [
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0"
      ]
    },
    "2043": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2044": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0",
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "2045": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "arr_len#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "storage_value%2#0"
      ]
    },
    "2046": {
      "op": "dup",
      "defined_out": [
        "arr_len#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ]
    },
    "2047": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)",
        "18"
      ]
    },
    "2049": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "arr_len#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2050": {
      "op": "cover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%2#0"
      ]
    },
    "2052": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ]
    },
    "2053": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "arr_len#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%2#0",
        "aggregate%len%0#0"
      ]
    },
    "2054": {
      "op": "cover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "storage_value%2#0"
      ]
    },
    "2056": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%len%0#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2058": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "2060": {
      "op": "substring3",
      "defined_out": [
        "arr_len#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "tuple_item%2#0"
      ]
    },
    "2061": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "tuple_item%2#0",
        "0"
      ]
    },
    "2062": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2_len#0",
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_len#0",
        "arr2_len#0"
      ]
    },
    "2063": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_len#0"
      ]
    },
    "2065": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr2_len#0",
        "arr_len#0",
        "times#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_len#0",
        "times#0 (copy)"
      ]
    },
    "2067": {
      "op": "+",
      "defined_out": [
        "arr2_len#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr2_len#0",
        "tmp%3#0"
      ]
    },
    "2068": {
      "op": "cover 1",
      "defined_out": [
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2070": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@9"
    },
    "2073": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@9",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "arr_size#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_size#0"
      ]
    },
    "2075": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr_size#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2077": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10"
    },
    "2080": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@10",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "intc_3 // 8",
      "defined_out": [
        "8"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "8"
      ]
    },
    "2081": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "8"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "8",
        "2"
      ]
    },
    "2082": {
      "op": "+",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%0#1"
      ]
    },
    "2083": {
      "op": "intc_3 // 8",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%0#1",
        "8"
      ]
    },
    "2084": {
      "op": "+",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%1#0"
      ]
    },
    "2085": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%1#0",
        "2"
      ]
    },
    "2086": {
      "op": "+",
      "defined_out": [
        "head#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0"
      ]
    },
    "2087": {
      "op": "frame_dig 1",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "index#0"
      ]
    },
    "2089": {
      "op": "intc_3 // 8",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "index#0",
        "8"
      ]
    },
    "2090": {
      "op": "*",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "tmp%3#0"
      ]
    },
    "2091": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "tmp%3#0",
        "2"
      ]
    },
    "2092": {
      "op": "+",
      "defined_out": [
        "dyn_arr_index#0",
        "head#0",
        "index#0",
        "tmp%0#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "dyn_arr_index#0"
      ]
    },
    "2093": {
      "op": "+",
      "defined_out": [
        "index#0",
        "tmp%0#1",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%5#0"
      ]
    },
    "2094": {
      "op": "frame_bury 2",
      "defined_out": [
        "index#0",
        "tmp%0#1",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2096": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11"
    },
    "2099": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@11",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_dyn_arr#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0"
      ]
    },
    "2101": {
      "op": "frame_dig 8",
      "defined_out": [
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "arr2_index#1"
      ]
    },
    "2103": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "arr2_index#1",
        "8"
      ]
    },
    "2104": {
      "op": "*",
      "defined_out": [
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%1#0"
      ]
    },
    "2105": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%1#0",
        "2"
      ]
    },
    "2106": {
      "op": "+",
      "defined_out": [
        "arr2_index#1",
        "dyn_arr2_index#0",
        "head_and_dyn_arr#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "dyn_arr2_index#0"
      ]
    },
    "2107": {
      "op": "+",
      "defined_out": [
        "arr2_index#1",
        "tmp%0#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%3#0"
      ]
    },
    "2108": {
      "op": "frame_bury 4",
      "defined_out": [
        "arr2_index#1",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2110": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@12"
    },
    "2113": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@12",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\""
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "\"dynamic_arr_struct\""
      ]
    },
    "2114": {
      "op": "frame_dig 4",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "\"dynamic_arr_struct\"",
        "tmp%4#0"
      ]
    },
    "2116": {
      "op": "box_resize",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2117": {
      "op": "frame_dig 6",
      "defined_out": [
        "arr_len#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0"
      ]
    },
    "2119": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr_len#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2121": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13"
    },
    "2124": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@13",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "intc_3 // 8",
      "defined_out": [
        "8"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "8"
      ]
    },
    "2125": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "8"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "8",
        "2"
      ]
    },
    "2126": {
      "op": "+",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%0#1"
      ]
    },
    "2127": {
      "op": "intc_3 // 8",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%0#1",
        "8"
      ]
    },
    "2128": {
      "op": "+",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%1#0"
      ]
    },
    "2129": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%1#0",
        "2"
      ]
    },
    "2130": {
      "op": "+",
      "defined_out": [
        "head#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0"
      ]
    },
    "2131": {
      "op": "frame_dig 1",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "index#0"
      ]
    },
    "2133": {
      "op": "intc_3 // 8",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "index#0",
        "8"
      ]
    },
    "2134": {
      "op": "*",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "tmp%3#0"
      ]
    },
    "2135": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "tmp%3#0",
        "2"
      ]
    },
    "2136": {
      "op": "+",
      "defined_out": [
        "dyn_arr_index#0",
        "head#0",
        "index#0",
        "tmp%0#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "dyn_arr_index#0"
      ]
    },
    "2137": {
      "op": "+",
      "defined_out": [
        "index#0",
        "tmp%0#1",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%5#0"
      ]
    },
    "2138": {
      "op": "frame_bury 5",
      "defined_out": [
        "index#0",
        "tmp%0#1",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2140": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@14"
    },
    "2143": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@14",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "times#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "times#0 (copy)"
      ]
    },
    "2145": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "times#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "times#0 (copy)",
        "8"
      ]
    },
    "2146": {
      "op": "*",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%6#0"
      ]
    },
    "2147": {
      "op": "bzero",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%7#0"
      ]
    },
    "2148": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "tmp%7#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%7#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2149": {
      "op": "frame_dig 5",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%7#0",
        "\"dynamic_arr_struct\"",
        "tmp%5#0"
      ]
    },
    "2151": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "0",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%7#0",
        "\"dynamic_arr_struct\"",
        "tmp%5#0",
        "0"
      ]
    },
    "2152": {
      "op": "uncover 3",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "\"dynamic_arr_struct\"",
        "tmp%5#0",
        "0",
        "tmp%7#0"
      ]
    },
    "2154": {
      "op": "box_splice",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2155": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "1"
      ]
    },
    "2156": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2157": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "0"
      ]
    },
    "2158": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2160": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_header@1"
    },
    "2163": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_header@1",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "i#0"
      ]
    },
    "2165": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "times#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "i#0",
        "times#0 (copy)"
      ]
    },
    "2167": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "continue_looping%0#0"
      ]
    },
    "2168": {
      "op": "bz examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2171": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2"
    },
    "2174": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_body@2",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\""
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "\"dynamic_arr_struct\""
      ]
    },
    "2175": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ]
    },
    "2176": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%3#0"
      ]
    },
    "2177": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%3#0",
        "i#0"
      ]
    },
    "2179": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2180": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0"
      ]
    },
    "2182": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ]
    },
    "2183": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)",
        "20"
      ]
    },
    "2185": {
      "op": "intc 6 // 32762",
      "defined_out": [
        "20",
        "32762",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)",
        "20",
        "32762"
      ]
    },
    "2187": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0",
        "aggregate%extract%1#0"
      ]
    },
    "2188": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)"
      ]
    },
    "2189": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "2"
      ]
    },
    "2190": {
      "op": "intc 8 // 32760",
      "defined_out": [
        "2",
        "32760",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%extract%1#0 (copy)",
        "2",
        "32760"
      ]
    },
    "2192": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0"
      ]
    },
    "2193": {
      "op": "frame_dig 6",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "arr_len#0",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "arr_len#0"
      ]
    },
    "2195": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "arr_len#0",
        "arr_len#0 (copy)",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "encoded_value%0#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "arr_len#0 (copy)",
        "arr_len#0 (copy)"
      ]
    },
    "2196": {
      "op": "cover 5",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "encoded_value%0#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "arr_len#0 (copy)"
      ]
    },
    "2198": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "arr_len#0",
        "arr_len#0 (copy)",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "encoded_value%0#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "arr_len#0 (copy)",
        "8"
      ]
    },
    "2199": {
      "op": "*",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%write_offset%0#0",
        "arr_len#0",
        "encoded_value%0#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "encoded_value%0#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "2200": {
      "op": "uncover 4",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%write_offset%0#0",
        "encoded_value%0#0"
      ]
    },
    "2202": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%updated_array%0#0",
        "arr_len#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "2203": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "storage_value%3#0",
        "aggregate%updated_array%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "2205": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "storage_value%3#0",
        "aggregate%updated_array%0#0",
        "aggregate%extract%1#0",
        "2"
      ]
    },
    "2206": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "storage_value%3#0",
        "aggregate%extract%1#0",
        "2",
        "aggregate%updated_array%0#0"
      ]
    },
    "2208": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_data%0#0",
        "arr_len#0",
        "i#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "storage_value%3#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "2209": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%updated_data%0#0",
        "storage_value%3#0"
      ]
    },
    "2211": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%updated_data%0#0",
        "storage_value%3#0",
        "20"
      ]
    },
    "2213": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "storage_value%3#0",
        "20",
        "aggregate%updated_data%0#0"
      ]
    },
    "2215": {
      "op": "replace3",
      "defined_out": [
        "arr_len#0",
        "i#0",
        "updated_tuple%0#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "updated_tuple%0#0"
      ]
    },
    "2216": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "updated_tuple%0#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2217": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "\"dynamic_arr_struct\"",
        "updated_tuple%0#0"
      ]
    },
    "2219": {
      "op": "box_put",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0"
      ]
    },
    "2220": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr_len#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "1"
      ]
    },
    "2221": {
      "op": "+",
      "defined_out": [
        "arr_len#0",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%8#0"
      ]
    },
    "2222": {
      "op": "frame_bury 6",
      "defined_out": [
        "arr_len#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2224": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_footer@3"
    },
    "2227": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_footer@3",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "i#0"
      ]
    },
    "2229": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "i#0",
        "1"
      ]
    },
    "2230": {
      "op": "+",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "i#0"
      ]
    },
    "2231": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2233": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_for_header@1"
    },
    "2236": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_for@4",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0"
      ]
    },
    "2238": {
      "op": "dup",
      "defined_out": [
        "arr_len#0",
        "arr_len#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "arr_len#0 (copy)"
      ]
    },
    "2239": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2240": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)",
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)"
      ]
    },
    "2241": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "2242": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%bitlen%0#0",
        "16"
      ]
    },
    "2244": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%no_overflow%0#0"
      ]
    },
    "2245": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2246": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "6"
      ]
    },
    "2248": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "6",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "6",
        "2"
      ]
    },
    "2249": {
      "op": "extract3",
      "defined_out": [
        "arr_len#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "tmp%9#0"
      ]
    },
    "2250": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "arr_len#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "tmp%9#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2251": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%8#0",
        "aggregate%box_get%9#0",
        "arr_len#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "tmp%9#0",
        "aggregate%box_get%8#0",
        "aggregate%box_get%9#0"
      ]
    },
    "2252": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "arr_len#0",
        "storage_value%4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "tmp%9#0",
        "storage_value%4#0"
      ]
    },
    "2253": {
      "op": "dup",
      "defined_out": [
        "arr_len#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "tmp%9#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "2254": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "arr_len#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "tmp%9#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "20"
      ]
    },
    "2256": {
      "op": "intc 6 // 32762",
      "defined_out": [
        "20",
        "32762",
        "arr_len#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "tmp%9#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "20",
        "32762"
      ]
    },
    "2258": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "arr_len#0",
        "storage_value%4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "tmp%9#0",
        "storage_value%4#0",
        "aggregate%extract%3#0"
      ]
    },
    "2259": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%extract%3#0",
        "arr_len#0",
        "storage_value%4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "tmp%9#0",
        "storage_value%4#0",
        "aggregate%extract%3#0",
        "0"
      ]
    },
    "2260": {
      "op": "uncover 3",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "storage_value%4#0",
        "aggregate%extract%3#0",
        "0",
        "tmp%9#0"
      ]
    },
    "2262": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_data%2#0",
        "arr_len#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "storage_value%4#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "2263": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%updated_data%2#0",
        "storage_value%4#0"
      ]
    },
    "2265": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "aggregate%updated_data%2#0",
        "storage_value%4#0",
        "20"
      ]
    },
    "2267": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "storage_value%4#0",
        "20",
        "aggregate%updated_data%2#0"
      ]
    },
    "2269": {
      "op": "replace3",
      "defined_out": [
        "arr_len#0",
        "updated_tuple%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "updated_tuple%1#0"
      ]
    },
    "2270": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "updated_tuple%1#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2271": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0",
        "\"dynamic_arr_struct\"",
        "updated_tuple%1#0"
      ]
    },
    "2273": {
      "op": "box_put",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_len#0"
      ]
    },
    "2274": {
      "op": "frame_bury 7",
      "defined_out": [
        "arr_len#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2276": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@5"
    },
    "2279": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@5",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "arr_size#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr_size#0"
      ]
    },
    "2281": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr_size#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2283": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6"
    },
    "2286": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_block@6",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "intc_3 // 8",
      "defined_out": [
        "8"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "8"
      ]
    },
    "2287": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "8"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "8",
        "2"
      ]
    },
    "2288": {
      "op": "+",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%0#1"
      ]
    },
    "2289": {
      "op": "intc_3 // 8",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%0#1",
        "8"
      ]
    },
    "2290": {
      "op": "+",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%1#0"
      ]
    },
    "2291": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%1#0",
        "2"
      ]
    },
    "2292": {
      "op": "+",
      "defined_out": [
        "head#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0"
      ]
    },
    "2293": {
      "op": "frame_dig 1",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "index#0"
      ]
    },
    "2295": {
      "op": "intc_3 // 8",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "index#0",
        "8"
      ]
    },
    "2296": {
      "op": "*",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "tmp%3#0"
      ]
    },
    "2297": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "tmp%3#0",
        "2"
      ]
    },
    "2298": {
      "op": "+",
      "defined_out": [
        "dyn_arr_index#0",
        "head#0",
        "index#0",
        "tmp%0#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head#0",
        "dyn_arr_index#0"
      ]
    },
    "2299": {
      "op": "+",
      "defined_out": [
        "index#0",
        "tmp%0#1",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%5#0"
      ]
    },
    "2300": {
      "op": "frame_bury 2",
      "defined_out": [
        "index#0",
        "tmp%0#1",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2302": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7"
    },
    "2305": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@7",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_dyn_arr#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0"
      ]
    },
    "2307": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "head_and_dyn_arr#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "0"
      ]
    },
    "2308": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "head_and_dyn_arr#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "0",
        "8"
      ]
    },
    "2309": {
      "op": "*",
      "defined_out": [
        "head_and_dyn_arr#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%1#0"
      ]
    },
    "2310": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_and_dyn_arr#0",
        "tmp%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%1#0",
        "2"
      ]
    },
    "2311": {
      "op": "+",
      "defined_out": [
        "dyn_arr2_index#0",
        "head_and_dyn_arr#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "dyn_arr2_index#0"
      ]
    },
    "2312": {
      "op": "+",
      "defined_out": [
        "tmp%0#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%3#0"
      ]
    },
    "2313": {
      "op": "frame_bury 3",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2315": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8"
    },
    "2318": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@8",
      "stack_in": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%10#0"
      ]
    },
    "2320": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%10#0",
        "2"
      ]
    },
    "2321": {
      "op": "-",
      "defined_out": [
        "arr2_offset#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "arr2_offset#0"
      ]
    },
    "2322": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "2323": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%2#0 (copy)",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%2#0 (copy)"
      ]
    },
    "2324": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%1#0",
        "aggregate%val_as_bytes%2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%val_as_bytes%2#0",
        "aggregate%bitlen%1#0"
      ]
    },
    "2325": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%bitlen%1#0",
        "aggregate%val_as_bytes%2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%val_as_bytes%2#0",
        "aggregate%bitlen%1#0",
        "16"
      ]
    },
    "2327": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%1#0",
        "aggregate%val_as_bytes%2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%val_as_bytes%2#0",
        "aggregate%no_overflow%1#0"
      ]
    },
    "2328": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "2329": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%val_as_bytes%2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%val_as_bytes%2#0",
        "6"
      ]
    },
    "2331": {
      "op": "intc_2 // 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%val_as_bytes%2#0",
        "6",
        "2"
      ]
    },
    "2332": {
      "op": "extract3",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%12#0"
      ]
    },
    "2333": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%12#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2334": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%10#0",
        "aggregate%box_get%11#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%12#0",
        "aggregate%box_get%10#0",
        "aggregate%box_get%11#0"
      ]
    },
    "2335": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%5#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%12#0",
        "storage_value%5#0"
      ]
    },
    "2336": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "storage_value%5#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%12#0",
        "storage_value%5#0",
        "18"
      ]
    },
    "2338": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%5#0",
        "18",
        "tmp%12#0"
      ]
    },
    "2340": {
      "op": "replace3",
      "defined_out": [
        "tmp%10#0",
        "updated_tuple%2#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "updated_tuple%2#0"
      ]
    },
    "2341": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "updated_tuple%2#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2342": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "\"dynamic_arr_struct\"",
        "updated_tuple%2#0"
      ]
    },
    "2344": {
      "op": "box_put",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2345": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "\"dynamic_arr_struct\""
      ]
    },
    "2346": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%12#0",
        "aggregate%box_get%13#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%box_get%12#0",
        "aggregate%box_get%13#0"
      ]
    },
    "2347": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%6#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%6#0"
      ]
    },
    "2348": {
      "op": "dup",
      "defined_out": [
        "storage_value%6#0",
        "storage_value%6#0 (copy)",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%6#0",
        "storage_value%6#0 (copy)"
      ]
    },
    "2349": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "storage_value%6#0",
        "storage_value%6#0 (copy)",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%6#0",
        "storage_value%6#0 (copy)",
        "8"
      ]
    },
    "2350": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "storage_value%6#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%6#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2351": {
      "op": "cover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%3#0",
        "storage_value%6#0"
      ]
    },
    "2353": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%3#0",
        "storage_value%6#0",
        "storage_value%6#0 (copy)"
      ]
    },
    "2354": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%3#0",
        "storage_value%6#0",
        "storage_value%6#0 (copy)",
        "18"
      ]
    },
    "2356": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "storage_value%6#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%3#0",
        "storage_value%6#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "2357": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "storage_value%6#0"
      ]
    },
    "2359": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%4#0",
        "storage_value%6#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2361": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%6#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "2363": {
      "op": "substring3",
      "defined_out": [
        "tmp%10#0",
        "tuple_item%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tuple_item%3#0"
      ]
    },
    "2364": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%10#0",
        "tuple_item%3#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tuple_item%3#0",
        "0"
      ]
    },
    "2365": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%13#0"
      ]
    },
    "2366": {
      "op": "frame_dig 6",
      "defined_out": [
        "arr_len#0",
        "tmp%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%13#0",
        "arr_len#0"
      ]
    },
    "2368": {
      "op": "==",
      "defined_out": [
        "arr_len#0",
        "tmp%10#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%14#0"
      ]
    },
    "2369": {
      "error": "expected arr length to be correct",
      "op": "assert // expected arr length to be correct",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2370": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "\"dynamic_arr_struct\""
      ]
    },
    "2371": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%14#0",
        "aggregate%box_get%15#0",
        "arr_len#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%box_get%14#0",
        "aggregate%box_get%15#0"
      ]
    },
    "2372": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "arr_len#0",
        "storage_value%7#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%7#0"
      ]
    },
    "2373": {
      "op": "dup",
      "defined_out": [
        "arr_len#0",
        "storage_value%7#0",
        "storage_value%7#0 (copy)",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%7#0",
        "storage_value%7#0 (copy)"
      ]
    },
    "2374": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%7#0",
        "storage_value%7#0 (copy)",
        "18"
      ]
    },
    "2376": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "arr_len#0",
        "storage_value%7#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%7#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "2377": {
      "op": "cover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%5#0",
        "storage_value%7#0"
      ]
    },
    "2379": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%5#0",
        "storage_value%7#0",
        "storage_value%7#0 (copy)"
      ]
    },
    "2380": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0",
        "arr_len#0",
        "storage_value%7#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%5#0",
        "storage_value%7#0",
        "aggregate%len%1#0"
      ]
    },
    "2381": {
      "op": "cover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0",
        "storage_value%7#0"
      ]
    },
    "2383": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%len%1#0",
        "storage_value%7#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "2385": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%7#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0"
      ]
    },
    "2387": {
      "op": "substring3",
      "defined_out": [
        "arr_len#0",
        "tmp%10#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tuple_item%4#0"
      ]
    },
    "2388": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tuple_item%4#0",
        "0"
      ]
    },
    "2389": {
      "op": "extract_uint16",
      "defined_out": [
        "arr_len#0",
        "tmp%10#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%15#0"
      ]
    },
    "2390": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%15#0",
        "0"
      ]
    },
    "2391": {
      "op": "==",
      "defined_out": [
        "arr_len#0",
        "tmp%10#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%16#0"
      ]
    },
    "2392": {
      "error": "expected arr2 length to be correct",
      "op": "assert // expected arr2 length to be correct",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1"
      ]
    },
    "2393": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "\"dynamic_arr_struct\""
      ]
    },
    "2394": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%16#0",
        "aggregate%box_get%17#0",
        "arr_len#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%box_get%16#0",
        "aggregate%box_get%17#0"
      ]
    },
    "2395": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "arr_len#0",
        "storage_value%8#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%8#0"
      ]
    },
    "2396": {
      "op": "dup",
      "defined_out": [
        "arr_len#0",
        "storage_value%8#0",
        "storage_value%8#0 (copy)",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%8#0",
        "storage_value%8#0 (copy)"
      ]
    },
    "2397": {
      "op": "intc_3 // 8",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%8#0",
        "storage_value%8#0 (copy)",
        "8"
      ]
    },
    "2398": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "arr_len#0",
        "storage_value%8#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%8#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "2399": {
      "op": "cover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%6#0",
        "storage_value%8#0"
      ]
    },
    "2401": {
      "op": "dup",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%6#0",
        "storage_value%8#0",
        "storage_value%8#0 (copy)"
      ]
    },
    "2402": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%6#0",
        "storage_value%8#0",
        "storage_value%8#0 (copy)",
        "18"
      ]
    },
    "2404": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0",
        "arr_len#0",
        "storage_value%8#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%6#0",
        "storage_value%8#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "2405": {
      "op": "uncover 1",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0",
        "storage_value%8#0"
      ]
    },
    "2407": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "aggregate%extract_uint16%7#0",
        "storage_value%8#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "2409": {
      "op": "uncover 2",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "storage_value%8#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "2411": {
      "op": "substring3",
      "defined_out": [
        "arr_len#0",
        "tmp%10#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tuple_item%5#0"
      ]
    },
    "2412": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tuple_item%5#0",
        "0"
      ]
    },
    "2413": {
      "op": "extract_uint16",
      "defined_out": [
        "arr_len#0",
        "tmp%10#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "i#0",
        "index#0",
        "tmp%0#1",
        "tmp%10#0",
        "tmp%4#0",
        "tmp%5#0",
        "arr_len#0",
        "arr_size#0",
        "arr2_index#1",
        "tmp%17#0"
      ]
    },
    "2414": {
      "op": "frame_bury 0"
    },
    "2416": {
      "retsub": true,
      "op": "retsub"
    },
    "2417": {
      "subroutine": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct",
      "params": {
        "times#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2420": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "arr2_index#1"
      ]
    },
    "2421": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "arr2_index#1",
        "index#0"
      ]
    },
    "2422": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0"
      ]
    },
    "2423": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "2424": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0"
      ]
    },
    "2425": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "2426": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0"
    },
    "2429": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@0",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\""
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2430": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "2431": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "storage_value%0#0"
      ]
    },
    "2432": {
      "op": "dup",
      "defined_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "2433": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "8"
      ]
    },
    "2434": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "storage_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2435": {
      "op": "cover 1",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0"
      ]
    },
    "2437": {
      "op": "dup",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "2438": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "18"
      ]
    },
    "2440": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2441": {
      "op": "uncover 1",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%0#0"
      ]
    },
    "2443": {
      "op": "uncover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2445": {
      "op": "uncover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "storage_value%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2447": {
      "op": "substring3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "tuple_item%0#0"
      ]
    },
    "2448": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "tuple_item%0#0",
        "0"
      ]
    },
    "2449": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%0#0"
      ]
    },
    "2450": {
      "op": "frame_dig -1",
      "defined_out": [
        "times#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%0#0",
        "times#0 (copy)"
      ]
    },
    "2452": {
      "op": "-",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%1#0"
      ]
    },
    "2453": {
      "op": "dup",
      "defined_out": [
        "arr_len#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0"
      ]
    },
    "2454": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2455": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "arr_len#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "2456": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "arr_len#0",
        "storage_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "storage_value%1#0"
      ]
    },
    "2457": {
      "op": "dup",
      "defined_out": [
        "arr_len#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "2458": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "18"
      ]
    },
    "2460": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "arr_len#0",
        "storage_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2461": {
      "op": "cover 1",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%1#0"
      ]
    },
    "2463": {
      "op": "dup",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "2464": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "arr_len#0",
        "storage_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%1#0",
        "aggregate%len%0#0"
      ]
    },
    "2465": {
      "op": "cover 1",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "storage_value%1#0"
      ]
    },
    "2467": {
      "op": "uncover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "aggregate%len%0#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2469": {
      "op": "uncover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "2471": {
      "op": "substring3",
      "defined_out": [
        "arr_len#0",
        "tmp%0#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "tuple_item%1#0"
      ]
    },
    "2472": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "tuple_item%1#0",
        "0"
      ]
    },
    "2473": {
      "op": "extract_uint16",
      "defined_out": [
        "arr_len#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr_len#0",
        "tmp%2#0"
      ]
    },
    "2474": {
      "op": "cover 1",
      "defined_out": [
        "arr_len#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2476": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@1"
    },
    "2479": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@1",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "arr_size#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_size#0"
      ]
    },
    "2481": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr_size#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2483": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2"
    },
    "2486": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@2",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ],
      "op": "intc_3 // 8",
      "defined_out": [
        "8"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "8"
      ]
    },
    "2487": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "8"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "8",
        "2"
      ]
    },
    "2488": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%0#0"
      ]
    },
    "2489": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%0#0",
        "8"
      ]
    },
    "2490": {
      "op": "+",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%1#0"
      ]
    },
    "2491": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%1#0",
        "2"
      ]
    },
    "2492": {
      "op": "+",
      "defined_out": [
        "head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0"
      ]
    },
    "2493": {
      "op": "frame_dig 1",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "index#0"
      ]
    },
    "2495": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "index#0",
        "8"
      ]
    },
    "2496": {
      "op": "*",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "tmp%3#0"
      ]
    },
    "2497": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "tmp%3#0",
        "2"
      ]
    },
    "2498": {
      "op": "+",
      "defined_out": [
        "dyn_arr_index#0",
        "head#0",
        "index#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "dyn_arr_index#0"
      ]
    },
    "2499": {
      "op": "+",
      "defined_out": [
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%5#1"
      ]
    },
    "2500": {
      "op": "frame_bury 2",
      "defined_out": [
        "index#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2502": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@3"
    },
    "2505": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@3",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_dyn_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0"
      ]
    },
    "2507": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "head_and_dyn_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0",
        "0"
      ]
    },
    "2508": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "head_and_dyn_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0",
        "0",
        "8"
      ]
    },
    "2509": {
      "op": "*",
      "defined_out": [
        "head_and_dyn_arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0",
        "tmp%1#0"
      ]
    },
    "2510": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_and_dyn_arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0",
        "tmp%1#0",
        "2"
      ]
    },
    "2511": {
      "op": "+",
      "defined_out": [
        "dyn_arr2_index#0",
        "head_and_dyn_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0",
        "dyn_arr2_index#0"
      ]
    },
    "2512": {
      "op": "+",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%3#0"
      ]
    },
    "2513": {
      "op": "frame_bury 3",
      "defined_out": [
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2515": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4"
    },
    "2518": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@4",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%3#0"
      ]
    },
    "2520": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%3#0",
        "2"
      ]
    },
    "2521": {
      "op": "-",
      "defined_out": [
        "arr2_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr2_offset#0"
      ]
    },
    "2522": {
      "op": "frame_dig 6",
      "defined_out": [
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr2_offset#0",
        "arr_len#0"
      ]
    },
    "2524": {
      "op": "dup",
      "defined_out": [
        "arr2_offset#0",
        "arr_len#0",
        "arr_len#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr2_offset#0",
        "arr_len#0 (copy)",
        "arr_len#0 (copy)"
      ]
    },
    "2525": {
      "op": "cover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "arr_len#0 (copy)"
      ]
    },
    "2527": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2528": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "2529": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "2530": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0",
        "16"
      ]
    },
    "2532": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%no_overflow%0#0"
      ]
    },
    "2533": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2534": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%val_as_bytes%0#0",
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "aggregate%val_as_bytes%0#0",
        "6"
      ]
    },
    "2536": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "aggregate%val_as_bytes%0#0",
        "6",
        "2"
      ]
    },
    "2537": {
      "op": "extract3",
      "defined_out": [
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "tmp%5#0"
      ]
    },
    "2538": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "tmp%5#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2539": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0",
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "tmp%5#0",
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "2540": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "arr2_offset#0",
        "arr_len#0",
        "storage_value%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "tmp%5#0",
        "storage_value%2#0"
      ]
    },
    "2541": {
      "op": "dup",
      "defined_out": [
        "arr2_offset#0",
        "arr_len#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "tmp%5#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ]
    },
    "2542": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "20",
        "arr2_offset#0",
        "arr_len#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "tmp%5#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)",
        "20"
      ]
    },
    "2544": {
      "op": "intc 6 // 32762",
      "defined_out": [
        "20",
        "32762",
        "arr2_offset#0",
        "arr_len#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "tmp%5#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)",
        "20",
        "32762"
      ]
    },
    "2546": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "arr2_offset#0",
        "arr_len#0",
        "storage_value%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "tmp%5#0",
        "storage_value%2#0",
        "aggregate%extract%0#0"
      ]
    },
    "2547": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%extract%0#0",
        "arr2_offset#0",
        "arr_len#0",
        "storage_value%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "tmp%5#0",
        "storage_value%2#0",
        "aggregate%extract%0#0",
        "0"
      ]
    },
    "2548": {
      "op": "uncover 3",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "storage_value%2#0",
        "aggregate%extract%0#0",
        "0",
        "tmp%5#0"
      ]
    },
    "2550": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_data%0#0",
        "arr2_offset#0",
        "arr_len#0",
        "storage_value%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "storage_value%2#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "2551": {
      "op": "uncover 1",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "aggregate%updated_data%0#0",
        "storage_value%2#0"
      ]
    },
    "2553": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "aggregate%updated_data%0#0",
        "storage_value%2#0",
        "20"
      ]
    },
    "2555": {
      "op": "uncover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "storage_value%2#0",
        "20",
        "aggregate%updated_data%0#0"
      ]
    },
    "2557": {
      "op": "replace3",
      "defined_out": [
        "arr2_offset#0",
        "arr_len#0",
        "tmp%3#0",
        "updated_tuple%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "updated_tuple%0#0"
      ]
    },
    "2558": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "updated_tuple%0#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2559": {
      "op": "uncover 1",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0",
        "\"dynamic_arr_struct\"",
        "updated_tuple%0#0"
      ]
    },
    "2561": {
      "op": "box_put",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "arr2_offset#0"
      ]
    },
    "2562": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2563": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)"
      ]
    },
    "2564": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%1#0",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%bitlen%1#0"
      ]
    },
    "2565": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%bitlen%1#0",
        "16"
      ]
    },
    "2567": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%1#0",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%no_overflow%1#0"
      ]
    },
    "2568": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2569": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "6"
      ]
    },
    "2571": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "aggregate%val_as_bytes%1#0",
        "6",
        "2"
      ]
    },
    "2572": {
      "op": "extract3",
      "defined_out": [
        "arr_len#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "tmp%6#0"
      ]
    },
    "2573": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "tmp%6#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2574": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0",
        "arr_len#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "tmp%6#0",
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ]
    },
    "2575": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "arr_len#0",
        "storage_value%3#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "tmp%6#0",
        "storage_value%3#0"
      ]
    },
    "2576": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "arr_len#0",
        "storage_value%3#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "tmp%6#0",
        "storage_value%3#0",
        "18"
      ]
    },
    "2578": {
      "op": "uncover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "storage_value%3#0",
        "18",
        "tmp%6#0"
      ]
    },
    "2580": {
      "op": "replace3",
      "defined_out": [
        "arr_len#0",
        "tmp%3#0",
        "updated_tuple%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "updated_tuple%1#0"
      ]
    },
    "2581": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "updated_tuple%1#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2582": {
      "op": "uncover 1",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0",
        "\"dynamic_arr_struct\"",
        "updated_tuple%1#0"
      ]
    },
    "2584": {
      "op": "box_put",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0"
      ]
    },
    "2585": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2587": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5"
    },
    "2590": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@5",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ],
      "op": "intc_3 // 8",
      "defined_out": [
        "8"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "8"
      ]
    },
    "2591": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "8"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "8",
        "2"
      ]
    },
    "2592": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%0#0"
      ]
    },
    "2593": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%0#0",
        "8"
      ]
    },
    "2594": {
      "op": "+",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%1#0"
      ]
    },
    "2595": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%1#0",
        "2"
      ]
    },
    "2596": {
      "op": "+",
      "defined_out": [
        "head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0"
      ]
    },
    "2597": {
      "op": "frame_dig 1",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "index#0"
      ]
    },
    "2599": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "index#0",
        "8"
      ]
    },
    "2600": {
      "op": "*",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "tmp%3#0"
      ]
    },
    "2601": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "tmp%3#0",
        "2"
      ]
    },
    "2602": {
      "op": "+",
      "defined_out": [
        "dyn_arr_index#0",
        "head#0",
        "index#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "dyn_arr_index#0"
      ]
    },
    "2603": {
      "op": "+",
      "defined_out": [
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%5#1"
      ]
    },
    "2604": {
      "op": "frame_bury 4",
      "defined_out": [
        "index#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2606": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@6"
    },
    "2609": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@6",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "index#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "index#0"
      ]
    },
    "2611": {
      "op": "frame_dig -1",
      "defined_out": [
        "index#0",
        "times#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "index#0",
        "times#0 (copy)"
      ]
    },
    "2613": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "index#0",
        "times#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "index#0",
        "times#0 (copy)",
        "8"
      ]
    },
    "2614": {
      "op": "*",
      "defined_out": [
        "index#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "index#0",
        "tmp%8#0"
      ]
    },
    "2615": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "index#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "index#0",
        "tmp%8#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2616": {
      "op": "uncover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%8#0",
        "\"dynamic_arr_struct\"",
        "index#0"
      ]
    },
    "2618": {
      "op": "uncover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "\"dynamic_arr_struct\"",
        "index#0",
        "tmp%8#0"
      ]
    },
    "2620": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "0x",
        "index#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "\"dynamic_arr_struct\"",
        "index#0",
        "tmp%8#0",
        "0x"
      ]
    },
    "2621": {
      "op": "box_splice",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2622": {
      "op": "frame_dig 6",
      "defined_out": [
        "arr_len#0",
        "index#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_len#0"
      ]
    },
    "2624": {
      "op": "frame_bury 8",
      "defined_out": [
        "arr_len#0",
        "index#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2626": {
      "op": "frame_dig 7",
      "defined_out": [
        "arr2_len#0",
        "arr_len#0",
        "index#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr2_len#0"
      ]
    },
    "2628": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr2_len#0",
        "arr_len#0",
        "index#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2630": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@7"
    },
    "2633": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@7",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "arr_size#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "arr_size#0"
      ]
    },
    "2635": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr_size#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2637": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8"
    },
    "2640": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_block@8",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ],
      "op": "intc_3 // 8",
      "defined_out": [
        "8"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "8"
      ]
    },
    "2641": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "8"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "8",
        "2"
      ]
    },
    "2642": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%0#0"
      ]
    },
    "2643": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%0#0",
        "8"
      ]
    },
    "2644": {
      "op": "+",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%1#0"
      ]
    },
    "2645": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%1#0",
        "2"
      ]
    },
    "2646": {
      "op": "+",
      "defined_out": [
        "head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0"
      ]
    },
    "2647": {
      "op": "frame_dig 1",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "index#0"
      ]
    },
    "2649": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "index#0",
        "8"
      ]
    },
    "2650": {
      "op": "*",
      "defined_out": [
        "head#0",
        "index#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "tmp%3#0"
      ]
    },
    "2651": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "tmp%3#0",
        "2"
      ]
    },
    "2652": {
      "op": "+",
      "defined_out": [
        "dyn_arr_index#0",
        "head#0",
        "index#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head#0",
        "dyn_arr_index#0"
      ]
    },
    "2653": {
      "op": "+",
      "defined_out": [
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%5#1"
      ]
    },
    "2654": {
      "op": "frame_bury 2",
      "defined_out": [
        "index#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2656": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9"
    },
    "2659": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr_struct_byte_index@9",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_dyn_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0"
      ]
    },
    "2661": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0",
        "arr2_index#1"
      ]
    },
    "2663": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0",
        "arr2_index#1",
        "8"
      ]
    },
    "2664": {
      "op": "*",
      "defined_out": [
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0",
        "tmp%1#0"
      ]
    },
    "2665": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr2_index#1",
        "head_and_dyn_arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0",
        "tmp%1#0",
        "2"
      ]
    },
    "2666": {
      "op": "+",
      "defined_out": [
        "arr2_index#1",
        "dyn_arr2_index#0",
        "head_and_dyn_arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "head_and_dyn_arr#0",
        "dyn_arr2_index#0"
      ]
    },
    "2667": {
      "op": "+",
      "defined_out": [
        "arr2_index#1",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%3#0"
      ]
    },
    "2668": {
      "op": "frame_bury 5",
      "defined_out": [
        "arr2_index#1",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2670": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10"
    },
    "2673": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct_after_inlined_examples.box_storage.contract.get_dynamic_arr2_struct_byte_index@10",
      "stack_in": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "size#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "size#0"
      ]
    },
    "2675": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\"",
        "size#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "size#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2676": {
      "op": "uncover 1",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "\"dynamic_arr_struct\"",
        "size#0"
      ]
    },
    "2678": {
      "op": "box_resize",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0"
      ]
    },
    "2679": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "2680": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%8#0",
        "aggregate%box_get%9#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "aggregate%box_get%8#0",
        "aggregate%box_get%9#0"
      ]
    },
    "2681": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "storage_value%4#0"
      ]
    },
    "2682": {
      "op": "dup",
      "defined_out": [
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "2683": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "8"
      ]
    },
    "2684": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "storage_value%4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2685": {
      "op": "cover 1",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "aggregate%extract_uint16%3#0",
        "storage_value%4#0"
      ]
    },
    "2687": {
      "op": "dup",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "aggregate%extract_uint16%3#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "2688": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%extract_uint16%3#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "aggregate%extract_uint16%3#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "18"
      ]
    },
    "2690": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "storage_value%4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "aggregate%extract_uint16%3#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "2691": {
      "op": "uncover 1",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "storage_value%4#0"
      ]
    },
    "2693": {
      "op": "uncover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "aggregate%extract_uint16%4#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2695": {
      "op": "uncover 2",
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "2697": {
      "op": "substring3",
      "defined_out": [
        "tmp%9#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tuple_item%2#0"
      ]
    },
    "2698": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tuple_item%2#0",
        "0"
      ]
    },
    "2699": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2_index#1",
        "index#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%7#0",
        "tmp%9#0",
        "arr_len#0",
        "arr2_len#0",
        "arr_size#0",
        "tmp%10#0"
      ]
    },
    "2700": {
      "op": "frame_bury 0"
    },
    "2702": {
      "retsub": true,
      "op": "retsub"
    },
    "2703": {
      "subroutine": "examples.box_storage.contract.BoxContract.set_nested_struct",
      "params": {
        "struct#0": "bytes"
      },
      "block": "examples.box_storage.contract.BoxContract.set_nested_struct",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2706": {
      "op": "b examples.box_storage.contract.BoxContract.set_nested_struct_block@0"
    },
    "2709": {
      "block": "examples.box_storage.contract.BoxContract.set_nested_struct_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "struct#0 (copy)"
      ],
      "stack_out": [
        "struct#0 (copy)"
      ]
    },
    "2711": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "struct#0 (copy)"
      ],
      "stack_out": [
        "struct#0 (copy)",
        "0"
      ]
    },
    "2712": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "struct#0 (copy)"
      ],
      "stack_out": [
        "struct#0 (copy)",
        "0",
        "8"
      ]
    },
    "2713": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0"
      ]
    },
    "2714": {
      "op": "btoi",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "values%0#0"
      ]
    },
    "2715": {
      "op": "intc_0 // 0",
      "stack_out": [
        "values%0#0",
        "0"
      ]
    },
    "2716": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2717": {
      "error": "struct.a is truthy",
      "op": "assert // struct.a is truthy",
      "stack_out": []
    },
    "2718": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "struct_bytes#0"
      ],
      "stack_out": [
        "struct_bytes#0"
      ]
    },
    "2721": {
      "op": "dup",
      "defined_out": [
        "struct_bytes#0",
        "struct_bytes#0 (copy)"
      ],
      "stack_out": [
        "struct_bytes#0",
        "struct_bytes#0 (copy)"
      ]
    },
    "2722": {
      "op": "len",
      "defined_out": [
        "struct_bytes#0",
        "struct_size#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "struct_size#0"
      ]
    },
    "2723": {
      "op": "intc 5 // 4098",
      "defined_out": [
        "4098",
        "struct_bytes#0",
        "struct_size#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "struct_size#0",
        "4098"
      ]
    },
    "2725": {
      "op": "+",
      "defined_out": [
        "struct_bytes#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "tmp%3#0"
      ]
    },
    "2726": {
      "op": "bytec_2 // \"box\"",
      "defined_out": [
        "\"box\"",
        "struct_bytes#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "tmp%3#0",
        "\"box\""
      ]
    },
    "2727": {
      "op": "uncover 1",
      "stack_out": [
        "struct_bytes#0",
        "\"box\"",
        "tmp%3#0"
      ]
    },
    "2729": {
      "op": "box_create",
      "defined_out": [
        "struct_bytes#0",
        "{box_create}"
      ],
      "stack_out": [
        "struct_bytes#0",
        "{box_create}"
      ]
    },
    "2730": {
      "op": "pop",
      "stack_out": [
        "struct_bytes#0"
      ]
    },
    "2731": {
      "op": "intc 5 // 4098",
      "stack_out": [
        "struct_bytes#0",
        "4098"
      ]
    },
    "2733": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "4098",
        "struct_bytes#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "4098",
        "2"
      ]
    },
    "2734": {
      "op": "-",
      "defined_out": [
        "struct_bytes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0"
      ]
    },
    "2735": {
      "op": "intc 5 // 4098",
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "4098"
      ]
    },
    "2737": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "struct_bytes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2738": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "struct_bytes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "2739": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0",
        "struct_bytes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "2740": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0",
        "struct_bytes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0",
        "16"
      ]
    },
    "2742": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#0",
        "aggregate%val_as_bytes%0#0",
        "struct_bytes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%no_overflow%0#0"
      ]
    },
    "2743": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2744": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%val_as_bytes%0#0",
        "struct_bytes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "aggregate%val_as_bytes%0#0",
        "6"
      ]
    },
    "2746": {
      "op": "intc_2 // 2",
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "aggregate%val_as_bytes%0#0",
        "6",
        "2"
      ]
    },
    "2747": {
      "op": "extract3",
      "defined_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2748": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "struct_bytes#0",
        "tmp%4#0",
        "tmp%5#0",
        "\"box\""
      ]
    },
    "2749": {
      "op": "uncover 2",
      "stack_out": [
        "struct_bytes#0",
        "tmp%5#0",
        "\"box\"",
        "tmp%4#0"
      ]
    },
    "2751": {
      "op": "uncover 2",
      "stack_out": [
        "struct_bytes#0",
        "\"box\"",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2753": {
      "op": "box_replace",
      "stack_out": [
        "struct_bytes#0"
      ]
    },
    "2754": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "struct_bytes#0",
        "\"box\""
      ]
    },
    "2755": {
      "op": "intc 5 // 4098",
      "stack_out": [
        "struct_bytes#0",
        "\"box\"",
        "4098"
      ]
    },
    "2757": {
      "op": "uncover 2",
      "stack_out": [
        "\"box\"",
        "4098",
        "struct_bytes#0"
      ]
    },
    "2759": {
      "op": "box_replace",
      "stack_out": []
    },
    "2760": {
      "retsub": true,
      "op": "retsub"
    },
    "2761": {
      "subroutine": "examples.box_storage.contract.BoxContract.nested_write",
      "params": {
        "index#0": "uint64",
        "value#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.nested_write",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2764": {
      "op": "b examples.box_storage.contract.BoxContract.nested_write_block@0"
    },
    "2767": {
      "block": "examples.box_storage.contract.BoxContract.nested_write_block@0",
      "stack_in": [],
      "op": "bytec_2 // \"box\"",
      "defined_out": [
        "\"box\""
      ],
      "stack_out": [
        "\"box\""
      ]
    },
    "2768": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "2769": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "2770": {
      "op": "frame_dig -1",
      "defined_out": [
        "storage_value%0#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "value#0 (copy)"
      ]
    },
    "2772": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2773": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0"
      ]
    },
    "2775": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "2776": {
      "op": "intc 4 // 4096",
      "defined_out": [
        "4096",
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "4096"
      ]
    },
    "2778": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2779": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0"
      ]
    },
    "2781": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "2782": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2783": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "storage_value%0#0"
      ]
    },
    "2785": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "2786": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%len%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2788": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2790": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2791": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%substring3%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%substring3%0#0",
        "0"
      ]
    },
    "2792": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%substring3%0#0",
        "0",
        "encoded_value%0#0"
      ]
    },
    "2794": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_data%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "2795": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%updated_data%0#0",
        "storage_value%0#0"
      ]
    },
    "2797": {
      "op": "dup",
      "stack_out": [
        "aggregate%updated_data%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "2798": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "aggregate%updated_data%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "4096"
      ]
    },
    "2800": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%updated_data%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "aggregate%updated_data%0#0",
        "storage_value%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2801": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0"
      ]
    },
    "2803": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0",
        "0"
      ]
    },
    "2804": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%0#0",
        "storage_value%0#0",
        "0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2806": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%0#0",
        "aggregate%updated_data%0#0"
      ],
      "stack_out": [
        "aggregate%updated_data%0#0",
        "aggregate%data_up_to_item%0#0"
      ]
    },
    "2807": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%data_up_to_item%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "2809": {
      "op": "concat",
      "defined_out": [
        "updated_tuple%0#0"
      ],
      "stack_out": [
        "updated_tuple%0#0"
      ]
    },
    "2810": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%0#0",
        "\"box\""
      ]
    },
    "2811": {
      "op": "box_del",
      "defined_out": [
        "updated_tuple%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "updated_tuple%0#0",
        "{box_del}"
      ]
    },
    "2812": {
      "op": "pop",
      "stack_out": [
        "updated_tuple%0#0"
      ]
    },
    "2813": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%0#0",
        "\"box\""
      ]
    },
    "2814": {
      "op": "uncover 1",
      "stack_out": [
        "\"box\"",
        "updated_tuple%0#0"
      ]
    },
    "2816": {
      "op": "box_put",
      "stack_out": []
    },
    "2817": {
      "op": "frame_dig -1",
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "2819": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "1"
      ]
    },
    "2820": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2821": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "tmp%0#0",
        "\"box\""
      ]
    },
    "2822": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "2823": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "storage_value%1#0"
      ]
    },
    "2824": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%1#0",
        "tmp%0#0"
      ]
    },
    "2826": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2827": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%1#0"
      ]
    },
    "2829": {
      "op": "dup",
      "defined_out": [
        "encoded_value%1#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "2830": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "4096"
      ]
    },
    "2832": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "encoded_value%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2833": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%1#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%1#0"
      ]
    },
    "2835": {
      "op": "dup",
      "stack_out": [
        "encoded_value%1#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "2836": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "encoded_value%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%1#0",
        "aggregate%len%1#0"
      ]
    },
    "2837": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "storage_value%1#0"
      ]
    },
    "2839": {
      "op": "dup",
      "stack_out": [
        "encoded_value%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "2840": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%1#0",
        "aggregate%len%1#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2842": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "2844": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%1#0",
        "encoded_value%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2845": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%substring3%1#0",
        "encoded_value%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "storage_value%1#0",
        "aggregate%substring3%1#0",
        "12"
      ]
    },
    "2847": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%1#0",
        "aggregate%substring3%1#0",
        "12",
        "encoded_value%1#0"
      ]
    },
    "2849": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_data%2#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "2850": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%updated_data%2#0",
        "storage_value%1#0"
      ]
    },
    "2852": {
      "op": "dup",
      "stack_out": [
        "aggregate%updated_data%2#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "2853": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "aggregate%updated_data%2#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "4096"
      ]
    },
    "2855": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%1#0",
        "aggregate%updated_data%2#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "aggregate%updated_data%2#0",
        "storage_value%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "2856": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%updated_data%2#0",
        "aggregate%item_offset%1#0",
        "storage_value%1#0"
      ]
    },
    "2858": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%updated_data%2#0",
        "aggregate%item_offset%1#0",
        "storage_value%1#0",
        "0"
      ]
    },
    "2859": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%2#0",
        "storage_value%1#0",
        "0",
        "aggregate%item_offset%1#0"
      ]
    },
    "2861": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%1#0",
        "aggregate%updated_data%2#0"
      ],
      "stack_out": [
        "aggregate%updated_data%2#0",
        "aggregate%data_up_to_item%1#0"
      ]
    },
    "2862": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%data_up_to_item%1#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "2864": {
      "op": "concat",
      "defined_out": [
        "updated_tuple%1#0"
      ],
      "stack_out": [
        "updated_tuple%1#0"
      ]
    },
    "2865": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%1#0",
        "\"box\""
      ]
    },
    "2866": {
      "op": "box_del",
      "stack_out": [
        "updated_tuple%1#0",
        "{box_del}"
      ]
    },
    "2867": {
      "op": "pop",
      "stack_out": [
        "updated_tuple%1#0"
      ]
    },
    "2868": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%1#0",
        "\"box\""
      ]
    },
    "2869": {
      "op": "uncover 1",
      "stack_out": [
        "\"box\"",
        "updated_tuple%1#0"
      ]
    },
    "2871": {
      "op": "box_put",
      "stack_out": []
    },
    "2872": {
      "op": "frame_dig -1",
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "2874": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "2"
      ]
    },
    "2875": {
      "op": "+",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2876": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "tmp%1#0",
        "\"box\""
      ]
    },
    "2877": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "2878": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "storage_value%2#0"
      ]
    },
    "2879": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%2#0",
        "tmp%1#0"
      ]
    },
    "2881": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2882": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0"
      ]
    },
    "2884": {
      "op": "dup",
      "defined_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ]
    },
    "2885": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)",
        "4096"
      ]
    },
    "2887": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2888": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%2#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%2#0"
      ]
    },
    "2890": {
      "op": "dup",
      "stack_out": [
        "encoded_value%2#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ]
    },
    "2891": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%2#0",
        "aggregate%len%2#0"
      ]
    },
    "2892": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "storage_value%2#0"
      ]
    },
    "2894": {
      "op": "dup",
      "stack_out": [
        "encoded_value%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ]
    },
    "2895": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%2#0",
        "aggregate%len%2#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2897": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "2899": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%2#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0"
      ]
    },
    "2900": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "2901": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "8"
      ]
    },
    "2902": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%2#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2903": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%2#0"
      ]
    },
    "2905": {
      "op": "dup",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "2906": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "10"
      ]
    },
    "2908": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%2#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "2909": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "2911": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%2#0 (copy)",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2913": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "2915": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2916": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "2917": {
      "op": "intc_3 // 8",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "8"
      ]
    },
    "2918": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "2919": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2921": {
      "op": "dup",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "2922": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%len%3#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%3#0",
        "aggregate%len%3#0"
      ]
    },
    "2923": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%3#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2925": {
      "op": "dup",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%3#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "2926": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%len%3#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "2928": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%3#0"
      ]
    },
    "2930": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2931": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "2932": {
      "op": "len",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%total_length%0#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%total_length%0#0"
      ]
    },
    "2933": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%total_length%0#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2935": {
      "op": "dup",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%total_length%0#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "2936": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%total_length%0#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "2"
      ]
    },
    "2937": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "2939": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "2940": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2942": {
      "op": "dup",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "2943": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "0"
      ]
    },
    "2944": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2945": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "index#0 (copy)",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%array_length%0#0",
        "index#0 (copy)"
      ]
    },
    "2947": {
      "op": ">",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%lt%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%lt%0#0"
      ]
    },
    "2948": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2949": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "index#0 (copy)"
      ]
    },
    "2951": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "index#0 (copy)",
        "2"
      ]
    },
    "2952": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "2953": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2955": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "2957": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "2958": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2960": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset%2#0",
        "aggregate%item_offset%2#0 (copy)",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset%2#0 (copy)"
      ]
    },
    "2962": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_length%0#0",
        "aggregate%item_offset%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_length%0#0"
      ]
    },
    "2963": {
      "op": "intc_3 // 8",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_length%0#0",
        "8"
      ]
    },
    "2964": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "aggregate%item_offset%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_length_in_bytes%0#0"
      ]
    },
    "2965": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_length_in_bytes%0#0",
        "2"
      ]
    },
    "2966": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%item_offset%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_head_tail_length%0#0"
      ]
    },
    "2967": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "2969": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "2971": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_head_tail_length%0#0"
      ]
    },
    "2973": {
      "op": "extract3",
      "defined_out": [
        "aggregate%item%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%item%0#0"
      ]
    },
    "2974": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%item%0#0",
        "index#0 (copy)"
      ]
    },
    "2976": {
      "op": "intc_3 // 8",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%item%0#0",
        "index#0 (copy)",
        "8"
      ]
    },
    "2977": {
      "op": "*",
      "defined_out": [
        "aggregate%item%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%write_offset%0#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%item%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "2978": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%item%0#0",
        "aggregate%write_offset%0#0",
        "2"
      ]
    },
    "2979": {
      "op": "+",
      "defined_out": [
        "aggregate%item%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%write_offset_with_length_header%0#0",
        "encoded_value%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%item%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "2980": {
      "op": "uncover 6",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%item%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "encoded_value%2#0"
      ]
    },
    "2982": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "2983": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "2985": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0",
        "aggregate%substring3%4#0 (copy)",
        "0"
      ]
    },
    "2986": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2987": {
      "op": "frame_dig -2",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0",
        "aggregate%array_length%1#0",
        "index#0 (copy)"
      ]
    },
    "2989": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0",
        "aggregate%lt%1#0"
      ]
    },
    "2990": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "2991": {
      "op": "frame_dig -2",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%4#0",
        "aggregate%updated_array%0#0",
        "index#0 (copy)"
      ]
    },
    "2993": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%updated_array%1#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%updated_array%1#0"
      ]
    },
    "2996": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%updated_array%1#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "2998": {
      "op": "intc_3 // 8",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%updated_array%1#0",
        "aggregate%substring3%3#0 (copy)",
        "8"
      ]
    },
    "2999": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%3#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%updated_array%1#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%updated_array%1#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "3000": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_array%1#0",
        "aggregate%item_offset%3#0",
        "aggregate%substring3%3#0"
      ]
    },
    "3002": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_array%1#0",
        "aggregate%item_offset%3#0",
        "aggregate%substring3%3#0",
        "0"
      ]
    },
    "3003": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_array%1#0",
        "aggregate%substring3%3#0",
        "0",
        "aggregate%item_offset%3#0"
      ]
    },
    "3005": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_array%1#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_array%1#0",
        "aggregate%data_up_to_item%2#0"
      ]
    },
    "3006": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%data_up_to_item%2#0",
        "aggregate%updated_array%1#0"
      ]
    },
    "3008": {
      "op": "concat",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0"
      ]
    },
    "3009": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "3011": {
      "op": "intc_3 // 8",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%substring3%2#0 (copy)",
        "8"
      ]
    },
    "3012": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%item_offset%4#0"
      ]
    },
    "3013": {
      "op": "dig 2",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "3015": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0 (copy)",
        "0"
      ]
    },
    "3016": {
      "op": "dig 2",
      "defined_out": [
        "0",
        "aggregate%item_offset%4#0",
        "aggregate%item_offset%4#0 (copy)",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "aggregate%updated_data%4#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0 (copy)",
        "0",
        "aggregate%item_offset%4#0 (copy)"
      ]
    },
    "3018": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%3#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%data_up_to_item%3#0"
      ]
    },
    "3019": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%data_up_to_item%3#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%4#0 (copy)",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%data_up_to_item%3#0",
        "aggregate%updated_data%4#0 (copy)"
      ]
    },
    "3021": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%updated_data%5#0"
      ]
    },
    "3022": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%item_offset%4#0"
      ]
    },
    "3024": {
      "op": "dig 3",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "3026": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0 (copy)",
        "10"
      ]
    },
    "3028": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "3029": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%4#0"
      ]
    },
    "3031": {
      "op": "dig 4",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "3033": {
      "op": "len",
      "defined_out": [
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%substring3%2#0",
        "aggregate%total_length%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%4#0",
        "aggregate%total_length%2#0"
      ]
    },
    "3034": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%2#0",
        "aggregate%item_offset%4#0"
      ]
    },
    "3036": {
      "op": "dig 5",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "3038": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%next_item_offset%0#0 (copy)",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "aggregate%total_length%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0 (copy)",
        "aggregate%next_item_offset%0#0 (copy)"
      ]
    },
    "3040": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%4#0",
        "aggregate%substring3%2#0 (copy)",
        "aggregate%next_item_offset%0#0 (copy)",
        "aggregate%total_length%2#0"
      ]
    },
    "3042": {
      "op": "substring3",
      "defined_out": [
        "aggregate%data_beyond_item%0#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%4#0",
        "aggregate%data_beyond_item%0#0"
      ]
    },
    "3043": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%4#0",
        "aggregate%data_beyond_item%0#0",
        "aggregate%updated_data%5#0"
      ]
    },
    "3045": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%4#0",
        "aggregate%updated_data%5#0",
        "aggregate%data_beyond_item%0#0"
      ]
    },
    "3047": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%6#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%4#0",
        "aggregate%updated_data%6#0"
      ]
    },
    "3048": {
      "op": "cover 4",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%4#0"
      ]
    },
    "3050": {
      "op": "-",
      "defined_out": [
        "aggregate%old_value_length%0#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%updated_data%6#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%4#0",
        "aggregate%old_value_length%0#0"
      ]
    },
    "3051": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%substring3%2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%4#0"
      ]
    },
    "3053": {
      "op": "len",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%substring3%2#0",
        "aggregate%updated_data%6#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%substring3%2#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0"
      ]
    },
    "3054": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%substring3%2#0"
      ]
    },
    "3056": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%substring3%2#0",
        "10"
      ]
    },
    "3058": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%0#0",
        "aggregate%updated_data%6#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset%0#0"
      ]
    },
    "3059": {
      "op": "+",
      "defined_out": [
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%1#0",
        "aggregate%updated_data%6#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%1#0"
      ]
    },
    "3060": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%tail_offset%1#0",
        "aggregate%old_value_length%0#0"
      ]
    },
    "3062": {
      "op": "-",
      "defined_out": [
        "aggregate%tail_offset%2#0",
        "aggregate%updated_data%6#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%tail_offset%2#0"
      ]
    },
    "3063": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%updated_data%6#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "3064": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%6#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "aggregate%tail_offset_bytes%0#0"
      ]
    },
    "3067": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%6#0"
      ]
    },
    "3069": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%6#0",
        "10"
      ]
    },
    "3071": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%6#0",
        "10",
        "aggregate%tail_offset_bytes%0#0"
      ]
    },
    "3073": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_data%7#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%7#0"
      ]
    },
    "3074": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%7#0",
        "storage_value%2#0 (copy)"
      ]
    },
    "3076": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%7#0",
        "storage_value%2#0 (copy)",
        "4096"
      ]
    },
    "3078": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%5#0",
        "aggregate%updated_data%7#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%updated_data%7#0",
        "aggregate%item_offset%5#0"
      ]
    },
    "3079": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%7#0",
        "aggregate%item_offset%5#0",
        "storage_value%2#0"
      ]
    },
    "3081": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%updated_data%7#0",
        "aggregate%item_offset%5#0",
        "storage_value%2#0",
        "0"
      ]
    },
    "3082": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%7#0",
        "storage_value%2#0",
        "0",
        "aggregate%item_offset%5#0"
      ]
    },
    "3084": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%4#0",
        "aggregate%updated_data%7#0"
      ],
      "stack_out": [
        "aggregate%updated_data%7#0",
        "aggregate%data_up_to_item%4#0"
      ]
    },
    "3085": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%data_up_to_item%4#0",
        "aggregate%updated_data%7#0"
      ]
    },
    "3087": {
      "op": "concat",
      "defined_out": [
        "updated_tuple%2#0"
      ],
      "stack_out": [
        "updated_tuple%2#0"
      ]
    },
    "3088": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%2#0",
        "\"box\""
      ]
    },
    "3089": {
      "op": "box_del",
      "stack_out": [
        "updated_tuple%2#0",
        "{box_del}"
      ]
    },
    "3090": {
      "op": "pop",
      "stack_out": [
        "updated_tuple%2#0"
      ]
    },
    "3091": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%2#0",
        "\"box\""
      ]
    },
    "3092": {
      "op": "uncover 1",
      "stack_out": [
        "\"box\"",
        "updated_tuple%2#0"
      ]
    },
    "3094": {
      "op": "box_put",
      "stack_out": []
    },
    "3095": {
      "op": "frame_dig -1",
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "3097": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "3"
      ]
    },
    "3099": {
      "op": "+",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3100": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "tmp%2#0",
        "\"box\""
      ]
    },
    "3101": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ]
    },
    "3102": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "storage_value%3#0"
      ]
    },
    "3103": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%3#0",
        "tmp%2#0"
      ]
    },
    "3105": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "3106": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%3#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0"
      ]
    },
    "3108": {
      "op": "dup",
      "defined_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ]
    },
    "3109": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)",
        "4096"
      ]
    },
    "3111": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "encoded_value%3#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "3112": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%3#0",
        "aggregate%extract_uint16%6#0",
        "storage_value%3#0"
      ]
    },
    "3114": {
      "op": "dup",
      "stack_out": [
        "encoded_value%3#0",
        "aggregate%extract_uint16%6#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ]
    },
    "3115": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "aggregate%len%4#0",
        "encoded_value%3#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "aggregate%extract_uint16%6#0",
        "storage_value%3#0",
        "aggregate%len%4#0"
      ]
    },
    "3116": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%3#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%4#0",
        "storage_value%3#0"
      ]
    },
    "3118": {
      "op": "dup",
      "stack_out": [
        "encoded_value%3#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%4#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ]
    },
    "3119": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%3#0",
        "aggregate%len%4#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "3121": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%4#0"
      ]
    },
    "3123": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#0",
        "encoded_value%3#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%substring3%5#0"
      ]
    },
    "3124": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "encoded_value%3#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3125": {
      "op": "intc_3 // 8",
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "8"
      ]
    },
    "3126": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%7#0",
        "aggregate%substring3%5#0",
        "encoded_value%3#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "3127": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%substring3%5#0"
      ]
    },
    "3129": {
      "op": "dup",
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3130": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "10"
      ]
    },
    "3132": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%7#0",
        "aggregate%extract_uint16%8#0",
        "aggregate%substring3%5#0",
        "encoded_value%3#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%8#0"
      ]
    },
    "3133": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%8#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3135": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%8#0",
        "aggregate%substring3%5#0 (copy)",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "3137": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "aggregate%extract_uint16%7#0",
        "aggregate%extract_uint16%8#0"
      ]
    },
    "3139": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#0",
        "aggregate%substring3%6#0",
        "encoded_value%3#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%6#0"
      ]
    },
    "3140": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_value%3#0",
        "storage_value%3#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%6#0",
        "0"
      ]
    },
    "3141": {
      "op": "uncover 4",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%6#0",
        "0",
        "encoded_value%3#0"
      ]
    },
    "3143": {
      "op": "replace3",
      "defined_out": [
        "aggregate%substring3%5#0",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%9#0"
      ]
    },
    "3144": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0"
      ]
    },
    "3146": {
      "op": "dup",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3147": {
      "op": "intc_3 // 8",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "8"
      ]
    },
    "3148": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%item_offset%6#0"
      ]
    },
    "3149": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3151": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0 (copy)",
        "0"
      ]
    },
    "3152": {
      "op": "dig 2",
      "defined_out": [
        "0",
        "aggregate%item_offset%6#0",
        "aggregate%item_offset%6#0 (copy)",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0 (copy)",
        "0",
        "aggregate%item_offset%6#0 (copy)"
      ]
    },
    "3154": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%5#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%item_offset%6#0",
        "aggregate%data_up_to_item%5#0"
      ]
    },
    "3155": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%data_up_to_item%5#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%9#0",
        "aggregate%updated_data%9#0 (copy)",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%item_offset%6#0",
        "aggregate%data_up_to_item%5#0",
        "aggregate%updated_data%9#0 (copy)"
      ]
    },
    "3157": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%item_offset%6#0",
        "aggregate%updated_data%10#0"
      ]
    },
    "3158": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%item_offset%6#0"
      ]
    },
    "3160": {
      "op": "dig 2",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3162": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0 (copy)",
        "10"
      ]
    },
    "3164": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%6#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%item_offset%6#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "3165": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%item_offset%6#0"
      ]
    },
    "3167": {
      "op": "dig 3",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3169": {
      "op": "len",
      "defined_out": [
        "aggregate%item_offset%6#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%substring3%5#0",
        "aggregate%total_length%3#0",
        "aggregate%updated_data%10#0",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%item_offset%6#0",
        "aggregate%total_length%3#0"
      ]
    },
    "3170": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%total_length%3#0",
        "aggregate%item_offset%6#0"
      ]
    },
    "3172": {
      "op": "dig 4",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%total_length%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3174": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%item_offset%6#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%next_item_offset%1#0 (copy)",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "aggregate%total_length%3#0",
        "aggregate%updated_data%10#0",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%total_length%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0 (copy)",
        "aggregate%next_item_offset%1#0 (copy)"
      ]
    },
    "3176": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%item_offset%6#0",
        "aggregate%substring3%5#0 (copy)",
        "aggregate%next_item_offset%1#0 (copy)",
        "aggregate%total_length%3#0"
      ]
    },
    "3178": {
      "op": "substring3",
      "defined_out": [
        "aggregate%data_beyond_item%1#0",
        "aggregate%item_offset%6#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%10#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%item_offset%6#0",
        "aggregate%data_beyond_item%1#0"
      ]
    },
    "3179": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%item_offset%6#0",
        "aggregate%data_beyond_item%1#0",
        "aggregate%updated_data%10#0"
      ]
    },
    "3181": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%item_offset%6#0",
        "aggregate%updated_data%10#0",
        "aggregate%data_beyond_item%1#0"
      ]
    },
    "3183": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%6#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%11#0",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%item_offset%6#0",
        "aggregate%updated_data%11#0"
      ]
    },
    "3184": {
      "op": "cover 4",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%item_offset%6#0"
      ]
    },
    "3186": {
      "op": "-",
      "defined_out": [
        "aggregate%old_value_length%1#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%11#0",
        "aggregate%updated_data%9#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%updated_data%9#0",
        "aggregate%substring3%5#0",
        "aggregate%old_value_length%1#0"
      ]
    },
    "3187": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%substring3%5#0",
        "aggregate%old_value_length%1#0",
        "aggregate%updated_data%9#0"
      ]
    },
    "3189": {
      "op": "len",
      "defined_out": [
        "aggregate%new_value_length%1#0",
        "aggregate%old_value_length%1#0",
        "aggregate%substring3%5#0",
        "aggregate%updated_data%11#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%substring3%5#0",
        "aggregate%old_value_length%1#0",
        "aggregate%new_value_length%1#0"
      ]
    },
    "3190": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%old_value_length%1#0",
        "aggregate%new_value_length%1#0",
        "aggregate%substring3%5#0"
      ]
    },
    "3192": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%old_value_length%1#0",
        "aggregate%new_value_length%1#0",
        "aggregate%substring3%5#0",
        "10"
      ]
    },
    "3194": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%new_value_length%1#0",
        "aggregate%old_value_length%1#0",
        "aggregate%tail_offset%3#0",
        "aggregate%updated_data%11#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%old_value_length%1#0",
        "aggregate%new_value_length%1#0",
        "aggregate%tail_offset%3#0"
      ]
    },
    "3195": {
      "op": "+",
      "defined_out": [
        "aggregate%old_value_length%1#0",
        "aggregate%tail_offset%4#0",
        "aggregate%updated_data%11#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%old_value_length%1#0",
        "aggregate%tail_offset%4#0"
      ]
    },
    "3196": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%tail_offset%4#0",
        "aggregate%old_value_length%1#0"
      ]
    },
    "3198": {
      "op": "-",
      "defined_out": [
        "aggregate%tail_offset%5#0",
        "aggregate%updated_data%11#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%tail_offset%5#0"
      ]
    },
    "3199": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%updated_data%11#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "3200": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%tail_offset_bytes%1#0",
        "aggregate%updated_data%11#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "aggregate%tail_offset_bytes%1#0"
      ]
    },
    "3203": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%tail_offset_bytes%1#0",
        "aggregate%updated_data%11#0"
      ]
    },
    "3205": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%tail_offset_bytes%1#0",
        "aggregate%updated_data%11#0",
        "10"
      ]
    },
    "3207": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%11#0",
        "10",
        "aggregate%tail_offset_bytes%1#0"
      ]
    },
    "3209": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_data%12#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%12#0"
      ]
    },
    "3210": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%12#0",
        "storage_value%3#0 (copy)"
      ]
    },
    "3212": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%12#0",
        "storage_value%3#0 (copy)",
        "4096"
      ]
    },
    "3214": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%7#0",
        "aggregate%updated_data%12#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%updated_data%12#0",
        "aggregate%item_offset%7#0"
      ]
    },
    "3215": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%12#0",
        "aggregate%item_offset%7#0",
        "storage_value%3#0"
      ]
    },
    "3217": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%updated_data%12#0",
        "aggregate%item_offset%7#0",
        "storage_value%3#0",
        "0"
      ]
    },
    "3218": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%12#0",
        "storage_value%3#0",
        "0",
        "aggregate%item_offset%7#0"
      ]
    },
    "3220": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%6#0",
        "aggregate%updated_data%12#0"
      ],
      "stack_out": [
        "aggregate%updated_data%12#0",
        "aggregate%data_up_to_item%6#0"
      ]
    },
    "3221": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%data_up_to_item%6#0",
        "aggregate%updated_data%12#0"
      ]
    },
    "3223": {
      "op": "concat",
      "defined_out": [
        "updated_tuple%3#0"
      ],
      "stack_out": [
        "updated_tuple%3#0"
      ]
    },
    "3224": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%3#0",
        "\"box\""
      ]
    },
    "3225": {
      "op": "box_del",
      "stack_out": [
        "updated_tuple%3#0",
        "{box_del}"
      ]
    },
    "3226": {
      "op": "pop",
      "stack_out": [
        "updated_tuple%3#0"
      ]
    },
    "3227": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%3#0",
        "\"box\""
      ]
    },
    "3228": {
      "op": "uncover 1",
      "stack_out": [
        "\"box\"",
        "updated_tuple%3#0"
      ]
    },
    "3230": {
      "op": "box_put",
      "stack_out": []
    },
    "3231": {
      "op": "frame_dig -1",
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "3233": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "4"
      ]
    },
    "3235": {
      "op": "+",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3236": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "tmp%3#0",
        "\"box\""
      ]
    },
    "3237": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%8#0",
        "aggregate%box_get%9#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%box_get%8#0",
        "aggregate%box_get%9#0"
      ]
    },
    "3238": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "storage_value%4#0"
      ]
    },
    "3239": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%4#0",
        "tmp%3#0"
      ]
    },
    "3241": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%as_Encoded(uint64)%4#0"
      ]
    },
    "3242": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%4#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0"
      ]
    },
    "3244": {
      "op": "dup",
      "defined_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "3245": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "4096"
      ]
    },
    "3247": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%9#0",
        "encoded_value%4#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "3248": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%4#0",
        "aggregate%extract_uint16%9#0",
        "storage_value%4#0"
      ]
    },
    "3250": {
      "op": "dup",
      "stack_out": [
        "encoded_value%4#0",
        "aggregate%extract_uint16%9#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "3251": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%9#0",
        "aggregate%len%5#0",
        "encoded_value%4#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "aggregate%extract_uint16%9#0",
        "storage_value%4#0",
        "aggregate%len%5#0"
      ]
    },
    "3252": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%4#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%len%5#0",
        "storage_value%4#0"
      ]
    },
    "3254": {
      "op": "dup",
      "stack_out": [
        "encoded_value%4#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%len%5#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "3255": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%4#0",
        "aggregate%len%5#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "3257": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "aggregate%extract_uint16%9#0",
        "aggregate%len%5#0"
      ]
    },
    "3259": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%7#0",
        "encoded_value%4#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%substring3%7#0"
      ]
    },
    "3260": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%7#0",
        "aggregate%substring3%7#0 (copy)",
        "encoded_value%4#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%7#0 (copy)"
      ]
    },
    "3261": {
      "op": "intc_3 // 8",
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%7#0 (copy)",
        "8"
      ]
    },
    "3262": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%7#0",
        "encoded_value%4#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%substring3%7#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "3263": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%7#0"
      ]
    },
    "3265": {
      "op": "dup",
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%7#0 (copy)"
      ]
    },
    "3266": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%7#0 (copy)",
        "10"
      ]
    },
    "3268": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%substring3%7#0",
        "encoded_value%4#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%7#0",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "3269": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%7#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%substring3%7#0 (copy)"
      ]
    },
    "3271": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%substring3%7#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%substring3%7#0 (copy)",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "3273": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%7#0 (copy)",
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "3275": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "encoded_value%4#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0"
      ]
    },
    "3276": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "encoded_value%4#0",
        "storage_value%4#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "10"
      ]
    },
    "3278": {
      "op": "uncover 4",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "10",
        "encoded_value%4#0"
      ]
    },
    "3280": {
      "op": "replace3",
      "defined_out": [
        "aggregate%substring3%7#0",
        "aggregate%updated_data%14#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%14#0"
      ]
    },
    "3281": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0"
      ]
    },
    "3283": {
      "op": "dup",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%7#0 (copy)"
      ]
    },
    "3284": {
      "op": "intc_3 // 8",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%7#0 (copy)",
        "8"
      ]
    },
    "3285": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%14#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%item_offset%8#0"
      ]
    },
    "3286": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0 (copy)"
      ]
    },
    "3288": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0 (copy)",
        "0"
      ]
    },
    "3289": {
      "op": "dig 2",
      "defined_out": [
        "0",
        "aggregate%item_offset%8#0",
        "aggregate%item_offset%8#0 (copy)",
        "aggregate%substring3%7#0",
        "aggregate%substring3%7#0 (copy)",
        "aggregate%updated_data%14#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0 (copy)",
        "0",
        "aggregate%item_offset%8#0 (copy)"
      ]
    },
    "3291": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%7#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%14#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%item_offset%8#0",
        "aggregate%data_up_to_item%7#0"
      ]
    },
    "3292": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%data_up_to_item%7#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%14#0",
        "aggregate%updated_data%14#0 (copy)",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%item_offset%8#0",
        "aggregate%data_up_to_item%7#0",
        "aggregate%updated_data%14#0 (copy)"
      ]
    },
    "3294": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%14#0",
        "aggregate%updated_data%15#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%item_offset%8#0",
        "aggregate%updated_data%15#0"
      ]
    },
    "3295": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%item_offset%8#0"
      ]
    },
    "3297": {
      "op": "dig 2",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0 (copy)"
      ]
    },
    "3299": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0 (copy)",
        "10"
      ]
    },
    "3301": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%8#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%14#0",
        "aggregate%updated_data%15#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%item_offset%8#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "3302": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%item_offset%8#0"
      ]
    },
    "3304": {
      "op": "dig 3",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0 (copy)"
      ]
    },
    "3306": {
      "op": "len",
      "defined_out": [
        "aggregate%item_offset%8#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%substring3%7#0",
        "aggregate%total_length%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%updated_data%15#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%item_offset%8#0",
        "aggregate%total_length%4#0"
      ]
    },
    "3307": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%total_length%4#0",
        "aggregate%item_offset%8#0"
      ]
    },
    "3309": {
      "op": "dig 4",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%total_length%4#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0 (copy)"
      ]
    },
    "3311": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%item_offset%8#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%next_item_offset%2#0 (copy)",
        "aggregate%substring3%7#0",
        "aggregate%substring3%7#0 (copy)",
        "aggregate%total_length%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%updated_data%15#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%total_length%4#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0 (copy)",
        "aggregate%next_item_offset%2#0 (copy)"
      ]
    },
    "3313": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%item_offset%8#0",
        "aggregate%substring3%7#0 (copy)",
        "aggregate%next_item_offset%2#0 (copy)",
        "aggregate%total_length%4#0"
      ]
    },
    "3315": {
      "op": "substring3",
      "defined_out": [
        "aggregate%data_beyond_item%2#0",
        "aggregate%item_offset%8#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%14#0",
        "aggregate%updated_data%15#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%15#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%item_offset%8#0",
        "aggregate%data_beyond_item%2#0"
      ]
    },
    "3316": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%item_offset%8#0",
        "aggregate%data_beyond_item%2#0",
        "aggregate%updated_data%15#0"
      ]
    },
    "3318": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%item_offset%8#0",
        "aggregate%updated_data%15#0",
        "aggregate%data_beyond_item%2#0"
      ]
    },
    "3320": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%8#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%14#0",
        "aggregate%updated_data%16#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%item_offset%8#0",
        "aggregate%updated_data%16#0"
      ]
    },
    "3321": {
      "op": "cover 4",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%item_offset%8#0"
      ]
    },
    "3323": {
      "op": "-",
      "defined_out": [
        "aggregate%old_value_length%2#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%14#0",
        "aggregate%updated_data%16#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%updated_data%14#0",
        "aggregate%substring3%7#0",
        "aggregate%old_value_length%2#0"
      ]
    },
    "3324": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%substring3%7#0",
        "aggregate%old_value_length%2#0",
        "aggregate%updated_data%14#0"
      ]
    },
    "3326": {
      "op": "len",
      "defined_out": [
        "aggregate%new_value_length%2#0",
        "aggregate%old_value_length%2#0",
        "aggregate%substring3%7#0",
        "aggregate%updated_data%16#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%substring3%7#0",
        "aggregate%old_value_length%2#0",
        "aggregate%new_value_length%2#0"
      ]
    },
    "3327": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%old_value_length%2#0",
        "aggregate%new_value_length%2#0",
        "aggregate%substring3%7#0"
      ]
    },
    "3329": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%old_value_length%2#0",
        "aggregate%new_value_length%2#0",
        "aggregate%substring3%7#0",
        "10"
      ]
    },
    "3331": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%new_value_length%2#0",
        "aggregate%old_value_length%2#0",
        "aggregate%tail_offset%6#0",
        "aggregate%updated_data%16#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%old_value_length%2#0",
        "aggregate%new_value_length%2#0",
        "aggregate%tail_offset%6#0"
      ]
    },
    "3332": {
      "op": "+",
      "defined_out": [
        "aggregate%old_value_length%2#0",
        "aggregate%tail_offset%7#0",
        "aggregate%updated_data%16#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%old_value_length%2#0",
        "aggregate%tail_offset%7#0"
      ]
    },
    "3333": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%tail_offset%7#0",
        "aggregate%old_value_length%2#0"
      ]
    },
    "3335": {
      "op": "-",
      "defined_out": [
        "aggregate%tail_offset%8#0",
        "aggregate%updated_data%16#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%tail_offset%8#0"
      ]
    },
    "3336": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%updated_data%16#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "3337": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%tail_offset_bytes%2#0",
        "aggregate%updated_data%16#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "aggregate%tail_offset_bytes%2#0"
      ]
    },
    "3340": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%tail_offset_bytes%2#0",
        "aggregate%updated_data%16#0"
      ]
    },
    "3342": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%tail_offset_bytes%2#0",
        "aggregate%updated_data%16#0",
        "10"
      ]
    },
    "3344": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%16#0",
        "10",
        "aggregate%tail_offset_bytes%2#0"
      ]
    },
    "3346": {
      "op": "replace3",
      "defined_out": [
        "aggregate%updated_data%17#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%17#0"
      ]
    },
    "3347": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%17#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "3349": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%17#0",
        "storage_value%4#0 (copy)",
        "4096"
      ]
    },
    "3351": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%9#0",
        "aggregate%updated_data%17#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "storage_value%4#0",
        "aggregate%updated_data%17#0",
        "aggregate%item_offset%9#0"
      ]
    },
    "3352": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%17#0",
        "aggregate%item_offset%9#0",
        "storage_value%4#0"
      ]
    },
    "3354": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%updated_data%17#0",
        "aggregate%item_offset%9#0",
        "storage_value%4#0",
        "0"
      ]
    },
    "3355": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%17#0",
        "storage_value%4#0",
        "0",
        "aggregate%item_offset%9#0"
      ]
    },
    "3357": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%8#0",
        "aggregate%updated_data%17#0"
      ],
      "stack_out": [
        "aggregate%updated_data%17#0",
        "aggregate%data_up_to_item%8#0"
      ]
    },
    "3358": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%data_up_to_item%8#0",
        "aggregate%updated_data%17#0"
      ]
    },
    "3360": {
      "op": "concat",
      "defined_out": [
        "updated_tuple%4#0"
      ],
      "stack_out": [
        "updated_tuple%4#0"
      ]
    },
    "3361": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%4#0",
        "\"box\""
      ]
    },
    "3362": {
      "op": "box_del",
      "stack_out": [
        "updated_tuple%4#0",
        "{box_del}"
      ]
    },
    "3363": {
      "op": "pop",
      "stack_out": [
        "updated_tuple%4#0"
      ]
    },
    "3364": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%4#0",
        "\"box\""
      ]
    },
    "3365": {
      "op": "uncover 1",
      "stack_out": [
        "\"box\"",
        "updated_tuple%4#0"
      ]
    },
    "3367": {
      "op": "box_put",
      "stack_out": []
    },
    "3368": {
      "op": "frame_dig -1",
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "3370": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "5"
      ]
    },
    "3372": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3373": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "tmp%4#0",
        "\"box\""
      ]
    },
    "3374": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%10#0",
        "aggregate%box_get%11#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%box_get%10#0",
        "aggregate%box_get%11#0"
      ]
    },
    "3375": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%5#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "storage_value%5#0"
      ]
    },
    "3376": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%5#0",
        "tmp%4#0"
      ]
    },
    "3378": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%as_Encoded(uint64)%5#0"
      ]
    },
    "3379": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0"
      ]
    },
    "3381": {
      "op": "dup",
      "defined_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ]
    },
    "3382": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)",
        "4096"
      ]
    },
    "3384": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%12#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%12#0"
      ]
    },
    "3385": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "aggregate%extract_uint16%12#0",
        "storage_value%5#0"
      ]
    },
    "3387": {
      "op": "dup",
      "stack_out": [
        "encoded_value%5#0",
        "aggregate%extract_uint16%12#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ]
    },
    "3388": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%12#0",
        "aggregate%len%6#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "aggregate%extract_uint16%12#0",
        "storage_value%5#0",
        "aggregate%len%6#0"
      ]
    },
    "3389": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "aggregate%extract_uint16%12#0",
        "aggregate%len%6#0",
        "storage_value%5#0"
      ]
    },
    "3391": {
      "op": "dup",
      "stack_out": [
        "encoded_value%5#0",
        "aggregate%extract_uint16%12#0",
        "aggregate%len%6#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ]
    },
    "3392": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "aggregate%len%6#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)",
        "aggregate%extract_uint16%12#0"
      ]
    },
    "3394": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)",
        "aggregate%extract_uint16%12#0",
        "aggregate%len%6#0"
      ]
    },
    "3396": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0"
      ]
    },
    "3397": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%9#0",
        "aggregate%substring3%9#0 (copy)",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%9#0 (copy)"
      ]
    },
    "3398": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%9#0 (copy)",
        "10"
      ]
    },
    "3400": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%extract_uint16%13#0"
      ]
    },
    "3401": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%9#0"
      ]
    },
    "3403": {
      "op": "dup",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%9#0 (copy)"
      ]
    },
    "3404": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%13#0",
        "aggregate%len%7#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%9#0",
        "aggregate%len%7#0"
      ]
    },
    "3405": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%len%7#0",
        "aggregate%substring3%9#0"
      ]
    },
    "3407": {
      "op": "dup",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%len%7#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%9#0 (copy)"
      ]
    },
    "3408": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%len%7#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%9#0 (copy)",
        "aggregate%extract_uint16%13#0"
      ]
    },
    "3410": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%9#0 (copy)",
        "aggregate%extract_uint16%13#0",
        "aggregate%len%7#0"
      ]
    },
    "3412": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0"
      ]
    },
    "3413": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)"
      ]
    },
    "3414": {
      "op": "len",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "aggregate%total_length%5#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%total_length%5#0"
      ]
    },
    "3415": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%total_length%5#0",
        "aggregate%substring3%10#0"
      ]
    },
    "3417": {
      "op": "dup",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%total_length%5#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)"
      ]
    },
    "3418": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%total_length%5#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)",
        "2"
      ]
    },
    "3419": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)",
        "2",
        "aggregate%total_length%5#0"
      ]
    },
    "3421": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3422": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%substring3%10#0"
      ]
    },
    "3424": {
      "op": "dup",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)"
      ]
    },
    "3425": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)",
        "0"
      ]
    },
    "3426": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%substring3%10#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3427": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0"
      ]
    },
    "3429": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0",
        "index#0 (copy)"
      ]
    },
    "3431": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0",
        "index#0 (copy)",
        "2"
      ]
    },
    "3432": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "3433": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3435": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "3437": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%10#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0",
        "aggregate%item_offset%10#0"
      ]
    },
    "3438": {
      "op": "cover 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0"
      ]
    },
    "3440": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0",
        "index#0 (copy)"
      ]
    },
    "3442": {
      "op": "intc_1 // 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0",
        "index#0 (copy)",
        "1"
      ]
    },
    "3443": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%10#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%10#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3444": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%substring3%10#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3446": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%10#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%substring3%10#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%2#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "3448": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%10#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%substring3%10#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3449": {
      "op": "cover 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%substring3%10#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3451": {
      "op": "dig 4",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%substring3%10#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3453": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%10#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%substring3%10#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "3454": {
      "op": "cover 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%substring3%10#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3456": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%substring3%10#0",
        "aggregate%next_index%0#0",
        "2"
      ]
    },
    "3457": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%10#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%substring3%10#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3458": {
      "op": "dig 5",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%substring3%10#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3460": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%substring3%10#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3462": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%10#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%substring3%10#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "3463": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%substring3%10#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "3465": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%has_next%0#0",
        "aggregate%substring3%10#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "3467": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%substring3%10#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3469": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%10#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%substring3%10#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3470": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%item_offset%10#0",
        "aggregate%substring3%10#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3472": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0"
      ]
    },
    "3474": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%10#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3476": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0"
      ]
    },
    "3477": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)"
      ]
    },
    "3478": {
      "op": "intc_3 // 8",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)",
        "8"
      ]
    },
    "3479": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%14#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%extract_uint16%14#0"
      ]
    },
    "3480": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%14#0",
        "aggregate%substring3%11#0"
      ]
    },
    "3482": {
      "op": "dup",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%14#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)"
      ]
    },
    "3483": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%14#0",
        "aggregate%len%8#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%14#0",
        "aggregate%substring3%11#0",
        "aggregate%len%8#0"
      ]
    },
    "3484": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%14#0",
        "aggregate%len%8#0",
        "aggregate%substring3%11#0"
      ]
    },
    "3486": {
      "op": "dup",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%14#0",
        "aggregate%len%8#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)"
      ]
    },
    "3487": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%len%8#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)",
        "aggregate%extract_uint16%14#0"
      ]
    },
    "3489": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%11#0 (copy)",
        "aggregate%extract_uint16%14#0",
        "aggregate%len%8#0"
      ]
    },
    "3491": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0"
      ]
    },
    "3492": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "3493": {
      "op": "len",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "aggregate%total_length%6#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%total_length%6#0"
      ]
    },
    "3494": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%total_length%6#0",
        "aggregate%substring3%12#0"
      ]
    },
    "3496": {
      "op": "dup",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%total_length%6#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "3497": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%total_length%6#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)",
        "2"
      ]
    },
    "3498": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)",
        "2",
        "aggregate%total_length%6#0"
      ]
    },
    "3500": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "3501": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0"
      ]
    },
    "3503": {
      "op": "dup",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "3504": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)",
        "0"
      ]
    },
    "3505": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%3#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3506": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%array_length%3#0",
        "index#0 (copy)"
      ]
    },
    "3508": {
      "op": ">",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%lt%2#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%lt%2#0"
      ]
    },
    "3509": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0"
      ]
    },
    "3510": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "index#0 (copy)"
      ]
    },
    "3512": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "index#0 (copy)",
        "2"
      ]
    },
    "3513": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "3514": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "3516": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "3518": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%11#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset%11#0"
      ]
    },
    "3519": {
      "op": "dig 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset%11#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "3521": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset%11#0",
        "aggregate%item_offset%11#0 (copy)",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset%11#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset%11#0 (copy)"
      ]
    },
    "3523": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_length%1#0",
        "aggregate%item_offset%11#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset%11#0",
        "aggregate%item_length%1#0"
      ]
    },
    "3524": {
      "op": "intc_3 // 8",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset%11#0",
        "aggregate%item_length%1#0",
        "8"
      ]
    },
    "3525": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_length_in_bytes%1#0",
        "aggregate%item_offset%11#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset%11#0",
        "aggregate%item_length_in_bytes%1#0"
      ]
    },
    "3526": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset%11#0",
        "aggregate%item_length_in_bytes%1#0",
        "2"
      ]
    },
    "3527": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_head_tail_length%1#0",
        "aggregate%item_offset%11#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset%11#0",
        "aggregate%item_head_tail_length%1#0"
      ]
    },
    "3528": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%item_offset%11#0",
        "aggregate%item_head_tail_length%1#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "3530": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%item_head_tail_length%1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%11#0"
      ]
    },
    "3532": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%11#0",
        "aggregate%item_head_tail_length%1#0"
      ]
    },
    "3534": {
      "op": "extract3",
      "defined_out": [
        "aggregate%item%1#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%item%1#0"
      ]
    },
    "3535": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%item%1#0",
        "index#0 (copy)"
      ]
    },
    "3537": {
      "op": "intc_3 // 8",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%item%1#0",
        "index#0 (copy)",
        "8"
      ]
    },
    "3538": {
      "op": "*",
      "defined_out": [
        "aggregate%item%1#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "aggregate%write_offset%1#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%item%1#0",
        "aggregate%write_offset%1#0"
      ]
    },
    "3539": {
      "op": "intc_2 // 2",
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%item%1#0",
        "aggregate%write_offset%1#0",
        "2"
      ]
    },
    "3540": {
      "op": "+",
      "defined_out": [
        "aggregate%item%1#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "aggregate%write_offset_with_length_header%1#0",
        "encoded_value%5#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%item%1#0",
        "aggregate%write_offset_with_length_header%1#0"
      ]
    },
    "3541": {
      "op": "uncover 7",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%item%1#0",
        "aggregate%write_offset_with_length_header%1#0",
        "encoded_value%5#0"
      ]
    },
    "3543": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%2#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%updated_array%2#0"
      ]
    },
    "3544": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%updated_array%2#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "3546": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%updated_array%2#0",
        "aggregate%substring3%12#0 (copy)",
        "0"
      ]
    },
    "3547": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%2#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%updated_array%2#0",
        "aggregate%array_length%4#0"
      ]
    },
    "3548": {
      "op": "frame_dig -2",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%updated_array%2#0",
        "aggregate%array_length%4#0",
        "index#0 (copy)"
      ]
    },
    "3550": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%3#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%2#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%updated_array%2#0",
        "aggregate%lt%3#0"
      ]
    },
    "3551": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%updated_array%2#0"
      ]
    },
    "3552": {
      "op": "frame_dig -2",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%12#0",
        "aggregate%updated_array%2#0",
        "index#0 (copy)"
      ]
    },
    "3554": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%3#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%updated_array%3#0"
      ]
    },
    "3557": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%updated_array%3#0",
        "aggregate%substring3%11#0 (copy)"
      ]
    },
    "3559": {
      "op": "intc_3 // 8",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%updated_array%3#0",
        "aggregate%substring3%11#0 (copy)",
        "8"
      ]
    },
    "3560": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%12#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%3#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "aggregate%updated_array%3#0",
        "aggregate%item_offset%12#0"
      ]
    },
    "3561": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_array%3#0",
        "aggregate%item_offset%12#0",
        "aggregate%substring3%11#0"
      ]
    },
    "3563": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_array%3#0",
        "aggregate%item_offset%12#0",
        "aggregate%substring3%11#0",
        "0"
      ]
    },
    "3564": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_array%3#0",
        "aggregate%substring3%11#0",
        "0",
        "aggregate%item_offset%12#0"
      ]
    },
    "3566": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%9#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%3#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_array%3#0",
        "aggregate%data_up_to_item%9#0"
      ]
    },
    "3567": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%data_up_to_item%9#0",
        "aggregate%updated_array%3#0"
      ]
    },
    "3569": {
      "op": "concat",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_data%19#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_data%19#0"
      ]
    },
    "3570": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_data%19#0",
        "aggregate%substring3%10#0 (copy)"
      ]
    },
    "3572": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_data%19#0",
        "aggregate%substring3%10#0 (copy)",
        "0"
      ]
    },
    "3573": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_data%19#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_data%19#0",
        "aggregate%array_length%5#0"
      ]
    },
    "3574": {
      "op": "frame_dig -2",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_data%19#0",
        "aggregate%array_length%5#0",
        "index#0 (copy)"
      ]
    },
    "3576": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%4#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_data%19#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_data%19#0",
        "aggregate%lt%4#0"
      ]
    },
    "3577": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_data%19#0"
      ]
    },
    "3578": {
      "op": "frame_dig -2",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%substring3%10#0",
        "aggregate%updated_data%19#0",
        "index#0 (copy)"
      ]
    },
    "3580": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "aggregate%substring3%9#0",
        "aggregate%updated_array%4#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%4#0"
      ]
    },
    "3583": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%4#0",
        "aggregate%substring3%9#0 (copy)"
      ]
    },
    "3585": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%4#0",
        "aggregate%substring3%9#0 (copy)",
        "10"
      ]
    },
    "3587": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%13#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%4#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%substring3%9#0",
        "aggregate%updated_array%4#0",
        "aggregate%item_offset%13#0"
      ]
    },
    "3588": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%updated_array%4#0",
        "aggregate%item_offset%13#0",
        "aggregate%substring3%9#0"
      ]
    },
    "3590": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%updated_array%4#0",
        "aggregate%item_offset%13#0",
        "aggregate%substring3%9#0",
        "0"
      ]
    },
    "3591": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%updated_array%4#0",
        "aggregate%substring3%9#0",
        "0",
        "aggregate%item_offset%13#0"
      ]
    },
    "3593": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%10#0",
        "aggregate%updated_array%4#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%updated_array%4#0",
        "aggregate%data_up_to_item%10#0"
      ]
    },
    "3594": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%data_up_to_item%10#0",
        "aggregate%updated_array%4#0"
      ]
    },
    "3596": {
      "op": "concat",
      "defined_out": [
        "aggregate%updated_data%20#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%updated_data%20#0"
      ]
    },
    "3597": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%updated_data%20#0",
        "storage_value%5#0 (copy)"
      ]
    },
    "3599": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "storage_value%5#0",
        "aggregate%updated_data%20#0",
        "storage_value%5#0 (copy)",
        "4096"
      ]
    },
    "3601": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%14#0",
        "aggregate%updated_data%20#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "storage_value%5#0",
        "aggregate%updated_data%20#0",
        "aggregate%item_offset%14#0"
      ]
    },
    "3602": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%20#0",
        "aggregate%item_offset%14#0",
        "storage_value%5#0"
      ]
    },
    "3604": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%updated_data%20#0",
        "aggregate%item_offset%14#0",
        "storage_value%5#0",
        "0"
      ]
    },
    "3605": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%20#0",
        "storage_value%5#0",
        "0",
        "aggregate%item_offset%14#0"
      ]
    },
    "3607": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%11#0",
        "aggregate%updated_data%20#0"
      ],
      "stack_out": [
        "aggregate%updated_data%20#0",
        "aggregate%data_up_to_item%11#0"
      ]
    },
    "3608": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%data_up_to_item%11#0",
        "aggregate%updated_data%20#0"
      ]
    },
    "3610": {
      "op": "concat",
      "defined_out": [
        "updated_tuple%5#0"
      ],
      "stack_out": [
        "updated_tuple%5#0"
      ]
    },
    "3611": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%5#0",
        "\"box\""
      ]
    },
    "3612": {
      "op": "box_del",
      "stack_out": [
        "updated_tuple%5#0",
        "{box_del}"
      ]
    },
    "3613": {
      "op": "pop",
      "stack_out": [
        "updated_tuple%5#0"
      ]
    },
    "3614": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "updated_tuple%5#0",
        "\"box\""
      ]
    },
    "3615": {
      "op": "uncover 1",
      "stack_out": [
        "\"box\"",
        "updated_tuple%5#0"
      ]
    },
    "3617": {
      "op": "box_put",
      "stack_out": []
    },
    "3618": {
      "retsub": true,
      "op": "retsub"
    },
    "3619": {
      "subroutine": "examples.box_storage.contract.BoxContract.nested_read",
      "params": {
        "i1#0": "uint64",
        "i2#0": "uint64",
        "i3#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.nested_read",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "3622": {
      "op": "b examples.box_storage.contract.BoxContract.nested_read_block@0"
    },
    "3625": {
      "block": "examples.box_storage.contract.BoxContract.nested_read_block@0",
      "stack_in": [],
      "op": "bytec_2 // \"box\"",
      "defined_out": [
        "\"box\""
      ],
      "stack_out": [
        "\"box\""
      ]
    },
    "3626": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "3627": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "3628": {
      "op": "dup",
      "defined_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "3629": {
      "op": "intc 4 // 4096",
      "defined_out": [
        "4096",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "4096"
      ]
    },
    "3631": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "3632": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0"
      ]
    },
    "3634": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "3635": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "aggregate%len%0#0"
      ]
    },
    "3636": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "storage_value%0#0"
      ]
    },
    "3638": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%len%0#0",
        "storage_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "3640": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "3642": {
      "op": "substring3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0"
      ]
    },
    "3643": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0",
        "0"
      ]
    },
    "3644": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0",
        "0",
        "8"
      ]
    },
    "3645": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tuple_item%1#0"
      ]
    },
    "3646": {
      "op": "btoi",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "3647": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "a#0",
        "\"box\""
      ]
    },
    "3648": {
      "op": "box_get",
      "defined_out": [
        "a#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "3649": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "a#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "a#0",
        "storage_value%1#0"
      ]
    },
    "3650": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "3651": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "a#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "4096"
      ]
    },
    "3653": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "a#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3654": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%1#0"
      ]
    },
    "3656": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "3657": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "a#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%1#0",
        "aggregate%len%1#0"
      ]
    },
    "3658": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "storage_value%1#0"
      ]
    },
    "3660": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "aggregate%len%1#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3662": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "storage_value%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "3664": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "a#0",
        "tuple_item%2#0"
      ]
    },
    "3665": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "a#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "a#0",
        "tuple_item%2#0",
        "12"
      ]
    },
    "3667": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "tuple_item%2#0",
        "12",
        "8"
      ]
    },
    "3668": {
      "op": "extract3",
      "defined_out": [
        "a#0",
        "tuple_item%3#0"
      ],
      "stack_out": [
        "a#0",
        "tuple_item%3#0"
      ]
    },
    "3669": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "3670": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "a#0",
        "b#0",
        "\"box\""
      ]
    },
    "3671": {
      "op": "box_get",
      "defined_out": [
        "a#0",
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "3672": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "a#0",
        "b#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "storage_value%2#0"
      ]
    },
    "3673": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ]
    },
    "3674": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "a#0",
        "b#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)",
        "4096"
      ]
    },
    "3676": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%2#0",
        "b#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3677": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%2#0"
      ]
    },
    "3679": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%2#0",
        "storage_value%2#0 (copy)"
      ]
    },
    "3680": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "b#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%2#0",
        "aggregate%len%2#0"
      ]
    },
    "3681": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "storage_value%2#0"
      ]
    },
    "3683": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%len%2#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3685": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "storage_value%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "3687": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "b#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%4#0"
      ]
    },
    "3688": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "tuple_item%4#0",
        "tuple_item%4#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%4#0",
        "tuple_item%4#0 (copy)"
      ]
    },
    "3689": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%4#0",
        "tuple_item%4#0 (copy)",
        "8"
      ]
    },
    "3690": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%3#0",
        "b#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%4#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "3691": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%3#0",
        "tuple_item%4#0"
      ]
    },
    "3693": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%3#0",
        "tuple_item%4#0",
        "tuple_item%4#0 (copy)"
      ]
    },
    "3694": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "a#0",
        "aggregate%extract_uint16%3#0",
        "b#0",
        "tuple_item%4#0",
        "tuple_item%4#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%3#0",
        "tuple_item%4#0",
        "tuple_item%4#0 (copy)",
        "10"
      ]
    },
    "3696": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "b#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%3#0",
        "tuple_item%4#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "3697": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "tuple_item%4#0"
      ]
    },
    "3699": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%4#0",
        "tuple_item%4#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "3701": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%4#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "3703": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "b#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%5#0"
      ]
    },
    "3704": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "tuple_item%5#0",
        "tuple_item%5#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%5#0",
        "tuple_item%5#0 (copy)"
      ]
    },
    "3705": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%5#0",
        "tuple_item%5#0 (copy)",
        "8"
      ]
    },
    "3706": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%5#0",
        "b#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%5#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "3707": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%5#0",
        "tuple_item%5#0"
      ]
    },
    "3709": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%5#0",
        "tuple_item%5#0",
        "tuple_item%5#0 (copy)"
      ]
    },
    "3710": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%3#0",
        "b#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%5#0",
        "tuple_item%5#0",
        "aggregate%len%3#0"
      ]
    },
    "3711": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%3#0",
        "tuple_item%5#0"
      ]
    },
    "3713": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%len%3#0",
        "tuple_item%5#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "3715": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%5#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%3#0"
      ]
    },
    "3717": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "b#0",
        "tuple_item%6#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%6#0"
      ]
    },
    "3718": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "b#0",
        "tuple_item%6#0",
        "tuple_item%6#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%6#0",
        "tuple_item%6#0 (copy)"
      ]
    },
    "3719": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%total_length%0#0",
        "b#0",
        "tuple_item%6#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%6#0",
        "aggregate%total_length%0#0"
      ]
    },
    "3720": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%total_length%0#0",
        "tuple_item%6#0"
      ]
    },
    "3722": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%total_length%0#0",
        "tuple_item%6#0",
        "tuple_item%6#0 (copy)"
      ]
    },
    "3723": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "a#0",
        "aggregate%total_length%0#0",
        "b#0",
        "tuple_item%6#0",
        "tuple_item%6#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%total_length%0#0",
        "tuple_item%6#0",
        "tuple_item%6#0 (copy)",
        "2"
      ]
    },
    "3724": {
      "op": "uncover 3",
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%6#0",
        "tuple_item%6#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "3726": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "b#0",
        "tuple_item%6#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tuple_item%6#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "3727": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "tuple_item%6#0"
      ]
    },
    "3729": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "tuple_item%6#0",
        "0"
      ]
    },
    "3730": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3731": {
      "op": "frame_dig -3",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "b#0",
        "i1#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "i1#0 (copy)"
      ]
    },
    "3733": {
      "op": ">",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%lt%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%lt%0#0"
      ]
    },
    "3734": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "3735": {
      "op": "frame_dig -3",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "i1#0 (copy)"
      ]
    },
    "3737": {
      "op": "intc_2 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "i1#0 (copy)",
        "2"
      ]
    },
    "3738": {
      "op": "*",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "3739": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3741": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "3743": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3744": {
      "op": "dup2",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset%0#0",
        "aggregate%item_offset%0#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset%0#0 (copy)"
      ]
    },
    "3745": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_length%0#0",
        "aggregate%item_offset%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length%0#0"
      ]
    },
    "3746": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length%0#0",
        "8"
      ]
    },
    "3747": {
      "op": "*",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "aggregate%item_offset%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length_in_bytes%0#0"
      ]
    },
    "3748": {
      "op": "intc_2 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "2"
      ]
    },
    "3749": {
      "op": "+",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%item_offset%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_head_tail_length%0#0"
      ]
    },
    "3750": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "3752": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3754": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_head_tail_length%0#0"
      ]
    },
    "3756": {
      "op": "extract3",
      "defined_out": [
        "a#0",
        "array_item%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "array_item%0#0"
      ]
    },
    "3757": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "array_item%0#0",
        "array_item%0#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "array_item%0#0",
        "array_item%0#0 (copy)"
      ]
    },
    "3758": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%total_length%1#0",
        "array_item%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "array_item%0#0",
        "aggregate%total_length%1#0"
      ]
    },
    "3759": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%total_length%1#0",
        "array_item%0#0"
      ]
    },
    "3761": {
      "op": "intc_2 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%total_length%1#0",
        "array_item%0#0",
        "2"
      ]
    },
    "3762": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "array_item%0#0",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "3764": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "aggregate%array_trimmed%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "3765": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "aggregate%array_trimmed%0#0",
        "b#0",
        "i2#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_trimmed%0#0",
        "i2#0 (copy)"
      ]
    },
    "3767": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_trimmed%0#0",
        "i2#0 (copy)",
        "8"
      ]
    },
    "3768": {
      "op": "*",
      "defined_out": [
        "a#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "3769": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "3770": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a#0",
        "array_item%1#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "array_item%1#0"
      ]
    },
    "3771": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0"
      ]
    },
    "3772": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "\"box\""
      ]
    },
    "3773": {
      "op": "box_get",
      "defined_out": [
        "a#0",
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0",
        "arr_arr#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ]
    },
    "3774": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "storage_value%3#0"
      ]
    },
    "3775": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ]
    },
    "3776": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)",
        "4096"
      ]
    },
    "3778": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%6#0",
        "arr_arr#0",
        "b#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "storage_value%3#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "3779": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%extract_uint16%6#0",
        "storage_value%3#0"
      ]
    },
    "3781": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%extract_uint16%6#0",
        "storage_value%3#0",
        "storage_value%3#0 (copy)"
      ]
    },
    "3782": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%4#0",
        "arr_arr#0",
        "b#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%extract_uint16%6#0",
        "storage_value%3#0",
        "aggregate%len%4#0"
      ]
    },
    "3783": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%4#0",
        "storage_value%3#0"
      ]
    },
    "3785": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%len%4#0",
        "storage_value%3#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "3787": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "storage_value%3#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%4#0"
      ]
    },
    "3789": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "tuple_item%7#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "tuple_item%7#0"
      ]
    },
    "3790": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "tuple_item%7#0",
        "tuple_item%7#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "tuple_item%7#0",
        "tuple_item%7#0 (copy)"
      ]
    },
    "3791": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "tuple_item%7#0",
        "tuple_item%7#0 (copy)",
        "8"
      ]
    },
    "3792": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%7#0",
        "arr_arr#0",
        "b#0",
        "tuple_item%7#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "tuple_item%7#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "3793": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%extract_uint16%7#0",
        "tuple_item%7#0"
      ]
    },
    "3795": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%extract_uint16%7#0",
        "tuple_item%7#0",
        "tuple_item%7#0 (copy)"
      ]
    },
    "3796": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%extract_uint16%7#0",
        "tuple_item%7#0",
        "tuple_item%7#0 (copy)",
        "10"
      ]
    },
    "3798": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%extract_uint16%8#0",
        "arr_arr#0",
        "b#0",
        "tuple_item%7#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%extract_uint16%7#0",
        "tuple_item%7#0",
        "aggregate%extract_uint16%8#0"
      ]
    },
    "3799": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%extract_uint16%8#0",
        "tuple_item%7#0"
      ]
    },
    "3801": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "aggregate%extract_uint16%8#0",
        "tuple_item%7#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "3803": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "tuple_item%7#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%extract_uint16%8#0"
      ]
    },
    "3805": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "tuple_item%8#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "tuple_item%8#0"
      ]
    },
    "3806": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "tuple_item%8#0",
        "0"
      ]
    },
    "3807": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "tuple_item%8#0",
        "0",
        "8"
      ]
    },
    "3808": {
      "op": "extract3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "tuple_item%9#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "tuple_item%9#0"
      ]
    },
    "3809": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0"
      ]
    },
    "3810": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "\"box\""
      ]
    },
    "3811": {
      "op": "box_get",
      "defined_out": [
        "a#0",
        "aggregate%box_get%8#0",
        "aggregate%box_get%9#0",
        "arr_arr#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%box_get%8#0",
        "aggregate%box_get%9#0"
      ]
    },
    "3812": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "storage_value%4#0"
      ]
    },
    "3813": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "3814": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "4096"
      ]
    },
    "3816": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%9#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "3817": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%extract_uint16%9#0",
        "storage_value%4#0"
      ]
    },
    "3819": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%extract_uint16%9#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "3820": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%len%5#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%extract_uint16%9#0",
        "storage_value%4#0",
        "aggregate%len%5#0"
      ]
    },
    "3821": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%len%5#0",
        "storage_value%4#0"
      ]
    },
    "3823": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%len%5#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "3825": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%len%5#0"
      ]
    },
    "3827": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "tuple_item%10#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "tuple_item%10#0"
      ]
    },
    "3828": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "tuple_item%10#0",
        "tuple_item%10#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "tuple_item%10#0",
        "tuple_item%10#0 (copy)"
      ]
    },
    "3829": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "tuple_item%10#0",
        "tuple_item%10#0 (copy)",
        "8"
      ]
    },
    "3830": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%10#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "tuple_item%10#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "tuple_item%10#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "3831": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%extract_uint16%10#0",
        "tuple_item%10#0"
      ]
    },
    "3833": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%extract_uint16%10#0",
        "tuple_item%10#0",
        "tuple_item%10#0 (copy)"
      ]
    },
    "3834": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%extract_uint16%10#0",
        "tuple_item%10#0",
        "tuple_item%10#0 (copy)",
        "10"
      ]
    },
    "3836": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%11#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "tuple_item%10#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%extract_uint16%10#0",
        "tuple_item%10#0",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "3837": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%11#0",
        "tuple_item%10#0"
      ]
    },
    "3839": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "aggregate%extract_uint16%11#0",
        "tuple_item%10#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "3841": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "tuple_item%10#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "3843": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "tuple_item%11#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "tuple_item%11#0"
      ]
    },
    "3844": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "tuple_item%11#0",
        "10"
      ]
    },
    "3846": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "tuple_item%11#0",
        "10",
        "8"
      ]
    },
    "3847": {
      "op": "extract3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "tuple_item%12#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "tuple_item%12#0"
      ]
    },
    "3848": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0"
      ]
    },
    "3849": {
      "op": "bytec_2 // \"box\"",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "\"box\""
      ]
    },
    "3850": {
      "op": "box_get",
      "defined_out": [
        "a#0",
        "aggregate%box_get%10#0",
        "aggregate%box_get%11#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%box_get%10#0",
        "aggregate%box_get%11#0"
      ]
    },
    "3851": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "storage_value%5#0"
      ]
    },
    "3852": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ]
    },
    "3853": {
      "op": "intc 4 // 4096",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)",
        "4096"
      ]
    },
    "3855": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%12#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%12#0"
      ]
    },
    "3856": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%12#0",
        "storage_value%5#0"
      ]
    },
    "3858": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%12#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ]
    },
    "3859": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%12#0",
        "aggregate%len%6#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%12#0",
        "storage_value%5#0",
        "aggregate%len%6#0"
      ]
    },
    "3860": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%12#0",
        "aggregate%len%6#0",
        "storage_value%5#0"
      ]
    },
    "3862": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%len%6#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%12#0"
      ]
    },
    "3864": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%12#0",
        "aggregate%len%6#0"
      ]
    },
    "3866": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%13#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%13#0"
      ]
    },
    "3867": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%13#0",
        "tuple_item%13#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%13#0",
        "tuple_item%13#0 (copy)"
      ]
    },
    "3868": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%13#0",
        "tuple_item%13#0 (copy)",
        "10"
      ]
    },
    "3870": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%13#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%13#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%13#0",
        "aggregate%extract_uint16%13#0"
      ]
    },
    "3871": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%13#0",
        "tuple_item%13#0"
      ]
    },
    "3873": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%13#0",
        "tuple_item%13#0",
        "tuple_item%13#0 (copy)"
      ]
    },
    "3874": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%len%7#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%13#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%13#0",
        "tuple_item%13#0",
        "aggregate%len%7#0"
      ]
    },
    "3875": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%len%7#0",
        "tuple_item%13#0"
      ]
    },
    "3877": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%len%7#0",
        "tuple_item%13#0",
        "aggregate%extract_uint16%13#0"
      ]
    },
    "3879": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%13#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%len%7#0"
      ]
    },
    "3881": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%14#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%14#0"
      ]
    },
    "3882": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%14#0",
        "tuple_item%14#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%14#0",
        "tuple_item%14#0 (copy)"
      ]
    },
    "3883": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%total_length%2#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%14#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%14#0",
        "aggregate%total_length%2#0"
      ]
    },
    "3884": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%total_length%2#0",
        "tuple_item%14#0"
      ]
    },
    "3886": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%total_length%2#0",
        "tuple_item%14#0",
        "tuple_item%14#0 (copy)"
      ]
    },
    "3887": {
      "op": "intc_2 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%total_length%2#0",
        "tuple_item%14#0",
        "tuple_item%14#0 (copy)",
        "2"
      ]
    },
    "3888": {
      "op": "uncover 3",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%14#0",
        "tuple_item%14#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "3890": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%14#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%14#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3891": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%1#0",
        "tuple_item%14#0"
      ]
    },
    "3893": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%1#0",
        "tuple_item%14#0",
        "0"
      ]
    },
    "3894": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%1#0"
      ]
    },
    "3895": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3897": {
      "op": "frame_dig -3",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i1#0 (copy)"
      ]
    },
    "3899": {
      "op": "intc_2 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i1#0 (copy)",
        "2"
      ]
    },
    "3900": {
      "op": "*",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset_offset%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "3901": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%1#0",
        "aggregate%item_offset_offset%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3903": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "3905": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3906": {
      "op": "cover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3908": {
      "op": "frame_dig -3",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i1#0 (copy)"
      ]
    },
    "3910": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "i1#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0",
        "i1#0 (copy)",
        "1"
      ]
    },
    "3911": {
      "op": "+",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%0#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3912": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "3914": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "3916": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%0#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3917": {
      "op": "cover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3919": {
      "op": "dig 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3921": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_index%0#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "3922": {
      "op": "cover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3924": {
      "op": "intc_2 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_index%0#0",
        "2"
      ]
    },
    "3925": {
      "op": "*",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset_offset%0#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3926": {
      "op": "dig 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3928": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3930": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%0#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "3931": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "3933": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "3935": {
      "op": "uncover 3",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3937": {
      "op": "select",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3938": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "3940": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "3942": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3944": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "array_item%2#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "array_item%2#0"
      ]
    },
    "3945": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "3946": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "array_item%2#0",
        "array_item%2#0 (copy)",
        "8"
      ]
    },
    "3947": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%14#0",
        "arr_arr#0",
        "array_item%2#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "array_item%2#0",
        "aggregate%extract_uint16%14#0"
      ]
    },
    "3948": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%14#0",
        "array_item%2#0"
      ]
    },
    "3950": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%14#0",
        "array_item%2#0",
        "array_item%2#0 (copy)"
      ]
    },
    "3951": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%14#0",
        "aggregate%len%8#0",
        "arr_arr#0",
        "array_item%2#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%14#0",
        "array_item%2#0",
        "aggregate%len%8#0"
      ]
    },
    "3952": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%extract_uint16%14#0",
        "aggregate%len%8#0",
        "array_item%2#0"
      ]
    },
    "3954": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%len%8#0",
        "array_item%2#0",
        "aggregate%extract_uint16%14#0"
      ]
    },
    "3956": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "array_item%2#0",
        "aggregate%extract_uint16%14#0",
        "aggregate%len%8#0"
      ]
    },
    "3958": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%15#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%15#0"
      ]
    },
    "3959": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%15#0",
        "tuple_item%15#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%15#0",
        "tuple_item%15#0 (copy)"
      ]
    },
    "3960": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%total_length%3#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%15#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%15#0",
        "aggregate%total_length%3#0"
      ]
    },
    "3961": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%total_length%3#0",
        "tuple_item%15#0"
      ]
    },
    "3963": {
      "op": "dup",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%total_length%3#0",
        "tuple_item%15#0",
        "tuple_item%15#0 (copy)"
      ]
    },
    "3964": {
      "op": "intc_2 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%total_length%3#0",
        "tuple_item%15#0",
        "tuple_item%15#0 (copy)",
        "2"
      ]
    },
    "3965": {
      "op": "uncover 3",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%15#0",
        "tuple_item%15#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "3967": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%2#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "tuple_item%15#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "tuple_item%15#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "3968": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "tuple_item%15#0"
      ]
    },
    "3970": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "tuple_item%15#0",
        "0"
      ]
    },
    "3971": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%2#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3972": {
      "op": "frame_dig -2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%2#0",
        "i2#0 (copy)"
      ]
    },
    "3974": {
      "op": ">",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%lt%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%lt%1#0"
      ]
    },
    "3975": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "3976": {
      "op": "frame_dig -2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "i2#0 (copy)"
      ]
    },
    "3978": {
      "op": "intc_2 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "i2#0 (copy)",
        "2"
      ]
    },
    "3979": {
      "op": "*",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset_offset%2#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "3980": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "3982": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "3984": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "3985": {
      "op": "dup2",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset%2#0",
        "aggregate%item_offset%2#0 (copy)",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset%2#0 (copy)"
      ]
    },
    "3986": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_length%1#0",
        "aggregate%item_offset%2#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_length%1#0"
      ]
    },
    "3987": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_length%1#0",
        "8"
      ]
    },
    "3988": {
      "op": "*",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_length_in_bytes%1#0",
        "aggregate%item_offset%2#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_length_in_bytes%1#0"
      ]
    },
    "3989": {
      "op": "intc_2 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_length_in_bytes%1#0",
        "2"
      ]
    },
    "3990": {
      "op": "+",
      "defined_out": [
        "a#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_head_tail_length%1#0",
        "aggregate%item_offset%2#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_head_tail_length%1#0"
      ]
    },
    "3991": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_head_tail_length%1#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "3993": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%item_head_tail_length%1#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "3995": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%item_head_tail_length%1#0"
      ]
    },
    "3997": {
      "op": "extract3",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "array_item%3#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "array_item%3#0"
      ]
    },
    "3998": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "3999": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%total_length%4#0",
        "arr_arr#0",
        "array_item%3#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "array_item%3#0",
        "aggregate%total_length%4#0"
      ]
    },
    "4000": {
      "op": "cover 1",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%total_length%4#0",
        "array_item%3#0"
      ]
    },
    "4002": {
      "op": "intc_2 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%total_length%4#0",
        "array_item%3#0",
        "2"
      ]
    },
    "4003": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "array_item%3#0",
        "2",
        "aggregate%total_length%4#0"
      ]
    },
    "4005": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "aggregate%array_trimmed%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "4006": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "aggregate%array_trimmed%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "i3#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_trimmed%1#0",
        "i3#0 (copy)"
      ]
    },
    "4008": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_trimmed%1#0",
        "i3#0 (copy)",
        "8"
      ]
    },
    "4009": {
      "op": "*",
      "defined_out": [
        "a#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "4010": {
      "op": "intc_3 // 8",
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "8"
      ]
    },
    "4011": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "array_item%4#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "array_item%4#0"
      ]
    },
    "4012": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "arr_arr#0",
        "b#0",
        "c#0",
        "d#0",
        "woah_arr_arr#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "woah_arr_arr#0"
      ]
    },
    "4013": {
      "op": "uncover 5",
      "stack_out": [
        "b#0",
        "arr_arr#0",
        "c#0",
        "d#0",
        "woah_arr_arr#0",
        "a#0"
      ]
    },
    "4015": {
      "op": "uncover 5",
      "stack_out": [
        "arr_arr#0",
        "c#0",
        "d#0",
        "woah_arr_arr#0",
        "a#0",
        "b#0"
      ]
    },
    "4017": {
      "op": "+",
      "defined_out": [
        "arr_arr#0",
        "c#0",
        "d#0",
        "tmp%0#0",
        "woah_arr_arr#0"
      ],
      "stack_out": [
        "arr_arr#0",
        "c#0",
        "d#0",
        "woah_arr_arr#0",
        "tmp%0#0"
      ]
    },
    "4018": {
      "op": "uncover 4",
      "stack_out": [
        "c#0",
        "d#0",
        "woah_arr_arr#0",
        "tmp%0#0",
        "arr_arr#0"
      ]
    },
    "4020": {
      "op": "+",
      "defined_out": [
        "c#0",
        "d#0",
        "tmp%1#0",
        "woah_arr_arr#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "woah_arr_arr#0",
        "tmp%1#0"
      ]
    },
    "4021": {
      "op": "uncover 3",
      "stack_out": [
        "d#0",
        "woah_arr_arr#0",
        "tmp%1#0",
        "c#0"
      ]
    },
    "4023": {
      "op": "+",
      "defined_out": [
        "d#0",
        "tmp%2#0",
        "woah_arr_arr#0"
      ],
      "stack_out": [
        "d#0",
        "woah_arr_arr#0",
        "tmp%2#0"
      ]
    },
    "4024": {
      "op": "uncover 2",
      "stack_out": [
        "woah_arr_arr#0",
        "tmp%2#0",
        "d#0"
      ]
    },
    "4026": {
      "op": "+",
      "defined_out": [
        "tmp%3#0",
        "woah_arr_arr#0"
      ],
      "stack_out": [
        "woah_arr_arr#0",
        "tmp%3#0"
      ]
    },
    "4027": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "4028": {
      "retsub": true,
      "op": "retsub"
    },
    "4029": {
      "subroutine": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "4032": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tuple_item%5#0"
      ]
    },
    "4033": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0"
      ]
    },
    "4034": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0"
      ]
    },
    "4035": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0"
    },
    "4038": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_block@0",
      "stack_in": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0"
      ],
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\""
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "4039": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "4040": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "storage_value%0#0"
      ]
    },
    "4041": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "storage_value%0#0",
        "0"
      ]
    },
    "4042": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "storage_value%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "storage_value%0#0",
        "0",
        "8"
      ]
    },
    "4043": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "tuple_item%0#0"
      ]
    },
    "4044": {
      "op": "btoi",
      "defined_out": [
        "values%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%0#0"
      ]
    },
    "4045": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "values%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%0#0",
        "1"
      ]
    },
    "4046": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "tmp%0#0"
      ]
    },
    "4047": {
      "error": "expected 1",
      "op": "assert // expected 1",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0"
      ]
    },
    "4048": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "4049": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "4050": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "storage_value%1#0"
      ]
    },
    "4051": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "storage_value%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "storage_value%1#0",
        "10"
      ]
    },
    "4053": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "storage_value%1#0",
        "10",
        "8"
      ]
    },
    "4054": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "tuple_item%1#0"
      ]
    },
    "4055": {
      "op": "btoi",
      "defined_out": [
        "values%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%1#0"
      ]
    },
    "4056": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "values%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%1#0",
        "2"
      ]
    },
    "4057": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "tmp%1#0"
      ]
    },
    "4058": {
      "error": "expected 2",
      "op": "assert // expected 2",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0"
      ]
    },
    "4059": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "4060": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "4061": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%2#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "storage_value%2#0"
      ]
    },
    "4062": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "storage_value%2#0",
        "0"
      ]
    },
    "4063": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "storage_value%2#0",
        "0",
        "8"
      ]
    },
    "4064": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%2#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "tuple_item%2#0"
      ]
    },
    "4065": {
      "op": "btoi",
      "defined_out": [
        "values%2#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%2#0"
      ]
    },
    "4066": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%2#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "4067": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0",
        "values%2#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%2#0",
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ]
    },
    "4068": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%2#0",
        "storage_value%3#0"
      ]
    },
    "4069": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%2#0",
        "storage_value%3#0",
        "10"
      ]
    },
    "4071": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%2#0",
        "storage_value%3#0",
        "10",
        "8"
      ]
    },
    "4072": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%2#0",
        "tuple_item%3#0"
      ]
    },
    "4073": {
      "op": "btoi",
      "defined_out": [
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "values%2#0",
        "values%3#0"
      ]
    },
    "4074": {
      "op": "+",
      "defined_out": [],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0"
      ]
    },
    "4075": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "4076": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%8#0",
        "aggregate%box_get%9#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "aggregate%box_get%8#0",
        "aggregate%box_get%9#0"
      ]
    },
    "4077": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "storage_value%4#0"
      ]
    },
    "4078": {
      "op": "dup",
      "defined_out": [
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "4079": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "8"
      ]
    },
    "4080": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "4081": {
      "op": "cover 1",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%4#0"
      ]
    },
    "4083": {
      "op": "dup",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ]
    },
    "4084": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%extract_uint16%0#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%4#0",
        "storage_value%4#0 (copy)",
        "18"
      ]
    },
    "4086": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4087": {
      "op": "uncover 1",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%4#0"
      ]
    },
    "4089": {
      "op": "uncover 2",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "4091": {
      "op": "uncover 2",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "storage_value%4#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4093": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "aggregate%substring3%0#0"
      ]
    },
    "4094": {
      "op": "dup",
      "defined_out": [
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "tuple_item%4#0"
      ]
    },
    "4095": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "tuple_item%4#0",
        "0"
      ]
    },
    "4096": {
      "op": "extract_uint16",
      "defined_out": [
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0"
      ]
    },
    "4097": {
      "op": "intc_0 // 0",
      "defined_out": [
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4098": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_header@1"
    },
    "4101": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_header@1",
      "stack_in": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4103": {
      "op": "frame_dig 5",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "4105": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "4106": {
      "op": "bz examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4109": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2"
    },
    "4112": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@2",
      "stack_in": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%4#0"
      ]
    },
    "4114": {
      "op": "dup",
      "defined_out": [
        "tuple_item%4#0",
        "tuple_item%4#0 (copy)"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%4#0",
        "tuple_item%4#0 (copy)"
      ]
    },
    "4115": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%4#0",
        "aggregate%total_length%0#0"
      ]
    },
    "4116": {
      "op": "cover 1",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "tuple_item%4#0"
      ]
    },
    "4118": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "tuple_item%4#0",
        "2"
      ]
    },
    "4119": {
      "op": "uncover 2",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%4#0",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "4121": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "4122": {
      "op": "frame_dig 6",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4124": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "4125": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "4126": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "4127": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "item_index_internal%0#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%0#0"
      ]
    },
    "4128": {
      "op": "btoi",
      "defined_out": [
        "item_index_internal%0#0",
        "tuple_item%4#0",
        "val#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "val#0"
      ]
    },
    "4129": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "tuple_item%4#0",
        "val#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "val#0",
        "total#0"
      ]
    },
    "4131": {
      "op": "+",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%3#0",
        "total#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%3#0"
      ]
    },
    "4132": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4134": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_footer@3"
    },
    "4137": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_footer@3",
      "stack_in": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4139": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "4140": {
      "op": "+",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4141": {
      "op": "frame_bury 6",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4143": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_header@1"
    },
    "4146": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@4",
      "stack_in": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\""
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "4147": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%10#0",
        "aggregate%box_get%11#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%box_get%10#0",
        "aggregate%box_get%11#0"
      ]
    },
    "4148": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "storage_value%5#0"
      ]
    },
    "4149": {
      "op": "dup",
      "defined_out": [
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ]
    },
    "4150": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)",
        "18"
      ]
    },
    "4152": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "4153": {
      "op": "cover 1",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%5#0"
      ]
    },
    "4155": {
      "op": "dup",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%5#0",
        "storage_value%5#0 (copy)"
      ]
    },
    "4156": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "storage_value%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%extract_uint16%2#0",
        "storage_value%5#0",
        "aggregate%len%0#0"
      ]
    },
    "4157": {
      "op": "cover 1",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "storage_value%5#0"
      ]
    },
    "4159": {
      "op": "uncover 2",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%len%0#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "4161": {
      "op": "uncover 2",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "storage_value%5#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "4163": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "4164": {
      "op": "dup",
      "defined_out": [
        "tuple_item%5#0",
        "tuple_item%5#0 (copy)"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%5#0",
        "tuple_item%5#0 (copy)"
      ]
    },
    "4165": {
      "op": "frame_bury 0",
      "defined_out": [
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%5#0"
      ]
    },
    "4167": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%5#0",
        "0"
      ]
    },
    "4168": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "4169": {
      "op": "frame_bury 1",
      "defined_out": [
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4171": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "0"
      ]
    },
    "4172": {
      "op": "frame_bury 2",
      "defined_out": [
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4174": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_header@5"
    },
    "4177": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_header@5",
      "stack_in": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "4179": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "array_length%1#0"
      ]
    },
    "4181": {
      "op": "<",
      "defined_out": [
        "array_length%1#0",
        "continue_looping%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "4182": {
      "op": "bz examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@8",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4185": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6"
    },
    "4188": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_body@6",
      "stack_in": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%5#0"
      ]
    },
    "4190": {
      "op": "dup",
      "defined_out": [
        "tuple_item%5#0",
        "tuple_item%5#0 (copy)"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%5#0",
        "tuple_item%5#0 (copy)"
      ]
    },
    "4191": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%5#0",
        "aggregate%total_length%1#0"
      ]
    },
    "4192": {
      "op": "cover 1",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%1#0",
        "tuple_item%5#0"
      ]
    },
    "4194": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%1#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%1#0",
        "tuple_item%5#0",
        "2"
      ]
    },
    "4195": {
      "op": "uncover 2",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tuple_item%5#0",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "4197": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "4198": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0"
      ]
    },
    "4200": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0",
        "8"
      ]
    },
    "4201": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "item_index_internal%1#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "4202": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "8"
      ]
    },
    "4203": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%1#0",
        "item_index_internal%1#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%1#0"
      ]
    },
    "4204": {
      "op": "btoi",
      "defined_out": [
        "item_index_internal%1#0",
        "tuple_item%5#0",
        "val#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "val#0"
      ]
    },
    "4205": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%5#0",
        "val#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "val#0",
        "total#0"
      ]
    },
    "4207": {
      "op": "+",
      "defined_out": [
        "item_index_internal%1#0",
        "tmp%4#0",
        "total#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%4#0"
      ]
    },
    "4208": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4210": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_footer@7"
    },
    "4213": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_footer@7",
      "stack_in": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "4215": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "1"
      ]
    },
    "4216": {
      "op": "+",
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "4217": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4219": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_for_header@5"
    },
    "4222": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct_after_for@8",
      "stack_in": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "tuple_item%5#0",
        "array_length%1#0",
        "item_index_internal%1#0",
        "total#0",
        "tuple_item%4#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "4224": {
      "op": "frame_bury 0"
    },
    "4226": {
      "retsub": true,
      "op": "retsub"
    },
    "4227": {
      "subroutine": "examples.box_storage.contract.BoxContract.create_bools",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.create_bools",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.create_bools_block@0"
    },
    "4230": {
      "block": "examples.box_storage.contract.BoxContract.create_bools_block@0",
      "stack_in": [],
      "op": "bytec 16 // \"too_many_bools\"",
      "defined_out": [
        "\"too_many_bools\""
      ],
      "stack_out": [
        "\"too_many_bools\""
      ]
    },
    "4232": {
      "op": "pushint 4125 // 4125",
      "defined_out": [
        "\"too_many_bools\"",
        "4125"
      ],
      "stack_out": [
        "\"too_many_bools\"",
        "4125"
      ]
    },
    "4235": {
      "op": "box_create",
      "defined_out": [
        "{box_create}"
      ],
      "stack_out": [
        "{box_create}"
      ]
    },
    "4236": {
      "op": "pop",
      "stack_out": []
    },
    "4237": {
      "retsub": true,
      "op": "retsub"
    },
    "4238": {
      "subroutine": "examples.box_storage.contract.BoxContract.set_bool",
      "params": {
        "index#0": "uint64",
        "value#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.set_bool",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "4241": {
      "op": "b examples.box_storage.contract.BoxContract.set_bool_block@0"
    },
    "4244": {
      "block": "examples.box_storage.contract.BoxContract.set_bool_block@0",
      "stack_in": [],
      "op": "bytec 16 // \"too_many_bools\"",
      "defined_out": [
        "\"too_many_bools\""
      ],
      "stack_out": [
        "\"too_many_bools\""
      ]
    },
    "4246": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "4247": {
      "error": "check self.too_many_bools exists",
      "op": "assert // check self.too_many_bools exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "4248": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "4250": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_value%0#0",
        "index#0 (copy)",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "index#0 (copy)"
      ]
    },
    "4252": {
      "op": "intc 7 // 33000",
      "defined_out": [
        "33000",
        "encoded_value%0#0",
        "index#0 (copy)",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "index#0 (copy)",
        "33000"
      ]
    },
    "4254": {
      "op": "<",
      "defined_out": [
        "aggregate%lt%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "aggregate%lt%0#0"
      ]
    },
    "4255": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "4256": {
      "op": "frame_dig -2",
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "index#0 (copy)"
      ]
    },
    "4258": {
      "op": "intc 7 // 33000",
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "index#0 (copy)",
        "33000"
      ]
    },
    "4260": {
      "op": "<",
      "defined_out": [
        "aggregate%lt%1#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "aggregate%lt%1#0"
      ]
    },
    "4261": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "4262": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0"
      ]
    },
    "4264": {
      "op": "frame_dig -2",
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "index#0 (copy)"
      ]
    },
    "4266": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%0#0",
        "index#0 (copy)",
        "encoded_value%0#0"
      ]
    },
    "4268": {
      "op": "setbit",
      "defined_out": [
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "4269": {
      "op": "bytec 16 // \"too_many_bools\"",
      "stack_out": [
        "updated_array%0#0",
        "\"too_many_bools\""
      ]
    },
    "4271": {
      "op": "uncover 1",
      "stack_out": [
        "\"too_many_bools\"",
        "updated_array%0#0"
      ]
    },
    "4273": {
      "op": "box_put",
      "stack_out": []
    },
    "4274": {
      "retsub": true,
      "op": "retsub"
    },
    "4275": {
      "subroutine": "examples.box_storage.contract.BoxContract.sum_bools",
      "params": {
        "stop_at_total#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.sum_bools",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "4278": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "total#10"
      ]
    },
    "4279": {
      "op": "b examples.box_storage.contract.BoxContract.sum_bools_block@0"
    },
    "4282": {
      "block": "examples.box_storage.contract.BoxContract.sum_bools_block@0",
      "stack_in": [
        "total#10"
      ],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#10",
        "total#0"
      ]
    },
    "4283": {
      "op": "bytec 16 // \"too_many_bools\"",
      "defined_out": [
        "\"too_many_bools\""
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "\"too_many_bools\""
      ]
    },
    "4285": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "4286": {
      "error": "check self.too_many_bools exists",
      "op": "assert // check self.too_many_bools exists",
      "defined_out": [],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0"
      ]
    },
    "4287": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4288": {
      "op": "b examples.box_storage.contract.BoxContract.sum_bools_for_header@1"
    },
    "4291": {
      "block": "examples.box_storage.contract.BoxContract.sum_bools_for_header@1",
      "stack_in": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4293": {
      "op": "intc 7 // 33000",
      "defined_out": [
        "33000",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "33000"
      ]
    },
    "4295": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "4296": {
      "op": "frame_dig 1",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0",
        "total#0"
      ]
    },
    "4298": {
      "op": "frame_bury 0",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "4300": {
      "op": "bz examples.box_storage.contract.BoxContract.sum_bools_after_for@8",
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4303": {
      "op": "b examples.box_storage.contract.BoxContract.sum_bools_for_body@2"
    },
    "4306": {
      "block": "examples.box_storage.contract.BoxContract.sum_bools_for_body@2",
      "stack_in": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0"
      ]
    },
    "4308": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4310": {
      "op": "getbit",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "value#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "value#0"
      ]
    },
    "4311": {
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "total#0",
        "value#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "value#0",
        "total#0"
      ]
    },
    "4313": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "total#0",
        "value#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "value#0"
      ]
    },
    "4315": {
      "op": "bz examples.box_storage.contract.BoxContract.sum_bools_after_if_else@4",
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4318": {
      "op": "b examples.box_storage.contract.BoxContract.sum_bools_if_body@3"
    },
    "4321": {
      "block": "examples.box_storage.contract.BoxContract.sum_bools_if_body@3",
      "stack_in": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "4323": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "total#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "total#0",
        "1"
      ]
    },
    "4324": {
      "op": "+",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "4325": {
      "op": "frame_bury 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4327": {
      "op": "b examples.box_storage.contract.BoxContract.sum_bools_after_if_else@4"
    },
    "4330": {
      "block": "examples.box_storage.contract.BoxContract.sum_bools_after_if_else@4",
      "stack_in": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "total#10"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "total#10"
      ]
    },
    "4332": {
      "op": "dup",
      "defined_out": [
        "total#0",
        "total#0 (copy)",
        "total#10"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "total#0",
        "total#0 (copy)"
      ]
    },
    "4333": {
      "op": "frame_bury 1",
      "defined_out": [
        "total#0",
        "total#10"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "4335": {
      "op": "frame_dig -1",
      "defined_out": [
        "stop_at_total#0 (copy)",
        "total#0",
        "total#10"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "total#0",
        "stop_at_total#0 (copy)"
      ]
    },
    "4337": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "total#0",
        "total#10"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "4338": {
      "op": "bz examples.box_storage.contract.BoxContract.sum_bools_after_if_else@6",
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4341": {
      "op": "b examples.box_storage.contract.BoxContract.sum_bools_if_body@5"
    },
    "4344": {
      "block": "examples.box_storage.contract.BoxContract.sum_bools_if_body@5",
      "stack_in": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "4346": {
      "op": "frame_bury 0",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4348": {
      "op": "b examples.box_storage.contract.BoxContract.sum_bools_after_for@8"
    },
    "4351": {
      "block": "examples.box_storage.contract.BoxContract.sum_bools_after_for@8",
      "stack_in": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0",
        "total#10"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "4352": {
      "block": "examples.box_storage.contract.BoxContract.sum_bools_after_if_else@6",
      "stack_in": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "op": "b examples.box_storage.contract.BoxContract.sum_bools_for_footer@7"
    },
    "4355": {
      "block": "examples.box_storage.contract.BoxContract.sum_bools_for_footer@7",
      "stack_in": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4357": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "4358": {
      "op": "+",
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4359": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#10",
        "total#0",
        "storage_value%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4361": {
      "op": "b examples.box_storage.contract.BoxContract.sum_bools_for_header@1"
    },
    "4364": {
      "subroutine": "examples.box_storage.contract.BoxContract.create_dynamic_box",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.create_dynamic_box",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.create_dynamic_box_block@0"
    },
    "4367": {
      "block": "examples.box_storage.contract.BoxContract.create_dynamic_box_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4368": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "4369": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "4372": {
      "op": "bytec 5 // \"dynamic_box\"",
      "defined_out": [
        "\"dynamic_box\"",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "\"dynamic_box\""
      ]
    },
    "4374": {
      "op": "box_del",
      "defined_out": [
        "encoded_array%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "{box_del}"
      ]
    },
    "4375": {
      "op": "pop",
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "4376": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "encoded_array%0#0",
        "\"dynamic_box\""
      ]
    },
    "4378": {
      "op": "uncover 1",
      "stack_out": [
        "\"dynamic_box\"",
        "encoded_array%0#0"
      ]
    },
    "4380": {
      "op": "box_put",
      "stack_out": []
    },
    "4381": {
      "retsub": true,
      "op": "retsub"
    },
    "4382": {
      "subroutine": "examples.box_storage.contract.BoxContract.delete_dynamic_box",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.delete_dynamic_box",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.delete_dynamic_box_block@0"
    },
    "4385": {
      "block": "examples.box_storage.contract.BoxContract.delete_dynamic_box_block@0",
      "stack_in": [],
      "op": "bytec 5 // \"dynamic_box\"",
      "defined_out": [
        "\"dynamic_box\""
      ],
      "stack_out": [
        "\"dynamic_box\""
      ]
    },
    "4387": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "4388": {
      "op": "pop",
      "stack_out": []
    },
    "4389": {
      "retsub": true,
      "op": "retsub"
    },
    "4390": {
      "subroutine": "examples.box_storage.contract.BoxContract.append_dynamic_box",
      "params": {
        "times#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "4393": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_box_block@0"
    },
    "4396": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_box_block@0",
      "stack_in": [],
      "op": "bytec 5 // \"dynamic_box\"",
      "defined_out": [
        "\"dynamic_box\""
      ],
      "stack_out": [
        "\"dynamic_box\""
      ]
    },
    "4398": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "4399": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "4400": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0"
      ]
    },
    "4401": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0",
        "2",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0",
        "2"
      ]
    },
    "4402": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0"
      ]
    },
    "4403": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4404": {
      "op": "dup",
      "defined_out": [
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "arr_len#0"
      ]
    },
    "4405": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr_len#0",
        "times#0 (copy)"
      ],
      "stack_out": [
        "arr_len#0",
        "arr_len#0",
        "times#0 (copy)"
      ]
    },
    "4407": {
      "op": "+",
      "defined_out": [
        "arr_len#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "tmp%1#0"
      ]
    },
    "4408": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr_len#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "tmp%1#0",
        "8"
      ]
    },
    "4409": {
      "op": "*",
      "defined_out": [
        "arr_len#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr_len#0",
        "tmp%2#0"
      ]
    },
    "4410": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr_len#0",
        "tmp%2#0",
        "2"
      ]
    },
    "4411": {
      "op": "+",
      "defined_out": [
        "arr_len#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr_len#0",
        "tmp%3#0"
      ]
    },
    "4412": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "arr_len#0",
        "tmp%3#0",
        "\"dynamic_box\""
      ]
    },
    "4414": {
      "op": "uncover 1",
      "stack_out": [
        "arr_len#0",
        "\"dynamic_box\"",
        "tmp%3#0"
      ]
    },
    "4416": {
      "op": "box_resize",
      "stack_out": [
        "arr_len#0"
      ]
    },
    "4417": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "1"
      ]
    },
    "4418": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "arr_len#0"
      ]
    },
    "4419": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0"
      ]
    },
    "4420": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_box_for_header@1"
    },
    "4423": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_box_for_header@1",
      "stack_in": [
        "arr_len#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "i#0"
      ]
    },
    "4425": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "times#0 (copy)"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "i#0",
        "times#0 (copy)"
      ]
    },
    "4427": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "4428": {
      "op": "bz examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4",
      "stack_out": [
        "arr_len#0",
        "i#0"
      ]
    },
    "4431": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2"
    },
    "4434": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_box_for_body@2",
      "stack_in": [
        "arr_len#0",
        "i#0"
      ],
      "op": "bytec 5 // \"dynamic_box\"",
      "defined_out": [
        "\"dynamic_box\""
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "\"dynamic_box\""
      ]
    },
    "4436": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "4437": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "storage_value%1#0"
      ]
    },
    "4438": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "storage_value%1#0",
        "i#0"
      ]
    },
    "4440": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "i#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "storage_value%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4441": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%0#0",
        "i#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "encoded_value%0#0",
        "storage_value%1#0"
      ]
    },
    "4443": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "i#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "encoded_value%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "4444": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "encoded_value%0#0",
        "i#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "encoded_value%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "2"
      ]
    },
    "4445": {
      "op": "intc 8 // 32760",
      "defined_out": [
        "2",
        "32760",
        "encoded_value%0#0",
        "i#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "encoded_value%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "2",
        "32760"
      ]
    },
    "4447": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "encoded_value%0#0",
        "i#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0"
      ]
    },
    "4448": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%extract%1#0",
        "arr_len#0",
        "encoded_value%0#0",
        "i#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "arr_len#0"
      ]
    },
    "4450": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%1#0",
        "arr_len#0",
        "arr_len#0 (copy)",
        "encoded_value%0#0",
        "i#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "arr_len#0 (copy)",
        "arr_len#0 (copy)"
      ]
    },
    "4451": {
      "op": "cover 4",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "arr_len#0 (copy)"
      ]
    },
    "4453": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%extract%1#0",
        "arr_len#0",
        "arr_len#0 (copy)",
        "encoded_value%0#0",
        "i#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "arr_len#0 (copy)",
        "8"
      ]
    },
    "4454": {
      "op": "*",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%write_offset%0#0",
        "arr_len#0",
        "encoded_value%0#0",
        "i#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "encoded_value%0#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "4455": {
      "op": "uncover 3",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "storage_value%1#0",
        "aggregate%extract%1#0",
        "aggregate%write_offset%0#0",
        "encoded_value%0#0"
      ]
    },
    "4457": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%updated_array%0#0",
        "arr_len#0",
        "i#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "storage_value%1#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "4458": {
      "op": "uncover 1",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "aggregate%updated_array%0#0",
        "storage_value%1#0"
      ]
    },
    "4460": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "aggregate%updated_array%0#0",
        "storage_value%1#0",
        "2"
      ]
    },
    "4461": {
      "op": "uncover 2",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "storage_value%1#0",
        "2",
        "aggregate%updated_array%0#0"
      ]
    },
    "4463": {
      "op": "replace3",
      "defined_out": [
        "arr_len#0",
        "i#0",
        "updated_tuple%0#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "updated_tuple%0#0"
      ]
    },
    "4464": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "updated_tuple%0#0",
        "\"dynamic_box\""
      ]
    },
    "4466": {
      "op": "uncover 1",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "\"dynamic_box\"",
        "updated_tuple%0#0"
      ]
    },
    "4468": {
      "op": "box_put",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0"
      ]
    },
    "4469": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr_len#0",
        "i#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0",
        "1"
      ]
    },
    "4470": {
      "op": "+",
      "defined_out": [
        "arr_len#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "4471": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr_len#0",
        "i#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0"
      ]
    },
    "4473": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_box_for_footer@3"
    },
    "4476": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_box_for_footer@3",
      "stack_in": [
        "arr_len#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "i#0"
      ]
    },
    "4478": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4479": {
      "op": "+",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "i#0"
      ]
    },
    "4480": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0"
      ]
    },
    "4482": {
      "op": "b examples.box_storage.contract.BoxContract.append_dynamic_box_for_header@1"
    },
    "4485": {
      "block": "examples.box_storage.contract.BoxContract.append_dynamic_box_after_for@4",
      "stack_in": [
        "arr_len#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "arr_len#0"
      ]
    },
    "4487": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "4488": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)"
      ]
    },
    "4489": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "4490": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%bitlen%0#0",
        "16"
      ]
    },
    "4492": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%no_overflow%0#0"
      ]
    },
    "4493": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "4494": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "6"
      ]
    },
    "4496": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "6",
        "aggregate%val_as_bytes%1#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "6",
        "2"
      ]
    },
    "4497": {
      "op": "extract3",
      "defined_out": [
        "arr_len#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "4498": {
      "op": "bytec 5 // \"dynamic_box\"",
      "defined_out": [
        "\"dynamic_box\"",
        "arr_len#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "tmp%5#0",
        "\"dynamic_box\""
      ]
    },
    "4500": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0",
        "arr_len#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "tmp%5#0",
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "4501": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "arr_len#0",
        "storage_value%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "tmp%5#0",
        "storage_value%2#0"
      ]
    },
    "4502": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr_len#0",
        "storage_value%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "tmp%5#0",
        "storage_value%2#0",
        "0"
      ]
    },
    "4503": {
      "op": "uncover 2",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "storage_value%2#0",
        "0",
        "tmp%5#0"
      ]
    },
    "4505": {
      "op": "replace3",
      "defined_out": [
        "arr_len#0",
        "updated_tuple%1#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "updated_tuple%1#0"
      ]
    },
    "4506": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "updated_tuple%1#0",
        "\"dynamic_box\""
      ]
    },
    "4508": {
      "op": "uncover 1",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "\"dynamic_box\"",
        "updated_tuple%1#0"
      ]
    },
    "4510": {
      "op": "box_put",
      "stack_out": [
        "arr_len#0",
        "i#0"
      ]
    },
    "4511": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "\"dynamic_box\""
      ]
    },
    "4513": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ]
    },
    "4514": {
      "error": "check self.dynamic_box exists",
      "op": "assert // check self.dynamic_box exists",
      "defined_out": [
        "arr_len#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "storage_value%3#0"
      ]
    },
    "4515": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr_len#0",
        "i#0",
        "storage_value%3#0",
        "0"
      ]
    },
    "4516": {
      "op": "extract_uint16",
      "defined_out": [
        "arr_len#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr_len#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "4517": {
      "op": "frame_bury 0"
    },
    "4519": {
      "retsub": true,
      "op": "retsub"
    },
    "4520": {
      "subroutine": "examples.box_storage.contract.BoxContract.pop_dynamic_box",
      "params": {
        "times#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_box",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "4523": {
      "op": "b examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0"
    },
    "4526": {
      "block": "examples.box_storage.contract.BoxContract.pop_dynamic_box_block@0",
      "stack_in": [],
      "op": "bytec 5 // \"dynamic_box\"",
      "defined_out": [
        "\"dynamic_box\""
      ],
      "stack_out": [
        "\"dynamic_box\""
      ]
    },
    "4528": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "4529": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "4530": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0"
      ]
    },
    "4531": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0",
        "2",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0",
        "2"
      ]
    },
    "4532": {
      "op": "extract3",
      "defined_out": [
        "tuple_item%0#0"
      ],
      "stack_out": [
        "tuple_item%0#0"
      ]
    },
    "4533": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4534": {
      "op": "frame_dig -1",
      "defined_out": [
        "times#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "times#0 (copy)"
      ]
    },
    "4536": {
      "op": "-",
      "defined_out": [
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0"
      ]
    },
    "4537": {
      "op": "dup",
      "defined_out": [
        "arr_len#0",
        "arr_len#0 (copy)"
      ],
      "stack_out": [
        "arr_len#0",
        "arr_len#0 (copy)"
      ]
    },
    "4538": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "4539": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "4540": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "4541": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0",
        "16"
      ]
    },
    "4543": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%no_overflow%0#0"
      ]
    },
    "4544": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "arr_len#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "4545": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%val_as_bytes%0#0",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "aggregate%val_as_bytes%0#0",
        "6"
      ]
    },
    "4547": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr_len#0",
        "aggregate%val_as_bytes%0#0",
        "6",
        "2"
      ]
    },
    "4548": {
      "op": "extract3",
      "defined_out": [
        "arr_len#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr_len#0",
        "tmp%2#0"
      ]
    },
    "4549": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "arr_len#0",
        "tmp%2#0",
        "\"dynamic_box\""
      ]
    },
    "4551": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "arr_len#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr_len#0",
        "tmp%2#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "4552": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "arr_len#0",
        "storage_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr_len#0",
        "tmp%2#0",
        "storage_value%1#0"
      ]
    },
    "4553": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr_len#0",
        "tmp%2#0",
        "storage_value%1#0",
        "0"
      ]
    },
    "4554": {
      "op": "uncover 2",
      "stack_out": [
        "arr_len#0",
        "storage_value%1#0",
        "0",
        "tmp%2#0"
      ]
    },
    "4556": {
      "op": "replace3",
      "defined_out": [
        "arr_len#0",
        "updated_tuple%0#0"
      ],
      "stack_out": [
        "arr_len#0",
        "updated_tuple%0#0"
      ]
    },
    "4557": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "arr_len#0",
        "updated_tuple%0#0",
        "\"dynamic_box\""
      ]
    },
    "4559": {
      "op": "uncover 1",
      "stack_out": [
        "arr_len#0",
        "\"dynamic_box\"",
        "updated_tuple%0#0"
      ]
    },
    "4561": {
      "op": "box_put",
      "stack_out": [
        "arr_len#0"
      ]
    },
    "4562": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr_len#0"
      ],
      "stack_out": [
        "arr_len#0",
        "8"
      ]
    },
    "4563": {
      "op": "*",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "4564": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%3#0",
        "2"
      ]
    },
    "4565": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "4566": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "tmp%4#0",
        "\"dynamic_box\""
      ]
    },
    "4568": {
      "op": "uncover 1",
      "stack_out": [
        "\"dynamic_box\"",
        "tmp%4#0"
      ]
    },
    "4570": {
      "op": "box_resize",
      "stack_out": []
    },
    "4571": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "\"dynamic_box\""
      ]
    },
    "4573": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ],
      "stack_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "4574": {
      "error": "check self.dynamic_box exists",
      "op": "assert // check self.dynamic_box exists",
      "defined_out": [
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0"
      ]
    },
    "4575": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%2#0",
        "0"
      ]
    },
    "4576": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "4577": {
      "retsub": true,
      "op": "retsub"
    },
    "4578": {
      "subroutine": "examples.box_storage.contract.BoxContract.sum_dynamic_box",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_box",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "4581": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_box_block@0"
    },
    "4584": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_box_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "total#0"
      ]
    },
    "4585": {
      "op": "bytec 5 // \"dynamic_box\"",
      "defined_out": [
        "\"dynamic_box\""
      ],
      "stack_out": [
        "total#0",
        "\"dynamic_box\""
      ]
    },
    "4587": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "total#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "4588": {
      "error": "check self.dynamic_box exists",
      "op": "assert // check self.dynamic_box exists",
      "stack_out": [
        "total#0",
        "aggregate%box_get%0#0"
      ]
    },
    "4589": {
      "op": "dup",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "storage_value%0#0"
      ]
    },
    "4590": {
      "op": "intc_0 // 0",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "storage_value%0#0",
        "0"
      ]
    },
    "4591": {
      "op": "extract_uint16",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0"
      ]
    },
    "4592": {
      "op": "intc_0 // 0",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4593": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_box_for_header@1"
    },
    "4596": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_box_for_header@1",
      "stack_in": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4598": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array_length%0#0"
      ]
    },
    "4600": {
      "op": "<",
      "defined_out": [
        "array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "4601": {
      "op": "bz examples.box_storage.contract.BoxContract.sum_dynamic_box_after_for@4",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4604": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2"
    },
    "4607": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_box_for_body@2",
      "stack_in": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0"
      ]
    },
    "4609": {
      "op": "dup",
      "defined_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "4610": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0",
        "aggregate%total_length%0#0"
      ]
    },
    "4611": {
      "op": "cover 1",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "storage_value%0#0"
      ]
    },
    "4613": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%total_length%0#0",
        "storage_value%0#0",
        "2"
      ]
    },
    "4614": {
      "op": "uncover 2",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "4616": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "4617": {
      "op": "frame_dig 3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4619": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "4620": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "4621": {
      "op": "intc_3 // 8",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "4622": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "item_index_internal%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "array_item%0#0"
      ]
    },
    "4623": {
      "op": "btoi",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "val#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "val#0"
      ]
    },
    "4624": {
      "op": "frame_dig 0",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "total#0",
        "val#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "val#0",
        "total#0"
      ]
    },
    "4626": {
      "op": "+",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "4627": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0",
        "storage_value%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4629": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_box_for_footer@3"
    },
    "4632": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_box_for_footer@3",
      "stack_in": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4634": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "4635": {
      "op": "+",
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4636": {
      "op": "frame_bury 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "4638": {
      "op": "b examples.box_storage.contract.BoxContract.sum_dynamic_box_for_header@1"
    },
    "4641": {
      "block": "examples.box_storage.contract.BoxContract.sum_dynamic_box_after_for@4",
      "stack_in": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "storage_value%0#0",
        "array_length%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "4642": {
      "subroutine": "examples.box_storage.contract.BoxContract.write_dynamic_box",
      "params": {
        "index#0": "uint64",
        "value#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.write_dynamic_box",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "4645": {
      "op": "b examples.box_storage.contract.BoxContract.write_dynamic_box_block@0"
    },
    "4648": {
      "block": "examples.box_storage.contract.BoxContract.write_dynamic_box_block@0",
      "stack_in": [],
      "op": "bytec 5 // \"dynamic_box\"",
      "defined_out": [
        "\"dynamic_box\""
      ],
      "stack_out": [
        "\"dynamic_box\""
      ]
    },
    "4650": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "4651": {
      "error": "check self.dynamic_box exists",
      "op": "assert // check self.dynamic_box exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "4652": {
      "op": "frame_dig -1",
      "defined_out": [
        "storage_value%0#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "value#0 (copy)"
      ]
    },
    "4654": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0"
      ]
    },
    "4655": {
      "op": "frame_dig -2",
      "defined_out": [
        "encoded_value%0#0",
        "index#0 (copy)",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "index#0 (copy)"
      ]
    },
    "4657": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "encoded_value%0#0",
        "index#0 (copy)",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "index#0 (copy)",
        "8"
      ]
    },
    "4658": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "4659": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%write_offset%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "aggregate%write_offset%0#0",
        "2"
      ]
    },
    "4660": {
      "op": "+",
      "defined_out": [
        "aggregate%write_offset_with_length_header%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "encoded_value%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "4661": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "storage_value%0#0"
      ]
    },
    "4663": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "4665": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "encoded_value%0#0"
      ]
    },
    "4667": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "4668": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "updated_array%0#0",
        "\"dynamic_box\""
      ]
    },
    "4670": {
      "op": "box_del",
      "defined_out": [
        "updated_array%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "updated_array%0#0",
        "{box_del}"
      ]
    },
    "4671": {
      "op": "pop",
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "4672": {
      "op": "bytec 5 // \"dynamic_box\"",
      "stack_out": [
        "updated_array%0#0",
        "\"dynamic_box\""
      ]
    },
    "4674": {
      "op": "uncover 1",
      "stack_out": [
        "\"dynamic_box\"",
        "updated_array%0#0"
      ]
    },
    "4676": {
      "op": "box_put",
      "stack_out": []
    },
    "4677": {
      "retsub": true,
      "op": "retsub"
    },
    "4678": {
      "subroutine": "examples.box_storage.contract.BoxContract.write_dynamic_arr_struct",
      "params": {
        "index#0": "uint64",
        "value#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.write_dynamic_arr_struct",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "4681": {
      "op": "b examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0"
    },
    "4684": {
      "block": "examples.box_storage.contract.BoxContract.write_dynamic_arr_struct_block@0",
      "stack_in": [],
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "defined_out": [
        "\"dynamic_arr_struct\""
      ],
      "stack_out": [
        "\"dynamic_arr_struct\""
      ]
    },
    "4685": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "4686": {
      "error": "check self.dynamic_arr_struct exists",
      "op": "assert // check self.dynamic_arr_struct exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "4687": {
      "op": "frame_dig -1",
      "defined_out": [
        "storage_value%0#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "value#0 (copy)"
      ]
    },
    "4689": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4690": {
      "op": "cover 1",
      "defined_out": [
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0"
      ]
    },
    "4692": {
      "op": "dup",
      "defined_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "4693": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "8"
      ]
    },
    "4694": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "4695": {
      "op": "cover 1",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0"
      ]
    },
    "4697": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "4698": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%extract_uint16%0#0",
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "18"
      ]
    },
    "4700": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4701": {
      "op": "dig 1",
      "stack_out": [
        "encoded_value%0#0",
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "4703": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%extract_uint16%1#0",
        "storage_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "4705": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4707": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "4708": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%substring3%0#0",
        "encoded_value%0#0",
        "index#0 (copy)",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%substring3%0#0",
        "index#0 (copy)"
      ]
    },
    "4710": {
      "op": "intc_3 // 8",
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%substring3%0#0",
        "index#0 (copy)",
        "8"
      ]
    },
    "4711": {
      "op": "*",
      "defined_out": [
        "aggregate%substring3%0#0",
        "aggregate%write_offset%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "4712": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%substring3%0#0",
        "aggregate%write_offset%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%write_offset%0#0",
        "2"
      ]
    },
    "4713": {
      "op": "+",
      "defined_out": [
        "aggregate%substring3%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "encoded_value%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "storage_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "4714": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "encoded_value%0#0"
      ]
    },
    "4716": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%updated_array%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "4717": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "4719": {
      "op": "intc_3 // 8",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "storage_value%0#0 (copy)",
        "8"
      ]
    },
    "4720": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%updated_array%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4721": {
      "op": "dig 2",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "4723": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%item_offset%0#0",
        "aggregate%updated_array%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0 (copy)",
        "0"
      ]
    },
    "4724": {
      "op": "dig 2",
      "defined_out": [
        "0",
        "aggregate%item_offset%0#0",
        "aggregate%item_offset%0#0 (copy)",
        "aggregate%updated_array%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0 (copy)",
        "0",
        "aggregate%item_offset%0#0 (copy)"
      ]
    },
    "4726": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%updated_array%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%data_up_to_item%0#0"
      ]
    },
    "4727": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%data_up_to_item%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_array%0#0 (copy)",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%data_up_to_item%0#0",
        "aggregate%updated_array%0#0 (copy)"
      ]
    },
    "4729": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "4730": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4732": {
      "op": "dig 3",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "4734": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0 (copy)",
        "18"
      ]
    },
    "4736": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "4737": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4739": {
      "op": "dig 4",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "4741": {
      "op": "len",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%1#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%total_length%1#0"
      ]
    },
    "4742": {
      "op": "cover 1",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%1#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4744": {
      "op": "dig 5",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%1#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "4746": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%next_item_offset%0#0 (copy)",
        "aggregate%total_length%1#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%total_length%1#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0 (copy)",
        "aggregate%next_item_offset%0#0 (copy)"
      ]
    },
    "4748": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "storage_value%0#0 (copy)",
        "aggregate%next_item_offset%0#0 (copy)",
        "aggregate%total_length%1#0"
      ]
    },
    "4750": {
      "op": "substring3",
      "defined_out": [
        "aggregate%data_beyond_item%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%data_beyond_item%0#0"
      ]
    },
    "4751": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%data_beyond_item%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "4753": {
      "op": "uncover 1",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%data_beyond_item%0#0"
      ]
    },
    "4755": {
      "op": "concat",
      "defined_out": [
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%1#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "4756": {
      "op": "cover 4",
      "stack_out": [
        "aggregate%updated_data%1#0",
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "4758": {
      "op": "-",
      "defined_out": [
        "aggregate%old_value_length%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%updated_data%1#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "aggregate%updated_data%1#0",
        "storage_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%old_value_length%0#0"
      ]
    },
    "4759": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%updated_data%1#0",
        "storage_value%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "4761": {
      "op": "len",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%updated_data%1#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "aggregate%updated_data%1#0",
        "storage_value%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0"
      ]
    },
    "4762": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%1#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "storage_value%0#0"
      ]
    },
    "4764": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "aggregate%updated_data%1#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "storage_value%0#0",
        "18"
      ]
    },
    "4766": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%new_value_length%0#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%0#0",
        "aggregate%updated_data%1#0"
      ],
      "stack_out": [
        "aggregate%updated_data%1#0",
        "aggregate%old_value_length%0#0",
        "aggregate%new_value_length%0#0",
        "aggregate%tail_offset%0#0"
      ]
    },
    "4767": {
      "op": "+",
      "defined_out": [
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%1#0",
        "aggregate%updated_data%1#0"
      ],
      "stack_out": [
        "aggregate%updated_data%1#0",
        "aggregate%old_value_length%0#0",
        "aggregate%tail_offset%1#0"
      ]
    },
    "4768": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%updated_data%1#0",
        "aggregate%tail_offset%1#0",
        "aggregate%old_value_length%0#0"
      ]
    },
    "4770": {
      "op": "-",
      "defined_out": [
        "aggregate%tail_offset%2#0",
        "aggregate%updated_data%1#0"
      ],
      "stack_out": [
        "aggregate%updated_data%1#0",
        "aggregate%tail_offset%2#0"
      ]
    },
    "4771": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%updated_data%1#0"
      ],
      "stack_out": [
        "aggregate%updated_data%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "4772": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%1#0"
      ],
      "stack_out": [
        "aggregate%updated_data%1#0",
        "aggregate%tail_offset_bytes%0#0"
      ]
    },
    "4775": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "4777": {
      "op": "pushint 18 // 18",
      "stack_out": [
        "aggregate%tail_offset_bytes%0#0",
        "aggregate%updated_data%1#0",
        "18"
      ]
    },
    "4779": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%updated_data%1#0",
        "18",
        "aggregate%tail_offset_bytes%0#0"
      ]
    },
    "4781": {
      "op": "replace3",
      "defined_out": [
        "updated_tuple%0#0"
      ],
      "stack_out": [
        "updated_tuple%0#0"
      ]
    },
    "4782": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "updated_tuple%0#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "4783": {
      "op": "box_del",
      "defined_out": [
        "updated_tuple%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "updated_tuple%0#0",
        "{box_del}"
      ]
    },
    "4784": {
      "op": "pop",
      "stack_out": [
        "updated_tuple%0#0"
      ]
    },
    "4785": {
      "op": "bytec_1 // \"dynamic_arr_struct\"",
      "stack_out": [
        "updated_tuple%0#0",
        "\"dynamic_arr_struct\""
      ]
    },
    "4786": {
      "op": "uncover 1",
      "stack_out": [
        "\"dynamic_arr_struct\"",
        "updated_tuple%0#0"
      ]
    },
    "4788": {
      "op": "box_put",
      "stack_out": []
    },
    "4789": {
      "retsub": true,
      "op": "retsub"
    },
    "4790": {
      "subroutine": "examples.box_storage.contract.BoxContract.slice_box",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.slice_box",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "4793": {
      "op": "b examples.box_storage.contract.BoxContract.slice_box_block@0"
    },
    "4796": {
      "block": "examples.box_storage.contract.BoxContract.slice_box_block@0",
      "stack_in": [],
      "op": "bytec 17 // \"0\"",
      "defined_out": [
        "\"0\""
      ],
      "stack_out": [
        "\"0\""
      ]
    },
    "4798": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "4799": {
      "op": "pop",
      "stack_out": []
    },
    "4800": {
      "op": "bytec 17 // \"0\"",
      "stack_out": [
        "\"0\""
      ]
    },
    "4802": {
      "op": "pushbytes 0x54657374696e672074657374696e6720313233",
      "defined_out": [
        "\"0\"",
        "0x54657374696e672074657374696e6720313233"
      ],
      "stack_out": [
        "\"0\"",
        "0x54657374696e672074657374696e6720313233"
      ]
    },
    "4823": {
      "op": "box_put",
      "stack_out": []
    },
    "4824": {
      "op": "bytec 17 // \"0\"",
      "stack_out": [
        "\"0\""
      ]
    },
    "4826": {
      "op": "box_len",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "4827": {
      "op": "cover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "4829": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0"
      ]
    },
    "4830": {
      "op": "dig 1",
      "defined_out": [
        "0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0",
        "tmp%0#0 (copy)"
      ]
    },
    "4832": {
      "op": "<",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "4833": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "4835": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4836": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "0"
      ]
    },
    "4837": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "0",
        "tmp%2#0"
      ]
    },
    "4839": {
      "op": "select",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "4840": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%0#0"
      ]
    },
    "4842": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%0#0",
        "7"
      ]
    },
    "4844": {
      "op": "dig 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%0#0",
        "7",
        "tmp%0#0 (copy)"
      ]
    },
    "4846": {
      "op": "<",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "4847": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%0#0"
      ]
    },
    "4849": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%0#0",
        "7"
      ]
    },
    "4851": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%0#0",
        "7",
        "tmp%4#0"
      ]
    },
    "4853": {
      "op": "select",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "4854": {
      "op": "dig 1",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%3#0 (copy)"
      ]
    },
    "4856": {
      "op": "-",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%6#0"
      ]
    },
    "4857": {
      "op": "bytec 17 // \"0\"",
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "tmp%6#0",
        "\"0\""
      ]
    },
    "4859": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%6#0",
        "\"0\"",
        "tmp%3#0"
      ]
    },
    "4861": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "\"0\"",
        "tmp%3#0",
        "tmp%6#0"
      ]
    },
    "4863": {
      "op": "box_extract",
      "defined_out": [
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%7#0"
      ]
    },
    "4864": {
      "op": "pushbytes 0x54657374696e67",
      "defined_out": [
        "0x54657374696e67",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%7#0",
        "0x54657374696e67"
      ]
    },
    "4873": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%8#0"
      ]
    },
    "4874": {
      "op": "assert",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4875": {
      "op": "bytec 18 // \"Hello\"",
      "defined_out": [
        "\"Hello\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\"Hello\""
      ]
    },
    "4877": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%length%0#0"
      ]
    },
    "4878": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "4879": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "4882": {
      "op": "bytec 18 // \"Hello\"",
      "stack_out": [
        "tmp%1#0",
        "aggregate%length_uint16%0#0",
        "\"Hello\""
      ]
    },
    "4884": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%9#0"
      ]
    },
    "4885": {
      "op": "bytec_3 // 0x424f585f43",
      "defined_out": [
        "0x424f585f43",
        "tmp%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%9#0",
        "0x424f585f43"
      ]
    },
    "4886": {
      "op": "box_del",
      "stack_out": [
        "tmp%1#0",
        "tmp%9#0",
        "{box_del}"
      ]
    },
    "4887": {
      "op": "pop",
      "stack_out": [
        "tmp%1#0",
        "tmp%9#0"
      ]
    },
    "4888": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "tmp%1#0",
        "tmp%9#0",
        "0x424f585f43"
      ]
    },
    "4889": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "0x424f585f43",
        "tmp%9#0"
      ]
    },
    "4891": {
      "op": "box_put",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4892": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "tmp%1#0",
        "0x424f585f43"
      ]
    },
    "4893": {
      "op": "box_len",
      "defined_out": [
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "4894": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%10#0"
      ]
    },
    "4896": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "2"
      ]
    },
    "4897": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "2",
        "tmp%10#0 (copy)"
      ]
    },
    "4899": {
      "op": "<",
      "defined_out": [
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "4900": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%10#0"
      ]
    },
    "4902": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%10#0",
        "tmp%10#0 (copy)"
      ]
    },
    "4903": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "2"
      ]
    },
    "4904": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%10#0 (copy)",
        "2",
        "tmp%12#0"
      ]
    },
    "4906": {
      "op": "select",
      "defined_out": [
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%13#0"
      ]
    },
    "4907": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%10#0"
      ]
    },
    "4909": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%10#0",
        "10"
      ]
    },
    "4911": {
      "op": "dig 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%10#0",
        "10",
        "tmp%10#0 (copy)"
      ]
    },
    "4913": {
      "op": "<",
      "defined_out": [
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%10#0",
        "tmp%14#0"
      ]
    },
    "4914": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%10#0"
      ]
    },
    "4916": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%10#0",
        "10"
      ]
    },
    "4918": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%10#0",
        "10",
        "tmp%14#0"
      ]
    },
    "4920": {
      "op": "select",
      "defined_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "4921": {
      "op": "dig 1",
      "defined_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%13#0 (copy)",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%15#0",
        "tmp%13#0 (copy)"
      ]
    },
    "4923": {
      "op": "-",
      "defined_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%16#0"
      ]
    },
    "4924": {
      "op": "bytec_3 // 0x424f585f43",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%13#0",
        "tmp%16#0",
        "0x424f585f43"
      ]
    },
    "4925": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%16#0",
        "0x424f585f43",
        "tmp%13#0"
      ]
    },
    "4927": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "0x424f585f43",
        "tmp%13#0",
        "tmp%16#0"
      ]
    },
    "4929": {
      "op": "box_extract",
      "defined_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%17#0"
      ]
    },
    "4930": {
      "op": "bytec 18 // 0x48656c6c6f",
      "defined_out": [
        "0x48656c6c6f",
        "tmp%1#0",
        "tmp%11#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%17#0",
        "0x48656c6c6f"
      ]
    },
    "4932": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0",
        "tmp%18#0"
      ]
    },
    "4933": {
      "op": "assert",
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0"
      ]
    },
    "4934": {
      "retsub": true,
      "op": "retsub"
    },
    "4935": {
      "subroutine": "examples.box_storage.contract.BoxContract.arc4_box",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.arc4_box",
      "stack_in": [],
      "op": "b examples.box_storage.contract.BoxContract.arc4_box_block@0"
    },
    "4938": {
      "block": "examples.box_storage.contract.BoxContract.arc4_box_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "4939": {
      "op": "bytec 14 // 0x00",
      "defined_out": [
        "0x",
        "0x00"
      ],
      "stack_out": [
        "0x",
        "0x00"
      ]
    },
    "4941": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "4942": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "0x01"
      ]
    },
    "4945": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "4946": {
      "op": "pushbytes 0x02",
      "defined_out": [
        "0x02",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "0x02"
      ]
    },
    "4949": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0"
      ]
    },
    "4950": {
      "op": "pushbytes 0x03",
      "defined_out": [
        "0x03",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "0x03"
      ]
    },
    "4953": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "4954": {
      "op": "bytec 12 // 0x64",
      "defined_out": [
        "0x64",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "0x64"
      ]
    },
    "4956": {
      "op": "uncover 1",
      "stack_out": [
        "0x64",
        "encoded_array%0#0"
      ]
    },
    "4958": {
      "op": "box_put",
      "stack_out": []
    },
    "4959": {
      "op": "bytec 12 // 0x64",
      "stack_out": [
        "0x64"
      ]
    },
    "4961": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "4962": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "4963": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0"
      ]
    },
    "4964": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "0",
        "1"
      ]
    },
    "4965": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "4966": {
      "op": "intc_1 // 1",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%bytes_offset%0#0",
        "1"
      ]
    },
    "4967": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "4968": {
      "op": "bytec 14 // 0x00",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0x00"
      ]
    },
    "4970": {
      "op": "b==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4971": {
      "op": "assert",
      "stack_out": []
    },
    "4972": {
      "op": "bytec 12 // 0x64",
      "stack_out": [
        "0x64"
      ]
    },
    "4974": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "4975": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0"
      ]
    },
    "4976": {
      "op": "intc_1 // 1",
      "stack_out": [
        "storage_value%1#0",
        "1"
      ]
    },
    "4977": {
      "op": "intc_1 // 1",
      "stack_out": [
        "storage_value%1#0",
        "1",
        "1"
      ]
    },
    "4978": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "storage_value%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "4979": {
      "op": "intc_1 // 1",
      "stack_out": [
        "storage_value%1#0",
        "aggregate%bytes_offset%1#0",
        "1"
      ]
    },
    "4980": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0"
      ]
    },
    "4981": {
      "op": "pushbytes 0x01",
      "stack_out": [
        "reinterpret_biguint%2#0",
        "0x01"
      ]
    },
    "4984": {
      "op": "b==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4985": {
      "op": "assert",
      "stack_out": []
    },
    "4986": {
      "op": "bytec 12 // 0x64",
      "stack_out": [
        "0x64"
      ]
    },
    "4988": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ],
      "stack_out": [
        "aggregate%box_get%4#0",
        "aggregate%box_get%5#0"
      ]
    },
    "4989": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0"
      ]
    },
    "4990": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "2"
      ]
    },
    "4991": {
      "op": "intc_1 // 1",
      "stack_out": [
        "storage_value%2#0",
        "2",
        "1"
      ]
    },
    "4992": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%2#0",
        "storage_value%2#0"
      ],
      "stack_out": [
        "storage_value%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "4993": {
      "op": "intc_1 // 1",
      "stack_out": [
        "storage_value%2#0",
        "aggregate%bytes_offset%2#0",
        "1"
      ]
    },
    "4994": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "reinterpret_biguint%4#0"
      ]
    },
    "4995": {
      "op": "pushbytes 0x02",
      "stack_out": [
        "reinterpret_biguint%4#0",
        "0x02"
      ]
    },
    "4998": {
      "op": "b==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "4999": {
      "op": "assert",
      "stack_out": []
    },
    "5000": {
      "op": "bytec 12 // 0x64",
      "stack_out": [
        "0x64"
      ]
    },
    "5002": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ],
      "stack_out": [
        "aggregate%box_get%6#0",
        "aggregate%box_get%7#0"
      ]
    },
    "5003": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "defined_out": [
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0"
      ]
    },
    "5004": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "3"
      ]
    },
    "5006": {
      "op": "intc_1 // 1",
      "stack_out": [
        "storage_value%3#0",
        "3",
        "1"
      ]
    },
    "5007": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%3#0",
        "storage_value%3#0"
      ],
      "stack_out": [
        "storage_value%3#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "5008": {
      "op": "intc_1 // 1",
      "stack_out": [
        "storage_value%3#0",
        "aggregate%bytes_offset%3#0",
        "1"
      ]
    },
    "5009": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "reinterpret_biguint%6#0"
      ]
    },
    "5010": {
      "op": "pushbytes 0x03",
      "stack_out": [
        "reinterpret_biguint%6#0",
        "0x03"
      ]
    },
    "5013": {
      "op": "b==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "5014": {
      "op": "assert",
      "stack_out": []
    },
    "5015": {
      "retsub": true,
      "op": "retsub"
    },
    "5016": {
      "subroutine": "examples.box_storage.contract.BoxContract.test_box_ref",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.test_box_ref",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "5019": {
      "op": "b examples.box_storage.contract.BoxContract.test_box_ref_block@0"
    },
    "5022": {
      "block": "examples.box_storage.contract.BoxContract.test_box_ref_block@0",
      "stack_in": [],
      "op": "bytec 4 // \"blob\"",
      "defined_out": [
        "\"blob\""
      ],
      "stack_out": [
        "\"blob\""
      ]
    },
    "5024": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "5025": {
      "op": "!",
      "defined_out": [
        "_%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "tmp%0#0"
      ]
    },
    "5026": {
      "error": "no data",
      "op": "assert // no data",
      "stack_out": [
        "_%0#0"
      ]
    },
    "5027": {
      "op": "bytec 4 // 0x626c6f62",
      "defined_out": [
        "0x626c6f62",
        "_%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "0x626c6f62"
      ]
    },
    "5029": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "5030": {
      "op": "!",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "tmp%1#0"
      ]
    },
    "5031": {
      "error": "no data",
      "op": "assert // no data",
      "stack_out": [
        "_%0#0",
        "_%1#0"
      ]
    },
    "5032": {
      "op": "bytec 4 // 0x626c6f62",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "0x626c6f62"
      ]
    },
    "5034": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "maybe_exists%2#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "maybe_exists%2#0"
      ]
    },
    "5035": {
      "op": "!",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "tmp%2#0"
      ]
    },
    "5036": {
      "error": "no data",
      "op": "assert // no data",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0"
      ]
    },
    "5037": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "\"blob\""
      ]
    },
    "5039": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "maybe_exists%3#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "maybe_exists%3#0"
      ]
    },
    "5040": {
      "op": "!",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "tmp%3#0"
      ]
    },
    "5041": {
      "error": "no data",
      "op": "assert // no data",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0"
      ]
    },
    "5042": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "\"blob\""
      ]
    },
    "5044": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "\"blob\"",
        "32",
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "\"blob\"",
        "32"
      ]
    },
    "5046": {
      "op": "box_create",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "tmp%4#0"
      ]
    },
    "5047": {
      "op": "assert",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0"
      ]
    },
    "5048": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "\"blob\""
      ]
    },
    "5050": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "maybe_exists%4#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "maybe_exists%4#0"
      ]
    },
    "5051": {
      "error": "has data",
      "op": "assert // has data",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0"
      ]
    },
    "5052": {
      "op": "txn Sender",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "sender_bytes#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "sender_bytes#0"
      ]
    },
    "5054": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "sender_bytes#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "sender_bytes#0",
        "tmp%6#0"
      ]
    },
    "5056": {
      "op": "cover 1",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ]
    },
    "5058": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\""
      ]
    },
    "5060": {
      "op": "intc_0 // 0",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\"",
        "0"
      ]
    },
    "5061": {
      "op": "dig 2",
      "defined_out": [
        "\"blob\"",
        "0",
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "sender_bytes#0 (copy)"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\"",
        "0",
        "sender_bytes#0 (copy)"
      ]
    },
    "5063": {
      "op": "box_replace",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ]
    },
    "5064": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\""
      ]
    },
    "5066": {
      "op": "pushint 8000 // 8000",
      "defined_out": [
        "\"blob\"",
        "8000",
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\"",
        "8000"
      ]
    },
    "5069": {
      "op": "box_resize",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ]
    },
    "5070": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\""
      ]
    },
    "5072": {
      "op": "intc_0 // 0",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\"",
        "0"
      ]
    },
    "5073": {
      "op": "intc_0 // 0",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\"",
        "0",
        "0"
      ]
    },
    "5074": {
      "op": "dig 4",
      "defined_out": [
        "\"blob\"",
        "0",
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "app_address#0 (copy)",
        "sender_bytes#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\"",
        "0",
        "0",
        "app_address#0 (copy)"
      ]
    },
    "5076": {
      "op": "box_splice",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ]
    },
    "5077": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\""
      ]
    },
    "5079": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "\"blob\"",
        "64",
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\"",
        "64"
      ]
    },
    "5081": {
      "op": "bytec 13 // 0x68656c6c6f",
      "defined_out": [
        "\"blob\"",
        "0x68656c6c6f",
        "64",
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\"",
        "64",
        "0x68656c6c6f"
      ]
    },
    "5083": {
      "op": "box_replace",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ]
    },
    "5084": {
      "op": "bytec 13 // 0x68656c6c6f",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "0x68656c6c6f"
      ]
    },
    "5086": {
      "op": "len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%7#0"
      ]
    },
    "5087": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%7#0",
        "64"
      ]
    },
    "5089": {
      "op": "+",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%8#0"
      ]
    },
    "5090": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%8#0",
        "\"blob\""
      ]
    },
    "5092": {
      "op": "intc_0 // 0",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%8#0",
        "\"blob\"",
        "0"
      ]
    },
    "5093": {
      "op": "uncover 2",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\"",
        "0",
        "tmp%8#0"
      ]
    },
    "5095": {
      "op": "box_extract",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "prefix#0",
        "sender_bytes#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "prefix#0"
      ]
    },
    "5096": {
      "op": "dig 2",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "prefix#0",
        "app_address#0 (copy)"
      ]
    },
    "5098": {
      "op": "dig 2",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "prefix#0",
        "app_address#0 (copy)",
        "sender_bytes#0 (copy)"
      ]
    },
    "5100": {
      "op": "concat",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "prefix#0",
        "sender_bytes#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "prefix#0",
        "tmp%10#0"
      ]
    },
    "5101": {
      "op": "bytec 13 // 0x68656c6c6f",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "prefix#0",
        "tmp%10#0",
        "0x68656c6c6f"
      ]
    },
    "5103": {
      "op": "concat",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "prefix#0",
        "sender_bytes#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "prefix#0",
        "tmp%11#0"
      ]
    },
    "5104": {
      "op": "==",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%12#0"
      ]
    },
    "5105": {
      "op": "assert",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ]
    },
    "5106": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\""
      ]
    },
    "5108": {
      "op": "box_del",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%13#0"
      ]
    },
    "5109": {
      "op": "assert",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ]
    },
    "5110": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\""
      ]
    },
    "5112": {
      "op": "bytec 4 // 0x626c6f62",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\"",
        "0x626c6f62"
      ]
    },
    "5114": {
      "op": "==",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%14#0"
      ]
    },
    "5115": {
      "op": "assert",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ]
    },
    "5116": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\""
      ]
    },
    "5118": {
      "op": "box_get",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "exists#0",
        "sender_bytes#0",
        "value#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "value#0",
        "exists#0"
      ]
    },
    "5119": {
      "op": "!",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%15#0",
        "value#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "value#0",
        "tmp%15#0"
      ]
    },
    "5120": {
      "op": "assert",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "value#0"
      ]
    },
    "5121": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "value#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "value#0",
        "0x"
      ]
    },
    "5122": {
      "op": "==",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%16#0"
      ]
    },
    "5123": {
      "op": "assert",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ]
    },
    "5124": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "\"blob\""
      ]
    },
    "5126": {
      "op": "box_get",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "maybe_exists%6#0",
        "maybe_value%1#0",
        "sender_bytes#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "maybe_value%1#0",
        "maybe_exists%6#0"
      ]
    },
    "5127": {
      "op": "cover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "maybe_exists%6#0",
        "maybe_value%1#0"
      ]
    },
    "5129": {
      "op": "dig 2",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "maybe_exists%6#0",
        "maybe_value%1#0",
        "sender_bytes#0 (copy)"
      ]
    },
    "5131": {
      "op": "uncover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "maybe_exists%6#0",
        "sender_bytes#0 (copy)",
        "maybe_value%1#0"
      ]
    },
    "5133": {
      "op": "uncover 2",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "sender_bytes#0 (copy)",
        "maybe_value%1#0",
        "maybe_exists%6#0"
      ]
    },
    "5135": {
      "op": "select",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "state_get%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "state_get%0#0"
      ]
    },
    "5136": {
      "op": "dig 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "state_get%0#0",
        "sender_bytes#0 (copy)"
      ]
    },
    "5138": {
      "op": "==",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0",
        "tmp%17#0"
      ]
    },
    "5139": {
      "op": "assert",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "app_address#0",
        "sender_bytes#0"
      ]
    },
    "5140": {
      "op": "uncover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "sender_bytes#0",
        "app_address#0"
      ]
    },
    "5142": {
      "op": "concat",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "tmp%18#0"
      ]
    },
    "5143": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "tmp%18#0",
        "\"blob\""
      ]
    },
    "5145": {
      "op": "uncover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "\"blob\"",
        "tmp%18#0"
      ]
    },
    "5147": {
      "op": "box_put",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0"
      ]
    },
    "5148": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "\"blob\""
      ]
    },
    "5150": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "maybe_exists%7#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "maybe_exists%7#0"
      ]
    },
    "5151": {
      "error": "Blob exists",
      "op": "assert // Blob exists",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0"
      ]
    },
    "5152": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "\"blob\""
      ]
    },
    "5154": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "5155": {
      "error": "check BoxRef exists",
      "op": "assert // check BoxRef exists",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "value%0#0"
      ]
    },
    "5156": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "value%0#0",
        "64"
      ]
    },
    "5158": {
      "op": "==",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "tmp%19#0"
      ]
    },
    "5159": {
      "op": "assert",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0"
      ]
    },
    "5160": {
      "op": "bytec 4 // \"blob\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "\"blob\""
      ]
    },
    "5162": {
      "callsub": "examples.box_storage.contract.get_box_ref_length",
      "op": "callsub get_box_ref_length",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "tmp%20#0"
      ]
    },
    "5165": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "tmp%20#0",
        "64"
      ]
    },
    "5167": {
      "op": "==",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "tmp%21#0"
      ]
    },
    "5168": {
      "op": "assert",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0"
      ]
    },
    "5169": {
      "op": "bytec 19 // \"box_ref\"",
      "defined_out": [
        "\"box_ref\"",
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "\"box_ref\""
      ]
    },
    "5171": {
      "op": "pushint 32 // 32",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "\"box_ref\"",
        "32"
      ]
    },
    "5173": {
      "op": "box_create",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "{box_create}"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "{box_create}"
      ]
    },
    "5174": {
      "op": "pop",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0"
      ]
    },
    "5175": {
      "op": "bytec 19 // \"box_ref\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "\"box_ref\""
      ]
    },
    "5177": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "_%6#0",
        "maybe_exists%8#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "_%6#0",
        "maybe_exists%8#0"
      ]
    },
    "5178": {
      "error": "has data",
      "op": "assert // has data",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "_%6#0"
      ]
    },
    "5179": {
      "op": "bytec 19 // \"box_ref\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "_%6#0",
        "\"box_ref\""
      ]
    },
    "5181": {
      "op": "box_del",
      "defined_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "_%6#0",
        "{box_del}"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "_%6#0",
        "{box_del}"
      ]
    },
    "5182": {
      "op": "pop",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "_%2#0",
        "_%3#0",
        "_%4#0",
        "_%5#0",
        "_%6#0"
      ]
    },
    "5183": {
      "retsub": true,
      "op": "retsub"
    },
    "5184": {
      "subroutine": "examples.box_storage.contract.BoxContract.box_map_test",
      "params": {},
      "block": "examples.box_storage.contract.BoxContract.box_map_test",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "5187": {
      "op": "b examples.box_storage.contract.BoxContract.box_map_test_block@0"
    },
    "5190": {
      "block": "examples.box_storage.contract.BoxContract.box_map_test_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5191": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "5192": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"\""
      ]
    },
    "5193": {
      "op": "uncover 1",
      "stack_out": [
        "\"\"",
        "encoded_value%0#0"
      ]
    },
    "5195": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "5196": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "5197": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "5198": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "5199": {
      "op": "bytec 20 // \"Hmmmmm\"",
      "defined_out": [
        "\"Hmmmmm\"",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"Hmmmmm\""
      ]
    },
    "5201": {
      "op": "box_put",
      "stack_out": []
    },
    "5202": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "5203": {
      "op": "itob",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "5204": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "encoded_value%1#0",
        "\"\""
      ]
    },
    "5205": {
      "op": "uncover 1",
      "stack_out": [
        "\"\"",
        "encoded_value%1#0"
      ]
    },
    "5207": {
      "op": "concat",
      "defined_out": [
        "box_0#0"
      ],
      "stack_out": [
        "box_0#0"
      ]
    },
    "5208": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_0#0",
        "0"
      ]
    },
    "5209": {
      "op": "itob",
      "defined_out": [
        "box_0#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "box_0#0",
        "encoded_value%2#0"
      ]
    },
    "5210": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "box_0#0",
        "encoded_value%2#0",
        "\"\""
      ]
    },
    "5211": {
      "op": "uncover 1",
      "stack_out": [
        "box_0#0",
        "\"\"",
        "encoded_value%2#0"
      ]
    },
    "5213": {
      "op": "concat",
      "defined_out": [
        "box_0#0",
        "box_prefixed_key%2#0"
      ],
      "stack_out": [
        "box_0#0",
        "box_prefixed_key%2#0"
      ]
    },
    "5214": {
      "op": "box_len",
      "defined_out": [
        "box_0#0",
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "box_0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "5215": {
      "error": "check self.box_map entry exists",
      "op": "assert // check self.box_map entry exists",
      "stack_out": [
        "box_0#0",
        "value%0#0"
      ]
    },
    "5216": {
      "op": "bytec 20 // \"Hmmmmm\"",
      "stack_out": [
        "box_0#0",
        "value%0#0",
        "\"Hmmmmm\""
      ]
    },
    "5218": {
      "op": "len",
      "defined_out": [
        "box_0#0",
        "tmp%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "box_0#0",
        "value%0#0",
        "tmp%0#0"
      ]
    },
    "5219": {
      "op": "==",
      "defined_out": [
        "box_0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_0#0",
        "tmp%1#0"
      ]
    },
    "5220": {
      "op": "assert",
      "stack_out": [
        "box_0#0"
      ]
    },
    "5221": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_0#0",
        "0"
      ]
    },
    "5222": {
      "op": "itob",
      "defined_out": [
        "box_0#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "box_0#0",
        "encoded_value%3#0"
      ]
    },
    "5223": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "box_0#0",
        "encoded_value%3#0",
        "\"\""
      ]
    },
    "5224": {
      "op": "uncover 1",
      "stack_out": [
        "box_0#0",
        "\"\"",
        "encoded_value%3#0"
      ]
    },
    "5226": {
      "op": "concat",
      "defined_out": [
        "box_0#0",
        "box_prefixed_key%3#0"
      ],
      "stack_out": [
        "box_0#0",
        "box_prefixed_key%3#0"
      ]
    },
    "5227": {
      "op": "box_len",
      "defined_out": [
        "box_0#0",
        "check%1#0",
        "value%1#0"
      ],
      "stack_out": [
        "box_0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "5228": {
      "error": "check self.box_map entry exists",
      "op": "assert // check self.box_map entry exists",
      "stack_out": [
        "box_0#0",
        "value%1#0"
      ]
    },
    "5229": {
      "op": "uncover 1",
      "stack_out": [
        "value%1#0",
        "box_0#0"
      ]
    },
    "5231": {
      "op": "box_len",
      "defined_out": [
        "check%2#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "value%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "5232": {
      "error": "check Box exists",
      "op": "assert // check Box exists",
      "stack_out": [
        "value%1#0",
        "value%2#0"
      ]
    },
    "5233": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "5234": {
      "op": "assert",
      "stack_out": []
    },
    "5235": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "5236": {
      "op": "itob",
      "defined_out": [
        "encoded_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0"
      ]
    },
    "5237": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "encoded_value%4#0",
        "\"\""
      ]
    },
    "5238": {
      "op": "uncover 1",
      "stack_out": [
        "\"\"",
        "encoded_value%4#0"
      ]
    },
    "5240": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%4#0"
      ]
    },
    "5241": {
      "op": "box_len",
      "defined_out": [
        "check%3#0",
        "value%3#0"
      ],
      "stack_out": [
        "value%3#0",
        "check%3#0"
      ]
    },
    "5242": {
      "error": "check self.box_map entry exists",
      "op": "assert // check self.box_map entry exists",
      "stack_out": [
        "value%3#0"
      ]
    },
    "5243": {
      "op": "bytec 20 // \"Hmmmmm\"",
      "stack_out": [
        "value%3#0",
        "\"Hmmmmm\""
      ]
    },
    "5245": {
      "op": "len",
      "defined_out": [
        "tmp%3#0",
        "value%3#0"
      ],
      "stack_out": [
        "value%3#0",
        "tmp%3#0"
      ]
    },
    "5246": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "5247": {
      "op": "assert",
      "stack_out": []
    },
    "5248": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "5249": {
      "op": "itob",
      "defined_out": [
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0"
      ]
    },
    "5250": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "encoded_value%5#0",
        "\"\""
      ]
    },
    "5251": {
      "op": "uncover 1",
      "stack_out": [
        "\"\"",
        "encoded_value%5#0"
      ]
    },
    "5253": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%5#0"
      ]
    },
    "5254": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "5255": {
      "op": "cover 1",
      "stack_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "5257": {
      "op": "bytec 22 // \"default\"",
      "defined_out": [
        "\"default\"",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "\"default\""
      ]
    },
    "5259": {
      "op": "uncover 1",
      "stack_out": [
        "maybe_exists%0#0",
        "\"default\"",
        "maybe_value%0#0"
      ]
    },
    "5261": {
      "op": "uncover 2",
      "stack_out": [
        "\"default\"",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "5263": {
      "op": "select",
      "defined_out": [
        "state_get%0#0"
      ],
      "stack_out": [
        "state_get%0#0"
      ]
    },
    "5264": {
      "op": "bytec 22 // \"default\"",
      "stack_out": [
        "state_get%0#0",
        "\"default\""
      ]
    },
    "5266": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "5267": {
      "op": "assert",
      "stack_out": []
    },
    "5268": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "5269": {
      "op": "itob",
      "defined_out": [
        "encoded_value%6#0"
      ],
      "stack_out": [
        "encoded_value%6#0"
      ]
    },
    "5270": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "encoded_value%6#0",
        "\"\""
      ]
    },
    "5271": {
      "op": "uncover 1",
      "stack_out": [
        "\"\"",
        "encoded_value%6#0"
      ]
    },
    "5273": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%6#0"
      ]
    },
    "5274": {
      "op": "box_get",
      "defined_out": [
        "exists#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "exists#0"
      ]
    },
    "5275": {
      "op": "!",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "tmp%6#0"
      ]
    },
    "5276": {
      "op": "assert",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "5277": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "0"
      ]
    },
    "5278": {
      "op": "itob",
      "defined_out": [
        "encoded_value%7#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "encoded_value%7#0"
      ]
    },
    "5279": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "maybe_value%1#0",
        "encoded_value%7#0",
        "\"\""
      ]
    },
    "5280": {
      "op": "uncover 1",
      "stack_out": [
        "maybe_value%1#0",
        "\"\"",
        "encoded_value%7#0"
      ]
    },
    "5282": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%7#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "box_prefixed_key%7#0"
      ]
    },
    "5283": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "maybe_exists%2#0"
      ]
    },
    "5284": {
      "op": "assert",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0"
      ]
    },
    "5285": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "\"\""
      ]
    },
    "5286": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "\"\"",
        "0x",
        "_%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "\"\"",
        "0x"
      ]
    },
    "5287": {
      "op": "==",
      "defined_out": [
        "_%0#0",
        "maybe_value%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "tmp%7#0"
      ]
    },
    "5288": {
      "op": "assert",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0"
      ]
    },
    "5289": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "1"
      ]
    },
    "5290": {
      "op": "itob",
      "defined_out": [
        "_%0#0",
        "encoded_value%8#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "encoded_value%8#0"
      ]
    },
    "5291": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "encoded_value%8#0",
        "0x"
      ]
    },
    "5292": {
      "op": "uncover 1",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "0x",
        "encoded_value%8#0"
      ]
    },
    "5294": {
      "op": "concat",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%8#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "box_prefixed_key%8#0"
      ]
    },
    "5295": {
      "op": "dup",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%8#0",
        "box_prefixed_key%8#0 (copy)",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "box_prefixed_key%8#0",
        "box_prefixed_key%8#0 (copy)"
      ]
    },
    "5296": {
      "op": "box_del",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "box_prefixed_key%8#0",
        "{box_del}"
      ]
    },
    "5297": {
      "op": "pop",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "box_prefixed_key%8#0"
      ]
    },
    "5298": {
      "op": "bytec 13 // \"hello\"",
      "defined_out": [
        "\"hello\"",
        "_%0#0",
        "box_prefixed_key%8#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "box_prefixed_key%8#0",
        "\"hello\""
      ]
    },
    "5300": {
      "op": "box_put",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0"
      ]
    },
    "5301": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "0x"
      ]
    },
    "5302": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "0x",
        "0"
      ]
    },
    "5303": {
      "callsub": "examples.box_storage.contract.get_box_map_value_from_key_plus_1",
      "op": "callsub get_box_map_value_from_key_plus_1",
      "defined_out": [
        "_%0#0",
        "maybe_value%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "tmp%8#0"
      ]
    },
    "5306": {
      "op": "bytec 13 // \"hello\"",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "tmp%8#0",
        "\"hello\""
      ]
    },
    "5308": {
      "op": "==",
      "defined_out": [
        "_%0#0",
        "maybe_value%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "tmp%9#0"
      ]
    },
    "5309": {
      "op": "assert",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0"
      ]
    },
    "5310": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "1"
      ]
    },
    "5311": {
      "op": "itob",
      "defined_out": [
        "_%0#0",
        "encoded_value%9#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "encoded_value%9#0"
      ]
    },
    "5312": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "encoded_value%9#0",
        "0x"
      ]
    },
    "5313": {
      "op": "uncover 1",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "0x",
        "encoded_value%9#0"
      ]
    },
    "5315": {
      "op": "concat",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%9#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "box_prefixed_key%9#0"
      ]
    },
    "5316": {
      "op": "box_del",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0",
        "{box_del}"
      ]
    },
    "5317": {
      "op": "pop",
      "stack_out": [
        "maybe_value%1#0",
        "_%0#0"
      ]
    },
    "5318": {
      "retsub": true,
      "op": "retsub"
    },
    "5319": {
      "subroutine": "examples.box_storage.contract.BoxContract.box_map_set",
      "params": {
        "key#0": "uint64",
        "value#0": "bytes"
      },
      "block": "examples.box_storage.contract.BoxContract.box_map_set",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "5322": {
      "op": "b examples.box_storage.contract.BoxContract.box_map_set_block@0"
    },
    "5325": {
      "block": "examples.box_storage.contract.BoxContract.box_map_set_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0 (copy)"
      ]
    },
    "5327": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "5328": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"\""
      ]
    },
    "5329": {
      "op": "uncover 1",
      "stack_out": [
        "\"\"",
        "encoded_value%0#0"
      ]
    },
    "5331": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "5332": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "5333": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "5334": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "5335": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "value#0 (copy)"
      ]
    },
    "5337": {
      "op": "box_put",
      "stack_out": []
    },
    "5338": {
      "retsub": true,
      "op": "retsub"
    },
    "5339": {
      "subroutine": "examples.box_storage.contract.BoxContract.box_map_get",
      "params": {
        "key#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.box_map_get",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5342": {
      "op": "b examples.box_storage.contract.BoxContract.box_map_get_block@0"
    },
    "5345": {
      "block": "examples.box_storage.contract.BoxContract.box_map_get_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0 (copy)"
      ]
    },
    "5347": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "5348": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"\""
      ]
    },
    "5349": {
      "op": "uncover 1",
      "stack_out": [
        "\"\"",
        "encoded_value%0#0"
      ]
    },
    "5351": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "5352": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "5353": {
      "error": "check self.box_map entry exists",
      "op": "assert // check self.box_map entry exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "5354": {
      "retsub": true,
      "op": "retsub"
    },
    "5355": {
      "subroutine": "examples.box_storage.contract.BoxContract.box_map_del",
      "params": {
        "key#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.box_map_del",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5358": {
      "op": "b examples.box_storage.contract.BoxContract.box_map_del_block@0"
    },
    "5361": {
      "block": "examples.box_storage.contract.BoxContract.box_map_del_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0 (copy)"
      ]
    },
    "5363": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "5364": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"\""
      ]
    },
    "5365": {
      "op": "uncover 1",
      "stack_out": [
        "\"\"",
        "encoded_value%0#0"
      ]
    },
    "5367": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "5368": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "5369": {
      "op": "pop",
      "stack_out": []
    },
    "5370": {
      "retsub": true,
      "op": "retsub"
    },
    "5371": {
      "subroutine": "examples.box_storage.contract.BoxContract.box_map_exists",
      "params": {
        "key#0": "uint64"
      },
      "block": "examples.box_storage.contract.BoxContract.box_map_exists",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5374": {
      "op": "b examples.box_storage.contract.BoxContract.box_map_exists_block@0"
    },
    "5377": {
      "block": "examples.box_storage.contract.BoxContract.box_map_exists_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0 (copy)"
      ]
    },
    "5379": {
      "op": "itob",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "5380": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "\"\""
      ]
    },
    "5381": {
      "op": "uncover 1",
      "stack_out": [
        "\"\"",
        "encoded_value%0#0"
      ]
    },
    "5383": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "5384": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "5385": {
      "op": "uncover 1"
    },
    "5387": {
      "retsub": true,
      "op": "retsub"
    },
    "5388": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "b approval_program_block@0"
    },
    "5391": {
      "block": "approval_program_block@0",
      "stack_in": [],
      "op": "b approval_program_block@1"
    },
    "5394": {
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "5396": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "5397": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "5398": {
      "op": "bz approval_program___algopy_default_create@43",
      "stack_out": []
    },
    "5401": {
      "op": "b approval_program_abi_routing@2"
    },
    "5404": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "5406": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "5407": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "5408": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "5409": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "5411": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "5412": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "5413": {
      "op": "bz approval_program_create_NoOp@41",
      "stack_out": []
    },
    "5416": {
      "op": "b approval_program_call_NoOp@3"
    },
    "5419": {
      "block": "approval_program_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "5422": {
      "op": "pushbytes 0x7d37296e // method \"set_boxes(uint64,byte[],string)void\"",
      "defined_out": [
        "Method(set_boxes(uint64,byte[],string)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)"
      ]
    },
    "5428": {
      "op": "pushbytes 0x33325d3d // method \"check_keys()void\"",
      "defined_out": [
        "Method(check_keys()void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)"
      ]
    },
    "5434": {
      "op": "pushbytes 0x0199408d // method \"create_many_ints()void\"",
      "defined_out": [
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)"
      ]
    },
    "5440": {
      "op": "pushbytes 0x772059ca // method \"set_many_ints(uint64,uint64)void\"",
      "defined_out": [
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)"
      ]
    },
    "5446": {
      "op": "pushbytes 0x01263df6 // method \"sum_many_ints()uint64\"",
      "defined_out": [
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)"
      ]
    },
    "5452": {
      "op": "pushbytes 0xd566c632 // method \"delete_boxes()void\"",
      "defined_out": [
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)"
      ]
    },
    "5458": {
      "op": "pushbytes 0xfabcb885 // method \"indirect_extract_and_replace()void\"",
      "defined_out": [
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)"
      ]
    },
    "5464": {
      "op": "pushbytes 0xa6174812 // method \"read_boxes()(uint64,byte[],string,uint64)\"",
      "defined_out": [
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))"
      ]
    },
    "5470": {
      "op": "pushbytes 0xf13dd937 // method \"boxes_exist()(bool,bool,bool,bool)\"",
      "defined_out": [
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))"
      ]
    },
    "5476": {
      "op": "pushbytes 0x5ab60f2e // method \"create_dynamic_arr_struct()void\"",
      "defined_out": [
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)"
      ]
    },
    "5482": {
      "op": "pushbytes 0xf07a0064 // method \"delete_dynamic_arr_struct()void\"",
      "defined_out": [
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)"
      ]
    },
    "5488": {
      "op": "pushbytes 0x78f9af3f // method \"append_dynamic_arr_struct(uint64)uint64\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)"
      ]
    },
    "5494": {
      "op": "pushbytes 0x5cbb9dcc // method \"pop_dynamic_arr_struct(uint64)uint64\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)"
      ]
    },
    "5500": {
      "op": "pushbytes 0x996497ae // method \"set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)"
      ]
    },
    "5506": {
      "op": "pushbytes 0x6cec72ff // method \"nested_write(uint64,uint64)void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)"
      ]
    },
    "5512": {
      "op": "pushbytes 0x6f9d1075 // method \"nested_read(uint64,uint64,uint64)uint64\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)"
      ]
    },
    "5518": {
      "op": "pushbytes 0x0d22b441 // method \"sum_dynamic_arr_struct()uint64\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)"
      ]
    },
    "5524": {
      "op": "pushbytes 0x59ef3760 // method \"create_bools()void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)"
      ]
    },
    "5530": {
      "op": "pushbytes 0xaa666b96 // method \"set_bool(uint64,bool)void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)"
      ]
    },
    "5536": {
      "op": "pushbytes 0xdfbdd636 // method \"sum_bools(uint64)uint64\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)"
      ]
    },
    "5542": {
      "op": "pushbytes 0x41427cd1 // method \"create_dynamic_box()void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)"
      ]
    },
    "5548": {
      "op": "pushbytes 0x2a141f6c // method \"delete_dynamic_box()void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)"
      ]
    },
    "5554": {
      "op": "pushbytes 0x7e843744 // method \"append_dynamic_box(uint64)uint64\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)"
      ]
    },
    "5560": {
      "op": "pushbytes 0x25600b57 // method \"pop_dynamic_box(uint64)uint64\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)"
      ]
    },
    "5566": {
      "op": "pushbytes 0x29ea595d // method \"sum_dynamic_box()uint64\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)"
      ]
    },
    "5572": {
      "op": "pushbytes 0x11453152 // method \"write_dynamic_box(uint64,uint64)void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)"
      ]
    },
    "5578": {
      "op": "pushbytes 0xced1221e // method \"write_dynamic_arr_struct(uint64,uint64)void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)"
      ]
    },
    "5584": {
      "op": "pushbytes 0x04ef4971 // method \"slice_box()void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(slice_box()void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(slice_box()void)"
      ]
    },
    "5590": {
      "op": "pushbytes 0x23ecb32c // method \"arc4_box()void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(arc4_box()void)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(slice_box()void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(slice_box()void)",
        "Method(arc4_box()void)"
      ]
    },
    "5596": {
      "op": "pushbytes 0xeef75816 // method \"test_box_ref()void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(arc4_box()void)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(slice_box()void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "Method(test_box_ref()void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(slice_box()void)",
        "Method(arc4_box()void)",
        "Method(test_box_ref()void)"
      ]
    },
    "5602": {
      "op": "pushbytes 0xb532913a // method \"box_map_test()void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(arc4_box()void)",
        "Method(box_map_test()void)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(slice_box()void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "Method(test_box_ref()void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(slice_box()void)",
        "Method(arc4_box()void)",
        "Method(test_box_ref()void)",
        "Method(box_map_test()void)"
      ]
    },
    "5608": {
      "op": "pushbytes 0xc29f1669 // method \"box_map_set(uint64,string)void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(arc4_box()void)",
        "Method(box_map_set(uint64,string)void)",
        "Method(box_map_test()void)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(slice_box()void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "Method(test_box_ref()void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(slice_box()void)",
        "Method(arc4_box()void)",
        "Method(test_box_ref()void)",
        "Method(box_map_test()void)",
        "Method(box_map_set(uint64,string)void)"
      ]
    },
    "5614": {
      "op": "pushbytes 0x9c888c09 // method \"box_map_get(uint64)string\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(arc4_box()void)",
        "Method(box_map_get(uint64)string)",
        "Method(box_map_set(uint64,string)void)",
        "Method(box_map_test()void)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(slice_box()void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "Method(test_box_ref()void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(slice_box()void)",
        "Method(arc4_box()void)",
        "Method(test_box_ref()void)",
        "Method(box_map_test()void)",
        "Method(box_map_set(uint64,string)void)",
        "Method(box_map_get(uint64)string)"
      ]
    },
    "5620": {
      "op": "pushbytes 0xe6f68506 // method \"box_map_del(uint64)void\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(arc4_box()void)",
        "Method(box_map_del(uint64)void)",
        "Method(box_map_get(uint64)string)",
        "Method(box_map_set(uint64,string)void)",
        "Method(box_map_test()void)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(slice_box()void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "Method(test_box_ref()void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(slice_box()void)",
        "Method(arc4_box()void)",
        "Method(test_box_ref()void)",
        "Method(box_map_test()void)",
        "Method(box_map_set(uint64,string)void)",
        "Method(box_map_get(uint64)string)",
        "Method(box_map_del(uint64)void)"
      ]
    },
    "5626": {
      "op": "pushbytes 0x8ee2c364 // method \"box_map_exists(uint64)bool\"",
      "defined_out": [
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(arc4_box()void)",
        "Method(box_map_del(uint64)void)",
        "Method(box_map_exists(uint64)bool)",
        "Method(box_map_get(uint64)string)",
        "Method(box_map_set(uint64,string)void)",
        "Method(box_map_test()void)",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(check_keys()void)",
        "Method(create_bools()void)",
        "Method(create_dynamic_arr_struct()void)",
        "Method(create_dynamic_box()void)",
        "Method(create_many_ints()void)",
        "Method(delete_boxes()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(delete_dynamic_box()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(set_bool(uint64,bool)void)",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(slice_box()void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(sum_many_ints()uint64)",
        "Method(test_box_ref()void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(slice_box()void)",
        "Method(arc4_box()void)",
        "Method(test_box_ref()void)",
        "Method(box_map_test()void)",
        "Method(box_map_set(uint64,string)void)",
        "Method(box_map_get(uint64)string)",
        "Method(box_map_del(uint64)void)",
        "Method(box_map_exists(uint64)bool)"
      ]
    },
    "5632": {
      "op": "uncover 35",
      "stack_out": [
        "Method(set_boxes(uint64,byte[],string)void)",
        "Method(check_keys()void)",
        "Method(create_many_ints()void)",
        "Method(set_many_ints(uint64,uint64)void)",
        "Method(sum_many_ints()uint64)",
        "Method(delete_boxes()void)",
        "Method(indirect_extract_and_replace()void)",
        "Method(read_boxes()(uint64,byte[],string,uint64))",
        "Method(boxes_exist()(bool,bool,bool,bool))",
        "Method(create_dynamic_arr_struct()void)",
        "Method(delete_dynamic_arr_struct()void)",
        "Method(append_dynamic_arr_struct(uint64)uint64)",
        "Method(pop_dynamic_arr_struct(uint64)uint64)",
        "Method(set_nested_struct((uint64,(uint64,uint64[][],uint64),(uint64,uint64[][],uint64)[],uint64))void)",
        "Method(nested_write(uint64,uint64)void)",
        "Method(nested_read(uint64,uint64,uint64)uint64)",
        "Method(sum_dynamic_arr_struct()uint64)",
        "Method(create_bools()void)",
        "Method(set_bool(uint64,bool)void)",
        "Method(sum_bools(uint64)uint64)",
        "Method(create_dynamic_box()void)",
        "Method(delete_dynamic_box()void)",
        "Method(append_dynamic_box(uint64)uint64)",
        "Method(pop_dynamic_box(uint64)uint64)",
        "Method(sum_dynamic_box()uint64)",
        "Method(write_dynamic_box(uint64,uint64)void)",
        "Method(write_dynamic_arr_struct(uint64,uint64)void)",
        "Method(slice_box()void)",
        "Method(arc4_box()void)",
        "Method(test_box_ref()void)",
        "Method(box_map_test()void)",
        "Method(box_map_set(uint64,string)void)",
        "Method(box_map_get(uint64)string)",
        "Method(box_map_del(uint64)void)",
        "Method(box_map_exists(uint64)bool)",
        "tmp%6#0"
      ]
    },
    "5634": {
      "op": "match approval_program_set_boxes_route@4 approval_program_check_keys_route@5 approval_program_create_many_ints_route@6 approval_program_set_many_ints_route@7 approval_program_sum_many_ints_route@8 approval_program_delete_boxes_route@9 approval_program_indirect_extract_and_replace_route@10 approval_program_read_boxes_route@11 approval_program_boxes_exist_route@12 approval_program_create_dynamic_arr_struct_route@13 approval_program_delete_dynamic_arr_struct_route@14 approval_program_append_dynamic_arr_struct_route@15 approval_program_pop_dynamic_arr_struct_route@16 approval_program_set_nested_struct_route@17 approval_program_nested_write_route@18 approval_program_nested_read_route@19 approval_program_sum_dynamic_arr_struct_route@20 approval_program_create_bools_route@21 approval_program_set_bool_route@22 approval_program_sum_bools_route@23 approval_program_create_dynamic_box_route@24 approval_program_delete_dynamic_box_route@25 approval_program_append_dynamic_box_route@26 approval_program_pop_dynamic_box_route@27 approval_program_sum_dynamic_box_route@28 approval_program_write_dynamic_box_route@29 approval_program_write_dynamic_arr_struct_route@30 approval_program_slice_box_route@31 approval_program_arc4_box_route@32 approval_program_test_box_ref_route@33 approval_program_box_map_test_route@34 approval_program_box_map_set_route@35 approval_program_box_map_get_route@36 approval_program_box_map_del_route@37 approval_program_box_map_exists_route@38",
      "stack_out": []
    },
    "5706": {
      "op": "b approval_program_switch_case_default@39"
    },
    "5709": {
      "block": "approval_program_switch_case_default@39",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@40"
    },
    "5712": {
      "block": "approval_program_switch_case_next@40",
      "stack_in": [],
      "op": "b approval_program_after_if_else@42"
    },
    "5715": {
      "block": "approval_program_after_if_else@42",
      "stack_in": [],
      "op": "b approval_program_after_if_else@46"
    },
    "5718": {
      "block": "approval_program_after_if_else@46",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "5719": {
      "block": "approval_program_box_map_exists_route@38",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.box_map_exists[routing]",
      "op": "callsub box_map_exists"
    },
    "5722": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5725": {
      "block": "approval_program_box_map_del_route@37",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.box_map_del[routing]",
      "op": "callsub box_map_del"
    },
    "5728": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5731": {
      "block": "approval_program_box_map_get_route@36",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.box_map_get[routing]",
      "op": "callsub box_map_get"
    },
    "5734": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5737": {
      "block": "approval_program_box_map_set_route@35",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.box_map_set[routing]",
      "op": "callsub box_map_set"
    },
    "5740": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5743": {
      "block": "approval_program_box_map_test_route@34",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.box_map_test[routing]",
      "op": "callsub box_map_test"
    },
    "5746": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5749": {
      "block": "approval_program_test_box_ref_route@33",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.test_box_ref[routing]",
      "op": "callsub test_box_ref"
    },
    "5752": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5755": {
      "block": "approval_program_arc4_box_route@32",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.arc4_box[routing]",
      "op": "callsub arc4_box"
    },
    "5758": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5761": {
      "block": "approval_program_slice_box_route@31",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.slice_box[routing]",
      "op": "callsub slice_box"
    },
    "5764": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5767": {
      "block": "approval_program_write_dynamic_arr_struct_route@30",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.write_dynamic_arr_struct[routing]",
      "op": "callsub write_dynamic_arr_struct"
    },
    "5770": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5773": {
      "block": "approval_program_write_dynamic_box_route@29",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.write_dynamic_box[routing]",
      "op": "callsub write_dynamic_box"
    },
    "5776": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5779": {
      "block": "approval_program_sum_dynamic_box_route@28",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.sum_dynamic_box[routing]",
      "op": "callsub sum_dynamic_box"
    },
    "5782": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5785": {
      "block": "approval_program_pop_dynamic_box_route@27",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.pop_dynamic_box[routing]",
      "op": "callsub pop_dynamic_box"
    },
    "5788": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5791": {
      "block": "approval_program_append_dynamic_box_route@26",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.append_dynamic_box[routing]",
      "op": "callsub append_dynamic_box"
    },
    "5794": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5797": {
      "block": "approval_program_delete_dynamic_box_route@25",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.delete_dynamic_box[routing]",
      "op": "callsub delete_dynamic_box"
    },
    "5800": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5803": {
      "block": "approval_program_create_dynamic_box_route@24",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.create_dynamic_box[routing]",
      "op": "callsub create_dynamic_box"
    },
    "5806": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5809": {
      "block": "approval_program_sum_bools_route@23",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.sum_bools[routing]",
      "op": "callsub sum_bools"
    },
    "5812": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5815": {
      "block": "approval_program_set_bool_route@22",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.set_bool[routing]",
      "op": "callsub set_bool"
    },
    "5818": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5821": {
      "block": "approval_program_create_bools_route@21",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.create_bools[routing]",
      "op": "callsub create_bools"
    },
    "5824": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5827": {
      "block": "approval_program_sum_dynamic_arr_struct_route@20",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.sum_dynamic_arr_struct[routing]",
      "op": "callsub sum_dynamic_arr_struct"
    },
    "5830": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5833": {
      "block": "approval_program_nested_read_route@19",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.nested_read[routing]",
      "op": "callsub nested_read"
    },
    "5836": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5839": {
      "block": "approval_program_nested_write_route@18",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.nested_write[routing]",
      "op": "callsub nested_write"
    },
    "5842": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5845": {
      "block": "approval_program_set_nested_struct_route@17",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.set_nested_struct[routing]",
      "op": "callsub set_nested_struct"
    },
    "5848": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5851": {
      "block": "approval_program_pop_dynamic_arr_struct_route@16",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.pop_dynamic_arr_struct[routing]",
      "op": "callsub pop_dynamic_arr_struct"
    },
    "5854": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5857": {
      "block": "approval_program_append_dynamic_arr_struct_route@15",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.append_dynamic_arr_struct[routing]",
      "op": "callsub append_dynamic_arr_struct"
    },
    "5860": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5863": {
      "block": "approval_program_delete_dynamic_arr_struct_route@14",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.delete_dynamic_arr_struct[routing]",
      "op": "callsub delete_dynamic_arr_struct"
    },
    "5866": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5869": {
      "block": "approval_program_create_dynamic_arr_struct_route@13",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.create_dynamic_arr_struct[routing]",
      "op": "callsub create_dynamic_arr_struct"
    },
    "5872": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5875": {
      "block": "approval_program_boxes_exist_route@12",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.boxes_exist[routing]",
      "op": "callsub boxes_exist"
    },
    "5878": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5881": {
      "block": "approval_program_read_boxes_route@11",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.read_boxes[routing]",
      "op": "callsub read_boxes"
    },
    "5884": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5887": {
      "block": "approval_program_indirect_extract_and_replace_route@10",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.indirect_extract_and_replace[routing]",
      "op": "callsub indirect_extract_and_replace"
    },
    "5890": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5893": {
      "block": "approval_program_delete_boxes_route@9",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.delete_boxes[routing]",
      "op": "callsub delete_boxes"
    },
    "5896": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5899": {
      "block": "approval_program_sum_many_ints_route@8",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.sum_many_ints[routing]",
      "op": "callsub sum_many_ints"
    },
    "5902": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5905": {
      "block": "approval_program_set_many_ints_route@7",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.set_many_ints[routing]",
      "op": "callsub set_many_ints"
    },
    "5908": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5911": {
      "block": "approval_program_create_many_ints_route@6",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.create_many_ints[routing]",
      "op": "callsub create_many_ints"
    },
    "5914": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5917": {
      "block": "approval_program_check_keys_route@5",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.check_keys[routing]",
      "op": "callsub check_keys"
    },
    "5920": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5923": {
      "block": "approval_program_set_boxes_route@4",
      "stack_in": [],
      "callsub": "examples.box_storage.contract.BoxContract.set_boxes[routing]",
      "op": "callsub set_boxes"
    },
    "5926": {
      "op": "b approval_program_switch_case_next@40"
    },
    "5929": {
      "block": "approval_program_create_NoOp@41",
      "stack_in": [],
      "op": "b approval_program_after_if_else@42"
    },
    "5932": {
      "block": "approval_program___algopy_default_create@43",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "5934": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "5935": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "5936": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "5938": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "5939": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "5940": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "5941": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "5942": {
      "op": "b approval_program_block@44"
    },
    "5945": {
      "block": "approval_program_block@44",
      "stack_in": [],
      "op": "b approval_program_after_inlined_examples.box_storage.contract.BoxContract.__algopy_default_create@45"
    },
    "5948": {
      "block": "approval_program_after_inlined_examples.box_storage.contract.BoxContract.__algopy_default_create@45",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "5949": {
      "op": "return",
      "stack_out": []
    }
  }
}