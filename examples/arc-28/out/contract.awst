struct Swapped {
  a: arc4.uint64
  b: arc4.uint64
}

contract EventEmitter
{
  abimethod emit_swapped(a: arc4.uint64, b: arc4.uint64): void
  {
    log(concat(Method("Swapped(uint64,uint64)"), new contract.Swapped(a=b, b=a)))
    log(concat(Method("Swapped(uint64,uint64)"), arc4_encode((b, a), arc4.tuple<arc4.uint64,arc4.uint64>)))
    log(concat(Method("Swapped(uint64,uint64)"), arc4_encode((b, a), arc4.tuple<arc4.uint64,arc4.uint64>)))
  }
  
  abimethod emit_ufixed(a: arc4.ufixed256x16, b: arc4.ufixed64x2): void
  {
    log(concat(Method("AnEvent(ufixed256x16,ufixed64x2)"), arc4_encode((a, b), arc4.tuple<arc4.ufixed256x16,arc4.ufixed64x2>)))
  }
}