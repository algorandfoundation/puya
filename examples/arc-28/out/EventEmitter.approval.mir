// Op                                              //                                                           Op Description                                       Stack (out)                                                                X stack                           Source code                                                                      Source line

#pragma version 10

// contract.EventEmitter.approval_program() -> uint64:
main_block@0:
    txn NumAppArgs                                 //                                                                                                                {txn}                                                                                                        class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    //                                             virtual: store tmp%0#0 to l-stack (no copy)                  tmp%0#0                                                                                                                         class EventEmitter(ARC4Contract): arc-28/contract.py:9
    //                                             virtual: load tmp%0#0 from l-stack (no copy)                 tmp%0#0                                                                                                                         class EventEmitter(ARC4Contract): arc-28/contract.py:9
    bz main_bare_routing@5                         //                                                                                                                                                                                                                             class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    // Implicit fall through to main_abi_routing@1 //                                                                                                                                                                                                                             class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9

main_abi_routing@1:
    txna ApplicationArgs 0                         //                                                                                                                {txna}                                                                                                       class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    //                                             virtual: store tmp%1#0 to l-stack (no copy)                  tmp%1#0                                                                                                                         class EventEmitter(ARC4Contract): arc-28/contract.py:9
    method "emit_swapped(uint64,uint64)void"       //                                                                                                                tmp%1#0,method<"emit_swapped(uint64,uint64)void">                                                            class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    swap                                           //                                                           load tmp%1#0 from l-stack (no copy)                  method<"emit_swapped(uint64,uint64)void">,tmp%1#0                                                            class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    match main_emit_swapped_route@2                //                                                                                                                                                                                                                             class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    err // reject transaction                      //                                                                                                                                                                                                                             class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9

main_emit_swapped_route@2:
    txn OnCompletion                               //                                                                                                                {txn}                                                                                                        arc4.abimethod                                                                   arc-28/contract.py:10
    //                                             virtual: store tmp%2#0 to l-stack (no copy)                  tmp%2#0                                                                                                                         arc4.abimethod                    arc-28/contract.py:10
    //                                             virtual: load tmp%2#0 from l-stack (no copy)                 tmp%2#0                                                                                                                         arc4.abimethod                    arc-28/contract.py:10
    !                                              //                                                                                                                {!}                                                                                                          arc4.abimethod                                                                   arc-28/contract.py:10
    //                                             virtual: store tmp%3#0 to l-stack (no copy)                  tmp%3#0                                                                                                                         arc4.abimethod                    arc-28/contract.py:10
    //                                             virtual: load tmp%3#0 from l-stack (no copy)                 tmp%3#0                                                                                                                         arc4.abimethod                    arc-28/contract.py:10
    assert // OnCompletion is NoOp                 //                                                                                                                                                                                                                             arc4.abimethod                                                                   arc-28/contract.py:10
    txn ApplicationID                              //                                                                                                                {txn}                                                                                                        arc4.abimethod                                                                   arc-28/contract.py:10
    //                                             virtual: store tmp%4#0 to l-stack (no copy)                  tmp%4#0                                                                                                                         arc4.abimethod                    arc-28/contract.py:10
    //                                             virtual: load tmp%4#0 from l-stack (no copy)                 tmp%4#0                                                                                                                         arc4.abimethod                    arc-28/contract.py:10
    assert // is not creating                      //                                                                                                                                                                                                                             arc4.abimethod                                                                   arc-28/contract.py:10
    txna ApplicationArgs 1                         //                                                                                                                {txna}                                                                                                       class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    //                                             virtual: store tmp%5#0 to l-stack (no copy)                  tmp%5#0                                                                                                                         class EventEmitter(ARC4Contract): arc-28/contract.py:9
    txna ApplicationArgs 2                         //                                                                                                                tmp%5#0,{txna}                                                                                               class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    //                                             virtual: store tmp%6#0 to l-stack (no copy)                  tmp%5#0,tmp%6#0                                                                                                                 class EventEmitter(ARC4Contract): arc-28/contract.py:9
    //                                             virtual: load tmp%5#0 from l-stack (no copy)                 tmp%6#0,tmp%5#0                                                                                                                 arc4.abimethod                    arc-28/contract.py:10
    //                                             virtual: load tmp%6#0 from l-stack (no copy)                 tmp%5#0,tmp%6#0                                                                                                                 arc4.abimethod                    arc-28/contract.py:10
    callsub emit_swapped                           //                                                                                                                                                                                                                             arc4.abimethod                                                                   arc-28/contract.py:10
    int 1                                          //                                                                                                                1                                                                                                            arc4.abimethod                                                                   arc-28/contract.py:10
    return                                         //                                                                                                                                                                                                                             arc4.abimethod                                                                   arc-28/contract.py:10

main_bare_routing@5:
    txn OnCompletion                               //                                                                                                                {txn}                                                                                                        class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    //                                             virtual: store tmp%7#0 to l-stack (no copy)                  tmp%7#0                                                                                                                         class EventEmitter(ARC4Contract): arc-28/contract.py:9
    //                                             virtual: load tmp%7#0 from l-stack (no copy)                 tmp%7#0                                                                                                                         class EventEmitter(ARC4Contract): arc-28/contract.py:9
    !                                              //                                                                                                                {!}                                                                                                          class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    //                                             virtual: store not%tmp%7#0 to l-stack (no copy)              not%tmp%7#0                                                                                                                     class EventEmitter(ARC4Contract): arc-28/contract.py:9
    //                                             virtual: load not%tmp%7#0 from l-stack (no copy)             not%tmp%7#0                                                                                                                     class EventEmitter(ARC4Contract): arc-28/contract.py:9
    assert // reject transaction                   //                                                                                                                                                                                                                             class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    txn ApplicationID                              //                                                                                                                {txn}                                                                                                        class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    //                                             virtual: store tmp%8#0 to l-stack (no copy)                  tmp%8#0                                                                                                                         class EventEmitter(ARC4Contract): arc-28/contract.py:9
    //                                             virtual: load tmp%8#0 from l-stack (no copy)                 tmp%8#0                                                                                                                         class EventEmitter(ARC4Contract): arc-28/contract.py:9
    !                                              //                                                                                                                {!}                                                                                                          class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    //                                             virtual: store tmp%9#0 to l-stack (no copy)                  tmp%9#0                                                                                                                         class EventEmitter(ARC4Contract): arc-28/contract.py:9
    //                                             virtual: load tmp%9#0 from l-stack (no copy)                 tmp%9#0                                                                                                                         class EventEmitter(ARC4Contract): arc-28/contract.py:9
    assert // is creating                          //                                                                                                                                                                                                                             class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    int 1                                          //                                                                                                                1                                                                                                            class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9
    return                                         //                                                                                                                                                                                                                             class EventEmitter(ARC4Contract):                                                arc-28/contract.py:9


// contract.EventEmitter.emit_swapped(a: bytes, b: bytes) -> void:
emit_swapped:
    proto 2 0                                      //                                                                                                                (𝕡) a#0,b#0 |                                                                                                @arc4.abimethod\ndef emit_swapped(self, a: arc4.UInt64, b: arc4.UInt64) -> None: arc-28/contract.py:10-11

emit_swapped_block@0:
    frame_dig -1                                   //                                                           load b#0 from parameters                             (𝕡) a#0,b#0 | b#0                                                                                            Swapped(b, a)                                                                    arc-28/contract.py:12
    frame_dig -2                                   //                                                           load a#0 from parameters                             (𝕡) a#0,b#0 | b#0,a#0                                                                                        Swapped(b, a)                                                                    arc-28/contract.py:12
    concat                                         //                                                                                                                (𝕡) a#0,b#0 | {concat}                                                                                       Swapped(b, a)                                                                    arc-28/contract.py:12
    //                                             virtual: store encoded_tuple_buffer%1#2 to l-stack (no copy) (𝕡) a#0,b#0 | encoded_tuple_buffer%1#2                                                                                          Swapped(b, a)                     arc-28/contract.py:12
    method "Swapped(uint64,uint64)"                //                                                                                                                (𝕡) a#0,b#0 | encoded_tuple_buffer%1#2,method<"Swapped(uint64,uint64)">                                      arc4.emit(Swapped(b, a))                                                         arc-28/contract.py:12
    swap                                           //                                                           load encoded_tuple_buffer%1#2 from l-stack (no copy) (𝕡) a#0,b#0 | method<"Swapped(uint64,uint64)">,encoded_tuple_buffer%1#2                                      arc4.emit(Swapped(b, a))                                                         arc-28/contract.py:12
    concat                                         //                                                                                                                (𝕡) a#0,b#0 | {concat}                                                                                       arc4.emit(Swapped(b, a))                                                         arc-28/contract.py:12
    //                                             virtual: store tmp%2#0 to l-stack (no copy)                  (𝕡) a#0,b#0 | tmp%2#0                                                                                                           arc4.emit(Swapped(b, a))          arc-28/contract.py:12
    dup                                            //                                                           load tmp%2#0 from l-stack (copy)                     (𝕡) a#0,b#0 | tmp%2#0,tmp%2#0                                                                                arc4.emit(Swapped(b, a))                                                         arc-28/contract.py:12
    log                                            //                                                                                                                (𝕡) a#0,b#0 | tmp%2#0                                                                                        arc4.emit(Swapped(b, a))                                                         arc-28/contract.py:12
    dup                                            //                                                           load tmp%2#0 from l-stack (copy)                     (𝕡) a#0,b#0 | tmp%2#0,tmp%2#0                                                                                arc4.emit("Swapped(uint64,uint64)", b, a)                                        arc-28/contract.py:13
    log                                            //                                                                                                                (𝕡) a#0,b#0 | tmp%2#0                                                                                        arc4.emit("Swapped(uint64,uint64)", b, a)                                        arc-28/contract.py:13
    //                                             virtual: load tmp%2#0 from l-stack (no copy)                 (𝕡) a#0,b#0 | tmp%2#0                                                                                                           arc4.emit("Swapped", b, a)        arc-28/contract.py:14
    log                                            //                                                                                                                (𝕡) a#0,b#0 |                                                                                                arc4.emit("Swapped", b, a)                                                       arc-28/contract.py:14
    retsub                                         //

