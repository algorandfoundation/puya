debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=0, optimization_level=2, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, paths=['tictactoe'], resource_encoding='value', output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.new_game[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.join_game[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.whose_turn[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.play[routing]
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let move.0#1: uint64 = undefined while trying to resolve 'move.0' in block@4
debug: Added move.0#0 to Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@0) in block@0
debug: Created Phi assignment: let move.0#2: uint64 = undefined while trying to resolve 'move.0' in block@3
debug: Added move.0#0 to Phi node: let move.0#2: uint64 = φ(move.0#0 <- block@1) in block@1
debug: Added move.0#0 to Phi node: let move.0#2: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let move.0#2: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) (move.0#2) with move.0#0
debug: Deleting Phi assignment: let move.0#2: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2)
debug: Replaced trivial Phi node: let move.0#2: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) (move.0#2) with move.0#0 in current definition for 1 blocks
debug: Added move.0#0 to Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@0, move.0#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@0, move.0#0 <- block@3) (move.0#1) with move.0#0
debug: Deleting Phi assignment: let move.0#1: uint64 = φ(move.0#0 <- block@0, move.0#0 <- block@3)
debug: Replaced trivial Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@0, move.0#0 <- block@3) (move.0#1) with move.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let move.1#1: uint64 = undefined while trying to resolve 'move.1' in block@4
debug: Added move.1#0 to Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@0) in block@0
debug: Created Phi assignment: let move.1#2: uint64 = undefined while trying to resolve 'move.1' in block@3
debug: Added move.1#0 to Phi node: let move.1#2: uint64 = φ(move.1#0 <- block@1) in block@1
debug: Added move.1#0 to Phi node: let move.1#2: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let move.1#2: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) (move.1#2) with move.1#0
debug: Deleting Phi assignment: let move.1#2: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2)
debug: Replaced trivial Phi node: let move.1#2: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) (move.1#2) with move.1#0 in current definition for 1 blocks
debug: Added move.1#0 to Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@0, move.1#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@0, move.1#0 <- block@3) (move.1#1) with move.1#0
debug: Deleting Phi assignment: let move.1#1: uint64 = φ(move.1#0 <- block@0, move.1#0 <- block@3)
debug: Replaced trivial Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@0, move.1#0 <- block@3) (move.1#1) with move.1#0 in current definition for 1 blocks
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@8
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@6) in block@6
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@6, and_result%0#1 <- block@7) in block@7
debug: Created Phi assignment: let row#1: uint64 = undefined while trying to resolve 'row' in block@8
debug: Added row#0 to Phi node: let row#1: uint64 = φ(row#0 <- block@6) in block@6
debug: Created Phi assignment: let row#2: uint64 = undefined while trying to resolve 'row' in block@7
debug: Added row#0 to Phi node: let row#2: uint64 = φ(row#0 <- block@4) in block@4
debug: Added row#0 to Phi node: let row#2: uint64 = φ(row#0 <- block@4, row#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let row#2: uint64 = φ(row#0 <- block@4, row#0 <- block@5) (row#2) with row#0
debug: Deleting Phi assignment: let row#2: uint64 = φ(row#0 <- block@4, row#0 <- block@5)
debug: Replaced trivial Phi node: let row#2: uint64 = φ(row#0 <- block@4, row#0 <- block@5) (row#2) with row#0 in current definition for 1 blocks
debug: Added row#0 to Phi node: let row#1: uint64 = φ(row#0 <- block@6, row#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let row#1: uint64 = φ(row#0 <- block@6, row#0 <- block@7) (row#1) with row#0
debug: Deleting Phi assignment: let row#1: uint64 = φ(row#0 <- block@6, row#0 <- block@7)
debug: Replaced trivial Phi node: let row#1: uint64 = φ(row#0 <- block@6, row#0 <- block@7) (row#1) with row#0 in current definition for 1 blocks
debug: Created Phi assignment: let column#1: uint64 = undefined while trying to resolve 'column' in block@8
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@6) in block@6
debug: Created Phi assignment: let column#2: uint64 = undefined while trying to resolve 'column' in block@7
debug: Added column#0 to Phi node: let column#2: uint64 = φ(column#0 <- block@4) in block@4
debug: Added column#0 to Phi node: let column#2: uint64 = φ(column#0 <- block@4, column#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let column#2: uint64 = φ(column#0 <- block@4, column#0 <- block@5) (column#2) with column#0
debug: Deleting Phi assignment: let column#2: uint64 = φ(column#0 <- block@4, column#0 <- block@5)
debug: Replaced trivial Phi node: let column#2: uint64 = φ(column#0 <- block@4, column#0 <- block@5) (column#2) with column#0 in current definition for 1 blocks
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@6, column#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let column#1: uint64 = φ(column#0 <- block@6, column#0 <- block@7) (column#1) with column#0
debug: Deleting Phi assignment: let column#1: uint64 = φ(column#0 <- block@6, column#0 <- block@7)
debug: Replaced trivial Phi node: let column#1: uint64 = φ(column#0 <- block@6, column#0 <- block@7) (column#1) with column#0 in current definition for 1 blocks
tictactoe/tictactoe.py:34:9 debug: encountered already materialized expression ('game'), reusing result: "game"
debug: Terminated block@8
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let player#2: Encoded(uint8) = undefined while trying to resolve 'player' in block@3
debug: Added player#0 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@1) in block@1
debug: Added player#1 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@1, player#1 <- block@2) in block@2
debug: Created Phi assignment: let move.0#1: uint64 = undefined while trying to resolve 'move.0' in block@3
debug: Added move.0#0 to Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@1) in block@1
debug: Added move.0#0 to Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) (move.0#1) with move.0#0
debug: Deleting Phi assignment: let move.0#1: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2)
debug: Replaced trivial Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) (move.0#1) with move.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let move.1#1: uint64 = undefined while trying to resolve 'move.1' in block@3
debug: Added move.1#0 to Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@1) in block@1
debug: Added move.1#0 to Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) (move.1#1) with move.1#0
debug: Deleting Phi assignment: let move.1#1: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2)
debug: Replaced trivial Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) (move.1#1) with move.1#0 in current definition for 1 blocks
debug: Terminated block@3
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@4
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2) in block@2
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2, and_result%0#1 <- block@3) in block@3
debug: Created Phi assignment: let row#1: uint64 = undefined while trying to resolve 'row' in block@4
debug: Added row#0 to Phi node: let row#1: uint64 = φ(row#0 <- block@2) in block@2
debug: Created Phi assignment: let row#2: uint64 = undefined while trying to resolve 'row' in block@3
debug: Added row#0 to Phi node: let row#2: uint64 = φ(row#0 <- block@0) in block@0
debug: Added row#0 to Phi node: let row#2: uint64 = φ(row#0 <- block@0, row#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let row#2: uint64 = φ(row#0 <- block@0, row#0 <- block@1) (row#2) with row#0
debug: Deleting Phi assignment: let row#2: uint64 = φ(row#0 <- block@0, row#0 <- block@1)
debug: Replaced trivial Phi node: let row#2: uint64 = φ(row#0 <- block@0, row#0 <- block@1) (row#2) with row#0 in current definition for 1 blocks
debug: Added row#0 to Phi node: let row#1: uint64 = φ(row#0 <- block@2, row#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let row#1: uint64 = φ(row#0 <- block@2, row#0 <- block@3) (row#1) with row#0
debug: Deleting Phi assignment: let row#1: uint64 = φ(row#0 <- block@2, row#0 <- block@3)
debug: Replaced trivial Phi node: let row#1: uint64 = φ(row#0 <- block@2, row#0 <- block@3) (row#1) with row#0 in current definition for 1 blocks
debug: Created Phi assignment: let column#1: uint64 = undefined while trying to resolve 'column' in block@4
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@2) in block@2
debug: Created Phi assignment: let column#2: uint64 = undefined while trying to resolve 'column' in block@3
debug: Added column#0 to Phi node: let column#2: uint64 = φ(column#0 <- block@0) in block@0
debug: Added column#0 to Phi node: let column#2: uint64 = φ(column#0 <- block@0, column#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let column#2: uint64 = φ(column#0 <- block@0, column#0 <- block@1) (column#2) with column#0
debug: Deleting Phi assignment: let column#2: uint64 = φ(column#0 <- block@0, column#0 <- block@1)
debug: Replaced trivial Phi node: let column#2: uint64 = φ(column#0 <- block@0, column#0 <- block@1) (column#2) with column#0 in current definition for 1 blocks
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@2, column#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let column#1: uint64 = φ(column#0 <- block@2, column#0 <- block@3) (column#1) with column#0
debug: Deleting Phi assignment: let column#1: uint64 = φ(column#0 <- block@2, column#0 <- block@3)
debug: Replaced trivial Phi node: let column#1: uint64 = φ(column#0 <- block@2, column#0 <- block@3) (column#1) with column#0 in current definition for 1 blocks
debug: Created Phi assignment: let player#1: Encoded(uint8) = undefined while trying to resolve 'player' in block@4
debug: Added player#0 to Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@2) in block@2
debug: Created Phi assignment: let player#2: Encoded(uint8) = undefined while trying to resolve 'player' in block@3
debug: Added player#0 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0) in block@0
debug: Added player#0 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) (player#2) with player#0
debug: Deleting Phi assignment: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1)
debug: Replaced trivial Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) (player#2) with player#0 in current definition for 1 blocks
debug: Added player#0 to Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@2, player#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@2, player#0 <- block@3) (player#1) with player#0
debug: Deleting Phi assignment: let player#1: Encoded(uint8) = φ(player#0 <- block@2, player#0 <- block@3)
debug: Replaced trivial Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@2, player#0 <- block@3) (player#1) with player#0 in current definition for 1 blocks
tictactoe/tictactoe.py:65:9 debug: encountered already materialized expression ('game'), reusing result: "game"
tictactoe/tictactoe.py:66:9 debug: encountered already materialized expression ('turns'), reusing result: "turns"
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let g#1: Encoded(uint8[3][3]) = undefined while trying to resolve 'g' in block@3
debug: Added g#0 to Phi node: let g#1: Encoded(uint8[3][3]) = φ(g#0 <- block@0) in block@0
debug: Added g#0 to Phi node: let g#1: Encoded(uint8[3][3]) = φ(g#0 <- block@0, g#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let g#1: Encoded(uint8[3][3]) = φ(g#0 <- block@0, g#0 <- block@1) (g#1) with g#0
debug: Deleting Phi assignment: let g#1: Encoded(uint8[3][3]) = φ(g#0 <- block@0, g#0 <- block@1)
debug: Replaced trivial Phi node: let g#1: Encoded(uint8[3][3]) = φ(g#0 <- block@0, g#0 <- block@1) (g#1) with g#0 in current definition for 1 blocks
debug: Created Phi assignment: let column#1: uint64 = undefined while trying to resolve 'column' in block@3
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@0) in block@0
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@0, column#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let column#1: uint64 = φ(column#0 <- block@0, column#0 <- block@1) (column#1) with column#0
debug: Deleting Phi assignment: let column#1: uint64 = φ(column#0 <- block@0, column#0 <- block@1)
debug: Replaced trivial Phi node: let column#1: uint64 = φ(column#0 <- block@0, column#0 <- block@1) (column#1) with column#0 in current definition for 1 blocks
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let player#1: Encoded(uint8) = undefined while trying to resolve 'player' in block@6
debug: Created Phi assignment: let player#2: Encoded(uint8) = undefined while trying to resolve 'player' in block@3
debug: Added player#0 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0) in block@0
debug: Added player#0 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) (player#2) with player#0
debug: Deleting Phi assignment: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1)
debug: Replaced trivial Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) (player#2) with player#0 in current definition for 1 blocks
debug: Added player#0 to Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@3) in block@3
debug: Added player#0 to Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@3, player#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@3, player#0 <- block@4) (player#1) with player#0
debug: Deleting Phi assignment: let player#1: Encoded(uint8) = φ(player#0 <- block@3, player#0 <- block@4)
debug: Replaced trivial Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@3, player#0 <- block@4) (player#1) with player#0 in current definition for 1 blocks
debug: Created Phi assignment: let g#2: Encoded(uint8[3][3]) = undefined while trying to resolve 'g' in block@6
debug: Added g#0 to Phi node: let g#2: Encoded(uint8[3][3]) = φ(g#0 <- block@3) in block@3
debug: Added g#0 to Phi node: let g#2: Encoded(uint8[3][3]) = φ(g#0 <- block@3, g#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let g#2: Encoded(uint8[3][3]) = φ(g#0 <- block@3, g#0 <- block@4) (g#2) with g#0
debug: Deleting Phi assignment: let g#2: Encoded(uint8[3][3]) = φ(g#0 <- block@3, g#0 <- block@4)
debug: Replaced trivial Phi node: let g#2: Encoded(uint8[3][3]) = φ(g#0 <- block@3, g#0 <- block@4) (g#2) with g#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
tictactoe/tictactoe.py:84:27 debug: encountered already materialized expression (player), reusing result: player#0
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Created Phi assignment: let g#3: Encoded(uint8[3][3]) = undefined while trying to resolve 'g' in block@10
debug: Added g#0 to Phi node: let g#3: Encoded(uint8[3][3]) = φ(g#0 <- block@7) in block@7
debug: Added g#0 to Phi node: let g#3: Encoded(uint8[3][3]) = φ(g#0 <- block@7, g#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let g#3: Encoded(uint8[3][3]) = φ(g#0 <- block@7, g#0 <- block@8) (g#3) with g#0
debug: Deleting Phi assignment: let g#3: Encoded(uint8[3][3]) = φ(g#0 <- block@7, g#0 <- block@8)
debug: Replaced trivial Phi node: let g#3: Encoded(uint8[3][3]) = φ(g#0 <- block@7, g#0 <- block@8) (g#3) with g#0 in current definition for 1 blocks
debug: Created Phi assignment: let player#3: Encoded(uint8) = undefined while trying to resolve 'player' in block@10
debug: Added player#0 to Phi node: let player#3: Encoded(uint8) = φ(player#0 <- block@7) in block@7
debug: Added player#0 to Phi node: let player#3: Encoded(uint8) = φ(player#0 <- block@7, player#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let player#3: Encoded(uint8) = φ(player#0 <- block@7, player#0 <- block@8) (player#3) with player#0
debug: Deleting Phi assignment: let player#3: Encoded(uint8) = φ(player#0 <- block@7, player#0 <- block@8)
debug: Replaced trivial Phi node: let player#3: Encoded(uint8) = φ(player#0 <- block@7, player#0 <- block@8) (player#3) with player#0 in current definition for 1 blocks
debug: Terminated block@10
debug: Sealing block@11
tictactoe/tictactoe.py:86:27 debug: encountered already materialized expression (player), reusing result: player#0
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game[routing]
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game[routing]
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn[routing]
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.play[routing]
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of examples.tictactoe.tictactoe.TicTacToeContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.new_game[routing] for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.join_game[routing] for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.whose_turn[routing] for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.play[routing] for inlining
debug: marking trivial method examples.tictactoe.tictactoe.TicTacToeContract.__init__ as inlineable
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.new_game for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.join_game for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.whose_turn for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.play for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.did_win for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.__init__ in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: replaced goto tmp%0#0 ? block@2 : block@2 with goto block@2
debug: Removed empty block: block@1
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 26 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=1),)
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#1 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=1),)
debug: Found equivalence set: tmp%3#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#0 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=0),)
debug: Found equivalence set: tmp%3#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#1, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#1, array_head_and_tail#3
debug: selected array_head_and_tail#3 from equivalence set
debug: Found equivalence set: tmp%11#1, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#1: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%4#1: uint64 = (* array_length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=1),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%4#1
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:327:44-72, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
tictactoe/tictactoe.py:47:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.play[routing] in examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
tictactoe/tictactoe.py:43:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.whose_turn[routing] in examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
tictactoe/tictactoe.py:37:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.join_game[routing] in examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
tictactoe/tictactoe.py:20:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.new_game[routing] in examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%1#0 NoOp) to (! tmp%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplified terminator of block@0 from switch tmp%0#0 {* => block@1} to goto block@1
debug: simplified terminator of block@10 from switch tmp%6#0 {* => block@11} to goto block@11
debug: simplifying exit 0 to err
debug: simplified terminator of block@15 from exit 0u to fail
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Merged linear block@22 into block@2
debug: Merged linear block@20 into block@5
debug: Merged linear block@18 into block@6
debug: Merged linear block@16 into block@7
debug: Replaced predecessor block@11 with block@10 in block@12
debug: Merged linear block@11 into block@10
debug: Replaced predecessor block@12 with block@10 in block@13
debug: Merged linear block@12 into block@10
debug: Merged linear block@15 into block@14
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@23
debug: Removed empty block: block@21
debug: Removed empty block: block@19
debug: Removed empty block: block@17
debug: Removed empty block: block@8
debug: Removed empty block: block@9
debug: Removed empty block: block@13
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game[routing]
debug: Optimizer: Perform Subroutine Inlining
tictactoe/tictactoe.py:20:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.new_game in examples.tictactoe.tictactoe.TicTacToeContract.new_game[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, move.0#0, column#0
debug: selected move.0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, move.1#0, row#0
debug: selected move.1#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@5
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@10 into block@9
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game[routing]
debug: Optimizer: Perform Subroutine Inlining
tictactoe/tictactoe.py:37:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.join_game in examples.tictactoe.tictactoe.TicTacToeContract.join_game[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, move.0#0
debug: selected move.0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, move.1#0
debug: selected move.1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn[routing]
debug: Optimizer: Perform Subroutine Inlining
tictactoe/tictactoe.py:43:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.whose_turn in examples.tictactoe.tictactoe.TicTacToeContract.whose_turn[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: select%0#0, tmp%0#0
debug: selected select%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select 0x02 0x01 tmp%1#1) to (select 0x02 0x01 tmp%0#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.play[routing]
debug: Optimizer: Perform Subroutine Inlining
tictactoe/tictactoe.py:47:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.play in examples.tictactoe.tictactoe.TicTacToeContract.play[routing]
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, move.0#0
debug: selected move.0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, move.1#0
debug: selected move.1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: move.0#0, column#0
debug: selected move.0#0 from equivalence set
debug: Found equivalence set: move.1#0, row#0
debug: selected move.1#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (select 0x02 0x01 tmp%1#0) to (select 0x02 0x01 tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
tictactoe/tictactoe.py:67:12 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.did_win in examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: move.0#0, column#0, column#1
debug: selected move.0#0 from equivalence set
debug: Found equivalence set: move.1#0, row#0, row#1
debug: selected move.1#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%0#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: player#0, player#1, reinterpret_biguint%8#0, reinterpret_biguint%11#0, reinterpret_biguint%12#0, reinterpret_biguint%15#0, reinterpret_biguint%16#0
debug: selected player#0 from equivalence set
debug: Found equivalence set: maybe_value%0#1, g#0
debug: selected g#0 from equivalence set
debug: Found equivalence set: array_item%1#1, reinterpret_biguint%0#1
debug: selected array_item%1#1 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%1#1, reinterpret_biguint%2#0
debug: selected array_item%3#0 from equivalence set
debug: Found equivalence set: array_item%5#0, reinterpret_biguint%3#0
debug: selected array_item%5#0 from equivalence set
debug: Found equivalence set: array_item%7#0, reinterpret_biguint%4#0
debug: selected array_item%7#0 from equivalence set
debug: Found equivalence set: array_item%9#0, reinterpret_biguint%5#0, reinterpret_biguint%6#0
debug: selected array_item%9#0 from equivalence set
debug: Found equivalence set: array_item%11#0, reinterpret_biguint%7#0
debug: selected array_item%11#0 from equivalence set
debug: Found equivalence set: array_item%13#0, reinterpret_biguint%9#0
debug: selected array_item%13#0 from equivalence set
debug: Found equivalence set: array_item%15#0, reinterpret_biguint%10#0
debug: selected array_item%15#0 from equivalence set
debug: Found equivalence set: array_item%17#0, reinterpret_biguint%13#0
debug: selected array_item%17#0 from equivalence set
debug: Found equivalence set: array_item%19#0, reinterpret_biguint%14#0
debug: selected array_item%19#0 from equivalence set
debug: Found equivalence set: array_item%21#0, reinterpret_biguint%17#0
debug: selected array_item%21#0 from equivalence set
debug: Copy propagation made 32 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reinterpret_biguint%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@10 with block@4 in block@13
debug: Replaced predecessor block@10 with block@4 in block@11
debug: Merged linear block@10 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@23
debug: Removed empty block: block@8
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array_item%2#0: Encoded(uint8[3]) = extract_value(g#0, move.1#0) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:76:11-17, ir_type=Encoded(uint8[3]), name='array_item%0', version=1),)
debug: Replacing redundant declaration let array_item%4#0: Encoded(uint8[3]) = extract_value(g#0, move.1#0) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:76:11-17, ir_type=Encoded(uint8[3]), name='array_item%0', version=1),)
debug: Replacing redundant declaration let array_item%12#0: Encoded(uint8[3]) = extract_value(g#0, 1u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:79:27-31, ir_type=Encoded(uint8[3]), name='array_item%8', version=0),)
debug: Replacing redundant declaration let array_item%14#0: Encoded(uint8[3]) = extract_value(g#0, 0u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:79:11-15, ir_type=Encoded(uint8[3]), name='array_item%6', version=0),)
debug: Replacing redundant declaration let array_item%18#0: Encoded(uint8[3]) = extract_value(g#0, 0u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:84:15-19, ir_type=Encoded(uint8[3]), name='array_item%14', version=0),)
debug: Found equivalence set: array_item%0#1, array_item%2#0, array_item%4#0
debug: selected array_item%0#1 from equivalence set
debug: Found equivalence set: array_item%8#0, array_item%12#0
debug: selected array_item%8#0 from equivalence set
debug: Found equivalence set: array_item%6#0, array_item%14#0, array_item%18#0
debug: selected array_item%6#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
tictactoe/tictactoe.py:64:16 debug: replacing extract_value(array_item%0#0, move.0#0) with extract_value(maybe_value%0#0, move.1#0, move.0#0)
tictactoe/tictactoe.py:76:12 debug: replacing extract_value(array_item%0#1, 0u) with extract_value(g#0, move.1#0, 0u)
tictactoe/tictactoe.py:76:25 debug: replacing extract_value(array_item%0#1, 1u) with extract_value(g#0, move.1#0, 1u)
tictactoe/tictactoe.py:76:38 debug: replacing extract_value(array_item%0#1, 2u) with extract_value(g#0, move.1#0, 2u)
tictactoe/tictactoe.py:79:12 debug: replacing extract_value(array_item%6#0, move.0#0) with extract_value(g#0, 0u, move.0#0)
tictactoe/tictactoe.py:79:28 debug: replacing extract_value(array_item%8#0, move.0#0) with extract_value(g#0, 1u, move.0#0)
tictactoe/tictactoe.py:79:44 debug: replacing extract_value(array_item%10#0, move.0#0) with extract_value(g#0, 2u, move.0#0)
tictactoe/tictactoe.py:83:22 debug: replacing extract_value(array_item%8#0, 1u) with extract_value(g#0, 1u, 1u)
tictactoe/tictactoe.py:84:16 debug: replacing extract_value(array_item%6#0, 0u) with extract_value(g#0, 0u, 0u)
tictactoe/tictactoe.py:84:37 debug: replacing extract_value(array_item%16#0, 2u) with extract_value(g#0, 2u, 2u)
tictactoe/tictactoe.py:86:16 debug: replacing extract_value(array_item%6#0, 2u) with extract_value(g#0, 0u, 2u)
tictactoe/tictactoe.py:86:37 debug: replacing extract_value(array_item%20#0, 0u) with extract_value(g#0, 2u, 0u)
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, g#0
debug: selected g#0 from equivalence set
debug: Found equivalence set: array_item%1#0, reinterpret_biguint%0#0
debug: selected array_item%1#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%1#0, reinterpret_biguint%2#0
debug: selected array_item%3#0 from equivalence set
debug: Found equivalence set: array_item%5#0, reinterpret_biguint%3#0
debug: selected array_item%5#0 from equivalence set
debug: Found equivalence set: array_item%7#0, reinterpret_biguint%4#0
debug: selected array_item%7#0 from equivalence set
debug: Found equivalence set: array_item%9#0, reinterpret_biguint%5#0, reinterpret_biguint%6#0
debug: selected array_item%9#0 from equivalence set
debug: Found equivalence set: array_item%11#0, reinterpret_biguint%7#0
debug: selected array_item%11#0 from equivalence set
debug: Found equivalence set: player#0, reinterpret_biguint%8#0, reinterpret_biguint%11#0, reinterpret_biguint%12#0, reinterpret_biguint%15#0, reinterpret_biguint%16#0
debug: selected player#0 from equivalence set
debug: Found equivalence set: array_item%13#0, reinterpret_biguint%9#0
debug: selected array_item%13#0 from equivalence set
debug: Found equivalence set: array_item%15#0, reinterpret_biguint%10#0
debug: selected array_item%15#0 from equivalence set
debug: Found equivalence set: array_item%17#0, reinterpret_biguint%13#0
debug: selected array_item%17#0 from equivalence set
debug: Found equivalence set: array_item%19#0, reinterpret_biguint%14#0
debug: selected array_item%19#0 from equivalence set
debug: Found equivalence set: array_item%21#0, reinterpret_biguint%17#0
debug: selected array_item%21#0 from equivalence set
debug: Copy propagation made 19 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@13
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array_item%2#0: Encoded(uint8[3]) = extract_value(g#0, row#0) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:76:11-17, ir_type=Encoded(uint8[3]), name='array_item%0', version=0),)
debug: Replacing redundant declaration let array_item%4#0: Encoded(uint8[3]) = extract_value(g#0, row#0) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:76:11-17, ir_type=Encoded(uint8[3]), name='array_item%0', version=0),)
debug: Replacing redundant declaration let array_item%12#0: Encoded(uint8[3]) = extract_value(g#0, 1u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:79:27-31, ir_type=Encoded(uint8[3]), name='array_item%8', version=0),)
debug: Replacing redundant declaration let array_item%14#0: Encoded(uint8[3]) = extract_value(g#0, 0u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:79:11-15, ir_type=Encoded(uint8[3]), name='array_item%6', version=0),)
debug: Replacing redundant declaration let array_item%18#0: Encoded(uint8[3]) = extract_value(g#0, 0u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:84:15-19, ir_type=Encoded(uint8[3]), name='array_item%14', version=0),)
debug: Found equivalence set: array_item%0#0, array_item%2#0, array_item%4#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: array_item%8#0, array_item%12#0
debug: selected array_item%8#0 from equivalence set
debug: Found equivalence set: array_item%6#0, array_item%14#0, array_item%18#0
debug: selected array_item%6#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
tictactoe/tictactoe.py:76:12 debug: replacing extract_value(array_item%0#0, 0u) with extract_value(g#0, row#0, 0u)
tictactoe/tictactoe.py:76:25 debug: replacing extract_value(array_item%0#0, 1u) with extract_value(g#0, row#0, 1u)
tictactoe/tictactoe.py:76:38 debug: replacing extract_value(array_item%0#0, 2u) with extract_value(g#0, row#0, 2u)
tictactoe/tictactoe.py:79:12 debug: replacing extract_value(array_item%6#0, column#0) with extract_value(g#0, 0u, column#0)
tictactoe/tictactoe.py:79:28 debug: replacing extract_value(array_item%8#0, column#0) with extract_value(g#0, 1u, column#0)
tictactoe/tictactoe.py:79:44 debug: replacing extract_value(array_item%10#0, column#0) with extract_value(g#0, 2u, column#0)
tictactoe/tictactoe.py:83:22 debug: replacing extract_value(array_item%8#0, 1u) with extract_value(g#0, 1u, 1u)
tictactoe/tictactoe.py:84:16 debug: replacing extract_value(array_item%6#0, 0u) with extract_value(g#0, 0u, 0u)
tictactoe/tictactoe.py:84:37 debug: replacing extract_value(array_item%16#0, 2u) with extract_value(g#0, 2u, 2u)
tictactoe/tictactoe.py:86:16 debug: replacing extract_value(array_item%6#0, 2u) with extract_value(g#0, 0u, 2u)
tictactoe/tictactoe.py:86:37 debug: replacing extract_value(array_item%20#0, 0u) with extract_value(g#0, 2u, 0u)
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%6#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@8
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@10
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game[routing]
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game[routing]
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn[routing]
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.play[routing]
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.new_game for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.join_game for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.whose_turn for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.play for inlining
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__ in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%6#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Replaced predecessor block@3 with block@0 in block@5
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@10
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@12
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=1),)
debug: Found equivalence set: tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
tictactoe/tictactoe.py:47:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.play in examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
tictactoe/tictactoe.py:43:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.whose_turn in examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
tictactoe/tictactoe.py:37:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.join_game in examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
tictactoe/tictactoe.py:20:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.new_game in examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#4, move.0#2
debug: selected move.0#2 from equivalence set
debug: Found equivalence set: tmp%1#4, move.1#2
debug: selected move.1#2 from equivalence set
debug: Found equivalence set: tmp%0#3, move.0#1
debug: selected move.0#1 from equivalence set
debug: Found equivalence set: tmp%1#3, move.1#1
debug: selected move.1#1 from equivalence set
debug: Found equivalence set: select%0#0, tmp%0#2
debug: selected select%0#0 from equivalence set
debug: Found equivalence set: tmp%0#1, move.0#0
debug: selected move.0#0 from equivalence set
debug: Found equivalence set: tmp%1#1, move.1#0
debug: selected move.1#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#8
debug: Removing unused variable tmp%1#6
debug: Removing unused variable tmp%2#1
debug: Removing unused variable tmp%6#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@24 with block@2 in block@28
debug: Replaced predecessor block@24 with block@2 in block@25
debug: Merged linear block@24 into block@2
debug: Merged linear block@33 into block@32
debug: Replaced predecessor block@22 with block@5 in block@23
debug: Merged linear block@22 into block@5
debug: Merged linear block@23 into block@5
debug: Replaced predecessor block@20 with block@6 in block@21
debug: Merged linear block@20 into block@6
debug: Merged linear block@21 into block@6
debug: Replaced predecessor block@15 with block@7 in block@17
debug: Replaced predecessor block@15 with block@7 in block@16
debug: Merged linear block@15 into block@7
debug: Merged linear block@19 into block@18
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@10
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_item%0#0
debug: Removing unused variable array_item%0#1
debug: Removing unused variable array_item%6#0
debug: Removing unused variable array_item%8#0
debug: Removing unused variable array_item%10#0
debug: Removing unused variable array_item%16#0
debug: Removing unused variable array_item%20#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.new_game for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.join_game for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.whose_turn for inlining
debug: marking single-use function examples.tictactoe.tictactoe.TicTacToeContract.play for inlining
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
tictactoe/tictactoe.py:47:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.play in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
tictactoe/tictactoe.py:43:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.whose_turn in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
tictactoe/tictactoe.py:37:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.join_game in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
tictactoe/tictactoe.py:20:6 debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.new_game in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#6, move.0#2
debug: selected move.0#2 from equivalence set
debug: Found equivalence set: tmp%1#4, move.1#2
debug: selected move.1#2 from equivalence set
debug: Found equivalence set: tmp%0#5, move.0#1
debug: selected move.0#1 from equivalence set
debug: Found equivalence set: tmp%1#3, move.1#1
debug: selected move.1#1 from equivalence set
debug: Found equivalence set: select%0#0, tmp%0#4
debug: selected select%0#0 from equivalence set
debug: Found equivalence set: tmp%0#3, move.0#0
debug: selected move.0#0 from equivalence set
debug: Found equivalence set: tmp%1#1, move.1#0
debug: selected move.1#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining condition branch to err block into an assert true
debug: simplified terminator of block@5 from goto tmp%4#0 ? block@6 : block@11 to goto block@6
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@21 with block@4 in block@25
debug: Replaced predecessor block@21 with block@4 in block@22
debug: Merged linear block@21 into block@4
debug: Merged linear block@30 into block@29
debug: Replaced predecessor block@6 with block@5 in block@7
debug: Replaced predecessor block@6 with block@5 in block@8
debug: Replaced predecessor block@6 with block@5 in block@9
debug: Replaced predecessor block@6 with block@5 in block@11
debug: Merged linear block@6 into block@5
debug: Replaced predecessor block@19 with block@7 in block@20
debug: Merged linear block@19 into block@7
debug: Merged linear block@20 into block@7
debug: Replaced predecessor block@17 with block@8 in block@18
debug: Merged linear block@17 into block@8
debug: Merged linear block@18 into block@8
debug: Replaced predecessor block@12 with block@9 in block@14
debug: Replaced predecessor block@12 with block@9 in block@13
debug: Merged linear block@12 into block@9
debug: Merged linear block@16 into block@15
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Unused subroutines removed
debug: Begin optimization pass 4/100
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of examples.tictactoe.tictactoe.TicTacToeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of examples.tictactoe.tictactoe.TicTacToeContract
debug: lowering array IR nodes in clear program of examples.tictactoe.tictactoe.TicTacToeContract
debug: optimizing approval program of examples.tictactoe.tictactoe.TicTacToeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%item0%0#0, move.0#2
debug: selected move.0#2 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, move.1#2
debug: selected move.1#2 from equivalence set
debug: Found equivalence set: aggregate%updated_array%1#0, updated_array%0#0
debug: selected aggregate%updated_array%1#0 from equivalence set
debug: Found equivalence set: aggregate%item0%1#0, move.0#1
debug: selected move.0#1 from equivalence set
debug: Found equivalence set: aggregate%item1%1#0, move.1#1
debug: selected move.1#1 from equivalence set
debug: Found equivalence set: aggregate%item0%2#0, move.0#0
debug: selected move.0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%2#0, move.1#0
debug: selected move.1#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable aggregate%bytes_offset%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 reinterpret_Encoded(uint64,uint64)%0#2 0u)
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 reinterpret_Encoded(uint64,uint64)%0#2 8u)
debug: Simplified (* move.0#2 1u) to move.0#2
debug: Simplified (btoi aggregate%extract%2#0) to (extract_uint64 reinterpret_Encoded(uint64,uint64)%0#1 0u)
debug: Simplified (btoi aggregate%extract%3#0) to (extract_uint64 reinterpret_Encoded(uint64,uint64)%0#1 8u)
debug: Simplified (btoi aggregate%extract%4#0) to (extract_uint64 reinterpret_Encoded(uint64,uint64)%0#0 0u)
debug: Simplified (btoi aggregate%extract%5#0) to (extract_uint64 reinterpret_Encoded(uint64,uint64)%0#0 8u)
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%0#2 0u 8u) to ((extract 0 8) reinterpret_Encoded(uint64,uint64)%0#2)
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%0#2 8u 8u) to ((extract 8 8) reinterpret_Encoded(uint64,uint64)%0#2)
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%0#1 0u 8u) to ((extract 0 8) reinterpret_Encoded(uint64,uint64)%0#1)
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%0#1 8u 8u) to ((extract 8 8) reinterpret_Encoded(uint64,uint64)%0#1)
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%0#0 0u 8u) to ((extract 0 8) reinterpret_Encoded(uint64,uint64)%0#0)
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%0#0 8u 8u) to ((extract 8 8) reinterpret_Encoded(uint64,uint64)%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%write_offset%1#0: uint64 = (* move.1#2 3u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:34:8-49, ir_type=uint64, name='aggregate%bytes_offset%0', version=0),)
debug: Found equivalence set: move.0#2, aggregate%write_offset%0#0
debug: selected move.0#2 from equivalence set
debug: Found equivalence set: aggregate%bytes_offset%0#0, aggregate%write_offset%1#0
debug: selected aggregate%bytes_offset%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_element%1#0, array_item%1#0
debug: selected aggregate%encoded_element%1#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%1#0, updated_array%0#0
debug: selected aggregate%updated_array%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%5#0, array_item%1#1
debug: selected aggregate%encoded_element%5#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%7#0, array_item%3#0
debug: selected aggregate%encoded_element%7#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%9#0, array_item%5#0
debug: selected aggregate%encoded_element%9#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%11#0, array_item%7#0
debug: selected aggregate%encoded_element%11#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%13#0, array_item%9#0
debug: selected aggregate%encoded_element%13#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%15#0, array_item%11#0
debug: selected aggregate%encoded_element%15#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%17#0, array_item%13#0
debug: selected aggregate%encoded_element%17#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%19#0, array_item%15#0
debug: selected aggregate%encoded_element%19#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%21#0, array_item%17#0
debug: selected aggregate%encoded_element%21#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%23#0, array_item%19#0
debug: selected aggregate%encoded_element%23#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%25#0, array_item%21#0
debug: selected aggregate%encoded_element%25#0 from equivalence set
debug: Copy propagation made 15 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%3#0
debug: Removing unused variable aggregate%bytes_offset%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* move.0#0 1u) to move.0#0
debug: Simplified (* move.0#0 1u) to move.0#0
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (* 0u 3u) to 0u
debug: Simplified (* move.0#0 1u) to move.0#0
debug: Simplified (* 1u 3u) to 3u
debug: Simplified (* move.0#0 1u) to move.0#0
debug: Simplified (* 2u 3u) to 6u
debug: Simplified (* move.0#0 1u) to move.0#0
debug: Simplified (* 1u 3u) to 3u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 0u 3u) to 0u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 2u 3u) to 6u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (* 0u 3u) to 0u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (* 2u 3u) to 6u
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (extract3 aggregate%encoded_element%4#0 0u 1u) // on error: index access is out of bounds to ((extract 0 1) aggregate%encoded_element%4#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%encoded_element%6#0 1u 1u) // on error: index access is out of bounds to ((extract 1 1) aggregate%encoded_element%6#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%encoded_element%8#0 2u 1u) // on error: index access is out of bounds to ((extract 2 1) aggregate%encoded_element%8#0) // on error: index access is out of bounds
debug: Simplified (extract3 g#0 0u 3u) // on error: index access is out of bounds to ((extract 0 3) g#0) // on error: index access is out of bounds
debug: Simplified (extract3 g#0 3u 3u) // on error: index access is out of bounds to ((extract 3 3) g#0) // on error: index access is out of bounds
debug: Simplified (extract3 g#0 6u 3u) // on error: index access is out of bounds to ((extract 6 3) g#0) // on error: index access is out of bounds
debug: Simplified (extract3 g#0 3u 3u) // on error: index access is out of bounds to ((extract 3 3) g#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%encoded_element%16#0 1u 1u) // on error: index access is out of bounds to ((extract 1 1) aggregate%encoded_element%16#0) // on error: index access is out of bounds
debug: Simplified (extract3 g#0 0u 3u) // on error: index access is out of bounds to ((extract 0 3) g#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%encoded_element%18#0 0u 1u) // on error: index access is out of bounds to ((extract 0 1) aggregate%encoded_element%18#0) // on error: index access is out of bounds
debug: Simplified (extract3 g#0 6u 3u) // on error: index access is out of bounds to ((extract 6 3) g#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%encoded_element%20#0 2u 1u) // on error: index access is out of bounds to ((extract 2 1) aggregate%encoded_element%20#0) // on error: index access is out of bounds
debug: Simplified (extract3 g#0 0u 3u) // on error: index access is out of bounds to ((extract 0 3) g#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%encoded_element%22#0 2u 1u) // on error: index access is out of bounds to ((extract 2 1) aggregate%encoded_element%22#0) // on error: index access is out of bounds
debug: Simplified (extract3 g#0 6u 3u) // on error: index access is out of bounds to ((extract 6 3) g#0) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%encoded_element%24#0 0u 1u) // on error: index access is out of bounds to ((extract 0 1) aggregate%encoded_element%24#0) // on error: index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%bytes_offset%2#0: uint64 = (* move.1#0 3u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:64:15-37, ir_type=uint64, name='aggregate%bytes_offset%0', version=0),)
debug: Replacing redundant declaration let aggregate%write_offset%1#0: uint64 = (* move.1#0 3u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:64:15-37, ir_type=uint64, name='aggregate%bytes_offset%0', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_offset%4#0: uint64 = (* move.1#0 3u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:64:15-37, ir_type=uint64, name='aggregate%bytes_offset%0', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_offset%6#0: uint64 = (* move.1#0 3u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:64:15-37, ir_type=uint64, name='aggregate%bytes_offset%0', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_offset%8#0: uint64 = (* move.1#0 3u) with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:64:15-37, ir_type=uint64, name='aggregate%bytes_offset%0', version=0),)
debug: Replacing redundant declaration let aggregate%encoded_element%16#0: bytes = ((extract 3 3) g#0) // on error: index access is out of bounds with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:79:27-39, ir_type=bytes, name='aggregate%encoded_element%12', version=0),)
debug: Replacing redundant declaration let aggregate%encoded_element%18#0: bytes = ((extract 0 3) g#0) // on error: index access is out of bounds with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:79:11-23, ir_type=bytes, name='aggregate%encoded_element%10', version=0),)
debug: Replacing redundant declaration let aggregate%encoded_element%22#0: bytes = ((extract 0 3) g#0) // on error: index access is out of bounds with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:84:15-22, ir_type=bytes, name='aggregate%encoded_element%18', version=0),)
debug: Found equivalence set: move.0#0, aggregate%bytes_offset%1#0, aggregate%write_offset%0#0, aggregate%bytes_offset%11#0, aggregate%bytes_offset%13#0, aggregate%bytes_offset%15#0
debug: selected move.0#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_offset%0#0, aggregate%bytes_offset%2#0, aggregate%write_offset%1#0, aggregate%bytes_offset%4#0, aggregate%bytes_offset%6#0, aggregate%bytes_offset%8#0
debug: selected aggregate%bytes_offset%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%12#0, aggregate%encoded_element%16#0
debug: selected aggregate%encoded_element%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%10#0, aggregate%encoded_element%18#0, aggregate%encoded_element%22#0
debug: selected aggregate%encoded_element%10#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Replacing redundant declaration let aggregate%encoded_element%6#0: bytes = (extract3 g#0 aggregate%bytes_offset%0#0 3u) // on error: index access is out of bounds with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:76:11-20, ir_type=bytes, name='aggregate%encoded_element%4', version=0),)
debug: Replacing redundant declaration let aggregate%encoded_element%8#0: bytes = (extract3 g#0 aggregate%bytes_offset%0#0 3u) // on error: index access is out of bounds with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:76:11-20, ir_type=bytes, name='aggregate%encoded_element%4', version=0),)
debug: Found equivalence set: aggregate%encoded_element%4#0, aggregate%encoded_element%6#0, aggregate%encoded_element%8#0
debug: selected aggregate%encoded_element%4#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
tictactoe/tictactoe.py:65:9 debug: replacing app_global read with cached value for key: "game"
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%extract%1#0
debug: Removing unused variable aggregate%extract%2#0
debug: Removing unused variable aggregate%extract%3#0
debug: Removing unused variable aggregate%extract%4#0
debug: Removing unused variable aggregate%extract%5#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, maybe_value%1#0
debug: selected maybe_value%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, maybe_exists%1#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%bytes_offset%5#0
debug: Removing unused variable aggregate%bytes_offset%7#0
debug: Removing unused variable aggregate%bytes_offset%9#0
debug: Removing unused variable aggregate%bytes_offset%10#0
debug: Removing unused variable aggregate%bytes_offset%12#0
debug: Removing unused variable aggregate%bytes_offset%14#0
debug: Removing unused variable aggregate%bytes_offset%16#0
debug: Removing unused variable aggregate%bytes_offset%17#0
debug: Removing unused variable aggregate%bytes_offset%18#0
debug: Removing unused variable aggregate%bytes_offset%19#0
debug: Removing unused variable aggregate%bytes_offset%20#0
debug: Removing unused variable aggregate%bytes_offset%21#0
debug: Removing unused variable aggregate%bytes_offset%22#0
debug: Removing unused variable aggregate%bytes_offset%23#0
debug: Removing unused variable aggregate%bytes_offset%24#0
debug: Removing unused variable aggregate%bytes_offset%25#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Removing redundant assert of maybe_exists%0#0
debug: Replacing redundant declaration let aggregate%encoded_element%2#0: bytes = (extract3 maybe_value%0#0 aggregate%bytes_offset%0#0 3u) // on error: index access is out of bounds with copy of existing registers (Register(source_location=tictactoe/tictactoe.py:64:15-37, ir_type=bytes, name='aggregate%encoded_element%0', version=0),)
debug: Found equivalence set: aggregate%encoded_element%0#0, aggregate%encoded_element%2#0
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of examples.tictactoe.tictactoe.TicTacToeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of examples.tictactoe.tictactoe.TicTacToeContract
debug: auto reserving slots in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init, []
tictactoe/tictactoe.py:60 debug: auto reserving slots in examples.tictactoe.tictactoe.TicTacToeContract.make_move, []
debug: Slot allocation not required
debug: removing local static slots in clear program of examples.tictactoe.tictactoe.TicTacToeContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing tmp%1#0 with [tmp%1#5]
debug: Coalescing reinterpret_Encoded(uint64,uint64)%0#0 with [reinterpret_Encoded(uint64,uint64)%0#2, reinterpret_Encoded(uint64,uint64)%0#1]
debug: Coalescing move.0#0 with [move.0#2, move.0#1]
debug: Coalescing move.1#0 with [move.1#2, move.1#1]
debug: Coalescing tmp%0#8 with [tmp%0#10]
debug: Coalescing _%0#1 with [_%0#2]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#3, maybe_exists%0#2, maybe_exists%0#1]
debug: Coalescing maybe_exists%1#0 with [maybe_exists%1#1]
debug: Coalescing tmp%4#0 with [tmp%4#2, tmp%4#1]
debug: Coalescing and_result%0#0 with [and_result%0#5, and_result%0#1, and_result%0#2]
debug: Coalescing maybe_exists%2#0 with [maybe_exists%2#1]
debug: Coalescing tmp%0#7 with [tmp%0#9]
debug: Coalescing maybe_value%0#0 with [maybe_value%0#1]
debug: Coalescing player#0 with [player#5, player#1, player#2]
debug: Coalescing resulted in 53 replacement/s
debug: Sequentializing parallel copies in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.tictactoe.tictactoe.TicTacToeContract.make_move using strategy 'root_operand'
debug: Coalescing tmp%0#0 with [tmp%0#1]
debug: Coalescing tmp%1#0 with [tmp%1#1]
debug: Coalescing and_result%0#0 with [and_result%0#5, and_result%0#1, and_result%0#2]
debug: Coalescing maybe_exists%0#0 with [maybe_exists%0#1]
debug: Coalescing tmp%2#0 with [tmp%2#1]
debug: Coalescing examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#0 with [examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#1, examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#2, examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#3, examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#4]
debug: Coalescing tmp%4#0 with [tmp%4#2, tmp%4#1]
debug: Coalescing tmp%5#0 with [tmp%5#1]
debug: Coalescing resulted in 33 replacement/s
debug: Sequentializing parallel copies in examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Performing post-SSA optimizations at level 2
debug: Removing duplicated block block@15 and updating references to block@12
debug: Replaced predecessor block@15 with block@12 in block@25
debug: Removing duplicated block block@19 and updating references to block@12
debug: Replaced predecessor block@19 with block@12 in block@25
debug: Removing duplicated block block@22 and updating references to block@12
debug: Replaced predecessor block@22 with block@12 in block@25
debug: Output IR to tictactoe/out_O2/TicTacToeContract.ir/TicTacToeContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to tictactoe/out_O2/TicTacToeContract.ir/TicTacToeContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_block@0.ops[5]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted main_block@0.ops[7]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_block@0.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_block@0.ops[12]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_block@0.ops[15]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_new_game_route@4.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced main_new_game_route@4.ops[3]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted main_new_game_route@4.ops[12]: 'l-store-copy tmp%0#8 0'
debug: Replaced main_new_game_route@4.ops[14]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_new_game_route@4.ops[4]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced main_new_game_route@4.ops[8]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted main_if_body@22.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_if_body@22.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_if_body@23.ops[3]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced main_if_body@23.ops[6]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted main_after_if_else@25.ops[14]: 'l-store-copy tmp%3#2 0'
debug: Replaced main_after_if_else@25.ops[16]: 'v-load tmp%3#2' with 'l-load tmp%3#2'
debug: Inserted main_after_if_else@25.ops[1]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_after_if_else@25.ops[4]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_after_if_else@25.ops[8]: 'l-store-copy reinterpret_Encoded(uint8[3][3])%0#0 0'
debug: Replaced main_after_if_else@25.ops[11]: 'v-load reinterpret_Encoded(uint8[3][3])%0#0' with 'l-load reinterpret_Encoded(uint8[3][3])%0#0'
debug: Inserted main_and_contd@26.ops[3]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_and_contd@26.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_bool_merge@29.ops[17]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced main_bool_merge@29.ops[19]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted main_bool_merge@29.ops[5]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced main_bool_merge@29.ops[8]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted main_bool_merge@29.ops[13]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced main_bool_merge@29.ops[16]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted main_bool_merge@29.ops[30]: 'l-store-copy aggregate%updated_array%1#0 0'
debug: Replaced main_bool_merge@29.ops[33]: 'v-load aggregate%updated_array%1#0' with 'l-load aggregate%updated_array%1#0'
debug: Inserted main_bool_merge@29.ops[25]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced main_bool_merge@29.ops[29]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted main_bool_merge@29.ops[7]: 'l-store-copy maybe_value%0#2 1'
debug: Replaced main_bool_merge@29.ops[16]: 'v-load maybe_value%0#2' with 'l-load maybe_value%0#2'
debug: Inserted main_bool_merge@29.ops[17]: 'l-store-copy maybe_value%0#2 1'
debug: Replaced main_bool_merge@29.ops[29]: 'v-load maybe_value%0#2' with 'l-load maybe_value%0#2'
debug: Inserted main_bool_merge@29.ops[19]: 'l-store-copy aggregate%bytes_offset%0#0 2'
debug: Replaced main_bool_merge@29.ops[31]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted main_switch_case_default@5.ops[1]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_switch_case_default@5.ops[3]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_switch_case_default@5.ops[6]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_switch_case_default@5.ops[11]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_join_game_route@7.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced main_join_game_route@7.ops[3]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted main_join_game_route@7.ops[18]: 'l-store-copy tmp%0#7 0'
debug: Replaced main_join_game_route@7.ops[20]: 'v-load tmp%0#7' with 'l-load tmp%0#7'
debug: Inserted main_join_game_route@7.ops[14]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_join_game_route@7.ops[17]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_join_game_route@7.ops[24]: 'l-store-copy tmp%1#6 0'
debug: Replaced main_join_game_route@7.ops[27]: 'v-load tmp%1#6' with 'l-load tmp%1#6'
debug: Inserted main_join_game_route@7.ops[4]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced main_join_game_route@7.ops[8]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted main_join_game_route@7.ops[11]: 'l-store-copy move.1#0 0'
debug: Replaced main_join_game_route@7.ops[33]: 'v-load move.1#0' with 'l-load move.1#0'
debug: Inserted main_join_game_route@7.ops[7]: 'l-store-copy move.0#0 1'
debug: Replaced main_join_game_route@7.ops[33]: 'v-load move.0#0' with 'l-load move.0#0'
debug: Inserted main_whose_turn_route@8.ops[19]: 'l-store-copy tmp%1#2 0'
debug: Replaced main_whose_turn_route@8.ops[21]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_whose_turn_route@8.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_whose_turn_route@8.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_whose_turn_route@8.ops[16]: 'l-store-copy select%0#0 0'
debug: Replaced main_whose_turn_route@8.ops[19]: 'v-load select%0#0' with 'l-load select%0#0'
debug: Inserted main_whose_turn_route@8.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced main_whose_turn_route@8.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_whose_turn_route@8.ops[12]: 'l-store-copy tmp%0#8 0'
debug: Replaced main_whose_turn_route@8.ops[16]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_play_route@9.ops[1]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced main_play_route@9.ops[3]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted main_play_route@9.ops[18]: 'l-store-copy tmp%0#7 0'
debug: Replaced main_play_route@9.ops[20]: 'v-load tmp%0#7' with 'l-load tmp%0#7'
debug: Inserted main_play_route@9.ops[32]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_play_route@9.ops[34]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted main_play_route@9.ops[14]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced main_play_route@9.ops[17]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted main_play_route@9.ops[26]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced main_play_route@9.ops[29]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted main_play_route@9.ops[28]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced main_play_route@9.ops[32]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted main_play_route@9.ops[4]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced main_play_route@9.ops[8]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted main_if_body@13.ops[12]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_if_body@13.ops[14]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_if_body@13.ops[5]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced main_if_body@13.ops[8]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted main_if_body@13.ops[7]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced main_if_body@13.ops[12]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted main_if_body@13.ops[1]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_if_body@13.ops[12]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_else_body@14.ops[17]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_else_body@14.ops[19]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_else_body@14.ops[8]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced main_else_body@14.ops[11]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted main_else_body@14.ops[14]: 'l-store-copy state_get%0#0 0'
debug: Replaced main_else_body@14.ops[17]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted main_else_body@14.ops[7]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced main_else_body@14.ops[13]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted main_else_body@14.ops[3]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_else_body@14.ops[12]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main_else_body@14.ops[1]: 'l-store-copy tmp%5#1 0'
debug: Replaced main_else_body@14.ops[19]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted make_move_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced make_move_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted make_move_and_contd@1.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced make_move_and_contd@1.ops[5]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted make_move_bool_merge@4.ops[17]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced make_move_bool_merge@4.ops[19]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted make_move_bool_merge@4.ops[23]: 'l-store-copy aggregate%encoded_element%1#0 0'
debug: Replaced make_move_bool_merge@4.ops[25]: 'v-load aggregate%encoded_element%1#0' with 'l-load aggregate%encoded_element%1#0'
debug: Inserted make_move_bool_merge@4.ops[28]: 'l-store-copy tmp%2#0 0'
debug: Replaced make_move_bool_merge@4.ops[30]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted make_move_bool_merge@4.ops[70]: 'l-store-copy aggregate%encoded_element%4#0 0'
debug: Replaced make_move_bool_merge@4.ops[72]: 'v-load aggregate%encoded_element%4#0' with 'l-load aggregate%encoded_element%4#0'
debug: Inserted make_move_bool_merge@4.ops[81]: 'l-store-copy tmp%0#0 0'
debug: Replaced make_move_bool_merge@4.ops[83]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted make_move_bool_merge@4.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced make_move_bool_merge@4.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted make_move_bool_merge@4.ops[13]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced make_move_bool_merge@4.ops[16]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted make_move_bool_merge@4.ops[43]: 'l-store-copy aggregate%updated_array%1#0 0'
debug: Replaced make_move_bool_merge@4.ops[46]: 'v-load aggregate%updated_array%1#0' with 'l-load aggregate%updated_array%1#0'
debug: Inserted make_move_bool_merge@4.ops[51]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced make_move_bool_merge@4.ops[54]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted make_move_bool_merge@4.ops[59]: 'l-store-copy tmp%3#0 0'
debug: Replaced make_move_bool_merge@4.ops[62]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted make_move_bool_merge@4.ops[67]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced make_move_bool_merge@4.ops[70]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted make_move_bool_merge@4.ops[83]: 'l-store-copy aggregate%encoded_element%7#0 0'
debug: Replaced make_move_bool_merge@4.ops[86]: 'v-load aggregate%encoded_element%7#0' with 'l-load aggregate%encoded_element%7#0'
debug: Inserted make_move_bool_merge@4.ops[38]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced make_move_bool_merge@4.ops[42]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted make_move_bool_merge@4.ops[54]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced make_move_bool_merge@4.ops[58]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted make_move_bool_merge@4.ops[71]: 'l-store-copy g#0 1'
debug: Replaced make_move_bool_merge@4.ops[75]: 'v-load g#0' with 'l-load g#0'
debug: Inserted make_move_bool_merge@4.ops[82]: 'l-store-copy aggregate%encoded_element%4#0 0'
debug: Replaced make_move_bool_merge@4.ops[85]: 'v-load aggregate%encoded_element%4#0' with 'l-load aggregate%encoded_element%4#0'
debug: Inserted make_move_bool_merge@4.ops[84]: 'l-store-copy aggregate%encoded_element%5#0 1'
debug: Replaced make_move_bool_merge@4.ops[90]: 'v-load aggregate%encoded_element%5#0' with 'l-load aggregate%encoded_element%5#0'
debug: Inserted make_move_bool_merge@4.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced make_move_bool_merge@4.ops[16]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted make_move_bool_merge@4.ops[23]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced make_move_bool_merge@4.ops[36]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted make_move_bool_merge@4.ops[17]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced make_move_bool_merge@4.ops[43]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted make_move_bool_merge@4.ops[19]: 'l-store-copy aggregate%bytes_offset%0#0 2'
debug: Replaced make_move_bool_merge@4.ops[45]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted make_move_bool_merge@4.ops[46]: 'l-store-copy aggregate%bytes_offset%0#0 2'
debug: Replaced make_move_bool_merge@4.ops[81]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted make_move_and_contd@11.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced make_move_and_contd@11.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted make_move_and_contd@11.ops[2]: 'l-store-copy aggregate%encoded_element%9#0 0'
debug: Replaced make_move_and_contd@11.ops[5]: 'v-load aggregate%encoded_element%9#0' with 'l-load aggregate%encoded_element%9#0'
debug: Inserted make_move_if_body@12.ops[1]: 'l-store-copy examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#0 0'
debug: Replaced make_move_if_body@12.ops[3]: 'v-load examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#0' with 'l-load examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#0'
debug: Inserted make_move_after_if_else@13.ops[2]: 'l-store-copy aggregate%encoded_element%10#0 0'
debug: Replaced make_move_after_if_else@13.ops[4]: 'v-load aggregate%encoded_element%10#0' with 'l-load aggregate%encoded_element%10#0'
debug: Inserted make_move_after_if_else@13.ops[11]: 'l-store-copy aggregate%encoded_element%12#0 0'
debug: Replaced make_move_after_if_else@13.ops[13]: 'v-load aggregate%encoded_element%12#0' with 'l-load aggregate%encoded_element%12#0'
debug: Inserted make_move_after_if_else@13.ops[21]: 'l-store-copy tmp%2#0 0'
debug: Replaced make_move_after_if_else@13.ops[23]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted make_move_after_if_else@13.ops[17]: 'l-store-copy aggregate%encoded_element%13#0 0'
debug: Replaced make_move_after_if_else@13.ops[20]: 'v-load aggregate%encoded_element%13#0' with 'l-load aggregate%encoded_element%13#0'
debug: Inserted make_move_after_if_else@13.ops[1]: 'l-store-copy g#0 0'
debug: Replaced make_move_after_if_else@13.ops[10]: 'v-load g#0' with 'l-load g#0'
debug: Inserted make_move_after_if_else@13.ops[9]: 'l-store-copy aggregate%encoded_element%11#0 1'
debug: Replaced make_move_after_if_else@13.ops[21]: 'v-load aggregate%encoded_element%11#0' with 'l-load aggregate%encoded_element%11#0'
debug: Inserted make_move_and_contd@14.ops[2]: 'l-store-copy aggregate%encoded_element%14#0 0'
debug: Replaced make_move_and_contd@14.ops[4]: 'v-load aggregate%encoded_element%14#0' with 'l-load aggregate%encoded_element%14#0'
debug: Inserted make_move_and_contd@14.ops[12]: 'l-store-copy tmp%3#1 0'
debug: Replaced make_move_and_contd@14.ops[14]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted make_move_and_contd@14.ops[8]: 'l-store-copy aggregate%encoded_element%15#0 0'
debug: Replaced make_move_and_contd@14.ops[11]: 'v-load aggregate%encoded_element%15#0' with 'l-load aggregate%encoded_element%15#0'
debug: Inserted make_move_after_if_else@16.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced make_move_after_if_else@16.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted make_move_after_if_else@16.ops[2]: 'l-store-copy aggregate%encoded_element%17#0 0'
debug: Replaced make_move_after_if_else@16.ops[5]: 'v-load aggregate%encoded_element%17#0' with 'l-load aggregate%encoded_element%17#0'
debug: Inserted make_move_if_body@17.ops[2]: 'l-store-copy aggregate%encoded_element%19#0 0'
debug: Replaced make_move_if_body@17.ops[4]: 'v-load aggregate%encoded_element%19#0' with 'l-load aggregate%encoded_element%19#0'
debug: Inserted make_move_if_body@17.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced make_move_if_body@17.ops[9]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted make_move_and_contd@18.ops[2]: 'l-store-copy aggregate%encoded_element%20#0 0'
debug: Replaced make_move_and_contd@18.ops[4]: 'v-load aggregate%encoded_element%20#0' with 'l-load aggregate%encoded_element%20#0'
debug: Inserted make_move_and_contd@18.ops[10]: 'l-store-copy tmp%6#0 0'
debug: Replaced make_move_and_contd@18.ops[12]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted make_move_and_contd@18.ops[6]: 'l-store-copy aggregate%encoded_element%21#0 0'
debug: Replaced make_move_and_contd@18.ops[9]: 'v-load aggregate%encoded_element%21#0' with 'l-load aggregate%encoded_element%21#0'
debug: Inserted make_move_after_if_else@20.ops[2]: 'l-store-copy aggregate%encoded_element%23#0 0'
debug: Replaced make_move_after_if_else@20.ops[4]: 'v-load aggregate%encoded_element%23#0' with 'l-load aggregate%encoded_element%23#0'
debug: Inserted make_move_after_if_else@20.ops[7]: 'l-store-copy tmp%7#0 0'
debug: Replaced make_move_after_if_else@20.ops[9]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted make_move_and_contd@21.ops[2]: 'l-store-copy aggregate%encoded_element%24#0 0'
debug: Replaced make_move_and_contd@21.ops[4]: 'v-load aggregate%encoded_element%24#0' with 'l-load aggregate%encoded_element%24#0'
debug: Inserted make_move_and_contd@21.ops[10]: 'l-store-copy tmp%8#0 0'
debug: Replaced make_move_and_contd@21.ops[12]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted make_move_and_contd@21.ops[6]: 'l-store-copy aggregate%encoded_element%25#0 0'
debug: Replaced make_move_and_contd@21.ops[9]: 'v-load aggregate%encoded_element%25#0' with 'l-load aggregate%encoded_element%25#0'
debug: Inserted make_move_after_if_else@24.ops[1]: 'l-store-copy examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#0 0'
debug: Replaced make_move_after_if_else@24.ops[3]: 'v-load examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#0' with 'l-load examples.tictactoe.tictactoe.TicTacToeContract.did_win%0#0'
debug: Inserted make_move_else_body@6.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced make_move_else_body@6.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted make_move_else_body@6.ops[3]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced make_move_else_body@6.ops[6]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted make_move_else_body@6.ops[5]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced make_move_else_body@6.ops[9]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Found 8 edge set/s for examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Allocated 2 variable/s to x-stack: and_result%0#0, player#0
debug: shared x-stack for main_bool_true@27 -> main_bool_merge@29: and_result%0#0
debug: shared x-stack for main_bool_false@28 -> main_bool_merge@29: and_result%0#0
debug: shared x-stack for main_if_body@13 -> main_after_if_else@15: player#0
debug: shared x-stack for main_else_body@14 -> main_after_if_else@15: player#0
debug: Found 6 edge set/s for examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Allocated 2 variable/s to x-stack: and_result%0#0, tmp%4#0
debug: shared x-stack for make_move_bool_true@2 -> make_move_bool_merge@4: and_result%0#0
debug: shared x-stack for make_move_bool_false@3 -> make_move_bool_merge@4: and_result%0#0
debug: shared x-stack for make_move_if_body@12 -> make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25: tmp%4#0
debug: shared x-stack for make_move_after_if_else@24 -> make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25: tmp%4#0
debug: examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init f-stack entry: ['move.0#0', 'move.1#0']
debug: examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init f-stack on first store: ['lifted%return#0']
debug: examples.tictactoe.tictactoe.TicTacToeContract.make_move f-stack entry: ['aggregate%encoded_element%10#0', 'aggregate%encoded_element%12#0', 'aggregate%encoded_element%13#0', 'aggregate%encoded_element%4#0', 'aggregate%encoded_element%7#0', 'g#0']
debug: examples.tictactoe.tictactoe.TicTacToeContract.make_move f-stack on first store: []
debug: optimizing TEAL subroutine ops examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init() -> uint64:
tictactoe/tictactoe.py:60 debug: optimizing TEAL subroutine ops examples.tictactoe.tictactoe.TicTacToeContract.make_move(player: bytes, move.0: uint64, move.1: uint64) -> void:
debug: optimizing TEAL subroutine blocks examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_switch_case_default@5 into main
debug: inlining single reference block main_switch_case_next@11 into main
debug: inlining single reference block main_if_body@13 into main_play_route@9
debug: inlining single reference block main_if_body@22 into main_new_game_route@4
debug: inlining single reference block main_if_body@23 into main_new_game_route@4
debug: inlining single reference block main_and_contd@26 into main_after_if_else@25
debug: inlining single reference block main_bool_true@27 into main_after_if_else@25
debug: removing explicit jump to fall-through block main_after_if_else@15
debug: removing explicit jump to fall-through block main_after_if_else@24
debug: removing explicit jump to fall-through block main_after_if_else@25
debug: removing explicit jump to fall-through block main_bool_merge@29
tictactoe/tictactoe.py:60 debug: optimizing TEAL subroutine blocks examples.tictactoe.tictactoe.TicTacToeContract.make_move(player: bytes, move.0: uint64, move.1: uint64) -> void:
debug: replacing `b make_move_after_if_else@9` with `retsub`
debug: inlining single reference block make_move_block@0 into make_move
debug: inlining single reference block make_move_and_contd@1 into make_move
debug: inlining single reference block make_move_bool_true@2 into make_move
debug: inlining single reference block make_move_and_contd@11 into make_move_bool_merge@4
debug: inlining single reference block make_move_if_body@5 into make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25
debug: inlining single reference block make_move_if_body@7 into make_move_else_body@6
debug: inlining single reference block make_move_and_contd@14 into make_move_after_if_else@13
debug: inlining single reference block make_move_if_body@17 into make_move_after_if_else@16
debug: inlining single reference block make_move_and_contd@18 into make_move_after_if_else@16
debug: inlining single reference block make_move_and_contd@21 into make_move_after_if_else@20
debug: removing explicit jump to fall-through block make_move_bool_merge@4
debug: removing explicit jump to fall-through block make_move_if_body@12
debug: removing explicit jump to fall-through block make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25
debug: removing explicit jump to fall-through block make_move_after_if_else@9
debug: removing explicit jump to fall-through block make_move_after_if_else@16
debug: removing explicit jump to fall-through block make_move_after_if_else@20
debug: removing explicit jump to fall-through block make_move_after_if_else@24
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing tictactoe/out_O2/TicTacToeContract.approval.teal
info: Writing tictactoe/out_O2/TicTacToeContract.clear.teal
info: Writing tictactoe/out_O2/TicTacToeContract.approval.bin
info: Writing tictactoe/out_O2/TicTacToeContract.clear.bin
info: Writing tictactoe/out_O2/TicTacToeContract.approval.stats.txt
info: Writing tictactoe/out_O2/TicTacToeContract.clear.stats.txt
info: Writing tictactoe/out_O2/TicTacToeContract.approval.puya.map
info: Writing tictactoe/out_O2/TicTacToeContract.clear.puya.map