{
  "version": 3,
  "sources": [
    "../tictactoe.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;AAEW;;AAAA;AAAA;AAAX;;;AAAA;;;AAGe;AAAA;AAAA;AAAA;;AAAA;;AAAf;;;AAAA;;;AACuB;AAAA;;AAAA;AAAA;;AAAA;;AAAP;;;;AAEA;AAAJ;AACI;;AAAJ;;;;AACQ;;AAAZ;;AAAA;;AAAA;AACqC;;AAAT;AAA5B;AAAA;;AAAA;AACA;;AAAA;AAAA;;AAAA;;AAAA;;AACgB;AAAT;AAAA;;;AAAA;;;AAAe;;AAAM;AAAN;AAAf;;;AAAA;;;;;;;;;AAAP;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAyB;;AAAzB;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AACA;AAAa;AAAb;;;;;;;;AAER;;;;;;AAEe;AAAI;AAAJ;AAAA;AAAP;AACwB;;AAAxB;AAAA;;AAAA;AACe;;AAAf;;AAAA;;AAAA;;;;;;;AAI2B;AAAA;AAAA;AAAA;AAAa;;AAAb;AAAA;AAAA;AAAoB;;AAAxC;;AAAA;;AAAA;AAAP;AAER;;;;;;;AAEe;AAAI;;AAAJ;AAAA;AAAP;AACG;AAAA;AAAA;AAAA;AAAa;;AAAb;AAAA;AAAA;AAAX;;;AAAA;;;AACmB;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AACS;;AAAT;;;;;AAMJ;;AAAA;;AAAA;;AAAA;;;;AAJW;;AACK;;AADS;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAd;AAAP;AAGS;;AAAT;;;;;AAGZ;;;;;;;AAEQ;;AAAA;AAAA;;AAAA;;AACgB;AAAT;AAAA;;;AAAA;;;AAAe;;AAAM;AAAN;AAAf;;;AAAA;;;;;;;;;AAAP;;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA0B;;;AAA1B;AAAP;AACA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAA;AAAA;;AAAA;AACG;;AAAA;;AAAA;;AAAA;;;AAAX;;;AAAA;;;AACY;;AAAA;;AAAA;;;;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAb;;;AAAA;;;AACY;;AAAoB;;;AAApB;;;;;;;;;;;;;AAEZ;;;;;;;AAEY;AAAA;AAAA;AAAA;AAAJ;AAEG;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAO;AAAP;AAAA;AAAA;AAAA;AAAA;;AAAa;;AAAA;AAAA;AAAA;AAAA;AAAO;AAAP;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAb;AAAA;;;AAAA;;;AAAa;;AAAa;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAO;;AAAP;AAAA;AAAA;AAAA;AAAb;AAAb;;;AAAA;;;AACQ;AAAP;;AAAA;AAEC;AAAF;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAkB;AAAF;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAhB;AAAA;;;AAAA;;;AAAgB;;AAAkB;;AAAF;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAhB;;;AAAA;;;AACQ;AAAP;;AAAA;AAGD;;AAAY;AAAF;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAK;AAAL;AAAA;AAAA;AAAA;AAAV;AAAX;;;AAAA;;;AACiB;AAAF;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAK;AAAL;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAA;;;AAAA;;;AAAW;;AAAY;;AAAF;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAK;;AAAL;AAAA;AAAA;AAAA;AAAV;AAAX;;;AAAA;;;AACQ;AAAP;;AAAA;AACC;AAAF;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAK;;AAAL;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAA;;;AAAA;;;AAAW;;AAAY;;AAAF;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAK;AAAL;AAAA;AAAA;AAAA;AAAV;AAAX;;;AAAA;;;AACQ;AAAP;;AAAA;;;;AACD;AAAP;;AAAA;;;;;;;;;;;AAzER;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;AAAA;;;;;;;;;AAAA;;;;;;;;;;;AAgCK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhCL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgCK;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;;;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAtBL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAsBK;;;AAAA;;;;;;AAjBA;;AAAA;AAAA;AAAA;AALL;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKK;;;AAAA;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 3 8"
    },
    "7": {
      "op": "bytecblock \"game\" \"turns\" \"\" \"challenger\" \"winner\" 0x01 0x02 \"host\""
    },
    "48": {
      "op": "b main_block@0"
    },
    "51": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "53": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "56": {
      "op": "b main_call___init__@1"
    },
    "59": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "examples.tictactoe.tictactoe.TicTacToeContract.__init__",
      "op": "callsub __init__"
    },
    "62": {
      "op": "b main_after_if_else@2"
    },
    "65": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "68": {
      "op": "return",
      "stack_out": []
    },
    "69": {
      "subroutine": "examples.tictactoe.tictactoe.TicTacToeContract.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "72": {
      "block": "__init___block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "73": {
      "subroutine": "examples.tictactoe.tictactoe.TicTacToeContract.new_game",
      "params": {
        "move.0#0": "uint64",
        "move.1#0": "uint64"
      },
      "block": "new_game",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "76": {
      "op": "intc_0 // 0",
      "stack_out": [
        "_%0#0"
      ]
    },
    "77": {
      "op": "intc_0 // 0",
      "stack_out": [
        "_%0#0",
        "_%1#0"
      ]
    },
    "78": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0"
      ]
    },
    "79": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0"
      ]
    },
    "80": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "81": {
      "op": "b new_game_block@0"
    },
    "84": {
      "block": "new_game_block@0",
      "stack_in": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%0#0"
      ]
    },
    "86": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%0#0",
        "0"
      ]
    },
    "87": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%1#0"
      ]
    },
    "88": {
      "op": "bz new_game_after_if_else@4",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "91": {
      "op": "b new_game_if_body@1"
    },
    "94": {
      "block": "new_game_if_body@1",
      "stack_in": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "0"
      ]
    },
    "95": {
      "op": "bytec_3 // \"challenger\"",
      "defined_out": [
        "\"challenger\"",
        "0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "0",
        "\"challenger\""
      ]
    },
    "96": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "97": {
      "op": "cover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_exists%0#0",
        "_%0#0"
      ]
    },
    "99": {
      "op": "frame_bury 0",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_exists%0#0"
      ]
    },
    "101": {
      "op": "bz new_game_after_if_else@3",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "104": {
      "op": "b new_game_if_body@2"
    },
    "107": {
      "block": "new_game_if_body@2",
      "stack_in": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "0"
      ]
    },
    "108": {
      "op": "bytec 4 // \"winner\"",
      "defined_out": [
        "\"winner\"",
        "0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "0",
        "\"winner\""
      ]
    },
    "110": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%1#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "_%1#0",
        "maybe_exists%1#0"
      ]
    },
    "111": {
      "op": "cover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_exists%1#0",
        "_%1#0"
      ]
    },
    "113": {
      "op": "frame_bury 1",
      "defined_out": [
        "_%1#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_exists%1#0"
      ]
    },
    "115": {
      "error": "Game isn't over",
      "op": "assert // Game isn't over",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "116": {
      "op": "b new_game_after_if_else@3"
    },
    "119": {
      "block": "new_game_after_if_else@3",
      "stack_in": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "bytec_3 // \"challenger\"",
      "defined_out": [
        "\"challenger\""
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"challenger\""
      ]
    },
    "120": {
      "op": "app_global_del",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "121": {
      "op": "bytec 4 // \"winner\"",
      "defined_out": [
        "\"winner\""
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"winner\""
      ]
    },
    "123": {
      "op": "app_global_del",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "124": {
      "op": "b new_game_after_if_else@4"
    },
    "127": {
      "block": "new_game_after_if_else@4",
      "stack_in": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%2#0"
      ]
    },
    "129": {
      "op": "bytec 7 // \"host\"",
      "defined_out": [
        "\"host\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%2#0",
        "\"host\""
      ]
    },
    "131": {
      "op": "uncover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"host\"",
        "tmp%2#0"
      ]
    },
    "133": {
      "op": "app_global_put",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "134": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "9"
      ]
    },
    "136": {
      "op": "bzero",
      "defined_out": [
        "reinterpret_Encoded(uint8[3][3])%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "reinterpret_Encoded(uint8[3][3])%0#0"
      ]
    },
    "137": {
      "op": "bytec_0 // \"game\"",
      "defined_out": [
        "\"game\"",
        "reinterpret_Encoded(uint8[3][3])%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "reinterpret_Encoded(uint8[3][3])%0#0",
        "\"game\""
      ]
    },
    "138": {
      "op": "uncover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"game\"",
        "reinterpret_Encoded(uint8[3][3])%0#0"
      ]
    },
    "140": {
      "op": "app_global_put",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "141": {
      "op": "frame_dig -2",
      "defined_out": [
        "move.0#0 (copy)"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "move.0#0 (copy)"
      ]
    },
    "143": {
      "op": "dup",
      "defined_out": [
        "column#0",
        "column#0 (copy)"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "column#0",
        "column#0 (copy)"
      ]
    },
    "144": {
      "op": "frame_bury 3",
      "defined_out": [
        "column#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "column#0"
      ]
    },
    "146": {
      "op": "frame_dig -1",
      "defined_out": [
        "column#0",
        "move.1#0 (copy)"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "column#0",
        "move.1#0 (copy)"
      ]
    },
    "148": {
      "op": "frame_bury 4",
      "defined_out": [
        "column#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "column#0"
      ]
    },
    "150": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "column#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "column#0",
        "3"
      ]
    },
    "151": {
      "op": "<",
      "defined_out": [
        "column#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%3#0"
      ]
    },
    "152": {
      "op": "bz new_game_bool_false@7",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "155": {
      "op": "b new_game_and_contd@5"
    },
    "158": {
      "block": "new_game_and_contd@5",
      "stack_in": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0"
      ]
    },
    "160": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "3"
      ]
    },
    "161": {
      "op": "<",
      "defined_out": [
        "row#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%4#0"
      ]
    },
    "162": {
      "op": "bz new_game_bool_false@7",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "165": {
      "op": "b new_game_bool_true@6"
    },
    "168": {
      "block": "new_game_bool_true@6",
      "stack_in": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "1"
      ]
    },
    "169": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "171": {
      "op": "b new_game_bool_merge@8"
    },
    "174": {
      "block": "new_game_bool_merge@8",
      "stack_in": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "and_result%0#0"
      ]
    },
    "176": {
      "error": "Move must be in range",
      "op": "assert // Move must be in range",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "177": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "and_result%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "0"
      ]
    },
    "178": {
      "op": "bytec_0 // \"game\"",
      "defined_out": [
        "\"game\"",
        "0",
        "and_result%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "0",
        "\"game\""
      ]
    },
    "179": {
      "op": "app_global_get_ex",
      "defined_out": [
        "and_result%0#0",
        "maybe_exists%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0",
        "maybe_exists%2#0"
      ]
    },
    "180": {
      "error": "check self.game exists",
      "op": "assert // check self.game exists",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0"
      ]
    },
    "181": {
      "op": "frame_dig 4",
      "defined_out": [
        "and_result%0#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0",
        "row#0"
      ]
    },
    "183": {
      "op": "dup",
      "defined_out": [
        "and_result%0#0",
        "maybe_value%0#0",
        "row#0",
        "row#0 (copy)"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0",
        "row#0 (copy)",
        "row#0 (copy)"
      ]
    },
    "184": {
      "op": "cover 2",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "row#0 (copy)"
      ]
    },
    "186": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "and_result%0#0",
        "maybe_value%0#0",
        "row#0",
        "row#0 (copy)"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "row#0 (copy)",
        "3"
      ]
    },
    "187": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "and_result%0#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "188": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "and_result%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%bytes_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "190": {
      "op": "uncover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "192": {
      "op": "intc_2 // 3",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "3"
      ]
    },
    "193": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "and_result%0#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "194": {
      "op": "frame_dig 3",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%encoded_element%0#0",
        "column#0"
      ]
    },
    "196": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_element%0#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%encoded_element%0#0",
        "column#0",
        "1"
      ]
    },
    "197": {
      "op": "*",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "198": {
      "op": "bytec 5 // 0x01",
      "defined_out": [
        "0x01",
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0",
        "0x01"
      ]
    },
    "200": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%updated_array%0#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "201": {
      "op": "uncover 2",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%updated_array%0#0",
        "row#0"
      ]
    },
    "203": {
      "op": "intc_2 // 3",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%updated_array%0#0",
        "row#0",
        "3"
      ]
    },
    "204": {
      "op": "*",
      "defined_out": [
        "aggregate%updated_array%0#0",
        "aggregate%write_offset%1#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%updated_array%0#0",
        "aggregate%write_offset%1#0"
      ]
    },
    "205": {
      "op": "uncover 2",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "aggregate%updated_array%0#0",
        "aggregate%write_offset%1#0",
        "maybe_value%0#0"
      ]
    },
    "207": {
      "op": "uncover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "aggregate%updated_array%0#0",
        "maybe_value%0#0",
        "aggregate%write_offset%1#0"
      ]
    },
    "209": {
      "op": "uncover 2",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%write_offset%1#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "211": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "updated_array%0#0"
      ]
    },
    "212": {
      "op": "bytec_0 // \"game\"",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "updated_array%0#0",
        "\"game\""
      ]
    },
    "213": {
      "op": "uncover 1",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"game\"",
        "updated_array%0#0"
      ]
    },
    "215": {
      "op": "app_global_put",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "216": {
      "op": "bytec_1 // \"turns\"",
      "defined_out": [
        "\"turns\"",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"turns\""
      ]
    },
    "217": {
      "op": "intc_0 // 0",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"turns\"",
        "0"
      ]
    },
    "218": {
      "op": "app_global_put",
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "219": {
      "retsub": true,
      "op": "retsub"
    },
    "220": {
      "block": "new_game_bool_false@7",
      "stack_in": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0",
        "0"
      ]
    },
    "221": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "_%0#0",
        "_%1#0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "223": {
      "op": "b new_game_bool_merge@8"
    },
    "226": {
      "subroutine": "examples.tictactoe.tictactoe.TicTacToeContract.join_game",
      "params": {
        "move.0#0": "uint64",
        "move.1#0": "uint64"
      },
      "block": "join_game",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "229": {
      "op": "b join_game_block@0"
    },
    "232": {
      "block": "join_game_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "233": {
      "op": "bytec_3 // \"challenger\"",
      "defined_out": [
        "\"challenger\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"challenger\""
      ]
    },
    "234": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "235": {
      "op": "!",
      "defined_out": [
        "_%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "tmp%0#0"
      ]
    },
    "236": {
      "error": "Host already has a challenger",
      "op": "assert // Host already has a challenger",
      "stack_out": [
        "_%0#0"
      ]
    },
    "237": {
      "op": "txn Sender",
      "defined_out": [
        "_%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "_%0#0",
        "tmp%1#0"
      ]
    },
    "239": {
      "op": "bytec_3 // \"challenger\"",
      "stack_out": [
        "_%0#0",
        "tmp%1#0",
        "\"challenger\""
      ]
    },
    "240": {
      "op": "uncover 1",
      "stack_out": [
        "_%0#0",
        "\"challenger\"",
        "tmp%1#0"
      ]
    },
    "242": {
      "op": "app_global_put",
      "stack_out": [
        "_%0#0"
      ]
    },
    "243": {
      "op": "bytec 6 // 0x02",
      "defined_out": [
        "0x02",
        "_%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "0x02"
      ]
    },
    "245": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x02",
        "_%0#0",
        "move.0#0 (copy)"
      ],
      "stack_out": [
        "_%0#0",
        "0x02",
        "move.0#0 (copy)"
      ]
    },
    "247": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x02",
        "_%0#0",
        "move.0#0 (copy)",
        "move.1#0 (copy)"
      ],
      "stack_out": [
        "_%0#0",
        "0x02",
        "move.0#0 (copy)",
        "move.1#0 (copy)"
      ]
    },
    "249": {
      "callsub": "examples.tictactoe.tictactoe.TicTacToeContract.make_move",
      "op": "callsub make_move",
      "stack_out": [
        "_%0#0"
      ]
    },
    "252": {
      "retsub": true,
      "op": "retsub"
    },
    "253": {
      "subroutine": "examples.tictactoe.tictactoe.TicTacToeContract.whose_turn",
      "params": {},
      "block": "whose_turn",
      "stack_in": [],
      "op": "b whose_turn_block@0"
    },
    "256": {
      "block": "whose_turn_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "257": {
      "op": "bytec_1 // \"turns\"",
      "defined_out": [
        "\"turns\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"turns\""
      ]
    },
    "258": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "259": {
      "error": "check self.turns exists",
      "op": "assert // check self.turns exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "260": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "2"
      ]
    },
    "262": {
      "op": "%",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "263": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "264": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "265": {
      "op": "bytec 6 // 0x02",
      "defined_out": [
        "0x02",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x02"
      ]
    },
    "267": {
      "op": "bytec 5 // 0x01",
      "defined_out": [
        "0x01",
        "0x02",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x02",
        "0x01"
      ]
    },
    "269": {
      "op": "uncover 2",
      "stack_out": [
        "0x02",
        "0x01",
        "tmp%1#0"
      ]
    },
    "271": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0"
      ]
    },
    "272": {
      "retsub": true,
      "op": "retsub"
    },
    "273": {
      "subroutine": "examples.tictactoe.tictactoe.TicTacToeContract.play",
      "params": {
        "move.0#0": "uint64",
        "move.1#0": "uint64"
      },
      "block": "play",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "276": {
      "op": "intc_0 // 0",
      "stack_out": [
        "player#0"
      ]
    },
    "277": {
      "op": "b play_block@0"
    },
    "280": {
      "block": "play_block@0",
      "stack_in": [
        "player#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "player#0",
        "0"
      ]
    },
    "281": {
      "op": "bytec 4 // \"winner\"",
      "defined_out": [
        "\"winner\"",
        "0"
      ],
      "stack_out": [
        "player#0",
        "0",
        "\"winner\""
      ]
    },
    "283": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "284": {
      "op": "!",
      "defined_out": [
        "_%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%0#0"
      ]
    },
    "285": {
      "error": "Game is already finished",
      "op": "assert // Game is already finished",
      "stack_out": [
        "player#0",
        "_%0#0"
      ]
    },
    "286": {
      "op": "intc_0 // 0",
      "stack_out": [
        "player#0",
        "_%0#0",
        "0"
      ]
    },
    "287": {
      "op": "bytec_1 // \"turns\"",
      "defined_out": [
        "\"turns\"",
        "0",
        "_%0#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "0",
        "\"turns\""
      ]
    },
    "288": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%0#0",
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "289": {
      "error": "check self.turns exists",
      "op": "assert // check self.turns exists",
      "stack_out": [
        "player#0",
        "_%0#0",
        "maybe_value%0#0"
      ]
    },
    "290": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "_%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "maybe_value%0#0",
        "2"
      ]
    },
    "292": {
      "op": "%",
      "defined_out": [
        "_%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%1#0"
      ]
    },
    "293": {
      "op": "intc_0 // 0",
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%1#0",
        "0"
      ]
    },
    "294": {
      "op": "!=",
      "defined_out": [
        "_%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%2#0"
      ]
    },
    "295": {
      "op": "bz play_else_body@2",
      "stack_out": [
        "player#0",
        "_%0#0"
      ]
    },
    "298": {
      "op": "b play_if_body@1"
    },
    "301": {
      "block": "play_if_body@1",
      "stack_in": [
        "player#0",
        "_%0#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%3#0"
      ]
    },
    "303": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%3#0",
        "0"
      ]
    },
    "304": {
      "op": "bytec 7 // \"host\"",
      "defined_out": [
        "\"host\"",
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%3#0",
        "0",
        "\"host\""
      ]
    },
    "306": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%3#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "307": {
      "error": "check self.host exists",
      "op": "assert // check self.host exists",
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%3#0",
        "maybe_value%1#0"
      ]
    },
    "308": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%4#0"
      ]
    },
    "309": {
      "error": "It is the host's turn",
      "op": "assert // It is the host's turn",
      "stack_out": [
        "player#0",
        "_%0#0"
      ]
    },
    "310": {
      "op": "bytec 5 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "0x01"
      ]
    },
    "312": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "player#0",
        "_%0#0"
      ]
    },
    "314": {
      "op": "b play_after_if_else@3"
    },
    "317": {
      "block": "play_after_if_else@3",
      "stack_in": [
        "player#0",
        "_%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "player#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "player#0"
      ]
    },
    "319": {
      "op": "frame_dig -2",
      "defined_out": [
        "move.0#0 (copy)",
        "player#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "player#0",
        "move.0#0 (copy)"
      ]
    },
    "321": {
      "op": "frame_dig -1",
      "defined_out": [
        "move.0#0 (copy)",
        "move.1#0 (copy)",
        "player#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "player#0",
        "move.0#0 (copy)",
        "move.1#0 (copy)"
      ]
    },
    "323": {
      "callsub": "examples.tictactoe.tictactoe.TicTacToeContract.make_move",
      "op": "callsub make_move",
      "stack_out": [
        "player#0",
        "_%0#0"
      ]
    },
    "326": {
      "retsub": true,
      "op": "retsub"
    },
    "327": {
      "block": "play_else_body@2",
      "stack_in": [
        "player#0",
        "_%0#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%5#0"
      ]
    },
    "329": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "331": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "0"
      ]
    },
    "332": {
      "op": "bytec_3 // \"challenger\"",
      "defined_out": [
        "\"challenger\"",
        "0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "0",
        "\"challenger\""
      ]
    },
    "333": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "334": {
      "op": "cover 1",
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "maybe_exists%3#0",
        "maybe_value%2#0"
      ]
    },
    "336": {
      "op": "uncover 2",
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%5#0",
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "tmp%6#0"
      ]
    },
    "338": {
      "op": "uncover 1",
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%5#0",
        "maybe_exists%3#0",
        "tmp%6#0",
        "maybe_value%2#0"
      ]
    },
    "340": {
      "op": "uncover 2",
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%5#0",
        "tmp%6#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "342": {
      "op": "select",
      "defined_out": [
        "state_get%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%5#0",
        "state_get%0#0"
      ]
    },
    "343": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "tmp%7#0"
      ]
    },
    "344": {
      "error": "It is the challenger's turn",
      "op": "assert // It is the challenger's turn",
      "stack_out": [
        "player#0",
        "_%0#0"
      ]
    },
    "345": {
      "op": "bytec 6 // 0x02",
      "defined_out": [
        "0x02"
      ],
      "stack_out": [
        "player#0",
        "_%0#0",
        "0x02"
      ]
    },
    "347": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "player#0",
        "_%0#0"
      ]
    },
    "349": {
      "op": "b play_after_if_else@3"
    },
    "352": {
      "subroutine": "examples.tictactoe.tictactoe.TicTacToeContract.make_move",
      "params": {
        "player#0": "bytes",
        "move.0#0": "uint64",
        "move.1#0": "uint64"
      },
      "block": "make_move",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "355": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "356": {
      "op": "b make_move_block@0"
    },
    "359": {
      "block": "make_move_block@0",
      "stack_in": [
        "and_result%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "move.0#0 (copy)"
      ],
      "stack_out": [
        "and_result%0#0",
        "move.0#0 (copy)"
      ]
    },
    "361": {
      "op": "dup",
      "defined_out": [
        "column#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "column#0"
      ]
    },
    "362": {
      "op": "frame_dig -1",
      "defined_out": [
        "column#0",
        "move.1#0 (copy)"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "column#0",
        "move.1#0 (copy)"
      ]
    },
    "364": {
      "op": "cover 1",
      "defined_out": [
        "column#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "column#0"
      ]
    },
    "366": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "column#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "column#0",
        "3"
      ]
    },
    "367": {
      "op": "<",
      "defined_out": [
        "column#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%0#0"
      ]
    },
    "368": {
      "op": "bz make_move_bool_false@3",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "371": {
      "op": "b make_move_and_contd@1"
    },
    "374": {
      "block": "make_move_and_contd@1",
      "stack_in": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0"
      ]
    },
    "376": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "3"
      ]
    },
    "377": {
      "op": "<",
      "defined_out": [
        "row#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%1#0"
      ]
    },
    "378": {
      "op": "bz make_move_bool_false@3",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "381": {
      "op": "b make_move_bool_true@2"
    },
    "384": {
      "block": "make_move_bool_true@2",
      "stack_in": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "1"
      ]
    },
    "385": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "387": {
      "op": "b make_move_bool_merge@4"
    },
    "390": {
      "block": "make_move_bool_merge@4",
      "stack_in": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "and_result%0#0"
      ]
    },
    "392": {
      "error": "Move must be in range",
      "op": "assert // Move must be in range",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "393": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "0"
      ]
    },
    "394": {
      "op": "bytec_0 // \"game\"",
      "defined_out": [
        "\"game\"",
        "0",
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "0",
        "\"game\""
      ]
    },
    "395": {
      "op": "app_global_get_ex",
      "defined_out": [
        "and_result%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "396": {
      "error": "check self.game exists",
      "op": "assert // check self.game exists",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0"
      ]
    },
    "397": {
      "op": "frame_dig 2",
      "defined_out": [
        "and_result%0#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0",
        "row#0"
      ]
    },
    "399": {
      "op": "dup",
      "defined_out": [
        "and_result%0#0",
        "maybe_value%0#0",
        "row#0",
        "row#0 (copy)"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%0#0",
        "row#0 (copy)",
        "row#0 (copy)"
      ]
    },
    "400": {
      "op": "cover 2",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "row#0 (copy)"
      ]
    },
    "402": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "and_result%0#0",
        "maybe_value%0#0",
        "row#0",
        "row#0 (copy)"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "row#0 (copy)",
        "3"
      ]
    },
    "403": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "and_result%0#0",
        "maybe_value%0#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "404": {
      "op": "intc_2 // 3",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "maybe_value%0#0",
        "aggregate%bytes_offset%0#0",
        "3"
      ]
    },
    "405": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "and_result%0#0",
        "array_item%0#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "array_item%0#0"
      ]
    },
    "406": {
      "op": "frame_dig 1",
      "defined_out": [
        "and_result%0#0",
        "array_item%0#0",
        "column#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "array_item%0#0",
        "column#0"
      ]
    },
    "408": {
      "op": "dup",
      "defined_out": [
        "and_result%0#0",
        "array_item%0#0",
        "column#0",
        "column#0 (copy)",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "array_item%0#0",
        "column#0 (copy)",
        "column#0 (copy)"
      ]
    },
    "409": {
      "op": "cover 2",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "array_item%0#0",
        "column#0 (copy)"
      ]
    },
    "411": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "and_result%0#0",
        "array_item%0#0",
        "column#0",
        "column#0 (copy)",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "array_item%0#0",
        "column#0 (copy)",
        "1"
      ]
    },
    "412": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "and_result%0#0",
        "array_item%0#0",
        "column#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "array_item%0#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "413": {
      "op": "intc_1 // 1",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "array_item%0#0",
        "aggregate%bytes_offset%1#0",
        "1"
      ]
    },
    "414": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "and_result%0#0",
        "column#0",
        "reinterpret_biguint%0#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "415": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "and_result%0#0",
        "column#0",
        "reinterpret_biguint%0#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "reinterpret_biguint%0#0",
        "0x00"
      ]
    },
    "418": {
      "op": "b==",
      "defined_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "tmp%2#0"
      ]
    },
    "419": {
      "error": "Square is already taken",
      "op": "assert // Square is already taken",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0"
      ]
    },
    "420": {
      "op": "intc_0 // 0",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "0"
      ]
    },
    "421": {
      "op": "bytec_0 // \"game\"",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "0",
        "\"game\""
      ]
    },
    "422": {
      "op": "app_global_get_ex",
      "defined_out": [
        "and_result%0#0",
        "column#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "423": {
      "error": "check self.game exists",
      "op": "assert // check self.game exists",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0"
      ]
    },
    "424": {
      "op": "dig 2",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "row#0 (copy)"
      ]
    },
    "426": {
      "op": "intc_2 // 3",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "row#0 (copy)",
        "3"
      ]
    },
    "427": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%2#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%1#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "428": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%bytes_offset%2#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%bytes_offset%2#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "430": {
      "op": "uncover 1",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "432": {
      "op": "intc_2 // 3",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "aggregate%bytes_offset%2#0",
        "3"
      ]
    },
    "433": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%2#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%1#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%encoded_element%2#0"
      ]
    },
    "434": {
      "op": "dig 2",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%encoded_element%2#0",
        "column#0 (copy)"
      ]
    },
    "436": {
      "op": "intc_1 // 1",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%encoded_element%2#0",
        "column#0 (copy)",
        "1"
      ]
    },
    "437": {
      "op": "*",
      "defined_out": [
        "aggregate%encoded_element%2#0",
        "aggregate%write_offset%0#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%1#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%encoded_element%2#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "438": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%encoded_element%2#0",
        "aggregate%write_offset%0#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%1#0",
        "player#0 (copy)",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%encoded_element%2#0",
        "aggregate%write_offset%0#0",
        "player#0 (copy)"
      ]
    },
    "440": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%updated_array%0#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%1#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "441": {
      "op": "dig 3",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%updated_array%0#0",
        "row#0 (copy)"
      ]
    },
    "443": {
      "op": "intc_2 // 3",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%updated_array%0#0",
        "row#0 (copy)",
        "3"
      ]
    },
    "444": {
      "op": "*",
      "defined_out": [
        "aggregate%updated_array%0#0",
        "aggregate%write_offset%1#0",
        "and_result%0#0",
        "column#0",
        "maybe_value%1#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%updated_array%0#0",
        "aggregate%write_offset%1#0"
      ]
    },
    "445": {
      "op": "uncover 2",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "aggregate%updated_array%0#0",
        "aggregate%write_offset%1#0",
        "maybe_value%1#0"
      ]
    },
    "447": {
      "op": "uncover 1",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "aggregate%updated_array%0#0",
        "maybe_value%1#0",
        "aggregate%write_offset%1#0"
      ]
    },
    "449": {
      "op": "uncover 2",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%1#0",
        "aggregate%write_offset%1#0",
        "aggregate%updated_array%0#0"
      ]
    },
    "451": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "defined_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "updated_array%0#0"
      ]
    },
    "452": {
      "op": "bytec_0 // \"game\"",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "updated_array%0#0",
        "\"game\""
      ]
    },
    "453": {
      "op": "uncover 1",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "\"game\"",
        "updated_array%0#0"
      ]
    },
    "455": {
      "op": "app_global_put",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0"
      ]
    },
    "456": {
      "op": "intc_0 // 0",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "0"
      ]
    },
    "457": {
      "op": "bytec_1 // \"turns\"",
      "defined_out": [
        "\"turns\"",
        "0",
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "0",
        "\"turns\""
      ]
    },
    "458": {
      "op": "app_global_get_ex",
      "defined_out": [
        "and_result%0#0",
        "column#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "row#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "459": {
      "error": "check self.turns exists",
      "op": "assert // check self.turns exists",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%2#0"
      ]
    },
    "460": {
      "op": "intc_1 // 1",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "461": {
      "op": "+",
      "defined_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "tmp%3#0"
      ]
    },
    "462": {
      "op": "bytec_1 // \"turns\"",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "tmp%3#0",
        "\"turns\""
      ]
    },
    "463": {
      "op": "uncover 1",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "\"turns\"",
        "tmp%3#0"
      ]
    },
    "465": {
      "op": "app_global_put",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0"
      ]
    },
    "466": {
      "op": "frame_dig -3",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "column#0",
        "player#0 (copy)"
      ]
    },
    "468": {
      "op": "uncover 1",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "row#0",
        "player#0 (copy)",
        "column#0"
      ]
    },
    "470": {
      "op": "uncover 2",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "player#0 (copy)",
        "column#0",
        "row#0"
      ]
    },
    "472": {
      "callsub": "examples.tictactoe.tictactoe.TicTacToeContract.did_win",
      "op": "callsub did_win",
      "defined_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%4#0"
      ]
    },
    "475": {
      "op": "bz make_move_else_body@6",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "478": {
      "op": "b make_move_if_body@5"
    },
    "481": {
      "block": "make_move_if_body@5",
      "stack_in": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "bytec 4 // \"winner\"",
      "defined_out": [
        "\"winner\""
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"winner\""
      ]
    },
    "483": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"winner\"",
        "player#0 (copy)"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"winner\"",
        "player#0 (copy)"
      ]
    },
    "485": {
      "op": "app_global_put",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "486": {
      "op": "b make_move_after_if_else@9"
    },
    "489": {
      "block": "make_move_after_if_else@9",
      "stack_in": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "490": {
      "block": "make_move_else_body@6",
      "stack_in": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "0"
      ]
    },
    "491": {
      "op": "bytec_1 // \"turns\"",
      "defined_out": [
        "\"turns\"",
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "0",
        "\"turns\""
      ]
    },
    "492": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "493": {
      "error": "check self.turns exists",
      "op": "assert // check self.turns exists",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%3#0"
      ]
    },
    "494": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "maybe_value%3#0",
        "9"
      ]
    },
    "496": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "tmp%5#0"
      ]
    },
    "497": {
      "op": "bz make_move_after_if_else@8",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "500": {
      "op": "b make_move_if_body@7"
    },
    "503": {
      "block": "make_move_if_body@7",
      "stack_in": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "bytec 4 // \"winner\"",
      "defined_out": [
        "\"winner\""
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"winner\""
      ]
    },
    "505": {
      "op": "pushbytes 0x03",
      "defined_out": [
        "\"winner\"",
        "0x03"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "\"winner\"",
        "0x03"
      ]
    },
    "508": {
      "op": "app_global_put",
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "509": {
      "op": "b make_move_after_if_else@8"
    },
    "512": {
      "block": "make_move_after_if_else@8",
      "stack_in": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "b make_move_after_if_else@9"
    },
    "515": {
      "block": "make_move_bool_false@3",
      "stack_in": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0",
        "0"
      ]
    },
    "516": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "and_result%0#0",
        "column#0",
        "row#0"
      ]
    },
    "518": {
      "op": "b make_move_bool_merge@4"
    },
    "521": {
      "subroutine": "examples.tictactoe.tictactoe.TicTacToeContract.did_win",
      "params": {
        "player#0": "bytes",
        "column#0": "uint64",
        "row#0": "uint64"
      },
      "block": "did_win",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "524": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_item%9#0"
      ]
    },
    "525": {
      "op": "b did_win_block@0"
    },
    "528": {
      "block": "did_win_block@0",
      "stack_in": [
        "array_item%9#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "array_item%9#0",
        "0"
      ]
    },
    "529": {
      "op": "bytec_0 // \"game\"",
      "defined_out": [
        "\"game\"",
        "0"
      ],
      "stack_out": [
        "array_item%9#0",
        "0",
        "\"game\""
      ]
    },
    "530": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "531": {
      "error": "check self.game exists",
      "op": "assert // check self.game exists",
      "stack_out": [
        "array_item%9#0",
        "maybe_value%0#0"
      ]
    },
    "532": {
      "op": "dup",
      "defined_out": [
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0"
      ]
    },
    "533": {
      "op": "frame_dig -1",
      "defined_out": [
        "g#0",
        "row#0 (copy)"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "row#0 (copy)"
      ]
    },
    "535": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "g#0",
        "row#0 (copy)"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "row#0 (copy)",
        "3"
      ]
    },
    "536": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "537": {
      "op": "dig 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "aggregate%bytes_offset%0#0",
        "g#0 (copy)"
      ]
    },
    "539": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "g#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "541": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "g#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "3"
      ]
    },
    "542": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%0#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "array_item%0#0"
      ]
    },
    "543": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "array_item%0#0",
        "0"
      ]
    },
    "544": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "array_item%0#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "array_item%0#0",
        "0",
        "1"
      ]
    },
    "545": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "array_item%0#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "array_item%0#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "546": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "array_item%0#0",
        "aggregate%bytes_offset%1#0",
        "1"
      ]
    },
    "547": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%1#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "g#0",
        "array_item%1#0"
      ]
    },
    "548": {
      "op": "cover 1",
      "defined_out": [
        "g#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "g#0"
      ]
    },
    "550": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "g#0",
        "row#0 (copy)"
      ]
    },
    "552": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "g#0",
        "row#0 (copy)",
        "3"
      ]
    },
    "553": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%2#0",
        "g#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "g#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "554": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "g#0",
        "aggregate%bytes_offset%2#0",
        "3"
      ]
    },
    "555": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%2#0",
        "g#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "array_item%2#0"
      ]
    },
    "556": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "array_item%2#0",
        "1"
      ]
    },
    "557": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "array_item%2#0",
        "1",
        "1"
      ]
    },
    "558": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%3#0",
        "array_item%2#0",
        "g#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "array_item%2#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "559": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "array_item%2#0",
        "aggregate%bytes_offset%3#0",
        "1"
      ]
    },
    "560": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "g#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "561": {
      "op": "dup",
      "defined_out": [
        "array_item%3#0",
        "array_item%3#0 (copy)",
        "g#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "array_item%3#0",
        "array_item%3#0 (copy)"
      ]
    },
    "562": {
      "op": "cover 2",
      "defined_out": [
        "array_item%3#0",
        "g#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "564": {
      "op": "b==",
      "defined_out": [
        "array_item%3#0",
        "g#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "tmp%0#0"
      ]
    },
    "565": {
      "op": "bz did_win_after_if_else@3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ]
    },
    "568": {
      "op": "b did_win_and_contd@1"
    },
    "571": {
      "block": "did_win_and_contd@1",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "array_item%3#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "573": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "row#0 (copy)"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "row#0 (copy)"
      ]
    },
    "575": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "row#0 (copy)"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "row#0 (copy)",
        "3"
      ]
    },
    "576": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%4#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "577": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%4#0",
        "array_item%3#0",
        "g#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "aggregate%bytes_offset%4#0",
        "g#0"
      ]
    },
    "579": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "g#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "581": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "g#0",
        "aggregate%bytes_offset%4#0",
        "3"
      ]
    },
    "582": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%3#0",
        "array_item%4#0",
        "g#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "array_item%4#0"
      ]
    },
    "583": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "array_item%3#0",
        "array_item%4#0",
        "g#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "array_item%4#0",
        "2"
      ]
    },
    "585": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "2",
        "array_item%3#0",
        "array_item%4#0",
        "g#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "array_item%4#0",
        "2",
        "1"
      ]
    },
    "586": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%5#0",
        "array_item%3#0",
        "array_item%4#0",
        "g#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "array_item%4#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "587": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "array_item%4#0",
        "aggregate%bytes_offset%5#0",
        "1"
      ]
    },
    "588": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%3#0",
        "g#0",
        "reinterpret_biguint%2#0",
        "reinterpret_biguint%3#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%2#0",
        "reinterpret_biguint%3#0"
      ]
    },
    "589": {
      "op": "b==",
      "defined_out": [
        "array_item%3#0",
        "g#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "tmp%1#0"
      ]
    },
    "590": {
      "op": "bz did_win_after_if_else@3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ]
    },
    "593": {
      "op": "b did_win_if_body@2"
    },
    "596": {
      "block": "did_win_if_body@2",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "1"
      ]
    },
    "597": {
      "op": "frame_bury 0"
    },
    "599": {
      "retsub": true,
      "op": "retsub"
    },
    "600": {
      "block": "did_win_after_if_else@3",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "0"
      ]
    },
    "601": {
      "op": "intc_2 // 3",
      "defined_out": [
        "0",
        "3"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "0",
        "3"
      ]
    },
    "602": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "aggregate%bytes_offset%6#0"
      ]
    },
    "603": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%6#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "aggregate%bytes_offset%6#0",
        "g#0"
      ]
    },
    "605": {
      "op": "dup",
      "defined_out": [
        "aggregate%bytes_offset%6#0",
        "g#0",
        "g#0 (copy)"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "aggregate%bytes_offset%6#0",
        "g#0 (copy)",
        "g#0 (copy)"
      ]
    },
    "606": {
      "op": "cover 2",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "aggregate%bytes_offset%6#0",
        "g#0 (copy)"
      ]
    },
    "608": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "g#0 (copy)",
        "aggregate%bytes_offset%6#0"
      ]
    },
    "610": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "g#0 (copy)",
        "aggregate%bytes_offset%6#0",
        "3"
      ]
    },
    "611": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%6#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "array_item%6#0"
      ]
    },
    "612": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_item%6#0",
        "column#0 (copy)",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "array_item%6#0",
        "column#0 (copy)"
      ]
    },
    "614": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_item%6#0",
        "column#0 (copy)",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "array_item%6#0",
        "column#0 (copy)",
        "1"
      ]
    },
    "615": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%7#0",
        "array_item%6#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "array_item%6#0",
        "aggregate%bytes_offset%7#0"
      ]
    },
    "616": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "array_item%6#0",
        "aggregate%bytes_offset%7#0",
        "1"
      ]
    },
    "617": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%7#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "array_item%7#0"
      ]
    },
    "618": {
      "op": "cover 1",
      "defined_out": [
        "g#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "g#0"
      ]
    },
    "620": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "g#0",
        "1"
      ]
    },
    "621": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "g#0",
        "1",
        "3"
      ]
    },
    "622": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%8#0",
        "g#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "g#0",
        "aggregate%bytes_offset%8#0"
      ]
    },
    "623": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "g#0",
        "aggregate%bytes_offset%8#0",
        "3"
      ]
    },
    "624": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%8#0",
        "g#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "array_item%8#0"
      ]
    },
    "625": {
      "op": "frame_dig -2",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "array_item%8#0",
        "column#0 (copy)"
      ]
    },
    "627": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "array_item%8#0",
        "column#0 (copy)",
        "1"
      ]
    },
    "628": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%9#0",
        "array_item%8#0",
        "g#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "array_item%8#0",
        "aggregate%bytes_offset%9#0"
      ]
    },
    "629": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "array_item%8#0",
        "aggregate%bytes_offset%9#0",
        "1"
      ]
    },
    "630": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%9#0",
        "g#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "aggregate%encoded_element%9#0"
      ]
    },
    "631": {
      "op": "dup",
      "defined_out": [
        "array_item%9#0",
        "array_item%9#0 (copy)",
        "g#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "array_item%9#0",
        "array_item%9#0 (copy)"
      ]
    },
    "632": {
      "op": "frame_bury 0",
      "defined_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%4#0",
        "reinterpret_biguint%5#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%4#0",
        "reinterpret_biguint%5#0"
      ]
    },
    "634": {
      "op": "b==",
      "defined_out": [
        "array_item%9#0",
        "g#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "tmp%2#0"
      ]
    },
    "635": {
      "op": "bz did_win_after_if_else@6",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ]
    },
    "638": {
      "op": "b did_win_and_contd@4"
    },
    "641": {
      "block": "did_win_and_contd@4",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "array_item%9#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0"
      ]
    },
    "643": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "array_item%9#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "2"
      ]
    },
    "645": {
      "op": "intc_2 // 3",
      "defined_out": [
        "2",
        "3",
        "array_item%9#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "2",
        "3"
      ]
    },
    "646": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%10#0",
        "array_item%9#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "aggregate%bytes_offset%10#0"
      ]
    },
    "647": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%10#0",
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "aggregate%bytes_offset%10#0",
        "g#0"
      ]
    },
    "649": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "g#0",
        "aggregate%bytes_offset%10#0"
      ]
    },
    "651": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "g#0",
        "aggregate%bytes_offset%10#0",
        "3"
      ]
    },
    "652": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%10#0",
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "array_item%10#0"
      ]
    },
    "653": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_item%10#0",
        "array_item%9#0",
        "column#0 (copy)",
        "g#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "array_item%10#0",
        "column#0 (copy)"
      ]
    },
    "655": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_item%10#0",
        "array_item%9#0",
        "column#0 (copy)",
        "g#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "array_item%10#0",
        "column#0 (copy)",
        "1"
      ]
    },
    "656": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%11#0",
        "array_item%10#0",
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "array_item%10#0",
        "aggregate%bytes_offset%11#0"
      ]
    },
    "657": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "array_item%10#0",
        "aggregate%bytes_offset%11#0",
        "1"
      ]
    },
    "658": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%9#0",
        "g#0",
        "reinterpret_biguint%6#0",
        "reinterpret_biguint%7#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%6#0",
        "reinterpret_biguint%7#0"
      ]
    },
    "659": {
      "op": "b==",
      "defined_out": [
        "array_item%9#0",
        "g#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "tmp%3#0"
      ]
    },
    "660": {
      "op": "bz did_win_after_if_else@6",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ]
    },
    "663": {
      "op": "b did_win_if_body@5"
    },
    "666": {
      "block": "did_win_if_body@5",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "1"
      ]
    },
    "667": {
      "op": "frame_bury 0"
    },
    "669": {
      "retsub": true,
      "op": "retsub"
    },
    "670": {
      "block": "did_win_after_if_else@6",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "reinterpret_biguint%8#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0"
      ]
    },
    "672": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "reinterpret_biguint%8#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "1"
      ]
    },
    "673": {
      "op": "intc_2 // 3",
      "defined_out": [
        "1",
        "3",
        "reinterpret_biguint%8#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "1",
        "3"
      ]
    },
    "674": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%12#0",
        "reinterpret_biguint%8#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "aggregate%bytes_offset%12#0"
      ]
    },
    "675": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%12#0",
        "g#0",
        "reinterpret_biguint%8#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "aggregate%bytes_offset%12#0",
        "g#0"
      ]
    },
    "677": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "g#0",
        "aggregate%bytes_offset%12#0"
      ]
    },
    "679": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "g#0",
        "aggregate%bytes_offset%12#0",
        "3"
      ]
    },
    "680": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%12#0",
        "g#0",
        "reinterpret_biguint%8#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "array_item%12#0"
      ]
    },
    "681": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "array_item%12#0",
        "1"
      ]
    },
    "682": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "array_item%12#0",
        "1",
        "1"
      ]
    },
    "683": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%13#0",
        "array_item%12#0",
        "g#0",
        "reinterpret_biguint%8#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "array_item%12#0",
        "aggregate%bytes_offset%13#0"
      ]
    },
    "684": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "array_item%12#0",
        "aggregate%bytes_offset%13#0",
        "1"
      ]
    },
    "685": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "g#0",
        "reinterpret_biguint%8#0",
        "reinterpret_biguint%9#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%8#0",
        "reinterpret_biguint%9#0"
      ]
    },
    "686": {
      "op": "b==",
      "defined_out": [
        "g#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "tmp%4#0"
      ]
    },
    "687": {
      "op": "bz did_win_after_if_else@14",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ]
    },
    "690": {
      "op": "b did_win_if_body@7"
    },
    "693": {
      "block": "did_win_if_body@7",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "0"
      ]
    },
    "694": {
      "op": "intc_2 // 3",
      "defined_out": [
        "0",
        "3"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "0",
        "3"
      ]
    },
    "695": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%14#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "aggregate%bytes_offset%14#0"
      ]
    },
    "696": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%14#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "aggregate%bytes_offset%14#0",
        "g#0"
      ]
    },
    "698": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "aggregate%bytes_offset%14#0"
      ]
    },
    "700": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "aggregate%bytes_offset%14#0",
        "3"
      ]
    },
    "701": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%14#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "array_item%14#0"
      ]
    },
    "702": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "array_item%14#0",
        "0"
      ]
    },
    "703": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "array_item%14#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "array_item%14#0",
        "0",
        "1"
      ]
    },
    "704": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%15#0",
        "array_item%14#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "array_item%14#0",
        "aggregate%bytes_offset%15#0"
      ]
    },
    "705": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "array_item%14#0",
        "aggregate%bytes_offset%15#0",
        "1"
      ]
    },
    "706": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "g#0",
        "reinterpret_biguint%10#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%10#0"
      ]
    },
    "707": {
      "op": "frame_dig -3",
      "defined_out": [
        "g#0",
        "reinterpret_biguint%10#0",
        "reinterpret_biguint%11#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%10#0",
        "reinterpret_biguint%11#0"
      ]
    },
    "709": {
      "op": "b==",
      "defined_out": [
        "g#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "tmp%5#0"
      ]
    },
    "710": {
      "op": "bz did_win_after_if_else@10",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ]
    },
    "713": {
      "op": "b did_win_and_contd@8"
    },
    "716": {
      "block": "did_win_and_contd@8",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "reinterpret_biguint%12#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0"
      ]
    },
    "718": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "reinterpret_biguint%12#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "2"
      ]
    },
    "720": {
      "op": "intc_2 // 3",
      "defined_out": [
        "2",
        "3",
        "reinterpret_biguint%12#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "2",
        "3"
      ]
    },
    "721": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%16#0",
        "reinterpret_biguint%12#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "aggregate%bytes_offset%16#0"
      ]
    },
    "722": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%16#0",
        "g#0",
        "reinterpret_biguint%12#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "aggregate%bytes_offset%16#0",
        "g#0"
      ]
    },
    "724": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "g#0",
        "aggregate%bytes_offset%16#0"
      ]
    },
    "726": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "g#0",
        "aggregate%bytes_offset%16#0",
        "3"
      ]
    },
    "727": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%16#0",
        "g#0",
        "reinterpret_biguint%12#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "array_item%16#0"
      ]
    },
    "728": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "array_item%16#0",
        "2"
      ]
    },
    "730": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "2",
        "array_item%16#0",
        "g#0",
        "reinterpret_biguint%12#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "array_item%16#0",
        "2",
        "1"
      ]
    },
    "731": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%17#0",
        "array_item%16#0",
        "g#0",
        "reinterpret_biguint%12#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "array_item%16#0",
        "aggregate%bytes_offset%17#0"
      ]
    },
    "732": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "array_item%16#0",
        "aggregate%bytes_offset%17#0",
        "1"
      ]
    },
    "733": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "g#0",
        "reinterpret_biguint%12#0",
        "reinterpret_biguint%13#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%12#0",
        "reinterpret_biguint%13#0"
      ]
    },
    "734": {
      "op": "b==",
      "defined_out": [
        "g#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "tmp%6#0"
      ]
    },
    "735": {
      "op": "bz did_win_after_if_else@10",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ]
    },
    "738": {
      "op": "b did_win_if_body@9"
    },
    "741": {
      "block": "did_win_if_body@9",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "1"
      ]
    },
    "742": {
      "op": "frame_bury 0"
    },
    "744": {
      "retsub": true,
      "op": "retsub"
    },
    "745": {
      "block": "did_win_after_if_else@10",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "0"
      ]
    },
    "746": {
      "op": "intc_2 // 3",
      "defined_out": [
        "0",
        "3"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "0",
        "3"
      ]
    },
    "747": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%18#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "aggregate%bytes_offset%18#0"
      ]
    },
    "748": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%18#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "aggregate%bytes_offset%18#0",
        "g#0"
      ]
    },
    "750": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "aggregate%bytes_offset%18#0"
      ]
    },
    "752": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "g#0",
        "aggregate%bytes_offset%18#0",
        "3"
      ]
    },
    "753": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%18#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "array_item%18#0"
      ]
    },
    "754": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "array_item%18#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "array_item%18#0",
        "2"
      ]
    },
    "756": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "2",
        "array_item%18#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "array_item%18#0",
        "2",
        "1"
      ]
    },
    "757": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%19#0",
        "array_item%18#0",
        "g#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "array_item%18#0",
        "aggregate%bytes_offset%19#0"
      ]
    },
    "758": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "array_item%18#0",
        "aggregate%bytes_offset%19#0",
        "1"
      ]
    },
    "759": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "g#0",
        "reinterpret_biguint%14#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%14#0"
      ]
    },
    "760": {
      "op": "frame_dig -3",
      "defined_out": [
        "g#0",
        "reinterpret_biguint%14#0",
        "reinterpret_biguint%15#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%14#0",
        "reinterpret_biguint%15#0"
      ]
    },
    "762": {
      "op": "b==",
      "defined_out": [
        "g#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "tmp%7#0"
      ]
    },
    "763": {
      "op": "bz did_win_after_if_else@13",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ]
    },
    "766": {
      "op": "b did_win_and_contd@11"
    },
    "769": {
      "block": "did_win_and_contd@11",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "reinterpret_biguint%16#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0"
      ]
    },
    "771": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "reinterpret_biguint%16#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "2"
      ]
    },
    "773": {
      "op": "intc_2 // 3",
      "defined_out": [
        "2",
        "3",
        "reinterpret_biguint%16#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "2",
        "3"
      ]
    },
    "774": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%20#0",
        "reinterpret_biguint%16#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "aggregate%bytes_offset%20#0"
      ]
    },
    "775": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%20#0",
        "g#0",
        "reinterpret_biguint%16#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "aggregate%bytes_offset%20#0",
        "g#0"
      ]
    },
    "777": {
      "op": "uncover 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "g#0",
        "aggregate%bytes_offset%20#0"
      ]
    },
    "779": {
      "op": "intc_2 // 3",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "g#0",
        "aggregate%bytes_offset%20#0",
        "3"
      ]
    },
    "780": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "array_item%20#0",
        "g#0",
        "reinterpret_biguint%16#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "array_item%20#0"
      ]
    },
    "781": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array_item%20#0",
        "g#0",
        "reinterpret_biguint%16#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "array_item%20#0",
        "0"
      ]
    },
    "782": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1",
        "array_item%20#0",
        "g#0",
        "reinterpret_biguint%16#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "array_item%20#0",
        "0",
        "1"
      ]
    },
    "783": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%21#0",
        "array_item%20#0",
        "g#0",
        "reinterpret_biguint%16#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "array_item%20#0",
        "aggregate%bytes_offset%21#0"
      ]
    },
    "784": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "array_item%20#0",
        "aggregate%bytes_offset%21#0",
        "1"
      ]
    },
    "785": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "g#0",
        "reinterpret_biguint%16#0",
        "reinterpret_biguint%17#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "reinterpret_biguint%16#0",
        "reinterpret_biguint%17#0"
      ]
    },
    "786": {
      "op": "b==",
      "defined_out": [
        "g#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "tmp%8#0"
      ]
    },
    "787": {
      "op": "bz did_win_after_if_else@13",
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ]
    },
    "790": {
      "op": "b did_win_if_body@12"
    },
    "793": {
      "block": "did_win_if_body@12",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "1"
      ]
    },
    "794": {
      "op": "frame_bury 0"
    },
    "796": {
      "retsub": true,
      "op": "retsub"
    },
    "797": {
      "block": "did_win_after_if_else@13",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "b did_win_after_if_else@14"
    },
    "800": {
      "block": "did_win_after_if_else@14",
      "stack_in": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "array_item%9#0",
        "g#0",
        "array_item%3#0",
        "0"
      ]
    },
    "801": {
      "op": "frame_bury 0"
    },
    "803": {
      "retsub": true,
      "op": "retsub"
    },
    "804": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "807": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "808": {
      "op": "b approval_program_block@0"
    },
    "811": {
      "block": "approval_program_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_block@1"
    },
    "814": {
      "block": "approval_program_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "816": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "817": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "818": {
      "op": "bz approval_program_bare_routing@9",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "821": {
      "op": "b approval_program_abi_routing@2"
    },
    "824": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "827": {
      "op": "pushbytes 0x96a97181 // method \"new_game((uint64,uint64))void\"",
      "defined_out": [
        "Method(new_game((uint64,uint64))void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(new_game((uint64,uint64))void)"
      ]
    },
    "833": {
      "op": "pushbytes 0x17a079b3 // method \"join_game((uint64,uint64))void\"",
      "defined_out": [
        "Method(join_game((uint64,uint64))void)",
        "Method(new_game((uint64,uint64))void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(new_game((uint64,uint64))void)",
        "Method(join_game((uint64,uint64))void)"
      ]
    },
    "839": {
      "op": "pushbytes 0xbb9f1147 // method \"whose_turn()uint8\"",
      "defined_out": [
        "Method(join_game((uint64,uint64))void)",
        "Method(new_game((uint64,uint64))void)",
        "Method(whose_turn()uint8)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(new_game((uint64,uint64))void)",
        "Method(join_game((uint64,uint64))void)",
        "Method(whose_turn()uint8)"
      ]
    },
    "845": {
      "op": "pushbytes 0x9eebf58e // method \"play((uint64,uint64))void\"",
      "defined_out": [
        "Method(join_game((uint64,uint64))void)",
        "Method(new_game((uint64,uint64))void)",
        "Method(play((uint64,uint64))void)",
        "Method(whose_turn()uint8)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(new_game((uint64,uint64))void)",
        "Method(join_game((uint64,uint64))void)",
        "Method(whose_turn()uint8)",
        "Method(play((uint64,uint64))void)"
      ]
    },
    "851": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%0#0",
        "Method(new_game((uint64,uint64))void)",
        "Method(join_game((uint64,uint64))void)",
        "Method(whose_turn()uint8)",
        "Method(play((uint64,uint64))void)",
        "tmp%2#0"
      ]
    },
    "853": {
      "op": "match approval_program_new_game_route@3 approval_program_join_game_route@4 approval_program_whose_turn_route@5 approval_program_play_route@6",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "863": {
      "op": "b approval_program_switch_case_default@7"
    },
    "866": {
      "block": "approval_program_switch_case_default@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_switch_case_next@8"
    },
    "869": {
      "block": "approval_program_switch_case_next@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_after_if_else@10"
    },
    "872": {
      "block": "approval_program_after_if_else@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0"
      ]
    },
    "873": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "875": {
      "op": "b approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11"
    },
    "878": {
      "block": "approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "880": {
      "op": "uncover 1"
    },
    "882": {
      "retsub": true,
      "op": "retsub"
    },
    "883": {
      "block": "approval_program_play_route@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0"
      ]
    },
    "885": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0",
        "NoOp"
      ]
    },
    "886": {
      "op": "==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%20#0"
      ]
    },
    "887": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "888": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%21#0"
      ]
    },
    "890": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%21#0",
        "0"
      ]
    },
    "891": {
      "op": "!=",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%22#0"
      ]
    },
    "892": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "893": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%2#0"
      ]
    },
    "896": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%2#0",
        "reinterpret_Encoded(uint64,uint64)%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%2#0",
        "reinterpret_Encoded(uint64,uint64)%2#0 (copy)"
      ]
    },
    "897": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%2#0",
        "reinterpret_Encoded(uint64,uint64)%2#0 (copy)",
        "0"
      ]
    },
    "898": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64)%2#0",
        "reinterpret_Encoded(uint64,uint64)%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%2#0",
        "reinterpret_Encoded(uint64,uint64)%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "899": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%4#0",
        "reinterpret_Encoded(uint64,uint64)%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%2#0",
        "aggregate%extract%4#0"
      ]
    },
    "900": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "reinterpret_Encoded(uint64,uint64)%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "901": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%2#0",
        "reinterpret_Encoded(uint64,uint64)%2#0"
      ]
    },
    "903": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%2#0",
        "reinterpret_Encoded(uint64,uint64)%2#0",
        "8"
      ]
    },
    "904": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%2#0",
        "reinterpret_Encoded(uint64,uint64)%2#0",
        "8",
        "8"
      ]
    },
    "905": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item0%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%2#0",
        "aggregate%extract%5#0"
      ]
    },
    "906": {
      "op": "btoi",
      "defined_out": [
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "907": {
      "callsub": "examples.tictactoe.tictactoe.TicTacToeContract.play",
      "op": "callsub play",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "910": {
      "op": "intc_1 // 1",
      "defined_out": [
        "examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0"
      ]
    },
    "911": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "913": {
      "op": "b approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11"
    },
    "916": {
      "block": "approval_program_whose_turn_route@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "918": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0",
        "NoOp"
      ]
    },
    "919": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0"
      ]
    },
    "920": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "921": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0"
      ]
    },
    "923": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0",
        "0"
      ]
    },
    "924": {
      "op": "!=",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0"
      ]
    },
    "925": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "926": {
      "callsub": "examples.tictactoe.tictactoe.TicTacToeContract.whose_turn",
      "op": "callsub whose_turn",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0"
      ]
    },
    "929": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0",
        "0x151f7c75"
      ]
    },
    "935": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%17#0"
      ]
    },
    "937": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%18#0"
      ]
    },
    "938": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "939": {
      "op": "intc_1 // 1",
      "defined_out": [
        "examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0"
      ]
    },
    "940": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "942": {
      "op": "b approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11"
    },
    "945": {
      "block": "approval_program_join_game_route@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "947": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "NoOp"
      ]
    },
    "948": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "949": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "950": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "952": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0",
        "0"
      ]
    },
    "953": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "954": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "955": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ]
    },
    "958": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0 (copy)"
      ]
    },
    "959": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0 (copy)",
        "0"
      ]
    },
    "960": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "961": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "aggregate%extract%2#0"
      ]
    },
    "962": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "963": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ]
    },
    "965": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "8"
      ]
    },
    "966": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "8",
        "8"
      ]
    },
    "967": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item0%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%1#0",
        "aggregate%extract%3#0"
      ]
    },
    "968": {
      "op": "btoi",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "969": {
      "callsub": "examples.tictactoe.tictactoe.TicTacToeContract.join_game",
      "op": "callsub join_game",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "972": {
      "op": "intc_1 // 1",
      "defined_out": [
        "examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0"
      ]
    },
    "973": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "975": {
      "op": "b approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11"
    },
    "978": {
      "block": "approval_program_new_game_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "980": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "981": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "982": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "983": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "986": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ]
    },
    "987": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0"
      ]
    },
    "988": {
      "op": "intc_3 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "989": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "990": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "991": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "993": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8"
      ]
    },
    "994": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8",
        "8"
      ]
    },
    "995": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "996": {
      "op": "btoi",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "997": {
      "callsub": "examples.tictactoe.tictactoe.TicTacToeContract.new_game",
      "op": "callsub new_game",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1000": {
      "op": "intc_1 // 1",
      "defined_out": [
        "examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0"
      ]
    },
    "1001": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1003": {
      "op": "b approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11"
    },
    "1006": {
      "block": "approval_program_bare_routing@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_after_if_else@10"
    }
  }
}