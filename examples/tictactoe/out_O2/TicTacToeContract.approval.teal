#pragma version 10
#pragma typetrack false

// examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1 3 8
    bytecblock "turns" "game" "winner" "challenger" 0x01 0x02 0x96a97181 "host"
    pushbytes ""
    dup
    txn ApplicationID
    !
    txn OnCompletion
    intc_1 // 1
    shl
    +
    switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
    err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

create_NoOp:
    bytec 6 // method "new_game((uint64,uint64))void"
    txna ApplicationArgs 0
    match new_game
    err // this contract does not implement the given ABI method for create NoOp

call_NoOp:
    bytec 6 // method "new_game((uint64,uint64))void"
    pushbytess 0x17a079b3 0xbb9f1147 0x9eebf58e // method "join_game((uint64,uint64))void", method "whose_turn()uint8", method "play((uint64,uint64))void"
    txna ApplicationArgs 0
    match new_game join_game_route@6 whose_turn_route@7 play_route@8
    err // this contract does not implement the given ABI method for call NoOp

play_route@8:
    txna ApplicationArgs 1
    dup
    intc_0 // 0
    extract_uint64
    bury 3
    intc_3 // 8
    extract_uint64
    bury 1
    intc_0 // 0
    bytec_2 // "winner"
    app_global_get_ex
    bury 1
    !
    assert // Game is already finished
    intc_0 // 0
    bytec_0 // "turns"
    app_global_get_ex
    assert // check self.turns exists
    pushint 2 // 2
    %
    bz else_body@16
    txn Sender
    intc_0 // 0
    bytec 7 // "host"
    app_global_get_ex
    assert // check self.host exists
    ==
    assert // It is the host's turn
    bytec 4 // 0x01

after_if_else@17:
    dig 2
    dig 2
    callsub make_move
    intc_1 // 1
    return

else_body@16:
    txn Sender
    global ZeroAddress
    intc_0 // 0
    bytec_3 // "challenger"
    app_global_get_ex
    select
    ==
    assert // It is the challenger's turn
    bytec 5 // 0x02
    b after_if_else@17

whose_turn_route@7:
    intc_0 // 0
    bytec_0 // "turns"
    app_global_get_ex
    assert // check self.turns exists
    pushint 2 // 2
    %
    bytec 5 // 0x02
    bytec 4 // 0x01
    uncover 2
    select
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return

join_game_route@6:
    txna ApplicationArgs 1
    dup
    intc_0 // 0
    extract_uint64
    swap
    intc_3 // 8
    extract_uint64
    intc_0 // 0
    bytec_3 // "challenger"
    app_global_get_ex
    bury 1
    !
    assert // Host already has a challenger
    bytec_3 // "challenger"
    txn Sender
    app_global_put
    bytec 5 // 0x02
    cover 2
    callsub make_move
    intc_1 // 1
    return


// examples.tictactoe.tictactoe.TicTacToeContract.new_game[routing]() -> void:
new_game:
    txna ApplicationArgs 1
    dup
    intc_0 // 0
    extract_uint64
    swap
    intc_3 // 8
    extract_uint64
    txn ApplicationID
    bz new_game_after_if_else@5
    intc_0 // 0
    bytec_3 // "challenger"
    app_global_get_ex
    bury 1
    bz new_game_after_if_else@4
    intc_0 // 0
    bytec_2 // "winner"
    app_global_get_ex
    bury 1
    assert // Game isn't over

new_game_after_if_else@4:
    bytec_3 // "challenger"
    app_global_del
    bytec_2 // "winner"
    app_global_del

new_game_after_if_else@5:
    bytec 7 // "host"
    txn Sender
    app_global_put
    pushint 9 // 9
    bzero
    bytec_1 // "game"
    swap
    app_global_put
    dig 1
    intc_2 // 3
    <
    bz new_game_bool_false@8
    dup
    intc_2 // 3
    <
    bz new_game_bool_false@8
    intc_1 // 1

new_game_bool_merge@9:
    assert // Move must be in range
    intc_0 // 0
    bytec_1 // "game"
    app_global_get_ex
    assert // check self.game exists
    dig 1
    intc_2 // 3
    *
    dup2
    intc_2 // 3
    extract3 // on error: index access is out of bounds
    dig 4
    bytec 4 // 0x01
    replace3 // on error: index access is out of bounds
    replace3 // on error: index access is out of bounds
    bytec_1 // "game"
    swap
    app_global_put
    bytec_0 // "turns"
    intc_0 // 0
    app_global_put
    intc_1 // 1
    return

new_game_bool_false@8:
    intc_0 // 0
    b new_game_bool_merge@9


// examples.tictactoe.tictactoe.TicTacToeContract.make_move(player: bytes, move.0: uint64, move.1: uint64) -> void:
make_move:
    proto 3 0
    intc_0 // 0
    dupn 5
    frame_dig -2
    intc_2 // 3
    <
    bz make_move_bool_false@3
    frame_dig -1
    intc_2 // 3
    <
    bz make_move_bool_false@3
    intc_1 // 1

make_move_bool_merge@4:
    assert // Move must be in range
    intc_0 // 0
    bytec_1 // "game"
    app_global_get_ex
    assert // check self.game exists
    frame_dig -1
    intc_2 // 3
    *
    dup2
    intc_2 // 3
    extract3 // on error: index access is out of bounds
    dup
    frame_dig -2
    intc_1 // 1
    extract3 // on error: index access is out of bounds
    pushbytes 0x00
    b==
    assert // Square is already taken
    frame_dig -2
    frame_dig -3
    replace3 // on error: index access is out of bounds
    uncover 2
    dig 2
    uncover 2
    replace3 // on error: index access is out of bounds
    bytec_1 // "game"
    swap
    app_global_put
    intc_0 // 0
    bytec_0 // "turns"
    app_global_get_ex
    assert // check self.turns exists
    intc_1 // 1
    +
    bytec_0 // "turns"
    swap
    app_global_put
    intc_0 // 0
    bytec_1 // "game"
    app_global_get_ex
    swap
    dup
    cover 2
    frame_bury 5
    assert // check self.game exists
    swap
    intc_2 // 3
    extract3 // on error: index access is out of bounds
    dup
    frame_bury 3
    dup
    extract 0 1 // on error: index access is out of bounds
    swap
    extract 1 1 // on error: index access is out of bounds
    dup
    frame_bury 4
    b==
    bz make_move_after_if_else@13
    frame_dig 3
    extract 2 1 // on error: index access is out of bounds
    frame_dig 4
    b==
    bz make_move_after_if_else@13

make_move_if_body@12:
    intc_1 // 1

make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25:
    bz make_move_else_body@6
    bytec_2 // "winner"
    frame_dig -3
    app_global_put

make_move_after_if_else@9:
    retsub

make_move_else_body@6:
    intc_0 // 0
    bytec_0 // "turns"
    app_global_get_ex
    assert // check self.turns exists
    pushint 9 // 9
    ==
    bz make_move_after_if_else@9
    bytec_2 // "winner"
    pushbytes 0x03
    app_global_put
    retsub

make_move_after_if_else@13:
    frame_dig 5
    dup
    extract 0 3 // on error: index access is out of bounds
    dup
    frame_bury 0
    frame_dig -2
    intc_1 // 1
    extract3 // on error: index access is out of bounds
    swap
    extract 3 3 // on error: index access is out of bounds
    dup
    frame_bury 1
    frame_dig -2
    intc_1 // 1
    extract3 // on error: index access is out of bounds
    dup
    frame_bury 2
    b==
    bz make_move_after_if_else@16
    frame_dig 5
    extract 6 3 // on error: index access is out of bounds
    frame_dig -2
    intc_1 // 1
    extract3 // on error: index access is out of bounds
    frame_dig 2
    b==
    bnz make_move_if_body@12

make_move_after_if_else@16:
    frame_dig 1
    extract 1 1 // on error: index access is out of bounds
    frame_dig -3
    b==
    bz make_move_after_if_else@24
    frame_dig 0
    extract 0 1 // on error: index access is out of bounds
    frame_dig -3
    b==
    bz make_move_after_if_else@20
    frame_dig 5
    extract 6 3 // on error: index access is out of bounds
    extract 2 1 // on error: index access is out of bounds
    frame_dig -3
    b==
    bnz make_move_if_body@12

make_move_after_if_else@20:
    frame_dig 0
    extract 2 1 // on error: index access is out of bounds
    frame_dig -3
    b==
    bz make_move_after_if_else@24
    frame_dig 5
    extract 6 3 // on error: index access is out of bounds
    extract 0 1 // on error: index access is out of bounds
    frame_dig -3
    b==
    bnz make_move_if_body@12

make_move_after_if_else@24:
    intc_0 // 0
    b make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25

make_move_bool_false@3:
    intc_0 // 0
    b make_move_bool_merge@4
