#pragma version 10
#pragma typetrack false

// examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1 3 2
    bytecblock "game" "turns" "winner" "challenger" 0x01 0x02 "host"
    pushbytes ""
    dupn 2
    txn NumAppArgs
    bz main_after_if_else@20
    pushbytess 0x96a97181 0x17a079b3 0xbb9f1147 0x9eebf58e // method "new_game((uint64,uint64))void", method "join_game((uint64,uint64))void", method "whose_turn()uint8", method "play((uint64,uint64))void"
    txna ApplicationArgs 0
    match main_new_game_route@5 main_join_game_route@14 main_whose_turn_route@15 main_play_route@16

main_after_if_else@20:
    intc_0 // 0
    bury 1

main_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@21:
    dup
    return

main_play_route@16:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    dup
    extract 0 8 // on error: Index access is out of bounds
    btoi
    bury 4
    extract 8 8 // on error: Index access is out of bounds
    btoi
    bury 2
    intc_0 // 0
    bytec_2 // "winner"
    app_global_get_ex
    bury 1
    !
    assert // Game is already finished
    intc_0 // 0
    bytec_1 // "turns"
    app_global_get_ex
    assert // check self.turns exists
    intc_3 // 2
    %
    bz main_else_body@18
    txn Sender
    intc_0 // 0
    bytec 6 // "host"
    app_global_get_ex
    assert // check self.host exists
    ==
    assert // It is the host's turn
    bytec 4 // 0x01

main_after_if_else@19:
    dig 3
    dig 3
    callsub make_move
    intc_1 // 1
    bury 1
    b main_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@21

main_else_body@18:
    txn Sender
    global ZeroAddress
    intc_0 // 0
    bytec_3 // "challenger"
    app_global_get_ex
    select
    ==
    assert // It is the challenger's turn
    bytec 5 // 0x02
    b main_after_if_else@19

main_whose_turn_route@15:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    intc_0 // 0
    bytec_1 // "turns"
    app_global_get_ex
    assert // check self.turns exists
    intc_3 // 2
    %
    bytec 5 // 0x02
    bytec 4 // 0x01
    uncover 2
    select
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    bury 1
    b main_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@21

main_join_game_route@14:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    dup
    extract 0 8 // on error: Index access is out of bounds
    btoi
    swap
    extract 8 8 // on error: Index access is out of bounds
    btoi
    intc_0 // 0
    bytec_3 // "challenger"
    app_global_get_ex
    bury 1
    !
    assert // Host already has a challenger
    bytec_3 // "challenger"
    txn Sender
    app_global_put
    bytec 5 // 0x02
    cover 2
    callsub make_move
    intc_1 // 1
    bury 1
    b main_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@21

main_new_game_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txna ApplicationArgs 1
    dup
    extract 0 8 // on error: Index access is out of bounds
    btoi
    bury 4
    extract 8 8 // on error: Index access is out of bounds
    btoi
    bury 2
    txn ApplicationID
    bz main_after_if_else@9
    intc_0 // 0
    bytec_3 // "challenger"
    app_global_get_ex
    bury 1
    bz main_after_if_else@8
    intc_0 // 0
    bytec_2 // "winner"
    app_global_get_ex
    bury 1
    assert // Game isn't over

main_after_if_else@8:
    bytec_3 // "challenger"
    app_global_del
    bytec_2 // "winner"
    app_global_del

main_after_if_else@9:
    bytec 6 // "host"
    txn Sender
    app_global_put
    pushint 9 // 9
    bzero
    bytec_0 // "game"
    swap
    app_global_put
    dig 2
    intc_2 // 3
    <
    dup
    bury 2
    bz main_bool_false@12
    dig 1
    intc_2 // 3
    <
    bz main_bool_false@12
    intc_1 // 1

main_bool_merge@13:
    assert // Move must be in range
    intc_0 // 0
    bytec_0 // "game"
    app_global_get_ex
    assert // check self.game exists
    dig 2
    dup
    cover 2
    intc_2 // 3
    *
    dup2
    intc_2 // 3
    extract3 // on error: Index access is out of bounds
    dig 4
    assert // Index access is out of bounds
    dig 6
    bytec 4 // 0x01
    replace3
    uncover 3
    intc_2 // 3
    <
    assert // Index access is out of bounds
    replace3
    bytec_0 // "game"
    swap
    app_global_put
    bytec_1 // "turns"
    intc_0 // 0
    app_global_put
    intc_1 // 1
    bury 1
    b main_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@21

main_bool_false@12:
    intc_0 // 0
    b main_bool_merge@13


// examples.tictactoe.tictactoe.TicTacToeContract.make_move(player: bytes, move.0: uint64, move.1: uint64) -> void:
make_move:
    proto 3 0
    intc_0 // 0
    dupn 5
    frame_dig -2
    intc_2 // 3
    <
    dup
    bz make_move_bool_false@3
    frame_dig -1
    intc_2 // 3
    <
    bz make_move_bool_false@3
    intc_1 // 1

make_move_bool_merge@4:
    assert // Move must be in range
    intc_0 // 0
    bytec_0 // "game"
    app_global_get_ex
    assert // check self.game exists
    frame_dig -1
    intc_2 // 3
    *
    swap
    dig 1
    intc_2 // 3
    extract3 // on error: Index access is out of bounds
    frame_dig -2
    intc_1 // 1
    extract3 // on error: Index access is out of bounds
    pushbytes 0x00
    b==
    assert // Square is already taken
    intc_0 // 0
    bytec_0 // "game"
    app_global_get_ex
    assert // check self.game exists
    dup
    dig 2
    intc_2 // 3
    extract3 // on error: Index access is out of bounds
    frame_dig 6
    assert // Index access is out of bounds
    frame_dig -2
    frame_dig -3
    replace3
    frame_dig -1
    intc_2 // 3
    <
    assert // Index access is out of bounds
    dig 2
    swap
    replace3
    bytec_0 // "game"
    swap
    app_global_put
    intc_0 // 0
    bytec_1 // "turns"
    app_global_get_ex
    assert // check self.turns exists
    intc_1 // 1
    +
    bytec_1 // "turns"
    swap
    app_global_put
    intc_0 // 0
    bytec_0 // "game"
    app_global_get_ex
    swap
    dup
    cover 2
    frame_bury 2
    assert // check self.game exists
    swap
    intc_2 // 3
    extract3 // on error: Index access is out of bounds
    dup
    frame_bury 3
    dup
    extract 0 1 // on error: Index access is out of bounds
    swap
    extract 1 1 // on error: Index access is out of bounds
    dup
    frame_bury 0
    b==
    bz make_move_after_if_else@13
    frame_dig 3
    extract 2 1 // on error: Index access is out of bounds
    frame_dig 0
    b==
    bz make_move_after_if_else@13

make_move_if_body@12:
    intc_1 // 1

make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25:
    bz make_move_else_body@6
    bytec_2 // "winner"
    frame_dig -3
    app_global_put

make_move_after_if_else@9:
    retsub

make_move_else_body@6:
    intc_0 // 0
    bytec_1 // "turns"
    app_global_get_ex
    assert // check self.turns exists
    pushint 9 // 9
    ==
    bz make_move_after_if_else@9
    bytec_2 // "winner"
    pushbytes 0x03
    app_global_put
    retsub

make_move_after_if_else@13:
    frame_dig 2
    dup
    extract 0 3 // on error: Index access is out of bounds
    dup
    frame_bury 4
    frame_dig -2
    intc_1 // 1
    extract3 // on error: Index access is out of bounds
    swap
    extract 3 3 // on error: Index access is out of bounds
    dup
    frame_bury 5
    frame_dig -2
    intc_1 // 1
    extract3 // on error: Index access is out of bounds
    dup
    frame_bury 1
    b==
    bz make_move_after_if_else@16
    frame_dig 2
    extract 6 3 // on error: Index access is out of bounds
    frame_dig -2
    intc_1 // 1
    extract3 // on error: Index access is out of bounds
    frame_dig 1
    b==
    bnz make_move_if_body@12

make_move_after_if_else@16:
    frame_dig 5
    extract 1 1 // on error: Index access is out of bounds
    frame_dig -3
    b==
    bz make_move_after_if_else@24
    frame_dig 4
    extract 0 1 // on error: Index access is out of bounds
    frame_dig -3
    b==
    bz make_move_after_if_else@20
    frame_dig 2
    extract 6 3 // on error: Index access is out of bounds
    extract 2 1 // on error: Index access is out of bounds
    frame_dig -3
    b==
    bnz make_move_if_body@12

make_move_after_if_else@20:
    frame_dig 4
    extract 2 1 // on error: Index access is out of bounds
    frame_dig -3
    b==
    bz make_move_after_if_else@24
    frame_dig 2
    extract 6 3 // on error: Index access is out of bounds
    extract 0 1 // on error: Index access is out of bounds
    frame_dig -3
    b==
    bnz make_move_if_body@12

make_move_after_if_else@24:
    intc_0 // 0
    b make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25

make_move_bool_false@3:
    intc_0 // 0
    b make_move_bool_merge@4
