debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), expand_all_bytes=False, paths=['tictactoe'], output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let move.0#1: uint64 = undefined while trying to resolve 'move.0' in block@4
debug: Added move.0#0 to Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@0) in block@0
debug: Created Phi assignment: let move.0#2: uint64 = undefined while trying to resolve 'move.0' in block@3
debug: Added move.0#0 to Phi node: let move.0#2: uint64 = φ(move.0#0 <- block@1) in block@1
debug: Added move.0#0 to Phi node: let move.0#2: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let move.0#2: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) (move.0#2) with move.0#0
debug: Deleting Phi assignment: let move.0#2: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2)
debug: Replaced trivial Phi node: let move.0#2: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) (move.0#2) with move.0#0 in current definition for 1 blocks
debug: Added move.0#0 to Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@0, move.0#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@0, move.0#0 <- block@3) (move.0#1) with move.0#0
debug: Deleting Phi assignment: let move.0#1: uint64 = φ(move.0#0 <- block@0, move.0#0 <- block@3)
debug: Replaced trivial Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@0, move.0#0 <- block@3) (move.0#1) with move.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let move.1#1: uint64 = undefined while trying to resolve 'move.1' in block@4
debug: Added move.1#0 to Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@0) in block@0
debug: Created Phi assignment: let move.1#2: uint64 = undefined while trying to resolve 'move.1' in block@3
debug: Added move.1#0 to Phi node: let move.1#2: uint64 = φ(move.1#0 <- block@1) in block@1
debug: Added move.1#0 to Phi node: let move.1#2: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let move.1#2: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) (move.1#2) with move.1#0
debug: Deleting Phi assignment: let move.1#2: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2)
debug: Replaced trivial Phi node: let move.1#2: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) (move.1#2) with move.1#0 in current definition for 1 blocks
debug: Added move.1#0 to Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@0, move.1#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@0, move.1#0 <- block@3) (move.1#1) with move.1#0
debug: Deleting Phi assignment: let move.1#1: uint64 = φ(move.1#0 <- block@0, move.1#0 <- block@3)
debug: Replaced trivial Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@0, move.1#0 <- block@3) (move.1#1) with move.1#0 in current definition for 1 blocks
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@8
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@6) in block@6
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@6, and_result%0#1 <- block@7) in block@7
debug: Created Phi assignment: let row#1: uint64 = undefined while trying to resolve 'row' in block@8
debug: Added row#0 to Phi node: let row#1: uint64 = φ(row#0 <- block@6) in block@6
debug: Created Phi assignment: let row#2: uint64 = undefined while trying to resolve 'row' in block@7
debug: Added row#0 to Phi node: let row#2: uint64 = φ(row#0 <- block@4) in block@4
debug: Added row#0 to Phi node: let row#2: uint64 = φ(row#0 <- block@4, row#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let row#2: uint64 = φ(row#0 <- block@4, row#0 <- block@5) (row#2) with row#0
debug: Deleting Phi assignment: let row#2: uint64 = φ(row#0 <- block@4, row#0 <- block@5)
debug: Replaced trivial Phi node: let row#2: uint64 = φ(row#0 <- block@4, row#0 <- block@5) (row#2) with row#0 in current definition for 1 blocks
debug: Added row#0 to Phi node: let row#1: uint64 = φ(row#0 <- block@6, row#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let row#1: uint64 = φ(row#0 <- block@6, row#0 <- block@7) (row#1) with row#0
debug: Deleting Phi assignment: let row#1: uint64 = φ(row#0 <- block@6, row#0 <- block@7)
debug: Replaced trivial Phi node: let row#1: uint64 = φ(row#0 <- block@6, row#0 <- block@7) (row#1) with row#0 in current definition for 1 blocks
debug: Created Phi assignment: let column#1: uint64 = undefined while trying to resolve 'column' in block@8
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@6) in block@6
debug: Created Phi assignment: let column#2: uint64 = undefined while trying to resolve 'column' in block@7
debug: Added column#0 to Phi node: let column#2: uint64 = φ(column#0 <- block@4) in block@4
debug: Added column#0 to Phi node: let column#2: uint64 = φ(column#0 <- block@4, column#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let column#2: uint64 = φ(column#0 <- block@4, column#0 <- block@5) (column#2) with column#0
debug: Deleting Phi assignment: let column#2: uint64 = φ(column#0 <- block@4, column#0 <- block@5)
debug: Replaced trivial Phi node: let column#2: uint64 = φ(column#0 <- block@4, column#0 <- block@5) (column#2) with column#0 in current definition for 1 blocks
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@6, column#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let column#1: uint64 = φ(column#0 <- block@6, column#0 <- block@7) (column#1) with column#0
debug: Deleting Phi assignment: let column#1: uint64 = φ(column#0 <- block@6, column#0 <- block@7)
debug: Replaced trivial Phi node: let column#1: uint64 = φ(column#0 <- block@6, column#0 <- block@7) (column#1) with column#0 in current definition for 1 blocks
tictactoe/tictactoe.py:34:9 debug: encountered already materialized expression ('game'), reusing result: "game"
debug: Terminated block@8
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let player#2: Encoded(uint8) = undefined while trying to resolve 'player' in block@3
debug: Added player#0 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@1) in block@1
debug: Added player#1 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@1, player#1 <- block@2) in block@2
debug: Created Phi assignment: let move.0#1: uint64 = undefined while trying to resolve 'move.0' in block@3
debug: Added move.0#0 to Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@1) in block@1
debug: Added move.0#0 to Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) (move.0#1) with move.0#0
debug: Deleting Phi assignment: let move.0#1: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2)
debug: Replaced trivial Phi node: let move.0#1: uint64 = φ(move.0#0 <- block@1, move.0#0 <- block@2) (move.0#1) with move.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let move.1#1: uint64 = undefined while trying to resolve 'move.1' in block@3
debug: Added move.1#0 to Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@1) in block@1
debug: Added move.1#0 to Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) in block@2
debug: Replacing trivial Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) (move.1#1) with move.1#0
debug: Deleting Phi assignment: let move.1#1: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2)
debug: Replaced trivial Phi node: let move.1#1: uint64 = φ(move.1#0 <- block@1, move.1#0 <- block@2) (move.1#1) with move.1#0 in current definition for 1 blocks
debug: Terminated block@3
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@4
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2) in block@2
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@2, and_result%0#1 <- block@3) in block@3
debug: Created Phi assignment: let row#1: uint64 = undefined while trying to resolve 'row' in block@4
debug: Added row#0 to Phi node: let row#1: uint64 = φ(row#0 <- block@2) in block@2
debug: Created Phi assignment: let row#2: uint64 = undefined while trying to resolve 'row' in block@3
debug: Added row#0 to Phi node: let row#2: uint64 = φ(row#0 <- block@0) in block@0
debug: Added row#0 to Phi node: let row#2: uint64 = φ(row#0 <- block@0, row#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let row#2: uint64 = φ(row#0 <- block@0, row#0 <- block@1) (row#2) with row#0
debug: Deleting Phi assignment: let row#2: uint64 = φ(row#0 <- block@0, row#0 <- block@1)
debug: Replaced trivial Phi node: let row#2: uint64 = φ(row#0 <- block@0, row#0 <- block@1) (row#2) with row#0 in current definition for 1 blocks
debug: Added row#0 to Phi node: let row#1: uint64 = φ(row#0 <- block@2, row#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let row#1: uint64 = φ(row#0 <- block@2, row#0 <- block@3) (row#1) with row#0
debug: Deleting Phi assignment: let row#1: uint64 = φ(row#0 <- block@2, row#0 <- block@3)
debug: Replaced trivial Phi node: let row#1: uint64 = φ(row#0 <- block@2, row#0 <- block@3) (row#1) with row#0 in current definition for 1 blocks
debug: Created Phi assignment: let column#1: uint64 = undefined while trying to resolve 'column' in block@4
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@2) in block@2
debug: Created Phi assignment: let column#2: uint64 = undefined while trying to resolve 'column' in block@3
debug: Added column#0 to Phi node: let column#2: uint64 = φ(column#0 <- block@0) in block@0
debug: Added column#0 to Phi node: let column#2: uint64 = φ(column#0 <- block@0, column#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let column#2: uint64 = φ(column#0 <- block@0, column#0 <- block@1) (column#2) with column#0
debug: Deleting Phi assignment: let column#2: uint64 = φ(column#0 <- block@0, column#0 <- block@1)
debug: Replaced trivial Phi node: let column#2: uint64 = φ(column#0 <- block@0, column#0 <- block@1) (column#2) with column#0 in current definition for 1 blocks
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@2, column#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let column#1: uint64 = φ(column#0 <- block@2, column#0 <- block@3) (column#1) with column#0
debug: Deleting Phi assignment: let column#1: uint64 = φ(column#0 <- block@2, column#0 <- block@3)
debug: Replaced trivial Phi node: let column#1: uint64 = φ(column#0 <- block@2, column#0 <- block@3) (column#1) with column#0 in current definition for 1 blocks
debug: Created Phi assignment: let player#1: Encoded(uint8) = undefined while trying to resolve 'player' in block@4
debug: Added player#0 to Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@2) in block@2
debug: Created Phi assignment: let player#2: Encoded(uint8) = undefined while trying to resolve 'player' in block@3
debug: Added player#0 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0) in block@0
debug: Added player#0 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) (player#2) with player#0
debug: Deleting Phi assignment: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1)
debug: Replaced trivial Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) (player#2) with player#0 in current definition for 1 blocks
debug: Added player#0 to Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@2, player#0 <- block@3) in block@3
debug: Replacing trivial Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@2, player#0 <- block@3) (player#1) with player#0
debug: Deleting Phi assignment: let player#1: Encoded(uint8) = φ(player#0 <- block@2, player#0 <- block@3)
debug: Replaced trivial Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@2, player#0 <- block@3) (player#1) with player#0 in current definition for 1 blocks
tictactoe/tictactoe.py:65:9 debug: encountered already materialized expression ('game'), reusing result: "game"
tictactoe/tictactoe.py:66:9 debug: encountered already materialized expression ('turns'), reusing result: "turns"
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Created Phi assignment: let g#1: Encoded(uint8[3][3]) = undefined while trying to resolve 'g' in block@3
debug: Added g#0 to Phi node: let g#1: Encoded(uint8[3][3]) = φ(g#0 <- block@0) in block@0
debug: Added g#0 to Phi node: let g#1: Encoded(uint8[3][3]) = φ(g#0 <- block@0, g#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let g#1: Encoded(uint8[3][3]) = φ(g#0 <- block@0, g#0 <- block@1) (g#1) with g#0
debug: Deleting Phi assignment: let g#1: Encoded(uint8[3][3]) = φ(g#0 <- block@0, g#0 <- block@1)
debug: Replaced trivial Phi node: let g#1: Encoded(uint8[3][3]) = φ(g#0 <- block@0, g#0 <- block@1) (g#1) with g#0 in current definition for 1 blocks
debug: Created Phi assignment: let column#1: uint64 = undefined while trying to resolve 'column' in block@3
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@0) in block@0
debug: Added column#0 to Phi node: let column#1: uint64 = φ(column#0 <- block@0, column#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let column#1: uint64 = φ(column#0 <- block@0, column#0 <- block@1) (column#1) with column#0
debug: Deleting Phi assignment: let column#1: uint64 = φ(column#0 <- block@0, column#0 <- block@1)
debug: Replaced trivial Phi node: let column#1: uint64 = φ(column#0 <- block@0, column#0 <- block@1) (column#1) with column#0 in current definition for 1 blocks
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let player#1: Encoded(uint8) = undefined while trying to resolve 'player' in block@6
debug: Created Phi assignment: let player#2: Encoded(uint8) = undefined while trying to resolve 'player' in block@3
debug: Added player#0 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0) in block@0
debug: Added player#0 to Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) (player#2) with player#0
debug: Deleting Phi assignment: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1)
debug: Replaced trivial Phi node: let player#2: Encoded(uint8) = φ(player#0 <- block@0, player#0 <- block@1) (player#2) with player#0 in current definition for 1 blocks
debug: Added player#0 to Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@3) in block@3
debug: Added player#0 to Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@3, player#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@3, player#0 <- block@4) (player#1) with player#0
debug: Deleting Phi assignment: let player#1: Encoded(uint8) = φ(player#0 <- block@3, player#0 <- block@4)
debug: Replaced trivial Phi node: let player#1: Encoded(uint8) = φ(player#0 <- block@3, player#0 <- block@4) (player#1) with player#0 in current definition for 1 blocks
debug: Created Phi assignment: let g#2: Encoded(uint8[3][3]) = undefined while trying to resolve 'g' in block@6
debug: Added g#0 to Phi node: let g#2: Encoded(uint8[3][3]) = φ(g#0 <- block@3) in block@3
debug: Added g#0 to Phi node: let g#2: Encoded(uint8[3][3]) = φ(g#0 <- block@3, g#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let g#2: Encoded(uint8[3][3]) = φ(g#0 <- block@3, g#0 <- block@4) (g#2) with g#0
debug: Deleting Phi assignment: let g#2: Encoded(uint8[3][3]) = φ(g#0 <- block@3, g#0 <- block@4)
debug: Replaced trivial Phi node: let g#2: Encoded(uint8[3][3]) = φ(g#0 <- block@3, g#0 <- block@4) (g#2) with g#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
tictactoe/tictactoe.py:84:27 debug: encountered already materialized expression (player), reusing result: player#0
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Created Phi assignment: let g#3: Encoded(uint8[3][3]) = undefined while trying to resolve 'g' in block@10
debug: Added g#0 to Phi node: let g#3: Encoded(uint8[3][3]) = φ(g#0 <- block@7) in block@7
debug: Added g#0 to Phi node: let g#3: Encoded(uint8[3][3]) = φ(g#0 <- block@7, g#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let g#3: Encoded(uint8[3][3]) = φ(g#0 <- block@7, g#0 <- block@8) (g#3) with g#0
debug: Deleting Phi assignment: let g#3: Encoded(uint8[3][3]) = φ(g#0 <- block@7, g#0 <- block@8)
debug: Replaced trivial Phi node: let g#3: Encoded(uint8[3][3]) = φ(g#0 <- block@7, g#0 <- block@8) (g#3) with g#0 in current definition for 1 blocks
debug: Created Phi assignment: let player#3: Encoded(uint8) = undefined while trying to resolve 'player' in block@10
debug: Added player#0 to Phi node: let player#3: Encoded(uint8) = φ(player#0 <- block@7) in block@7
debug: Added player#0 to Phi node: let player#3: Encoded(uint8) = φ(player#0 <- block@7, player#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let player#3: Encoded(uint8) = φ(player#0 <- block@7, player#0 <- block@8) (player#3) with player#0
debug: Deleting Phi assignment: let player#3: Encoded(uint8) = φ(player#0 <- block@7, player#0 <- block@8)
debug: Replaced trivial Phi node: let player#3: Encoded(uint8) = φ(player#0 <- block@7, player#0 <- block@8) (player#3) with player#0 in current definition for 1 blocks
debug: Terminated block@10
debug: Sealing block@11
tictactoe/tictactoe.py:86:27 debug: encountered already materialized expression (player), reusing result: player#0
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of examples.tictactoe.tictactoe.TicTacToeContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable reinterpret_biguint%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%12#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of examples.tictactoe.tictactoe.TicTacToeContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of examples.tictactoe.tictactoe.TicTacToeContract
debug: lowering array IR nodes in clear program of examples.tictactoe.tictactoe.TicTacToeContract
debug: optimizing approval program of examples.tictactoe.tictactoe.TicTacToeContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded_value%0#0
debug: Removing unused variable aggregate%encoded_element%1#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%3#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%bytes_offset%1#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%bytes_offset%3#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of examples.tictactoe.tictactoe.TicTacToeContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of examples.tictactoe.tictactoe.TicTacToeContract
debug: auto reserving slots in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init, []
tictactoe/tictactoe.py:16 debug: auto reserving slots in examples.tictactoe.tictactoe.TicTacToeContract.__init__, []
tictactoe/tictactoe.py:20 debug: auto reserving slots in examples.tictactoe.tictactoe.TicTacToeContract.new_game, []
tictactoe/tictactoe.py:37 debug: auto reserving slots in examples.tictactoe.tictactoe.TicTacToeContract.join_game, []
tictactoe/tictactoe.py:43 debug: auto reserving slots in examples.tictactoe.tictactoe.TicTacToeContract.whose_turn, []
tictactoe/tictactoe.py:47 debug: auto reserving slots in examples.tictactoe.tictactoe.TicTacToeContract.play, []
tictactoe/tictactoe.py:60 debug: auto reserving slots in examples.tictactoe.tictactoe.TicTacToeContract.make_move, []
tictactoe/tictactoe.py:72 debug: auto reserving slots in examples.tictactoe.tictactoe.TicTacToeContract.did_win, []
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of examples.tictactoe.tictactoe.TicTacToeContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.tictactoe.tictactoe.TicTacToeContract.__init__ using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.tictactoe.tictactoe.TicTacToeContract.__init__
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.tictactoe.tictactoe.TicTacToeContract.new_game using strategy 'root_operand'
debug: Coalescing and_result%0#0 with [and_result%0#5, and_result%0#1, and_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Sequentializing parallel copies in examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.tictactoe.tictactoe.TicTacToeContract.join_game using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.tictactoe.tictactoe.TicTacToeContract.join_game
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.tictactoe.tictactoe.TicTacToeContract.whose_turn using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.tictactoe.tictactoe.TicTacToeContract.whose_turn
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.tictactoe.tictactoe.TicTacToeContract.play using strategy 'root_operand'
debug: Coalescing player#0 with [player#5, player#1, player#2]
debug: Coalescing resulted in 7 replacement/s
debug: Sequentializing parallel copies in examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.tictactoe.tictactoe.TicTacToeContract.make_move using strategy 'root_operand'
debug: Coalescing and_result%0#0 with [and_result%0#5, and_result%0#1, and_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Sequentializing parallel copies in examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in examples.tictactoe.tictactoe.TicTacToeContract.did_win using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0 with [examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#1, examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#2, examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#3, examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#4]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 14 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to tictactoe/out_unoptimized/TicTacToeContract.ir/TicTacToeContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to tictactoe/out_unoptimized/TicTacToeContract.ir/TicTacToeContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted new_game_block@0.ops[1]: 'l-store-copy reinterpret_bool%0#0 0'
debug: Replaced new_game_block@0.ops[3]: 'v-load reinterpret_bool%0#0' with 'l-load reinterpret_bool%0#0'
debug: Inserted new_game_if_body@1.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced new_game_if_body@1.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted new_game_if_body@2.ops[3]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced new_game_if_body@2.ops[6]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted new_game_after_if_else@4.ops[18]: 'l-store-copy tmp%1#0 0'
debug: Replaced new_game_after_if_else@4.ops[20]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted new_game_after_if_else@4.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced new_game_after_if_else@4.ops[4]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted new_game_after_if_else@4.ops[8]: 'l-store-copy reinterpret_Encoded(uint8[3][3])%0#0 0'
debug: Replaced new_game_after_if_else@4.ops[11]: 'v-load reinterpret_Encoded(uint8[3][3])%0#0' with 'l-load reinterpret_Encoded(uint8[3][3])%0#0'
debug: Inserted new_game_after_if_else@4.ops[14]: 'l-store-copy column#0 0'
debug: Replaced new_game_after_if_else@4.ops[18]: 'v-load column#0' with 'l-load column#0'
debug: Inserted new_game_and_contd@5.ops[3]: 'l-store-copy tmp%2#0 0'
debug: Replaced new_game_and_contd@5.ops[5]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted new_game_bool_merge@8.ops[35]: 'l-store-copy aggregate%updated_array%1#1 0'
debug: Replaced new_game_bool_merge@8.ops[37]: 'v-load aggregate%updated_array%1#1' with 'l-load aggregate%updated_array%1#1'
debug: Inserted new_game_bool_merge@8.ops[5]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced new_game_bool_merge@8.ops[8]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted new_game_bool_merge@8.ops[13]: 'l-store-copy aggregate%bytes_offset%0#1 0'
debug: Replaced new_game_bool_merge@8.ops[16]: 'v-load aggregate%bytes_offset%0#1' with 'l-load aggregate%bytes_offset%0#1'
debug: Inserted new_game_bool_merge@8.ops[23]: 'l-store-copy aggregate%write_offset%0#1 0'
debug: Replaced new_game_bool_merge@8.ops[26]: 'v-load aggregate%write_offset%0#1' with 'l-load aggregate%write_offset%0#1'
debug: Inserted new_game_bool_merge@8.ops[33]: 'l-store-copy aggregate%write_offset%1#1 0'
debug: Replaced new_game_bool_merge@8.ops[36]: 'v-load aggregate%write_offset%1#1' with 'l-load aggregate%write_offset%1#1'
debug: Inserted new_game_bool_merge@8.ops[42]: 'l-store-copy updated_array%0#0 0'
debug: Replaced new_game_bool_merge@8.ops[45]: 'v-load updated_array%0#0' with 'l-load updated_array%0#0'
debug: Inserted new_game_bool_merge@8.ops[19]: 'l-store-copy aggregate%encoded_element%0#1 0'
debug: Replaced new_game_bool_merge@8.ops[26]: 'v-load aggregate%encoded_element%0#1' with 'l-load aggregate%encoded_element%0#1'
debug: Inserted new_game_bool_merge@8.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced new_game_bool_merge@8.ops[16]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted new_game_bool_merge@8.ops[31]: 'l-store-copy aggregate%updated_array%0#1 0'
debug: Replaced new_game_bool_merge@8.ops[40]: 'v-load aggregate%updated_array%0#1' with 'l-load aggregate%updated_array%0#1'
debug: Inserted new_game_bool_merge@8.ops[12]: 'l-store-copy row#0 1'
debug: Replaced new_game_bool_merge@8.ops[34]: 'v-load row#0' with 'l-load row#0'
debug: Inserted new_game_bool_merge@8.ops[18]: 'l-store-copy maybe_value%0#0 2'
debug: Replaced new_game_bool_merge@8.ops[40]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted join_game_block@0.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced join_game_block@0.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted join_game_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced join_game_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted join_game_block@0.ops[13]: 'l-store-copy tmp%1#0 0'
debug: Replaced join_game_block@0.ops[16]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted whose_turn_block@0.ops[10]: 'l-store-copy tmp%0#0 0'
debug: Replaced whose_turn_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted whose_turn_block@0.ops[20]: 'l-store-copy select%0#0 0'
debug: Replaced whose_turn_block@0.ops[22]: 'v-load select%0#0' with 'l-load select%0#0'
debug: Inserted whose_turn_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced whose_turn_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted whose_turn_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced whose_turn_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted whose_turn_block@0.ops[17]: 'l-store-copy tmp%1#0 0'
debug: Replaced whose_turn_block@0.ops[21]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted play_block@0.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced play_block@0.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted play_block@0.ops[21]: 'l-store-copy tmp%1#0 0'
debug: Replaced play_block@0.ops[23]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted play_block@0.ops[26]: 'l-store-copy tmp%2#0 0'
debug: Replaced play_block@0.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted play_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced play_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted play_block@0.ops[15]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced play_block@0.ops[18]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted play_block@0.ops[17]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced play_block@0.ops[21]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted play_if_body@1.ops[12]: 'l-store-copy tmp%4#0 0'
debug: Replaced play_if_body@1.ops[14]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted play_if_body@1.ops[5]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced play_if_body@1.ops[8]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted play_if_body@1.ops[7]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced play_if_body@1.ops[12]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted play_if_body@1.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced play_if_body@1.ops[12]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted play_else_body@2.ops[17]: 'l-store-copy tmp%7#0 0'
debug: Replaced play_else_body@2.ops[19]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted play_else_body@2.ops[8]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced play_else_body@2.ops[11]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted play_else_body@2.ops[14]: 'l-store-copy state_get%0#0 0'
debug: Replaced play_else_body@2.ops[17]: 'v-load state_get%0#0' with 'l-load state_get%0#0'
debug: Inserted play_else_body@2.ops[7]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced play_else_body@2.ops[13]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted play_else_body@2.ops[3]: 'l-store-copy tmp%6#0 0'
debug: Replaced play_else_body@2.ops[12]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted play_else_body@2.ops[1]: 'l-store-copy tmp%5#0 0'
debug: Replaced play_else_body@2.ops[19]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted make_move_block@0.ops[7]: 'l-store-copy tmp%0#0 0'
debug: Replaced make_move_block@0.ops[9]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted make_move_block@0.ops[1]: 'l-store-copy column#0 0'
debug: Replaced make_move_block@0.ops[5]: 'v-load column#0' with 'l-load column#0'
debug: Inserted make_move_and_contd@1.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced make_move_and_contd@1.ops[5]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted make_move_bool_merge@4.ops[17]: 'l-store-copy aggregate%encoded_element%0#1 0'
debug: Replaced make_move_bool_merge@4.ops[19]: 'v-load aggregate%encoded_element%0#1' with 'l-load aggregate%encoded_element%0#1'
debug: Inserted make_move_bool_merge@4.ops[20]: 'l-store-copy array_item%0#0 0'
debug: Replaced make_move_bool_merge@4.ops[22]: 'v-load array_item%0#0' with 'l-load array_item%0#0'
debug: Inserted make_move_bool_merge@4.ops[32]: 'l-store-copy aggregate%encoded_element%1#1 0'
debug: Replaced make_move_bool_merge@4.ops[34]: 'v-load aggregate%encoded_element%1#1' with 'l-load aggregate%encoded_element%1#1'
debug: Inserted make_move_bool_merge@4.ops[35]: 'l-store-copy array_item%1#0 0'
debug: Replaced make_move_bool_merge@4.ops[37]: 'v-load array_item%1#0' with 'l-load array_item%1#0'
debug: Inserted make_move_bool_merge@4.ops[38]: 'l-store-copy values%1#0 0'
debug: Replaced make_move_bool_merge@4.ops[40]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted make_move_bool_merge@4.ops[41]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced make_move_bool_merge@4.ops[43]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted make_move_bool_merge@4.ops[46]: 'l-store-copy tmp%2#0 0'
debug: Replaced make_move_bool_merge@4.ops[48]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted make_move_bool_merge@4.ops[85]: 'l-store-copy aggregate%updated_array%1#1 0'
debug: Replaced make_move_bool_merge@4.ops[87]: 'v-load aggregate%updated_array%1#1' with 'l-load aggregate%updated_array%1#1'
debug: Inserted make_move_bool_merge@4.ops[110]: 'l-store-copy tmp%4#0 0'
debug: Replaced make_move_bool_merge@4.ops[112]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted make_move_bool_merge@4.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced make_move_bool_merge@4.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted make_move_bool_merge@4.ops[13]: 'l-store-copy aggregate%bytes_offset%0#1 0'
debug: Replaced make_move_bool_merge@4.ops[16]: 'v-load aggregate%bytes_offset%0#1' with 'l-load aggregate%bytes_offset%0#1'
debug: Inserted make_move_bool_merge@4.ops[29]: 'l-store-copy aggregate%bytes_offset%1#1 0'
debug: Replaced make_move_bool_merge@4.ops[32]: 'v-load aggregate%bytes_offset%1#1' with 'l-load aggregate%bytes_offset%1#1'
debug: Inserted make_move_bool_merge@4.ops[56]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced make_move_bool_merge@4.ops[59]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted make_move_bool_merge@4.ops[66]: 'l-store-copy aggregate%bytes_offset%2#1 0'
debug: Replaced make_move_bool_merge@4.ops[69]: 'v-load aggregate%bytes_offset%2#1' with 'l-load aggregate%bytes_offset%2#1'
debug: Inserted make_move_bool_merge@4.ops[76]: 'l-store-copy aggregate%write_offset%0#1 0'
debug: Replaced make_move_bool_merge@4.ops[79]: 'v-load aggregate%write_offset%0#1' with 'l-load aggregate%write_offset%0#1'
debug: Inserted make_move_bool_merge@4.ops[86]: 'l-store-copy aggregate%write_offset%1#1 0'
debug: Replaced make_move_bool_merge@4.ops[89]: 'v-load aggregate%write_offset%1#1' with 'l-load aggregate%write_offset%1#1'
debug: Inserted make_move_bool_merge@4.ops[95]: 'l-store-copy updated_array%0#0 0'
debug: Replaced make_move_bool_merge@4.ops[98]: 'v-load updated_array%0#0' with 'l-load updated_array%0#0'
debug: Inserted make_move_bool_merge@4.ops[103]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced make_move_bool_merge@4.ops[106]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted make_move_bool_merge@4.ops[111]: 'l-store-copy tmp%3#0 0'
debug: Replaced make_move_bool_merge@4.ops[114]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted make_move_bool_merge@4.ops[105]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced make_move_bool_merge@4.ops[109]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted make_move_bool_merge@4.ops[25]: 'l-store-copy values%0#0 0'
debug: Replaced make_move_bool_merge@4.ops[32]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted make_move_bool_merge@4.ops[73]: 'l-store-copy aggregate%encoded_element%2#1 0'
debug: Replaced make_move_bool_merge@4.ops[80]: 'v-load aggregate%encoded_element%2#1' with 'l-load aggregate%encoded_element%2#1'
debug: Inserted make_move_bool_merge@4.ops[7]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced make_move_bool_merge@4.ops[16]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted make_move_bool_merge@4.ops[85]: 'l-store-copy aggregate%updated_array%0#1 0'
debug: Replaced make_move_bool_merge@4.ops[94]: 'v-load aggregate%updated_array%0#1' with 'l-load aggregate%updated_array%0#1'
debug: Inserted make_move_bool_merge@4.ops[60]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced make_move_bool_merge@4.ops[71]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted make_move_bool_merge@4.ops[65]: 'l-store-copy encoded_value%0#0 1'
debug: Replaced make_move_bool_merge@4.ops[85]: 'v-load encoded_value%0#0' with 'l-load encoded_value%0#0'
debug: Inserted make_move_bool_merge@4.ops[68]: 'l-store-copy row#0 2'
debug: Replaced make_move_bool_merge@4.ops[90]: 'v-load row#0' with 'l-load row#0'
debug: Inserted make_move_bool_merge@4.ops[74]: 'l-store-copy maybe_value%1#0 3'
debug: Replaced make_move_bool_merge@4.ops[96]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted make_move_bool_merge@4.ops[92]: 'l-store-copy row#0 2'
debug: Replaced make_move_bool_merge@4.ops[128]: 'v-load row#0' with 'l-load row#0'
debug: Inserted make_move_bool_merge@4.ops[81]: 'l-store-copy column#0 4'
debug: Replaced make_move_bool_merge@4.ops[128]: 'v-load column#0' with 'l-load column#0'
debug: Inserted make_move_bool_merge@4.ops[29]: 'l-store-copy column#0 1'
debug: Replaced make_move_bool_merge@4.ops[81]: 'v-load column#0' with 'l-load column#0'
debug: Inserted make_move_bool_merge@4.ops[12]: 'l-store-copy row#0 1'
debug: Replaced make_move_bool_merge@4.ops[69]: 'v-load row#0' with 'l-load row#0'
debug: Inserted make_move_else_body@6.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced make_move_else_body@6.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted make_move_else_body@6.ops[3]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced make_move_else_body@6.ops[6]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted make_move_else_body@6.ops[5]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced make_move_else_body@6.ops[9]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted did_win_block@0.ops[17]: 'l-store-copy aggregate%encoded_element%0#1 0'
debug: Replaced did_win_block@0.ops[19]: 'v-load aggregate%encoded_element%0#1' with 'l-load aggregate%encoded_element%0#1'
debug: Inserted did_win_block@0.ops[20]: 'l-store-copy array_item%0#0 0'
debug: Replaced did_win_block@0.ops[22]: 'v-load array_item%0#0' with 'l-load array_item%0#0'
debug: Inserted did_win_block@0.ops[32]: 'l-store-copy aggregate%encoded_element%1#1 0'
debug: Replaced did_win_block@0.ops[34]: 'v-load aggregate%encoded_element%1#1' with 'l-load aggregate%encoded_element%1#1'
debug: Inserted did_win_block@0.ops[35]: 'l-store-copy array_item%1#0 0'
debug: Replaced did_win_block@0.ops[37]: 'v-load array_item%1#0' with 'l-load array_item%1#0'
debug: Inserted did_win_block@0.ops[38]: 'l-store-copy values%1#0 0'
debug: Replaced did_win_block@0.ops[40]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted did_win_block@0.ops[50]: 'l-store-copy aggregate%encoded_element%2#1 0'
debug: Replaced did_win_block@0.ops[52]: 'v-load aggregate%encoded_element%2#1' with 'l-load aggregate%encoded_element%2#1'
debug: Inserted did_win_block@0.ops[53]: 'l-store-copy array_item%2#0 0'
debug: Replaced did_win_block@0.ops[55]: 'v-load array_item%2#0' with 'l-load array_item%2#0'
debug: Inserted did_win_block@0.ops[65]: 'l-store-copy aggregate%encoded_element%3#1 0'
debug: Replaced did_win_block@0.ops[67]: 'v-load aggregate%encoded_element%3#1' with 'l-load aggregate%encoded_element%3#1'
debug: Inserted did_win_block@0.ops[68]: 'l-store-copy array_item%3#0 0'
debug: Replaced did_win_block@0.ops[70]: 'v-load array_item%3#0' with 'l-load array_item%3#0'
debug: Inserted did_win_block@0.ops[71]: 'l-store-copy values%3#0 0'
debug: Replaced did_win_block@0.ops[73]: 'v-load values%3#0' with 'l-load values%3#0'
debug: Inserted did_win_block@0.ops[78]: 'l-store-copy tmp%0#0 0'
debug: Replaced did_win_block@0.ops[80]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted did_win_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced did_win_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted did_win_block@0.ops[13]: 'l-store-copy aggregate%bytes_offset%0#1 0'
debug: Replaced did_win_block@0.ops[16]: 'v-load aggregate%bytes_offset%0#1' with 'l-load aggregate%bytes_offset%0#1'
debug: Inserted did_win_block@0.ops[29]: 'l-store-copy aggregate%bytes_offset%1#1 0'
debug: Replaced did_win_block@0.ops[32]: 'v-load aggregate%bytes_offset%1#1' with 'l-load aggregate%bytes_offset%1#1'
debug: Inserted did_win_block@0.ops[48]: 'l-store-copy aggregate%bytes_offset%2#1 0'
debug: Replaced did_win_block@0.ops[51]: 'v-load aggregate%bytes_offset%2#1' with 'l-load aggregate%bytes_offset%2#1'
debug: Inserted did_win_block@0.ops[64]: 'l-store-copy aggregate%bytes_offset%3#1 0'
debug: Replaced did_win_block@0.ops[67]: 'v-load aggregate%bytes_offset%3#1' with 'l-load aggregate%bytes_offset%3#1'
debug: Inserted did_win_block@0.ops[79]: 'l-store-copy reinterpret_biguint%1#0 0'
debug: Replaced did_win_block@0.ops[82]: 'v-load reinterpret_biguint%1#0' with 'l-load reinterpret_biguint%1#0'
debug: Inserted did_win_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced did_win_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted did_win_block@0.ops[10]: 'l-store-copy g#0 0'
debug: Replaced did_win_block@0.ops[17]: 'v-load g#0' with 'l-load g#0'
debug: Inserted did_win_block@0.ops[27]: 'l-store-copy values%0#0 0'
debug: Replaced did_win_block@0.ops[34]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted did_win_block@0.ops[63]: 'l-store-copy values%2#0 0'
debug: Replaced did_win_block@0.ops[70]: 'v-load values%2#0' with 'l-load values%2#0'
debug: Inserted did_win_block@0.ops[18]: 'l-store-copy g#0 1'
debug: Replaced did_win_block@0.ops[54]: 'v-load g#0' with 'l-load g#0'
debug: Inserted did_win_block@0.ops[48]: 'l-store-copy reinterpret_biguint%0#0 1'
debug: Replaced did_win_block@0.ops[87]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted did_win_and_contd@1.ops[10]: 'l-store-copy aggregate%encoded_element%4#1 0'
debug: Replaced did_win_and_contd@1.ops[12]: 'v-load aggregate%encoded_element%4#1' with 'l-load aggregate%encoded_element%4#1'
debug: Inserted did_win_and_contd@1.ops[13]: 'l-store-copy array_item%4#0 0'
debug: Replaced did_win_and_contd@1.ops[15]: 'v-load array_item%4#0' with 'l-load array_item%4#0'
debug: Inserted did_win_and_contd@1.ops[25]: 'l-store-copy aggregate%encoded_element%5#1 0'
debug: Replaced did_win_and_contd@1.ops[27]: 'v-load aggregate%encoded_element%5#1' with 'l-load aggregate%encoded_element%5#1'
debug: Inserted did_win_and_contd@1.ops[28]: 'l-store-copy array_item%5#0 0'
debug: Replaced did_win_and_contd@1.ops[30]: 'v-load array_item%5#0' with 'l-load array_item%5#0'
debug: Inserted did_win_and_contd@1.ops[31]: 'l-store-copy values%5#0 0'
debug: Replaced did_win_and_contd@1.ops[33]: 'v-load values%5#0' with 'l-load values%5#0'
debug: Inserted did_win_and_contd@1.ops[38]: 'l-store-copy tmp%1#0 0'
debug: Replaced did_win_and_contd@1.ops[40]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted did_win_and_contd@1.ops[5]: 'l-store-copy aggregate%bytes_offset%4#1 0'
debug: Replaced did_win_and_contd@1.ops[8]: 'v-load aggregate%bytes_offset%4#1' with 'l-load aggregate%bytes_offset%4#1'
debug: Inserted did_win_and_contd@1.ops[21]: 'l-store-copy aggregate%bytes_offset%5#1 0'
debug: Replaced did_win_and_contd@1.ops[24]: 'v-load aggregate%bytes_offset%5#1' with 'l-load aggregate%bytes_offset%5#1'
debug: Inserted did_win_and_contd@1.ops[36]: 'l-store-copy reinterpret_biguint%3#0 0'
debug: Replaced did_win_and_contd@1.ops[39]: 'v-load reinterpret_biguint%3#0' with 'l-load reinterpret_biguint%3#0'
debug: Inserted did_win_and_contd@1.ops[17]: 'l-store-copy values%4#0 0'
debug: Replaced did_win_and_contd@1.ops[24]: 'v-load values%4#0' with 'l-load values%4#0'
debug: Inserted did_win_and_contd@1.ops[1]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced did_win_and_contd@1.ops[40]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted did_win_after_if_else@3.ops[8]: 'l-store-copy aggregate%encoded_element%6#1 0'
debug: Replaced did_win_after_if_else@3.ops[10]: 'v-load aggregate%encoded_element%6#1' with 'l-load aggregate%encoded_element%6#1'
debug: Inserted did_win_after_if_else@3.ops[11]: 'l-store-copy array_item%6#0 0'
debug: Replaced did_win_after_if_else@3.ops[13]: 'v-load array_item%6#0' with 'l-load array_item%6#0'
debug: Inserted did_win_after_if_else@3.ops[23]: 'l-store-copy aggregate%encoded_element%7#1 0'
debug: Replaced did_win_after_if_else@3.ops[25]: 'v-load aggregate%encoded_element%7#1' with 'l-load aggregate%encoded_element%7#1'
debug: Inserted did_win_after_if_else@3.ops[26]: 'l-store-copy array_item%7#0 0'
debug: Replaced did_win_after_if_else@3.ops[28]: 'v-load array_item%7#0' with 'l-load array_item%7#0'
debug: Inserted did_win_after_if_else@3.ops[29]: 'l-store-copy values%7#0 0'
debug: Replaced did_win_after_if_else@3.ops[31]: 'v-load values%7#0' with 'l-load values%7#0'
debug: Inserted did_win_after_if_else@3.ops[41]: 'l-store-copy aggregate%encoded_element%8#1 0'
debug: Replaced did_win_after_if_else@3.ops[43]: 'v-load aggregate%encoded_element%8#1' with 'l-load aggregate%encoded_element%8#1'
debug: Inserted did_win_after_if_else@3.ops[44]: 'l-store-copy array_item%8#0 0'
debug: Replaced did_win_after_if_else@3.ops[46]: 'v-load array_item%8#0' with 'l-load array_item%8#0'
debug: Inserted did_win_after_if_else@3.ops[56]: 'l-store-copy aggregate%encoded_element%9#1 0'
debug: Replaced did_win_after_if_else@3.ops[58]: 'v-load aggregate%encoded_element%9#1' with 'l-load aggregate%encoded_element%9#1'
debug: Inserted did_win_after_if_else@3.ops[59]: 'l-store-copy array_item%9#0 0'
debug: Replaced did_win_after_if_else@3.ops[61]: 'v-load array_item%9#0' with 'l-load array_item%9#0'
debug: Inserted did_win_after_if_else@3.ops[62]: 'l-store-copy values%9#0 0'
debug: Replaced did_win_after_if_else@3.ops[64]: 'v-load values%9#0' with 'l-load values%9#0'
debug: Inserted did_win_after_if_else@3.ops[69]: 'l-store-copy tmp%2#0 0'
debug: Replaced did_win_after_if_else@3.ops[71]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted did_win_after_if_else@3.ops[3]: 'l-store-copy aggregate%bytes_offset%6#1 0'
debug: Replaced did_win_after_if_else@3.ops[6]: 'v-load aggregate%bytes_offset%6#1' with 'l-load aggregate%bytes_offset%6#1'
debug: Inserted did_win_after_if_else@3.ops[19]: 'l-store-copy aggregate%bytes_offset%7#1 0'
debug: Replaced did_win_after_if_else@3.ops[22]: 'v-load aggregate%bytes_offset%7#1' with 'l-load aggregate%bytes_offset%7#1'
debug: Inserted did_win_after_if_else@3.ops[38]: 'l-store-copy aggregate%bytes_offset%8#1 0'
debug: Replaced did_win_after_if_else@3.ops[41]: 'v-load aggregate%bytes_offset%8#1' with 'l-load aggregate%bytes_offset%8#1'
debug: Inserted did_win_after_if_else@3.ops[54]: 'l-store-copy aggregate%bytes_offset%9#1 0'
debug: Replaced did_win_after_if_else@3.ops[57]: 'v-load aggregate%bytes_offset%9#1' with 'l-load aggregate%bytes_offset%9#1'
debug: Inserted did_win_after_if_else@3.ops[69]: 'l-store-copy reinterpret_biguint%5#0 0'
debug: Replaced did_win_after_if_else@3.ops[72]: 'v-load reinterpret_biguint%5#0' with 'l-load reinterpret_biguint%5#0'
debug: Inserted did_win_after_if_else@3.ops[15]: 'l-store-copy values%6#0 0'
debug: Replaced did_win_after_if_else@3.ops[22]: 'v-load values%6#0' with 'l-load values%6#0'
debug: Inserted did_win_after_if_else@3.ops[51]: 'l-store-copy values%8#0 0'
debug: Replaced did_win_after_if_else@3.ops[58]: 'v-load values%8#0' with 'l-load values%8#0'
debug: Inserted did_win_after_if_else@3.ops[6]: 'l-store-copy g#0 1'
debug: Replaced did_win_after_if_else@3.ops[42]: 'v-load g#0' with 'l-load g#0'
debug: Inserted did_win_after_if_else@3.ops[36]: 'l-store-copy reinterpret_biguint%4#0 1'
debug: Replaced did_win_after_if_else@3.ops[75]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted did_win_and_contd@4.ops[10]: 'l-store-copy aggregate%encoded_element%10#1 0'
debug: Replaced did_win_and_contd@4.ops[12]: 'v-load aggregate%encoded_element%10#1' with 'l-load aggregate%encoded_element%10#1'
debug: Inserted did_win_and_contd@4.ops[13]: 'l-store-copy array_item%10#0 0'
debug: Replaced did_win_and_contd@4.ops[15]: 'v-load array_item%10#0' with 'l-load array_item%10#0'
debug: Inserted did_win_and_contd@4.ops[25]: 'l-store-copy aggregate%encoded_element%11#1 0'
debug: Replaced did_win_and_contd@4.ops[27]: 'v-load aggregate%encoded_element%11#1' with 'l-load aggregate%encoded_element%11#1'
debug: Inserted did_win_and_contd@4.ops[28]: 'l-store-copy array_item%11#0 0'
debug: Replaced did_win_and_contd@4.ops[30]: 'v-load array_item%11#0' with 'l-load array_item%11#0'
debug: Inserted did_win_and_contd@4.ops[31]: 'l-store-copy values%11#0 0'
debug: Replaced did_win_and_contd@4.ops[33]: 'v-load values%11#0' with 'l-load values%11#0'
debug: Inserted did_win_and_contd@4.ops[38]: 'l-store-copy tmp%3#0 0'
debug: Replaced did_win_and_contd@4.ops[40]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted did_win_and_contd@4.ops[5]: 'l-store-copy aggregate%bytes_offset%10#1 0'
debug: Replaced did_win_and_contd@4.ops[8]: 'v-load aggregate%bytes_offset%10#1' with 'l-load aggregate%bytes_offset%10#1'
debug: Inserted did_win_and_contd@4.ops[21]: 'l-store-copy aggregate%bytes_offset%11#1 0'
debug: Replaced did_win_and_contd@4.ops[24]: 'v-load aggregate%bytes_offset%11#1' with 'l-load aggregate%bytes_offset%11#1'
debug: Inserted did_win_and_contd@4.ops[36]: 'l-store-copy reinterpret_biguint%7#0 0'
debug: Replaced did_win_and_contd@4.ops[39]: 'v-load reinterpret_biguint%7#0' with 'l-load reinterpret_biguint%7#0'
debug: Inserted did_win_and_contd@4.ops[17]: 'l-store-copy values%10#0 0'
debug: Replaced did_win_and_contd@4.ops[24]: 'v-load values%10#0' with 'l-load values%10#0'
debug: Inserted did_win_and_contd@4.ops[1]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced did_win_and_contd@4.ops[40]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted did_win_after_if_else@6.ops[10]: 'l-store-copy aggregate%encoded_element%12#1 0'
debug: Replaced did_win_after_if_else@6.ops[12]: 'v-load aggregate%encoded_element%12#1' with 'l-load aggregate%encoded_element%12#1'
debug: Inserted did_win_after_if_else@6.ops[13]: 'l-store-copy array_item%12#0 0'
debug: Replaced did_win_after_if_else@6.ops[15]: 'v-load array_item%12#0' with 'l-load array_item%12#0'
debug: Inserted did_win_after_if_else@6.ops[25]: 'l-store-copy aggregate%encoded_element%13#1 0'
debug: Replaced did_win_after_if_else@6.ops[27]: 'v-load aggregate%encoded_element%13#1' with 'l-load aggregate%encoded_element%13#1'
debug: Inserted did_win_after_if_else@6.ops[28]: 'l-store-copy array_item%13#0 0'
debug: Replaced did_win_after_if_else@6.ops[30]: 'v-load array_item%13#0' with 'l-load array_item%13#0'
debug: Inserted did_win_after_if_else@6.ops[31]: 'l-store-copy values%13#0 0'
debug: Replaced did_win_after_if_else@6.ops[33]: 'v-load values%13#0' with 'l-load values%13#0'
debug: Inserted did_win_after_if_else@6.ops[38]: 'l-store-copy tmp%4#0 0'
debug: Replaced did_win_after_if_else@6.ops[40]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted did_win_after_if_else@6.ops[5]: 'l-store-copy aggregate%bytes_offset%12#1 0'
debug: Replaced did_win_after_if_else@6.ops[8]: 'v-load aggregate%bytes_offset%12#1' with 'l-load aggregate%bytes_offset%12#1'
debug: Inserted did_win_after_if_else@6.ops[21]: 'l-store-copy aggregate%bytes_offset%13#1 0'
debug: Replaced did_win_after_if_else@6.ops[24]: 'v-load aggregate%bytes_offset%13#1' with 'l-load aggregate%bytes_offset%13#1'
debug: Inserted did_win_after_if_else@6.ops[36]: 'l-store-copy reinterpret_biguint%9#0 0'
debug: Replaced did_win_after_if_else@6.ops[39]: 'v-load reinterpret_biguint%9#0' with 'l-load reinterpret_biguint%9#0'
debug: Inserted did_win_after_if_else@6.ops[17]: 'l-store-copy values%12#0 0'
debug: Replaced did_win_after_if_else@6.ops[24]: 'v-load values%12#0' with 'l-load values%12#0'
debug: Inserted did_win_after_if_else@6.ops[1]: 'l-store-copy reinterpret_biguint%8#0 0'
debug: Replaced did_win_after_if_else@6.ops[40]: 'v-load reinterpret_biguint%8#0' with 'l-load reinterpret_biguint%8#0'
debug: Inserted did_win_if_body@7.ops[8]: 'l-store-copy aggregate%encoded_element%14#1 0'
debug: Replaced did_win_if_body@7.ops[10]: 'v-load aggregate%encoded_element%14#1' with 'l-load aggregate%encoded_element%14#1'
debug: Inserted did_win_if_body@7.ops[11]: 'l-store-copy array_item%14#0 0'
debug: Replaced did_win_if_body@7.ops[13]: 'v-load array_item%14#0' with 'l-load array_item%14#0'
debug: Inserted did_win_if_body@7.ops[23]: 'l-store-copy aggregate%encoded_element%15#1 0'
debug: Replaced did_win_if_body@7.ops[25]: 'v-load aggregate%encoded_element%15#1' with 'l-load aggregate%encoded_element%15#1'
debug: Inserted did_win_if_body@7.ops[26]: 'l-store-copy array_item%15#0 0'
debug: Replaced did_win_if_body@7.ops[28]: 'v-load array_item%15#0' with 'l-load array_item%15#0'
debug: Inserted did_win_if_body@7.ops[29]: 'l-store-copy values%15#0 0'
debug: Replaced did_win_if_body@7.ops[31]: 'v-load values%15#0' with 'l-load values%15#0'
debug: Inserted did_win_if_body@7.ops[38]: 'l-store-copy tmp%5#0 0'
debug: Replaced did_win_if_body@7.ops[40]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted did_win_if_body@7.ops[3]: 'l-store-copy aggregate%bytes_offset%14#1 0'
debug: Replaced did_win_if_body@7.ops[6]: 'v-load aggregate%bytes_offset%14#1' with 'l-load aggregate%bytes_offset%14#1'
debug: Inserted did_win_if_body@7.ops[19]: 'l-store-copy aggregate%bytes_offset%15#1 0'
debug: Replaced did_win_if_body@7.ops[22]: 'v-load aggregate%bytes_offset%15#1' with 'l-load aggregate%bytes_offset%15#1'
debug: Inserted did_win_if_body@7.ops[36]: 'l-store-copy reinterpret_biguint%11#0 0'
debug: Replaced did_win_if_body@7.ops[39]: 'v-load reinterpret_biguint%11#0' with 'l-load reinterpret_biguint%11#0'
debug: Inserted did_win_if_body@7.ops[34]: 'l-store-copy reinterpret_biguint%10#0 0'
debug: Replaced did_win_if_body@7.ops[39]: 'v-load reinterpret_biguint%10#0' with 'l-load reinterpret_biguint%10#0'
debug: Inserted did_win_if_body@7.ops[15]: 'l-store-copy values%14#0 0'
debug: Replaced did_win_if_body@7.ops[22]: 'v-load values%14#0' with 'l-load values%14#0'
debug: Inserted did_win_and_contd@8.ops[10]: 'l-store-copy aggregate%encoded_element%16#1 0'
debug: Replaced did_win_and_contd@8.ops[12]: 'v-load aggregate%encoded_element%16#1' with 'l-load aggregate%encoded_element%16#1'
debug: Inserted did_win_and_contd@8.ops[13]: 'l-store-copy array_item%16#0 0'
debug: Replaced did_win_and_contd@8.ops[15]: 'v-load array_item%16#0' with 'l-load array_item%16#0'
debug: Inserted did_win_and_contd@8.ops[25]: 'l-store-copy aggregate%encoded_element%17#1 0'
debug: Replaced did_win_and_contd@8.ops[27]: 'v-load aggregate%encoded_element%17#1' with 'l-load aggregate%encoded_element%17#1'
debug: Inserted did_win_and_contd@8.ops[28]: 'l-store-copy array_item%17#0 0'
debug: Replaced did_win_and_contd@8.ops[30]: 'v-load array_item%17#0' with 'l-load array_item%17#0'
debug: Inserted did_win_and_contd@8.ops[31]: 'l-store-copy values%17#0 0'
debug: Replaced did_win_and_contd@8.ops[33]: 'v-load values%17#0' with 'l-load values%17#0'
debug: Inserted did_win_and_contd@8.ops[38]: 'l-store-copy tmp%6#0 0'
debug: Replaced did_win_and_contd@8.ops[40]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted did_win_and_contd@8.ops[5]: 'l-store-copy aggregate%bytes_offset%16#1 0'
debug: Replaced did_win_and_contd@8.ops[8]: 'v-load aggregate%bytes_offset%16#1' with 'l-load aggregate%bytes_offset%16#1'
debug: Inserted did_win_and_contd@8.ops[21]: 'l-store-copy aggregate%bytes_offset%17#1 0'
debug: Replaced did_win_and_contd@8.ops[24]: 'v-load aggregate%bytes_offset%17#1' with 'l-load aggregate%bytes_offset%17#1'
debug: Inserted did_win_and_contd@8.ops[36]: 'l-store-copy reinterpret_biguint%13#0 0'
debug: Replaced did_win_and_contd@8.ops[39]: 'v-load reinterpret_biguint%13#0' with 'l-load reinterpret_biguint%13#0'
debug: Inserted did_win_and_contd@8.ops[17]: 'l-store-copy values%16#0 0'
debug: Replaced did_win_and_contd@8.ops[24]: 'v-load values%16#0' with 'l-load values%16#0'
debug: Inserted did_win_and_contd@8.ops[1]: 'l-store-copy reinterpret_biguint%12#0 0'
debug: Replaced did_win_and_contd@8.ops[40]: 'v-load reinterpret_biguint%12#0' with 'l-load reinterpret_biguint%12#0'
debug: Inserted did_win_after_if_else@10.ops[8]: 'l-store-copy aggregate%encoded_element%18#1 0'
debug: Replaced did_win_after_if_else@10.ops[10]: 'v-load aggregate%encoded_element%18#1' with 'l-load aggregate%encoded_element%18#1'
debug: Inserted did_win_after_if_else@10.ops[11]: 'l-store-copy array_item%18#0 0'
debug: Replaced did_win_after_if_else@10.ops[13]: 'v-load array_item%18#0' with 'l-load array_item%18#0'
debug: Inserted did_win_after_if_else@10.ops[23]: 'l-store-copy aggregate%encoded_element%19#1 0'
debug: Replaced did_win_after_if_else@10.ops[25]: 'v-load aggregate%encoded_element%19#1' with 'l-load aggregate%encoded_element%19#1'
debug: Inserted did_win_after_if_else@10.ops[26]: 'l-store-copy array_item%19#0 0'
debug: Replaced did_win_after_if_else@10.ops[28]: 'v-load array_item%19#0' with 'l-load array_item%19#0'
debug: Inserted did_win_after_if_else@10.ops[29]: 'l-store-copy values%19#0 0'
debug: Replaced did_win_after_if_else@10.ops[31]: 'v-load values%19#0' with 'l-load values%19#0'
debug: Inserted did_win_after_if_else@10.ops[38]: 'l-store-copy tmp%7#0 0'
debug: Replaced did_win_after_if_else@10.ops[40]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted did_win_after_if_else@10.ops[3]: 'l-store-copy aggregate%bytes_offset%18#1 0'
debug: Replaced did_win_after_if_else@10.ops[6]: 'v-load aggregate%bytes_offset%18#1' with 'l-load aggregate%bytes_offset%18#1'
debug: Inserted did_win_after_if_else@10.ops[19]: 'l-store-copy aggregate%bytes_offset%19#1 0'
debug: Replaced did_win_after_if_else@10.ops[22]: 'v-load aggregate%bytes_offset%19#1' with 'l-load aggregate%bytes_offset%19#1'
debug: Inserted did_win_after_if_else@10.ops[36]: 'l-store-copy reinterpret_biguint%15#0 0'
debug: Replaced did_win_after_if_else@10.ops[39]: 'v-load reinterpret_biguint%15#0' with 'l-load reinterpret_biguint%15#0'
debug: Inserted did_win_after_if_else@10.ops[34]: 'l-store-copy reinterpret_biguint%14#0 0'
debug: Replaced did_win_after_if_else@10.ops[39]: 'v-load reinterpret_biguint%14#0' with 'l-load reinterpret_biguint%14#0'
debug: Inserted did_win_after_if_else@10.ops[15]: 'l-store-copy values%18#0 0'
debug: Replaced did_win_after_if_else@10.ops[22]: 'v-load values%18#0' with 'l-load values%18#0'
debug: Inserted did_win_and_contd@11.ops[10]: 'l-store-copy aggregate%encoded_element%20#1 0'
debug: Replaced did_win_and_contd@11.ops[12]: 'v-load aggregate%encoded_element%20#1' with 'l-load aggregate%encoded_element%20#1'
debug: Inserted did_win_and_contd@11.ops[13]: 'l-store-copy array_item%20#0 0'
debug: Replaced did_win_and_contd@11.ops[15]: 'v-load array_item%20#0' with 'l-load array_item%20#0'
debug: Inserted did_win_and_contd@11.ops[25]: 'l-store-copy aggregate%encoded_element%21#1 0'
debug: Replaced did_win_and_contd@11.ops[27]: 'v-load aggregate%encoded_element%21#1' with 'l-load aggregate%encoded_element%21#1'
debug: Inserted did_win_and_contd@11.ops[28]: 'l-store-copy array_item%21#0 0'
debug: Replaced did_win_and_contd@11.ops[30]: 'v-load array_item%21#0' with 'l-load array_item%21#0'
debug: Inserted did_win_and_contd@11.ops[31]: 'l-store-copy values%21#0 0'
debug: Replaced did_win_and_contd@11.ops[33]: 'v-load values%21#0' with 'l-load values%21#0'
debug: Inserted did_win_and_contd@11.ops[38]: 'l-store-copy tmp%8#0 0'
debug: Replaced did_win_and_contd@11.ops[40]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted did_win_and_contd@11.ops[5]: 'l-store-copy aggregate%bytes_offset%20#1 0'
debug: Replaced did_win_and_contd@11.ops[8]: 'v-load aggregate%bytes_offset%20#1' with 'l-load aggregate%bytes_offset%20#1'
debug: Inserted did_win_and_contd@11.ops[21]: 'l-store-copy aggregate%bytes_offset%21#1 0'
debug: Replaced did_win_and_contd@11.ops[24]: 'v-load aggregate%bytes_offset%21#1' with 'l-load aggregate%bytes_offset%21#1'
debug: Inserted did_win_and_contd@11.ops[36]: 'l-store-copy reinterpret_biguint%17#0 0'
debug: Replaced did_win_and_contd@11.ops[39]: 'v-load reinterpret_biguint%17#0' with 'l-load reinterpret_biguint%17#0'
debug: Inserted did_win_and_contd@11.ops[17]: 'l-store-copy values%20#0 0'
debug: Replaced did_win_and_contd@11.ops[24]: 'v-load values%20#0' with 'l-load values%20#0'
debug: Inserted did_win_and_contd@11.ops[1]: 'l-store-copy reinterpret_biguint%16#0 0'
debug: Replaced did_win_and_contd@11.ops[40]: 'v-load reinterpret_biguint%16#0' with 'l-load reinterpret_biguint%16#0'
debug: Inserted approval_program_block@1.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced approval_program_block@1.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted approval_program_block@1.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced approval_program_block@1.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted approval_program_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced approval_program_abi_routing@2.ops[7]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted approval_program_new_game_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced approval_program_new_game_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted approval_program_new_game_route@3.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced approval_program_new_game_route@3.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted approval_program_new_game_route@3.ops[11]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced approval_program_new_game_route@3.ops[13]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted approval_program_new_game_route@3.ops[17]: 'l-store-copy aggregate%extract%0#1 0'
debug: Replaced approval_program_new_game_route@3.ops[19]: 'v-load aggregate%extract%0#1' with 'l-load aggregate%extract%0#1'
debug: Inserted approval_program_new_game_route@3.ops[26]: 'l-store-copy aggregate%extract%1#1 0'
debug: Replaced approval_program_new_game_route@3.ops[28]: 'v-load aggregate%extract%1#1' with 'l-load aggregate%extract%1#1'
debug: Inserted approval_program_new_game_route@3.ops[39]: 'l-store-copy examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_new_game_route@3.ops[41]: 'v-load examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0' with 'l-load examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_new_game_route@3.ops[34]: 'l-store-copy tmp%6#0 0'
debug: Replaced approval_program_new_game_route@3.ops[37]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted approval_program_new_game_route@3.ops[30]: 'l-store-copy aggregate%item1%0#1 0'
debug: Replaced approval_program_new_game_route@3.ops[34]: 'v-load aggregate%item1%0#1' with 'l-load aggregate%item1%0#1'
debug: Inserted approval_program_new_game_route@3.ops[33]: 'l-store-copy tmp%5#0 1'
debug: Replaced approval_program_new_game_route@3.ops[38]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted approval_program_new_game_route@3.ops[14]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%0#0 0'
debug: Replaced approval_program_new_game_route@3.ops[23]: 'v-load reinterpret_Encoded(uint64,uint64)%0#0' with 'l-load reinterpret_Encoded(uint64,uint64)%0#0'
debug: Inserted approval_program_new_game_route@3.ops[22]: 'l-store-copy aggregate%item0%0#1 1'
debug: Replaced approval_program_new_game_route@3.ops[34]: 'v-load aggregate%item0%0#1' with 'l-load aggregate%item0%0#1'
debug: Inserted approval_program_join_game_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced approval_program_join_game_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted approval_program_join_game_route@4.ops[6]: 'l-store-copy tmp%8#0 0'
debug: Replaced approval_program_join_game_route@4.ops[8]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted approval_program_join_game_route@4.ops[11]: 'l-store-copy tmp%9#0 0'
debug: Replaced approval_program_join_game_route@4.ops[13]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted approval_program_join_game_route@4.ops[16]: 'l-store-copy tmp%10#0 0'
debug: Replaced approval_program_join_game_route@4.ops[18]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted approval_program_join_game_route@4.ops[21]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%1#0 0'
debug: Replaced approval_program_join_game_route@4.ops[23]: 'v-load reinterpret_Encoded(uint64,uint64)%1#0' with 'l-load reinterpret_Encoded(uint64,uint64)%1#0'
debug: Inserted approval_program_join_game_route@4.ops[27]: 'l-store-copy aggregate%extract%2#1 0'
debug: Replaced approval_program_join_game_route@4.ops[29]: 'v-load aggregate%extract%2#1' with 'l-load aggregate%extract%2#1'
debug: Inserted approval_program_join_game_route@4.ops[36]: 'l-store-copy aggregate%extract%3#1 0'
debug: Replaced approval_program_join_game_route@4.ops[38]: 'v-load aggregate%extract%3#1' with 'l-load aggregate%extract%3#1'
debug: Inserted approval_program_join_game_route@4.ops[49]: 'l-store-copy examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_join_game_route@4.ops[51]: 'v-load examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0' with 'l-load examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_join_game_route@4.ops[44]: 'l-store-copy tmp%12#0 0'
debug: Replaced approval_program_join_game_route@4.ops[47]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted approval_program_join_game_route@4.ops[40]: 'l-store-copy aggregate%item1%1#1 0'
debug: Replaced approval_program_join_game_route@4.ops[44]: 'v-load aggregate%item1%1#1' with 'l-load aggregate%item1%1#1'
debug: Inserted approval_program_join_game_route@4.ops[43]: 'l-store-copy tmp%11#0 1'
debug: Replaced approval_program_join_game_route@4.ops[48]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted approval_program_join_game_route@4.ops[24]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%1#0 0'
debug: Replaced approval_program_join_game_route@4.ops[33]: 'v-load reinterpret_Encoded(uint64,uint64)%1#0' with 'l-load reinterpret_Encoded(uint64,uint64)%1#0'
debug: Inserted approval_program_join_game_route@4.ops[32]: 'l-store-copy aggregate%item0%1#1 1'
debug: Replaced approval_program_join_game_route@4.ops[44]: 'v-load aggregate%item0%1#1' with 'l-load aggregate%item0%1#1'
debug: Inserted approval_program_whose_turn_route@5.ops[1]: 'l-store-copy tmp%13#0 0'
debug: Replaced approval_program_whose_turn_route@5.ops[3]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted approval_program_whose_turn_route@5.ops[6]: 'l-store-copy tmp%14#0 0'
debug: Replaced approval_program_whose_turn_route@5.ops[8]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted approval_program_whose_turn_route@5.ops[11]: 'l-store-copy tmp%15#0 0'
debug: Replaced approval_program_whose_turn_route@5.ops[13]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted approval_program_whose_turn_route@5.ops[16]: 'l-store-copy tmp%16#0 0'
debug: Replaced approval_program_whose_turn_route@5.ops[18]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted approval_program_whose_turn_route@5.ops[25]: 'l-store-copy tmp%18#0 0'
debug: Replaced approval_program_whose_turn_route@5.ops[27]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted approval_program_whose_turn_route@5.ops[30]: 'l-store-copy examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_whose_turn_route@5.ops[32]: 'v-load examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0' with 'l-load examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_whose_turn_route@5.ops[21]: 'l-store-copy tmp%17#0 0'
debug: Replaced approval_program_whose_turn_route@5.ops[24]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted approval_program_play_route@6.ops[1]: 'l-store-copy tmp%19#0 0'
debug: Replaced approval_program_play_route@6.ops[3]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted approval_program_play_route@6.ops[6]: 'l-store-copy tmp%20#0 0'
debug: Replaced approval_program_play_route@6.ops[8]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted approval_program_play_route@6.ops[11]: 'l-store-copy tmp%21#0 0'
debug: Replaced approval_program_play_route@6.ops[13]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted approval_program_play_route@6.ops[16]: 'l-store-copy tmp%22#0 0'
debug: Replaced approval_program_play_route@6.ops[18]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted approval_program_play_route@6.ops[21]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%2#0 0'
debug: Replaced approval_program_play_route@6.ops[23]: 'v-load reinterpret_Encoded(uint64,uint64)%2#0' with 'l-load reinterpret_Encoded(uint64,uint64)%2#0'
debug: Inserted approval_program_play_route@6.ops[27]: 'l-store-copy aggregate%extract%4#1 0'
debug: Replaced approval_program_play_route@6.ops[29]: 'v-load aggregate%extract%4#1' with 'l-load aggregate%extract%4#1'
debug: Inserted approval_program_play_route@6.ops[36]: 'l-store-copy aggregate%extract%5#1 0'
debug: Replaced approval_program_play_route@6.ops[38]: 'v-load aggregate%extract%5#1' with 'l-load aggregate%extract%5#1'
debug: Inserted approval_program_play_route@6.ops[49]: 'l-store-copy examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_play_route@6.ops[51]: 'v-load examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0' with 'l-load examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_play_route@6.ops[44]: 'l-store-copy tmp%24#0 0'
debug: Replaced approval_program_play_route@6.ops[47]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted approval_program_play_route@6.ops[40]: 'l-store-copy aggregate%item1%2#1 0'
debug: Replaced approval_program_play_route@6.ops[44]: 'v-load aggregate%item1%2#1' with 'l-load aggregate%item1%2#1'
debug: Inserted approval_program_play_route@6.ops[43]: 'l-store-copy tmp%23#0 1'
debug: Replaced approval_program_play_route@6.ops[48]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted approval_program_play_route@6.ops[24]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%2#0 0'
debug: Replaced approval_program_play_route@6.ops[33]: 'v-load reinterpret_Encoded(uint64,uint64)%2#0' with 'l-load reinterpret_Encoded(uint64,uint64)%2#0'
debug: Inserted approval_program_play_route@6.ops[32]: 'l-store-copy aggregate%item0%2#1 1'
debug: Replaced approval_program_play_route@6.ops[44]: 'v-load aggregate%item0%2#1' with 'l-load aggregate%item0%2#1'
debug: Inserted approval_program_after_if_else@10.ops[1]: 'l-store-copy examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_if_else@10.ops[3]: 'v-load examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0' with 'l-load examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__%0#0'
debug: Found 1 edge set/s for examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init
debug: Found 4 edge set/s for examples.tictactoe.tictactoe.TicTacToeContract.new_game
debug: Allocated 1 variable/s to x-stack: and_result%0#0
debug: shared x-stack for new_game_bool_true@6 -> new_game_bool_merge@8: and_result%0#0
debug: shared x-stack for new_game_bool_false@7 -> new_game_bool_merge@8: and_result%0#0
debug: Found 2 edge set/s for examples.tictactoe.tictactoe.TicTacToeContract.play
debug: Allocated 1 variable/s to x-stack: player#0
debug: shared x-stack for play_if_body@1 -> play_after_if_else@3: player#0
debug: shared x-stack for play_else_body@2 -> play_after_if_else@3: player#0
debug: Found 5 edge set/s for examples.tictactoe.tictactoe.TicTacToeContract.make_move
debug: Allocated 1 variable/s to x-stack: and_result%0#0
debug: shared x-stack for make_move_bool_true@2 -> make_move_bool_merge@4: and_result%0#0
debug: shared x-stack for make_move_bool_false@3 -> make_move_bool_merge@4: and_result%0#0
debug: Found 5 edge set/s for examples.tictactoe.tictactoe.TicTacToeContract.did_win
debug: Found 6 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for approval_program_new_game_route@3 -> approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11: tmp%0#0
debug: shared x-stack for approval_program_join_game_route@4 -> approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11: tmp%0#0
debug: shared x-stack for approval_program_whose_turn_route@5 -> approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11: tmp%0#0
debug: shared x-stack for approval_program_play_route@6 -> approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11: tmp%0#0
debug: shared x-stack for approval_program_after_if_else@10 -> approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11: tmp%0#0
debug: examples.tictactoe.tictactoe.TicTacToeContract.new_game f-stack entry: ['column#0', 'row#0']
debug: examples.tictactoe.tictactoe.TicTacToeContract.new_game f-stack on first store: []
debug: examples.tictactoe.tictactoe.TicTacToeContract.make_move f-stack entry: []
debug: examples.tictactoe.tictactoe.TicTacToeContract.make_move f-stack on first store: ['column#0', 'row#0']
debug: examples.tictactoe.tictactoe.TicTacToeContract.did_win f-stack entry: ['values%9#0']
debug: examples.tictactoe.tictactoe.TicTacToeContract.did_win f-stack on first store: ['g#0', 'values%3#0']
debug: optimizing TEAL subroutine ops examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init() -> uint64:
tictactoe/tictactoe.py:16 debug: optimizing TEAL subroutine ops examples.tictactoe.tictactoe.TicTacToeContract.__init__() -> void:
tictactoe/tictactoe.py:20 debug: optimizing TEAL subroutine ops examples.tictactoe.tictactoe.TicTacToeContract.new_game(move.0: uint64, move.1: uint64) -> void:
tictactoe/tictactoe.py:37 debug: optimizing TEAL subroutine ops examples.tictactoe.tictactoe.TicTacToeContract.join_game(move.0: uint64, move.1: uint64) -> void:
tictactoe/tictactoe.py:43 debug: optimizing TEAL subroutine ops examples.tictactoe.tictactoe.TicTacToeContract.whose_turn() -> bytes:
tictactoe/tictactoe.py:47 debug: optimizing TEAL subroutine ops examples.tictactoe.tictactoe.TicTacToeContract.play(move.0: uint64, move.1: uint64) -> void:
tictactoe/tictactoe.py:60 debug: optimizing TEAL subroutine ops examples.tictactoe.tictactoe.TicTacToeContract.make_move(player: bytes, move.0: uint64, move.1: uint64) -> void:
tictactoe/tictactoe.py:72 debug: optimizing TEAL subroutine ops examples.tictactoe.tictactoe.TicTacToeContract.did_win(player: bytes, column: uint64, row: uint64) -> uint64:
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: optimizing TEAL subroutine blocks examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
debug: removing explicit jump to fall-through block main_call___init__@1
debug: removing explicit jump to fall-through block main_after_if_else@2
tictactoe/tictactoe.py:16 debug: optimizing TEAL subroutine blocks examples.tictactoe.tictactoe.TicTacToeContract.__init__() -> void:
debug: removing explicit jump to fall-through block __init___block@0
tictactoe/tictactoe.py:20 debug: optimizing TEAL subroutine blocks examples.tictactoe.tictactoe.TicTacToeContract.new_game(move.0: uint64, move.1: uint64) -> void:
debug: removing explicit jump to fall-through block new_game_block@0
debug: removing explicit jump to fall-through block new_game_if_body@1
debug: removing explicit jump to fall-through block new_game_if_body@2
debug: removing explicit jump to fall-through block new_game_after_if_else@3
debug: removing explicit jump to fall-through block new_game_after_if_else@4
debug: removing explicit jump to fall-through block new_game_and_contd@5
debug: removing explicit jump to fall-through block new_game_bool_true@6
debug: removing explicit jump to fall-through block new_game_bool_merge@8
tictactoe/tictactoe.py:37 debug: optimizing TEAL subroutine blocks examples.tictactoe.tictactoe.TicTacToeContract.join_game(move.0: uint64, move.1: uint64) -> void:
debug: removing explicit jump to fall-through block join_game_block@0
tictactoe/tictactoe.py:43 debug: optimizing TEAL subroutine blocks examples.tictactoe.tictactoe.TicTacToeContract.whose_turn() -> bytes:
debug: removing explicit jump to fall-through block whose_turn_block@0
tictactoe/tictactoe.py:47 debug: optimizing TEAL subroutine blocks examples.tictactoe.tictactoe.TicTacToeContract.play(move.0: uint64, move.1: uint64) -> void:
debug: removing explicit jump to fall-through block play_block@0
debug: removing explicit jump to fall-through block play_if_body@1
debug: removing explicit jump to fall-through block play_after_if_else@3
tictactoe/tictactoe.py:60 debug: optimizing TEAL subroutine blocks examples.tictactoe.tictactoe.TicTacToeContract.make_move(player: bytes, move.0: uint64, move.1: uint64) -> void:
debug: removing explicit jump to fall-through block make_move_block@0
debug: removing explicit jump to fall-through block make_move_and_contd@1
debug: removing explicit jump to fall-through block make_move_bool_true@2
debug: removing explicit jump to fall-through block make_move_bool_merge@4
debug: removing explicit jump to fall-through block make_move_if_body@5
debug: removing explicit jump to fall-through block make_move_after_if_else@9
debug: removing explicit jump to fall-through block make_move_if_body@7
debug: removing explicit jump to fall-through block make_move_after_if_else@8
tictactoe/tictactoe.py:72 debug: optimizing TEAL subroutine blocks examples.tictactoe.tictactoe.TicTacToeContract.did_win(player: bytes, column: uint64, row: uint64) -> uint64:
debug: removing explicit jump to fall-through block did_win_block@0
debug: removing explicit jump to fall-through block did_win_and_contd@1
debug: removing explicit jump to fall-through block did_win_if_body@2
debug: removing explicit jump to fall-through block did_win_and_contd@4
debug: removing explicit jump to fall-through block did_win_if_body@5
debug: removing explicit jump to fall-through block did_win_if_body@7
debug: removing explicit jump to fall-through block did_win_and_contd@8
debug: removing explicit jump to fall-through block did_win_if_body@9
debug: removing explicit jump to fall-through block did_win_and_contd@11
debug: removing explicit jump to fall-through block did_win_if_body@12
debug: removing explicit jump to fall-through block did_win_after_if_else@14
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: removing explicit jump to fall-through block approval_program_block@0
debug: removing explicit jump to fall-through block approval_program_block@1
debug: removing explicit jump to fall-through block approval_program_abi_routing@2
debug: removing explicit jump to fall-through block approval_program_switch_case_default@7
debug: removing explicit jump to fall-through block approval_program_switch_case_next@8
debug: removing explicit jump to fall-through block approval_program_after_if_else@10
debug: removing explicit jump to fall-through block approval_program_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.__puya_arc4_router__@11
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: removing explicit jump to fall-through block main_block@0
info: Writing tictactoe/out_unoptimized/TicTacToeContract.approval.teal
info: Writing tictactoe/out_unoptimized/TicTacToeContract.clear.teal
info: Writing tictactoe/out_unoptimized/TicTacToeContract.approval.bin
info: Writing tictactoe/out_unoptimized/TicTacToeContract.clear.bin
info: Writing tictactoe/out_unoptimized/TicTacToeContract.approval.stats.txt
info: Writing tictactoe/out_unoptimized/TicTacToeContract.clear.stats.txt
info: Writing tictactoe/out_unoptimized/TicTacToeContract.approval.puya.map
info: Writing tictactoe/out_unoptimized/TicTacToeContract.clear.puya.map