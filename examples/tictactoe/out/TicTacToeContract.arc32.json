{
    "hints": {
        "new_game((uint64,uint64))void": {
            "call_config": {
                "no_op": "ALL"
            }
        },
        "join_game((uint64,uint64))void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "whose_turn()uint8": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "play((uint64,uint64))void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpleGFtcGxlcy50aWN0YWN0b2UudGljdGFjdG9lLlRpY1RhY1RvZUNvbnRyYWN0LmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICAvLyB0aWN0YWN0b2UvdGljdGFjdG9lLnB5OjE1CiAgICAvLyBjbGFzcyBUaWNUYWNUb2VDb250cmFjdChhcmM0LkFSQzRDb250cmFjdCk6CiAgICBpbnQgMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 4,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "challenger": {
                    "type": "bytes",
                    "key": "challenger"
                },
                "game": {
                    "type": "bytes",
                    "key": "game"
                },
                "host": {
                    "type": "bytes",
                    "key": "host"
                },
                "turns": {
                    "type": "uint64",
                    "key": "turns"
                },
                "winner": {
                    "type": "bytes",
                    "key": "winner"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "TicTacToeContract",
        "methods": [
            {
                "name": "new_game",
                "args": [
                    {
                        "type": "(uint64,uint64)",
                        "name": "move"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "join_game",
                "args": [
                    {
                        "type": "(uint64,uint64)",
                        "name": "move"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "whose_turn",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint8"
                }
            },
            {
                "name": "play",
                "args": [
                    {
                        "type": "(uint64,uint64)",
                        "name": "move"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}