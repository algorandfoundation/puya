{
    "name": "TicTacToeContract",
    "structs": {},
    "methods": [
        {
            "name": "new_game",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "name": "move"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "join_game",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "name": "move"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "whose_turn",
            "args": [],
            "returns": {
                "type": "uint8"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "play",
            "args": [
                {
                    "type": "(uint64,uint64)",
                    "name": "move"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 4
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "challenger": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "Y2hhbGxlbmdlcg=="
                },
                "winner": {
                    "keyType": "AVMString",
                    "valueType": "uint8",
                    "key": "d2lubmVy"
                },
                "host": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "aG9zdA=="
                },
                "game": {
                    "keyType": "AVMString",
                    "valueType": "uint8[3][3]",
                    "key": "Z2FtZQ=="
                },
                "turns": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dHVybnM="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        270
                    ],
                    "errorMessage": "Game is already finished"
                },
                {
                    "pc": [
                        129
                    ],
                    "errorMessage": "Game isn't over"
                },
                {
                    "pc": [
                        210
                    ],
                    "errorMessage": "Host already has a challenger"
                },
                {
                    "pc": [
                        310
                    ],
                    "errorMessage": "It is the challenger's turn"
                },
                {
                    "pc": [
                        289
                    ],
                    "errorMessage": "It is the host's turn"
                },
                {
                    "pc": [
                        159,
                        337
                    ],
                    "errorMessage": "Move must be in range"
                },
                {
                    "pc": [
                        50
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        358
                    ],
                    "errorMessage": "Square is already taken"
                },
                {
                    "pc": [
                        163,
                        341,
                        392
                    ],
                    "errorMessage": "check self.game exists"
                },
                {
                    "pc": [
                        287
                    ],
                    "errorMessage": "check self.host exists"
                },
                {
                    "pc": [
                        227,
                        274,
                        377,
                        437
                    ],
                    "errorMessage": "check self.turns exists"
                },
                {
                    "pc": [
                        170,
                        175,
                        176,
                        348,
                        353,
                        363,
                        370,
                        395,
                        400,
                        404,
                        416,
                        453,
                        462,
                        464,
                        473,
                        483,
                        489,
                        502,
                        513,
                        524,
                        527,
                        542,
                        553,
                        556
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        103,
                        196,
                        256
                    ],
                    "errorMessage": "invalid number of bytes for (uint64,uint64)"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAAEDECYHBGdhbWUFdHVybnMKY2hhbGxlbmdlcgZ3aW5uZXIBAQECBGhvc3QxGRREgASWqXGBNhoAjgEAIDEYRIIDBBegebMEu58RRwSe6/WONhoAjgMAXgCBAJoANhoBSRUlEkRJIltMgQhbMRhBABIiKmVFAUEABiIrZUUBRCppK2knBjEAZ4EJryhMZ0sBJAxBACFJJAxBABsjRCIoZURLASQLSiRYSwQnBF1dKExnKSJnI0MiQv/iNhoBSRUlEkRJIltMgQhbIiplRQEURCoxAGcnBU4CiABeI0MiKWVEgQIYJwUnBE8CTYAEFR98dUxQsCNDNhoBSRUlEkRJIltMgQhbIitlRQEURCIpZUSBAhhBABQxACInBmVEEkQnBEsCSwKIABEjQzEAMgMiKmVNEkQnBUL/6IoDACJHBYv+JAxBAPSL/yQMQQDtI0QiKGVEi/8kC0okWEmL/iNYgAEAqESL/ov9XU8CSwJPAl0oTGciKWVEIwgpTGciKGVMSU4CjAVETCRYSYwDSVcAAUxXAQFJjASoQQAkiwNXAgGLBKhBABkjQQAFK4v9Z4kiKWVEgQkSQf/1K4ABA2eJiwVJVwADSYwAi/4jWExXAwNJjAGL/iNYSYwCqEEAE4sFVwYDi/4jWIsCqEEABCNC/7aLAVcBAYv9qEEAOosAVwABi/2oQQASiwVXBgNXAgGL/ahBAAQjQv+OiwBXAgGL/ahBABKLBVcGA1cAAYv9qEEABCNC/3EiQv9tIkL/EA==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}