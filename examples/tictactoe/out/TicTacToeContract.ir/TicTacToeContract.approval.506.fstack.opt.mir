// Op                                                                                                                                                                               Stack (out)
// examples.tictactoe.tictactoe.TicTacToeContract.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    block@0:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        txn ApplicationID                                                                                                                                                           tmp%0#2
        !                                                                                                                                                                           tmp%1#0
        txn OnCompletion                                                                                                                                                            tmp%1#0,tmp%2#0
        int 1                                                                                                                                                                       tmp%1#0,tmp%2#0,1
        shl                                                                                                                                                                         tmp%1#0,tmp%3#0
        l-load tmp%1#0 1                                                                                                                                                            tmp%3#0,tmp%1#0
        l-load tmp%3#0 1                                                                                                                                                            tmp%1#0,tmp%3#0
        +                                                                                                                                                                           tmp%4#0
        switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED ; b *NOT_IMPLEMENTED 

    call_NoOp:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                                                                                                      tmp%5#0
        method new_game((uint64,uint64))void                                                                                                                                        tmp%5#0,Method(new_game((uint64,uint64))void)
        method join_game((uint64,uint64))void                                                                                                                                       tmp%5#0,Method(new_game((uint64,uint64))void),Method(join_game((uint64,uint64))void)
        method whose_turn()uint8                                                                                                                                                    tmp%5#0,Method(new_game((uint64,uint64))void),Method(join_game((uint64,uint64))void),Method(whose_turn()uint8)
        method play((uint64,uint64))void                                                                                                                                            tmp%5#0,Method(new_game((uint64,uint64))void),Method(join_game((uint64,uint64))void),Method(whose_turn()uint8),Method(play((uint64,uint64))void)
        l-load tmp%5#0 4                                                                                                                                                            Method(new_game((uint64,uint64))void),Method(join_game((uint64,uint64))void),Method(whose_turn()uint8),Method(play((uint64,uint64))void),tmp%5#0
        match new_game_route@5 join_game_route@6 whose_turn_route@7 play_route@8 ; b switch_case_next@9 

    new_game_route@5:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        callsub new_game
        b switch_case_next@9

    join_game_route@6:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        callsub join_game
        b switch_case_next@9

    whose_turn_route@7:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        callsub whose_turn
        b switch_case_next@9

    play_route@8:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        callsub play
        b switch_case_next@9

    switch_case_next@9:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        err // this contract does not implement the given ABI method for call NoOp

    create_NoOp:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                                                                                                      tmp%6#0
        method new_game((uint64,uint64))void                                                                                                                                        tmp%6#0,Method(new_game((uint64,uint64))void)
        l-load tmp%6#0 1                                                                                                                                                            Method(new_game((uint64,uint64))void),tmp%6#0
        match new_game_route@11 ; b switch_case_next@12

    new_game_route@11:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        callsub new_game
        b switch_case_next@12

    switch_case_next@12:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        err // this contract does not implement the given ABI method for create NoOp

    *NOT_IMPLEMENTED:
        // tictactoe/tictactoe.py:15
        // class TicTacToeContract(arc4.ARC4Contract):
        err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID? 


// examples.tictactoe.tictactoe.TicTacToeContract.new_game[routing]() -> void:
subroutine new_game:
    new_game_block@0:
        // tictactoe/tictactoe.py:20
        // @arc4.abimethod(create="allow")
        txna ApplicationArgs 1                                                                                                                                                      reinterpret_Encoded(uint64,uint64)%0#0
        l-load-copy reinterpret_Encoded(uint64,uint64)%0#0 0                                                                                                                        reinterpret_Encoded(uint64,uint64)%0#0,reinterpret_Encoded(uint64,uint64)%0#0 (copy)
        int 0                                                                                                                                                                       reinterpret_Encoded(uint64,uint64)%0#0,reinterpret_Encoded(uint64,uint64)%0#0 (copy),0
        extract_uint64                                                                                                                                                              reinterpret_Encoded(uint64,uint64)%0#0,move.0#0
        f-store move.0#0                                                                                                                                                            (𝕗) move.0#0 | reinterpret_Encoded(uint64,uint64)%0#0
        l-load reinterpret_Encoded(uint64,uint64)%0#0 0                                                                                                                             (𝕗) move.0#0 | reinterpret_Encoded(uint64,uint64)%0#0
        int 8                                                                                                                                                                       (𝕗) move.0#0 | reinterpret_Encoded(uint64,uint64)%0#0,8
        extract_uint64                                                                                                                                                              (𝕗) move.0#0 | move.1#0
        f-store move.1#0                                                                                                                                                            (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:22
        // if Txn.application_id:
        txn ApplicationID                                                                                                                                                           (𝕗) move.0#0,move.1#0 | tmp%0#1
        bz new_game_after_if_else@5 ; b new_game_if_body@2                                                                                                                          (𝕗) move.0#0,move.1#0 |

    new_game_if_body@2:                                                                                                                                                             (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:25
        // if self.challenger:
        int 0                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | 0
        byte "challenger"                                                                                                                                                           (𝕗) move.0#0,move.1#0 | 0,"challenger"
        app_global_get_ex                                                                                                                                                           (𝕗) move.0#0,move.1#0 | _%0#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                                                                                                  (𝕗) move.0#0,move.1#0 | maybe_exists%0#0,_%0#0
        pop 1                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                                                                                                   (𝕗) move.0#0,move.1#0 | maybe_exists%0#0
        bz new_game_after_if_else@4 ; b new_game_if_body@3                                                                                                                          (𝕗) move.0#0,move.1#0 |

    new_game_if_body@3:                                                                                                                                                             (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:26
        // assert self.winner, "Game isn't over"
        int 0                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | 0
        byte "winner"                                                                                                                                                               (𝕗) move.0#0,move.1#0 | 0,"winner"
        app_global_get_ex                                                                                                                                                           (𝕗) move.0#0,move.1#0 | _%1#0,maybe_exists%1#0
        l-store maybe_exists%1#0 1                                                                                                                                                  (𝕗) move.0#0,move.1#0 | maybe_exists%1#0,_%1#0
        pop 1                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | maybe_exists%1#0
        l-load maybe_exists%1#0 0                                                                                                                                                   (𝕗) move.0#0,move.1#0 | maybe_exists%1#0
        assert // Game isn't over                                                                                                                                                   (𝕗) move.0#0,move.1#0 |
        b new_game_after_if_else@4                                                                                                                                                  (𝕗) move.0#0,move.1#0 |

    new_game_after_if_else@4:                                                                                                                                                       (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:28
        // del self.challenger.value
        byte "challenger"                                                                                                                                                           (𝕗) move.0#0,move.1#0 | "challenger"
        app_global_del                                                                                                                                                              (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:29
        // del self.winner.value
        byte "winner"                                                                                                                                                               (𝕗) move.0#0,move.1#0 | "winner"
        app_global_del                                                                                                                                                              (𝕗) move.0#0,move.1#0 |
        b new_game_after_if_else@5                                                                                                                                                  (𝕗) move.0#0,move.1#0 |

    new_game_after_if_else@5:                                                                                                                                                       (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:30
        // self.host = Txn.sender
        txn Sender                                                                                                                                                                  (𝕗) move.0#0,move.1#0 | tmp%2#0
        byte "host"                                                                                                                                                                 (𝕗) move.0#0,move.1#0 | tmp%2#0,"host"
        l-load tmp%2#0 1                                                                                                                                                            (𝕗) move.0#0,move.1#0 | "host",tmp%2#0
        app_global_put                                                                                                                                                              (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:31
        // self.game = Game.from_bytes(op.bzero(9))
        int 9                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | 9
        bzero                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | reinterpret_Encoded(uint8[3][3])%0#0
        byte "game"                                                                                                                                                                 (𝕗) move.0#0,move.1#0 | reinterpret_Encoded(uint8[3][3])%0#0,"game"
        l-load reinterpret_Encoded(uint8[3][3])%0#0 1                                                                                                                               (𝕗) move.0#0,move.1#0 | "game",reinterpret_Encoded(uint8[3][3])%0#0
        app_global_put                                                                                                                                                              (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:33
        // assert column < 3 and row < 3, "Move must be in range"
        f-load move.0#0                                                                                                                                                             (𝕗) move.0#0,move.1#0 | move.0#0
        int 3                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | move.0#0,3
        <                                                                                                                                                                           (𝕗) move.0#0,move.1#0 | tmp%3#0
        bz new_game_bool_false@8 ; b new_game_and_contd@6                                                                                                                           (𝕗) move.0#0,move.1#0 |

    new_game_and_contd@6:                                                                                                                                                           (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:33
        // assert column < 3 and row < 3, "Move must be in range"
        f-load move.1#0                                                                                                                                                             (𝕗) move.0#0,move.1#0 | move.1#0
        int 3                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | move.1#0,3
        <                                                                                                                                                                           (𝕗) move.0#0,move.1#0 | tmp%4#0
        bz new_game_bool_false@8 ; b new_game_bool_true@7                                                                                                                           (𝕗) move.0#0,move.1#0 |

    new_game_bool_true@7:                                                                                                                                                           (𝕗) move.0#0,move.1#0 |
        int 1                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | and_result%0#0
        x-store and_result%0#0                                                                                                                                                      (𝕗) move.0#0,move.1#0 | (𝕏) and_result%0#0 |
        b new_game_bool_merge@9                                                                                                                                                     (𝕗) move.0#0,move.1#0 | (𝕏) and_result%0#0 |

    new_game_bool_false@8:                                                                                                                                                          (𝕗) move.0#0,move.1#0 |
        int 0                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | and_result%0#0
        x-store and_result%0#0                                                                                                                                                      (𝕗) move.0#0,move.1#0 | (𝕏) and_result%0#0 |
        b new_game_bool_merge@9                                                                                                                                                     (𝕗) move.0#0,move.1#0 | (𝕏) and_result%0#0 |

    new_game_bool_merge@9:                                                                                                                                                          (𝕗) move.0#0,move.1#0 | (𝕏) and_result%0#0 |
        // tictactoe/tictactoe.py:33
        // assert column < 3 and row < 3, "Move must be in range"
        x-load and_result%0#0                                                                                                                                                       (𝕗) move.0#0,move.1#0 | and_result%0#0
        assert // Move must be in range                                                                                                                                             (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:34
        // self.game[row][column] = arc4.UInt8(HOST)
        int 0                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | 0
        byte "game"                                                                                                                                                                 (𝕗) move.0#0,move.1#0 | 0,"game"
        app_global_get_ex                                                                                                                                                           (𝕗) move.0#0,move.1#0 | maybe_value%0#0,maybe_exists%2#0
        assert // check self.game exists                                                                                                                                            (𝕗) move.0#0,move.1#0 | maybe_value%0#0
        f-load move.1#0                                                                                                                                                             (𝕗) move.0#0,move.1#0 | maybe_value%0#0,move.1#0
        int 3                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | maybe_value%0#0,move.1#0,3
        *                                                                                                                                                                           (𝕗) move.0#0,move.1#0 | maybe_value%0#0,aggregate%bytes_offset%0#0
        l-load-copy maybe_value%0#0 1                                                                                                                                               (𝕗) move.0#0,move.1#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,maybe_value%0#0 (copy)
        l-load-copy aggregate%bytes_offset%0#0 1                                                                                                                                    (𝕗) move.0#0,move.1#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,maybe_value%0#0 (copy),aggregate%bytes_offset%0#0 (copy)
        int 3                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,maybe_value%0#0 (copy),aggregate%bytes_offset%0#0 (copy),3
        extract3 // on error: index access is out of bounds                                                                                                                         (𝕗) move.0#0,move.1#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0
        f-load move.0#0                                                                                                                                                             (𝕗) move.0#0,move.1#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0,move.0#0
        byte 0x01                                                                                                                                                                   (𝕗) move.0#0,move.1#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0,move.0#0,0x01
        replace3 // on error: index access is out of bounds                                                                                                                         (𝕗) move.0#0,move.1#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%updated_array%0#0
        l-load maybe_value%0#0 2                                                                                                                                                    (𝕗) move.0#0,move.1#0 | aggregate%bytes_offset%0#0,aggregate%updated_array%0#0,maybe_value%0#0
        l-load aggregate%bytes_offset%0#0 2                                                                                                                                         (𝕗) move.0#0,move.1#0 | aggregate%updated_array%0#0,maybe_value%0#0,aggregate%bytes_offset%0#0
        l-load aggregate%updated_array%0#0 2                                                                                                                                        (𝕗) move.0#0,move.1#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%updated_array%0#0
        replace3 // on error: index access is out of bounds                                                                                                                         (𝕗) move.0#0,move.1#0 | aggregate%updated_array%1#0
        byte "game"                                                                                                                                                                 (𝕗) move.0#0,move.1#0 | aggregate%updated_array%1#0,"game"
        l-load aggregate%updated_array%1#0 1                                                                                                                                        (𝕗) move.0#0,move.1#0 | "game",aggregate%updated_array%1#0
        app_global_put                                                                                                                                                              (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:35
        // self.turns = UInt64(0)
        byte "turns"                                                                                                                                                                (𝕗) move.0#0,move.1#0 | "turns"
        int 0                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | "turns",0
        app_global_put                                                                                                                                                              (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:20
        // @arc4.abimethod(create="allow")
        int 1                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | 1
        return                                                                                                                                                                      (𝕗) move.0#0,move.1#0 |


// examples.tictactoe.tictactoe.TicTacToeContract.join_game[routing]() -> void:
subroutine join_game:
    join_game_block@0:
        // tictactoe/tictactoe.py:37
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                                                                                                      reinterpret_Encoded(uint64,uint64)%0#0
        l-load-copy reinterpret_Encoded(uint64,uint64)%0#0 0                                                                                                                        reinterpret_Encoded(uint64,uint64)%0#0,reinterpret_Encoded(uint64,uint64)%0#0 (copy)
        int 0                                                                                                                                                                       reinterpret_Encoded(uint64,uint64)%0#0,reinterpret_Encoded(uint64,uint64)%0#0 (copy),0
        extract_uint64                                                                                                                                                              reinterpret_Encoded(uint64,uint64)%0#0,move.0#0
        l-load reinterpret_Encoded(uint64,uint64)%0#0 1                                                                                                                             move.0#0,reinterpret_Encoded(uint64,uint64)%0#0
        int 8                                                                                                                                                                       move.0#0,reinterpret_Encoded(uint64,uint64)%0#0,8
        extract_uint64                                                                                                                                                              move.0#0,move.1#0
        // tictactoe/tictactoe.py:39
        // assert not self.challenger, "Host already has a challenger"
        int 0                                                                                                                                                                       move.0#0,move.1#0,0
        byte "challenger"                                                                                                                                                           move.0#0,move.1#0,0,"challenger"
        app_global_get_ex                                                                                                                                                           move.0#0,move.1#0,_%0#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                                                                                                  move.0#0,move.1#0,maybe_exists%0#0,_%0#0
        pop 1                                                                                                                                                                       move.0#0,move.1#0,maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                                                                                                   move.0#0,move.1#0,maybe_exists%0#0
        !                                                                                                                                                                           move.0#0,move.1#0,tmp%0#1
        assert // Host already has a challenger                                                                                                                                     move.0#0,move.1#0
        // tictactoe/tictactoe.py:40
        // self.challenger.value = Txn.sender
        txn Sender                                                                                                                                                                  move.0#0,move.1#0,tmp%1#1
        byte "challenger"                                                                                                                                                           move.0#0,move.1#0,tmp%1#1,"challenger"
        l-load tmp%1#1 1                                                                                                                                                            move.0#0,move.1#0,"challenger",tmp%1#1
        app_global_put                                                                                                                                                              move.0#0,move.1#0
        // tictactoe/tictactoe.py:41
        // self.make_move(arc4.UInt8(CHALLENGER), move)
        byte 0x02                                                                                                                                                                   move.0#0,move.1#0,0x02
        l-load move.0#0 2                                                                                                                                                           move.1#0,0x02,move.0#0
        l-load move.1#0 2                                                                                                                                                           0x02,move.0#0,move.1#0
        callsub make_move
        // tictactoe/tictactoe.py:37
        // @arc4.abimethod
        int 1                                                                                                                                                                       1
        return


// examples.tictactoe.tictactoe.TicTacToeContract.whose_turn[routing]() -> void:
subroutine whose_turn:
    whose_turn_block@0:
        // tictactoe/tictactoe.py:45
        // return arc4.UInt8(HOST) if self.turns % 2 else arc4.UInt8(CHALLENGER)
        int 0                                                                                                                                                                       0
        byte "turns"                                                                                                                                                                0,"turns"
        app_global_get_ex                                                                                                                                                           maybe_value%0#0,maybe_exists%0#0
        assert // check self.turns exists                                                                                                                                           maybe_value%0#0
        l-load maybe_value%0#0 0                                                                                                                                                    maybe_value%0#0
        int 2                                                                                                                                                                       maybe_value%0#0,2
        %                                                                                                                                                                           tmp%0#1
        byte 0x02                                                                                                                                                                   tmp%0#1,0x02
        byte 0x01                                                                                                                                                                   tmp%0#1,0x02,0x01
        l-load tmp%0#1 2                                                                                                                                                            0x02,0x01,tmp%0#1
        select                                                                                                                                                                      select%0#0
        // tictactoe/tictactoe.py:43
        // @arc4.abimethod
        byte 0x151f7c75                                                                                                                                                             select%0#0,0x151f7c75
        l-load select%0#0 1                                                                                                                                                         0x151f7c75,select%0#0
        concat                                                                                                                                                                      tmp%1#0
        log
        int 1                                                                                                                                                                       1
        return


// examples.tictactoe.tictactoe.TicTacToeContract.play[routing]() -> void:
subroutine play:
    play_block@0:
        // tictactoe/tictactoe.py:47
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                                                                                                      reinterpret_Encoded(uint64,uint64)%0#0
        l-load-copy reinterpret_Encoded(uint64,uint64)%0#0 0                                                                                                                        reinterpret_Encoded(uint64,uint64)%0#0,reinterpret_Encoded(uint64,uint64)%0#0 (copy)
        int 0                                                                                                                                                                       reinterpret_Encoded(uint64,uint64)%0#0,reinterpret_Encoded(uint64,uint64)%0#0 (copy),0
        extract_uint64                                                                                                                                                              reinterpret_Encoded(uint64,uint64)%0#0,move.0#0
        f-store move.0#0                                                                                                                                                            (𝕗) move.0#0 | reinterpret_Encoded(uint64,uint64)%0#0
        l-load reinterpret_Encoded(uint64,uint64)%0#0 0                                                                                                                             (𝕗) move.0#0 | reinterpret_Encoded(uint64,uint64)%0#0
        int 8                                                                                                                                                                       (𝕗) move.0#0 | reinterpret_Encoded(uint64,uint64)%0#0,8
        extract_uint64                                                                                                                                                              (𝕗) move.0#0 | move.1#0
        f-store move.1#0                                                                                                                                                            (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:49
        // assert not self.winner, "Game is already finished"
        int 0                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | 0
        byte "winner"                                                                                                                                                               (𝕗) move.0#0,move.1#0 | 0,"winner"
        app_global_get_ex                                                                                                                                                           (𝕗) move.0#0,move.1#0 | _%0#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                                                                                                  (𝕗) move.0#0,move.1#0 | maybe_exists%0#0,_%0#0
        pop 1                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                                                                                                   (𝕗) move.0#0,move.1#0 | maybe_exists%0#0
        !                                                                                                                                                                           (𝕗) move.0#0,move.1#0 | tmp%0#1
        assert // Game is already finished                                                                                                                                          (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:50
        // if self.turns % 2:
        int 0                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | 0
        byte "turns"                                                                                                                                                                (𝕗) move.0#0,move.1#0 | 0,"turns"
        app_global_get_ex                                                                                                                                                           (𝕗) move.0#0,move.1#0 | maybe_value%0#0,maybe_exists%1#0
        assert // check self.turns exists                                                                                                                                           (𝕗) move.0#0,move.1#0 | maybe_value%0#0
        l-load maybe_value%0#0 0                                                                                                                                                    (𝕗) move.0#0,move.1#0 | maybe_value%0#0
        int 2                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | maybe_value%0#0,2
        %                                                                                                                                                                           (𝕗) move.0#0,move.1#0 | tmp%1#1
        bz play_else_body@3 ; b play_if_body@2                                                                                                                                      (𝕗) move.0#0,move.1#0 |

    play_if_body@2:                                                                                                                                                                 (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:51
        // assert Txn.sender == self.host, "It is the host's turn"
        txn Sender                                                                                                                                                                  (𝕗) move.0#0,move.1#0 | tmp%3#0
        int 0                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | tmp%3#0,0
        byte "host"                                                                                                                                                                 (𝕗) move.0#0,move.1#0 | tmp%3#0,0,"host"
        app_global_get_ex                                                                                                                                                           (𝕗) move.0#0,move.1#0 | tmp%3#0,maybe_value%1#0,maybe_exists%2#0
        assert // check self.host exists                                                                                                                                            (𝕗) move.0#0,move.1#0 | tmp%3#0,maybe_value%1#0
        l-load tmp%3#0 1                                                                                                                                                            (𝕗) move.0#0,move.1#0 | maybe_value%1#0,tmp%3#0
        l-load maybe_value%1#0 1                                                                                                                                                    (𝕗) move.0#0,move.1#0 | tmp%3#0,maybe_value%1#0
        ==                                                                                                                                                                          (𝕗) move.0#0,move.1#0 | tmp%4#0
        assert // It is the host's turn                                                                                                                                             (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:52
        // player = arc4.UInt8(HOST)
        byte 0x01                                                                                                                                                                   (𝕗) move.0#0,move.1#0 | player#0
        x-store player#0                                                                                                                                                            (𝕗) move.0#0,move.1#0 | (𝕏) player#0 |
        b play_after_if_else@4                                                                                                                                                      (𝕗) move.0#0,move.1#0 | (𝕏) player#0 |

    play_else_body@3:                                                                                                                                                               (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:54
        // assert Txn.sender == self.challenger.get(
        txn Sender                                                                                                                                                                  (𝕗) move.0#0,move.1#0 | tmp%5#0
        // tictactoe/tictactoe.py:55
        // default=Account()
        global ZeroAddress                                                                                                                                                          (𝕗) move.0#0,move.1#0 | tmp%5#0,tmp%6#0
        // tictactoe/tictactoe.py:54
        // assert Txn.sender == self.challenger.get(
        int 0                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | tmp%5#0,tmp%6#0,0
        byte "challenger"                                                                                                                                                           (𝕗) move.0#0,move.1#0 | tmp%5#0,tmp%6#0,0,"challenger"
        app_global_get_ex                                                                                                                                                           (𝕗) move.0#0,move.1#0 | tmp%5#0,tmp%6#0,maybe_value%2#0,maybe_exists%3#0
        // tictactoe/tictactoe.py:54-56
        // assert Txn.sender == self.challenger.get(
        //     default=Account()
        // ), "It is the challenger's turn"
        l-load tmp%6#0 2                                                                                                                                                            (𝕗) move.0#0,move.1#0 | tmp%5#0,maybe_value%2#0,maybe_exists%3#0,tmp%6#0
        l-load maybe_value%2#0 2                                                                                                                                                    (𝕗) move.0#0,move.1#0 | tmp%5#0,maybe_exists%3#0,tmp%6#0,maybe_value%2#0
        l-load maybe_exists%3#0 2                                                                                                                                                   (𝕗) move.0#0,move.1#0 | tmp%5#0,tmp%6#0,maybe_value%2#0,maybe_exists%3#0
        select                                                                                                                                                                      (𝕗) move.0#0,move.1#0 | tmp%5#0,state_get%0#0
        l-load tmp%5#0 1                                                                                                                                                            (𝕗) move.0#0,move.1#0 | state_get%0#0,tmp%5#0
        l-load state_get%0#0 1                                                                                                                                                      (𝕗) move.0#0,move.1#0 | tmp%5#0,state_get%0#0
        ==                                                                                                                                                                          (𝕗) move.0#0,move.1#0 | tmp%7#0
        assert // It is the challenger's turn                                                                                                                                       (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:57
        // player = arc4.UInt8(CHALLENGER)
        byte 0x02                                                                                                                                                                   (𝕗) move.0#0,move.1#0 | player#0
        x-store player#0                                                                                                                                                            (𝕗) move.0#0,move.1#0 | (𝕏) player#0 |
        b play_after_if_else@4                                                                                                                                                      (𝕗) move.0#0,move.1#0 | (𝕏) player#0 |

    play_after_if_else@4:                                                                                                                                                           (𝕗) move.0#0,move.1#0 | (𝕏) player#0 |
        // tictactoe/tictactoe.py:58
        // self.make_move(player, move)
        x-load player#0                                                                                                                                                             (𝕗) move.0#0,move.1#0 | player#0
        f-load move.0#0                                                                                                                                                             (𝕗) move.0#0,move.1#0 | player#0,move.0#0
        f-load move.1#0                                                                                                                                                             (𝕗) move.0#0,move.1#0 | player#0,move.0#0,move.1#0
        callsub make_move                                                                                                                                                           (𝕗) move.0#0,move.1#0 |
        // tictactoe/tictactoe.py:47
        // @arc4.abimethod
        int 1                                                                                                                                                                       (𝕗) move.0#0,move.1#0 | 1
        return                                                                                                                                                                      (𝕗) move.0#0,move.1#0 |


// examples.tictactoe.tictactoe.TicTacToeContract.make_move(player: bytes, move.0: uint64, move.1: uint64) -> void:
subroutine make_move:
    declare bytes aggregate%encoded_element%10#0, aggregate%encoded_element%12#0, aggregate%encoded_element%13#0, aggregate%encoded_element%4#0, aggregate%encoded_element%7#0, g#0
    make_move_block@0:                                                                                                                                                              (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:63
        // assert column < 3 and row < 3, "Move must be in range"
        p-load move.0#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | move.0#0 (copy)
        int 3                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | move.0#0 (copy),3
        <                                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%0#0
        bz make_move_bool_false@3 ; b make_move_and_contd@1                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_and_contd@1:                                                                                                                                                          (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:63
        // assert column < 3 and row < 3, "Move must be in range"
        p-load move.1#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | move.1#0 (copy)
        int 3                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | move.1#0 (copy),3
        <                                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%1#0
        bz make_move_bool_false@3 ; b make_move_bool_true@2                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_bool_true@2:                                                                                                                                                          (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        int 1                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | and_result%0#0
        x-store and_result%0#0                                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) and_result%0#0 |
        b make_move_bool_merge@4                                                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) and_result%0#0 |

    make_move_bool_false@3:                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        int 0                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | and_result%0#0
        x-store and_result%0#0                                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) and_result%0#0 |
        b make_move_bool_merge@4                                                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) and_result%0#0 |

    make_move_bool_merge@4:                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) and_result%0#0 |
        // tictactoe/tictactoe.py:63
        // assert column < 3 and row < 3, "Move must be in range"
        x-load and_result%0#0                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | and_result%0#0
        assert // Move must be in range                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:64
        // assert self.game[row][column] == EMPTY, "Square is already taken"
        int 0                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | 0
        byte "game"                                                                                                                                                                 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | 0,"game"
        app_global_get_ex                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,maybe_exists%0#0
        assert // check self.game exists                                                                                                                                            (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0
        p-load move.1#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,move.1#0 (copy)
        int 3                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,move.1#0 (copy),3
        *                                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0
        l-load-copy maybe_value%0#0 1                                                                                                                                               (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,maybe_value%0#0 (copy)
        l-load-copy aggregate%bytes_offset%0#0 1                                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,maybe_value%0#0 (copy),aggregate%bytes_offset%0#0 (copy)
        int 3                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,maybe_value%0#0 (copy),aggregate%bytes_offset%0#0 (copy),3
        extract3 // on error: index access is out of bounds                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0
        l-load-copy aggregate%encoded_element%0#0 0                                                                                                                                 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0,aggregate%encoded_element%0#0 (copy)
        p-load move.0#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0,aggregate%encoded_element%0#0 (copy),move.0#0 (copy)
        int 1                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0,aggregate%encoded_element%0#0 (copy),move.0#0 (copy),1
        extract3 // on error: index access is out of bounds                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0,aggregate%encoded_element%1#0
        byte 0x00                                                                                                                                                                   (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0,aggregate%encoded_element%1#0,0x00
        b==                                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0,tmp%2#0
        assert // Square is already taken                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0
        // tictactoe/tictactoe.py:65
        // self.game[row][column] = player
        l-load aggregate%encoded_element%0#0 0                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0
        p-load move.0#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0,move.0#0 (copy)
        p-load player#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%encoded_element%0#0,move.0#0 (copy),player#0 (copy)
        replace3 // on error: index access is out of bounds                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%0#0,aggregate%bytes_offset%0#0,aggregate%updated_array%0#0
        l-load maybe_value%0#0 2                                                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,aggregate%updated_array%0#0,maybe_value%0#0
        l-load-copy aggregate%bytes_offset%0#0 2                                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,aggregate%updated_array%0#0,maybe_value%0#0,aggregate%bytes_offset%0#0 (copy)
        l-load aggregate%updated_array%0#0 2                                                                                                                                        (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,maybe_value%0#0,aggregate%bytes_offset%0#0 (copy),aggregate%updated_array%0#0
        replace3 // on error: index access is out of bounds                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,aggregate%updated_array%1#0
        byte "game"                                                                                                                                                                 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,aggregate%updated_array%1#0,"game"
        l-load aggregate%updated_array%1#0 1                                                                                                                                        (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,"game",aggregate%updated_array%1#0
        app_global_put                                                                                                                                                              (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0
        // tictactoe/tictactoe.py:66
        // self.turns += 1
        int 0                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,0
        byte "turns"                                                                                                                                                                (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,0,"turns"
        app_global_get_ex                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,maybe_value%2#0,maybe_exists%2#0
        assert // check self.turns exists                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,maybe_value%2#0
        l-load maybe_value%2#0 0                                                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,maybe_value%2#0
        int 1                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,maybe_value%2#0,1
        +                                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,tmp%3#0
        byte "turns"                                                                                                                                                                (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,tmp%3#0,"turns"
        l-load tmp%3#0 1                                                                                                                                                            (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,"turns",tmp%3#0
        app_global_put                                                                                                                                                              (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0
        // tictactoe/tictactoe.py:74
        // g = self.game.copy()
        int 0                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,0
        byte "game"                                                                                                                                                                 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,0,"game"
        app_global_get_ex                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,g#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                                                                                                  (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,maybe_exists%0#0,g#0
        l-store-copy g#0 1                                                                                                                                                          (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,g#0,maybe_exists%0#0,g#0
        f-store g#0                                                                                                                                                                 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,g#0,maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                                                                                                   (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,g#0,maybe_exists%0#0
        assert // check self.game exists                                                                                                                                            (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,g#0
        // tictactoe/tictactoe.py:76
        // if g[row][0] == g[row][1] == g[row][2]:
        l-load g#0 0                                                                                                                                                                (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%bytes_offset%0#0,g#0
        l-load aggregate%bytes_offset%0#0 1                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0,aggregate%bytes_offset%0#0
        int 3                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0,aggregate%bytes_offset%0#0,3
        extract3 // on error: index access is out of bounds                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%4#0
        l-store-copy aggregate%encoded_element%4#0 0                                                                                                                                (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%4#0,aggregate%encoded_element%4#0
        f-store aggregate%encoded_element%4#0                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%4#0
        l-load-copy aggregate%encoded_element%4#0 0                                                                                                                                 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%4#0,aggregate%encoded_element%4#0 (copy)
        extract 0 1 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%4#0,aggregate%encoded_element%5#0
        l-load aggregate%encoded_element%4#0 1                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%5#0,aggregate%encoded_element%4#0
        extract 1 1 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%5#0,aggregate%encoded_element%7#0
        l-store-copy aggregate%encoded_element%7#0 0                                                                                                                                (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%5#0,aggregate%encoded_element%7#0,aggregate%encoded_element%7#0
        f-store aggregate%encoded_element%7#0                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%5#0,aggregate%encoded_element%7#0
        l-load aggregate%encoded_element%5#0 1                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%7#0,aggregate%encoded_element%5#0
        l-load aggregate%encoded_element%7#0 1                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%5#0,aggregate%encoded_element%7#0
        b==                                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%0#0
        bz make_move_after_if_else@13 ; b make_move_and_contd@11                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_and_contd@11:                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:76
        // if g[row][0] == g[row][1] == g[row][2]:
        f-load aggregate%encoded_element%4#0                                                                                                                                        (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%4#0
        extract 2 1 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%9#0
        f-load aggregate%encoded_element%7#0                                                                                                                                        (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%9#0,aggregate%encoded_element%7#0
        l-load aggregate%encoded_element%9#0 1                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%7#0,aggregate%encoded_element%9#0
        b==                                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%1#0
        bz make_move_after_if_else@13 ; b make_move_if_body@12                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_if_body@12:                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:77
        // return True
        int 1                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%4#0
        x-store tmp%4#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 |
        // tictactoe/tictactoe.py:67
        // if self.did_win(player, column=column, row=row):
        b make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 | 

    make_move_after_if_else@13:                                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:79
        // if g[0][column] == g[1][column] == g[2][column]:
        f-load g#0                                                                                                                                                                  (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0
        l-store-copy g#0 0                                                                                                                                                          (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0,g#0 (copy)
        extract 0 3 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0,aggregate%encoded_element%10#0
        l-store-copy aggregate%encoded_element%10#0 0                                                                                                                               (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0,aggregate%encoded_element%10#0,aggregate%encoded_element%10#0
        f-store aggregate%encoded_element%10#0                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0,aggregate%encoded_element%10#0
        l-load aggregate%encoded_element%10#0 0                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0,aggregate%encoded_element%10#0
        p-load move.0#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0,aggregate%encoded_element%10#0,move.0#0 (copy)
        int 1                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0,aggregate%encoded_element%10#0,move.0#0 (copy),1
        extract3 // on error: index access is out of bounds                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0,aggregate%encoded_element%11#0
        l-load g#0 1                                                                                                                                                                (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,g#0
        extract 3 3 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,aggregate%encoded_element%12#0
        l-store-copy aggregate%encoded_element%12#0 0                                                                                                                               (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,aggregate%encoded_element%12#0,aggregate%encoded_element%12#0
        f-store aggregate%encoded_element%12#0                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,aggregate%encoded_element%12#0
        l-load aggregate%encoded_element%12#0 0                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,aggregate%encoded_element%12#0
        p-load move.0#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,aggregate%encoded_element%12#0,move.0#0 (copy)
        int 1                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,aggregate%encoded_element%12#0,move.0#0 (copy),1
        extract3 // on error: index access is out of bounds                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,aggregate%encoded_element%13#0
        l-store-copy aggregate%encoded_element%13#0 0                                                                                                                               (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,aggregate%encoded_element%13#0,aggregate%encoded_element%13#0
        f-store aggregate%encoded_element%13#0                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,aggregate%encoded_element%13#0
        l-load aggregate%encoded_element%11#0 1                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%13#0,aggregate%encoded_element%11#0
        l-load aggregate%encoded_element%13#0 1                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%11#0,aggregate%encoded_element%13#0
        b==                                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%2#0
        bz make_move_after_if_else@16 ; b make_move_and_contd@14                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_and_contd@14:                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:79
        // if g[0][column] == g[1][column] == g[2][column]:
        f-load g#0                                                                                                                                                                  (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0
        extract 6 3 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%14#0
        p-load move.0#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%14#0,move.0#0 (copy)
        int 1                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%14#0,move.0#0 (copy),1
        extract3 // on error: index access is out of bounds                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%15#0
        f-load aggregate%encoded_element%13#0                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%15#0,aggregate%encoded_element%13#0
        l-load aggregate%encoded_element%15#0 1                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%13#0,aggregate%encoded_element%15#0
        b==                                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%3#1
        bz make_move_after_if_else@16 ; b make_move_if_body@15                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_if_body@15:                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:80
        // return True
        int 1                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%4#0
        x-store tmp%4#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 |
        // tictactoe/tictactoe.py:67
        // if self.did_win(player, column=column, row=row):
        b make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 | 

    make_move_after_if_else@16:                                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:83
        // if player == g[1][1]:
        f-load aggregate%encoded_element%12#0                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%12#0
        extract 1 1 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%17#0
        p-load player#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%17#0,player#0 (copy)
        l-load aggregate%encoded_element%17#0 1                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | player#0 (copy),aggregate%encoded_element%17#0
        b==                                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%4#0
        bz make_move_after_if_else@24 ; b make_move_if_body@17                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_if_body@17:                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:84
        // if g[0][0] == player == g[2][2]:
        f-load aggregate%encoded_element%10#0                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%10#0
        extract 0 1 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%19#0
        p-load player#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%19#0,player#0 (copy)
        b==                                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%5#0
        bz make_move_after_if_else@20 ; b make_move_and_contd@18                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_and_contd@18:                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:84
        // if g[0][0] == player == g[2][2]:
        f-load g#0                                                                                                                                                                  (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0
        extract 6 3 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%20#0
        extract 2 1 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%21#0
        p-load player#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%21#0,player#0 (copy)
        l-load aggregate%encoded_element%21#0 1                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | player#0 (copy),aggregate%encoded_element%21#0
        b==                                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%6#0
        bz make_move_after_if_else@20 ; b make_move_if_body@19                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_if_body@19:                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:85
        // return True
        int 1                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%4#0
        x-store tmp%4#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 |
        // tictactoe/tictactoe.py:67
        // if self.did_win(player, column=column, row=row):
        b make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 | 

    make_move_after_if_else@20:                                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:86
        // if g[0][2] == player == g[2][0]:
        f-load aggregate%encoded_element%10#0                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%10#0
        extract 2 1 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%23#0
        p-load player#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%23#0,player#0 (copy)
        b==                                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%7#0
        bz make_move_after_if_else@24 ; b make_move_and_contd@21                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_and_contd@21:                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:86
        // if g[0][2] == player == g[2][0]:
        f-load g#0                                                                                                                                                                  (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | g#0
        extract 6 3 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%24#0
        extract 0 1 // on error: index access is out of bounds                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%25#0
        p-load player#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | aggregate%encoded_element%25#0,player#0 (copy)
        l-load aggregate%encoded_element%25#0 1                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | player#0 (copy),aggregate%encoded_element%25#0
        b==                                                                                                                                                                         (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%8#0
        bz make_move_after_if_else@24 ; b make_move_if_body@22                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_if_body@22:                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:87
        // return True
        int 1                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%4#0
        x-store tmp%4#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 |
        // tictactoe/tictactoe.py:67
        // if self.did_win(player, column=column, row=row):
        b make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 | 

    make_move_after_if_else@24:                                                                                                                                                     (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:88
        // return False
        int 0                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%4#0
        x-store tmp%4#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 |
        // tictactoe/tictactoe.py:67
        // if self.did_win(player, column=column, row=row):
        b make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 | 

    make_move_after_inlined_examples.tictactoe.tictactoe.TicTacToeContract.did_win@25:                                                                                              (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | (𝕏) tmp%4#0 |
        // tictactoe/tictactoe.py:67
        // if self.did_win(player, column=column, row=row):
        x-load tmp%4#0                                                                                                                                                              (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%4#0
        bz make_move_else_body@6 ; b make_move_if_body@5                                                                                                                            (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_if_body@5:                                                                                                                                                            (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:68
        // self.winner.value = player
        byte "winner"                                                                                                                                                               (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | "winner"
        p-load player#0                                                                                                                                                             (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | "winner",player#0 (copy)
        app_global_put                                                                                                                                                              (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        b make_move_after_if_else@9                                                                                                                                                 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_else_body@6:                                                                                                                                                          (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:69
        // elif self.turns == 9:
        int 0                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | 0
        byte "turns"                                                                                                                                                                (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | 0,"turns"
        app_global_get_ex                                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%3#0,maybe_exists%3#0
        assert // check self.turns exists                                                                                                                                           (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%3#0
        l-load maybe_value%3#0 0                                                                                                                                                    (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%3#0
        int 9                                                                                                                                                                       (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | maybe_value%3#0,9
        ==                                                                                                                                                                          (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | tmp%5#0
        bz make_move_after_if_else@9 ; b make_move_if_body@7                                                                                                                        (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_if_body@7:                                                                                                                                                            (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        // tictactoe/tictactoe.py:70
        // self.winner.value = arc4.UInt8(DRAW)
        byte "winner"                                                                                                                                                               (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | "winner"
        byte 0x03                                                                                                                                                                   (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 | "winner",0x03
        app_global_put                                                                                                                                                              (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        b make_move_after_if_else@9                                                                                                                                                 (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |

    make_move_after_if_else@9:                                                                                                                                                      (𝕡) player#0,move.0#0,move.1#0 | (𝕗) aggregate%encoded_element%10#0,aggregate%encoded_element%12#0,aggregate%encoded_element%13#0,aggregate%encoded_element%4#0,aggregate%encoded_element%7#0,g#0 |
        retsub


