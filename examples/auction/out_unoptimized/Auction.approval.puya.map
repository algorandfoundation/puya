{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBQ;AAAmB;AAAnB;AACA;AAAoB;AAApB;AACA;AAAkB;AAAlB;AACA;;AAAW;AAAX;AACuB;;AAAvB;AAAA;AAAA;;AAGR;;;AAGe;;AAAc;;AAAd;AAAP;AAEO;AAAA;;AAAA;AAAA;AAAe;AAAf;AAAP;AAEA;;AAAA;;AAAA;AAGA;AACmB;;AACJ;;;;;;AAFf;;;AAAA;;;AAAA;;AAKR;;;AAOe;;AAAc;;AAAd;AAAP;AAGO;AAAA;AAAA;AAAA;AAAoB;AAApB;AAAP;AAII;;AAAA;;AAAwB;;AAAxB;AADJ;AAKkB;;AAAA;;AAAlB;AAAA;AAAA;AACmB;;AAAA;;AAAA;AAAnB;AAAA;AAAA;AACA;AAAA;;AAAA;;;AAMR;;;AAGe;;AAA0B;AAAA;AAAA;AAAA;AAA1B;AAAP;AAGO;;AAAA;;AAAc;;AAAd;AAAP;AACO;;AAAA;;AAAa;AAAA;AAAA;AAAA;AAAb;AAAP;AAGoB;;AAAA;;AAApB;AAAA;AAAA;AACuB;;AAAA;;AAAvB;AAAA;AAAA;AAGsB;;AAAc;;AAAA;;AAApC;AAAA;;AAAA;;AAAA;;AAER;;;AAEyD;;AAAtB;AAAA;;AAAA;AAAA;AAA3B;;AAGG;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAX;;;AACsB;AAAA;AAAA;AAAA;AAAV;;AAAA;AAAA;;;;;;;;AAEJ;AAEa;;;;;;AAFb;;;AAAA;;;AAAA;AAKsB;;AAAc;;AAAA;;AAAA;AAApC;AAAA;;AAAA;;AAAA;;AAER;;;AAEe;;AAA0B;AAAA;AAAA;AAAA;AAA1B;AAAP;AAEA;AACe;;AACI;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACF;AAAA;AAAA;AAAA;;;;;;;;;AAJjB;;;AAAA;;;AAAA;;AArFR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;AAAA;;AAiFK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjFL;;;AAAA;AAAA;;AAiFK;;;AAAA;;;;AAfA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAhBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAlDL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkDK;;;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAtBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxBL;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwBK;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAfA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AATL;;;AAAA;AAAA;;AASK;;;AAAA;;;;AATL;;AAAA;AAAA;AAAA;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "examples.auction.contract.Auction.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 4"
    },
    "6": {
      "op": "bytecblock \"auction_end\" \"previous_bid\" \"previous_bidder\" \"asa_amount\" \"asa\" \"claim\""
    },
    "70": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "72": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "75": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "examples.auction.contract.Auction.__init__",
      "op": "callsub __init__"
    },
    "78": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "81": {
      "op": "return",
      "stack_out": []
    },
    "82": {
      "subroutine": "examples.auction.contract.Auction.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "bytec_0 // \"auction_end\"",
      "defined_out": [
        "\"auction_end\""
      ],
      "stack_out": [
        "\"auction_end\""
      ]
    },
    "83": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"auction_end\"",
        "0"
      ],
      "stack_out": [
        "\"auction_end\"",
        "0"
      ]
    },
    "84": {
      "op": "app_global_put",
      "stack_out": []
    },
    "85": {
      "op": "bytec_1 // \"previous_bid\"",
      "defined_out": [
        "\"previous_bid\""
      ],
      "stack_out": [
        "\"previous_bid\""
      ]
    },
    "86": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"previous_bid\"",
        "0"
      ]
    },
    "87": {
      "op": "app_global_put",
      "stack_out": []
    },
    "88": {
      "op": "bytec_3 // \"asa_amount\"",
      "defined_out": [
        "\"asa_amount\""
      ],
      "stack_out": [
        "\"asa_amount\""
      ]
    },
    "89": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"asa_amount\"",
        "0"
      ]
    },
    "90": {
      "op": "app_global_put",
      "stack_out": []
    },
    "91": {
      "op": "bytec 4 // \"asa\"",
      "defined_out": [
        "\"asa\""
      ],
      "stack_out": [
        "\"asa\""
      ]
    },
    "93": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"asa\"",
        "0"
      ]
    },
    "94": {
      "op": "app_global_put",
      "stack_out": []
    },
    "95": {
      "op": "global ZeroAddress",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "97": {
      "op": "bytec_2 // \"previous_bidder\"",
      "defined_out": [
        "\"previous_bidder\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "\"previous_bidder\""
      ]
    },
    "98": {
      "op": "swap",
      "stack_out": [
        "\"previous_bidder\"",
        "new_state_value%0#0"
      ]
    },
    "99": {
      "op": "app_global_put",
      "stack_out": []
    },
    "100": {
      "retsub": true,
      "op": "retsub"
    },
    "101": {
      "subroutine": "examples.auction.contract.Auction.opt_into_asset",
      "params": {
        "asset#0": "uint64"
      },
      "block": "opt_into_asset",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "104": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "106": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "108": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "109": {
      "error": "Only creator can opt in to ASA",
      "op": "assert // Only creator can opt in to ASA",
      "stack_out": []
    },
    "110": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "111": {
      "op": "bytec 4 // \"asa\"",
      "defined_out": [
        "\"asa\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"asa\""
      ]
    },
    "113": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "114": {
      "error": "check self.asa exists",
      "op": "assert // check self.asa exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "115": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "116": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "117": {
      "error": "ASA already opted in",
      "op": "assert // ASA already opted in",
      "stack_out": []
    },
    "118": {
      "op": "bytec 4 // \"asa\"",
      "stack_out": [
        "\"asa\""
      ]
    },
    "120": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"asa\"",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "\"asa\"",
        "asset#0 (copy)"
      ]
    },
    "122": {
      "op": "app_global_put",
      "stack_out": []
    },
    "123": {
      "op": "itxn_begin"
    },
    "124": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "126": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "128": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "130": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "132": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "133": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "136": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "138": {
      "block": "opt_into_asset_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "139": {
      "retsub": true,
      "op": "retsub"
    },
    "140": {
      "subroutine": "examples.auction.contract.Auction.start_auction",
      "params": {
        "starting_price#0": "uint64",
        "length#0": "uint64",
        "axfer#0": "uint64"
      },
      "block": "start_auction",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "143": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "145": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "147": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "148": {
      "error": "auction must be started by creator",
      "op": "assert // auction must be started by creator",
      "stack_out": []
    },
    "149": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "150": {
      "op": "bytec_0 // \"auction_end\"",
      "defined_out": [
        "\"auction_end\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"auction_end\""
      ]
    },
    "151": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "152": {
      "error": "check self.auction_end exists",
      "op": "assert // check self.auction_end exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "153": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "154": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "155": {
      "error": "auction already started",
      "op": "assert // auction already started",
      "stack_out": []
    },
    "156": {
      "op": "frame_dig -1",
      "defined_out": [
        "axfer#0 (copy)"
      ],
      "stack_out": [
        "axfer#0 (copy)"
      ]
    },
    "158": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "160": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "162": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "163": {
      "error": "axfer must transfer to this app",
      "op": "assert // axfer must transfer to this app",
      "stack_out": []
    },
    "164": {
      "op": "frame_dig -1",
      "stack_out": [
        "axfer#0 (copy)"
      ]
    },
    "166": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "168": {
      "op": "bytec_3 // \"asa_amount\"",
      "defined_out": [
        "\"asa_amount\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0",
        "\"asa_amount\""
      ]
    },
    "169": {
      "op": "swap",
      "stack_out": [
        "\"asa_amount\"",
        "new_state_value%0#0"
      ]
    },
    "170": {
      "op": "app_global_put",
      "stack_out": []
    },
    "171": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "173": {
      "op": "frame_dig -2",
      "defined_out": [
        "length#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "length#0 (copy)"
      ]
    },
    "175": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "176": {
      "op": "bytec_0 // \"auction_end\"",
      "stack_out": [
        "new_state_value%1#0",
        "\"auction_end\""
      ]
    },
    "177": {
      "op": "swap",
      "stack_out": [
        "\"auction_end\"",
        "new_state_value%1#0"
      ]
    },
    "178": {
      "op": "app_global_put",
      "stack_out": []
    },
    "179": {
      "op": "bytec_1 // \"previous_bid\"",
      "defined_out": [
        "\"previous_bid\""
      ],
      "stack_out": [
        "\"previous_bid\""
      ]
    },
    "180": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"previous_bid\"",
        "starting_price#0 (copy)"
      ],
      "stack_out": [
        "\"previous_bid\"",
        "starting_price#0 (copy)"
      ]
    },
    "182": {
      "op": "app_global_put",
      "stack_out": []
    },
    "183": {
      "retsub": true,
      "op": "retsub"
    },
    "184": {
      "subroutine": "examples.auction.contract.Auction.opt_in",
      "params": {},
      "block": "opt_in",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "185": {
      "subroutine": "examples.auction.contract.Auction.bid",
      "params": {
        "pay#0": "uint64"
      },
      "block": "bid",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "188": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "190": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "191": {
      "op": "bytec_0 // \"auction_end\"",
      "defined_out": [
        "\"auction_end\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"auction_end\""
      ]
    },
    "192": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "193": {
      "error": "check self.auction_end exists",
      "op": "assert // check self.auction_end exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "194": {
      "op": "<",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "195": {
      "error": "auction has ended",
      "op": "assert // auction has ended",
      "stack_out": []
    },
    "196": {
      "op": "frame_dig -1",
      "defined_out": [
        "pay#0 (copy)"
      ],
      "stack_out": [
        "pay#0 (copy)"
      ]
    },
    "198": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "200": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "202": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "203": {
      "error": "payment sender must match transaction sender",
      "op": "assert // payment sender must match transaction sender",
      "stack_out": []
    },
    "204": {
      "op": "frame_dig -1",
      "stack_out": [
        "pay#0 (copy)"
      ]
    },
    "206": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "208": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "209": {
      "op": "bytec_1 // \"previous_bid\"",
      "defined_out": [
        "\"previous_bid\"",
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0",
        "\"previous_bid\""
      ]
    },
    "210": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "211": {
      "error": "check self.previous_bid exists",
      "op": "assert // check self.previous_bid exists",
      "stack_out": [
        "tmp%5#0",
        "maybe_value%1#0"
      ]
    },
    "212": {
      "op": ">",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "213": {
      "error": "Bid must be higher than previous bid",
      "op": "assert // Bid must be higher than previous bid",
      "stack_out": []
    },
    "214": {
      "op": "frame_dig -1",
      "stack_out": [
        "pay#0 (copy)"
      ]
    },
    "216": {
      "op": "gtxns Amount",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "218": {
      "op": "bytec_1 // \"previous_bid\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"previous_bid\""
      ]
    },
    "219": {
      "op": "swap",
      "stack_out": [
        "\"previous_bid\"",
        "new_state_value%0#0"
      ]
    },
    "220": {
      "op": "app_global_put",
      "stack_out": []
    },
    "221": {
      "op": "frame_dig -1",
      "stack_out": [
        "pay#0 (copy)"
      ]
    },
    "223": {
      "op": "gtxns Sender",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "225": {
      "op": "bytec_2 // \"previous_bidder\"",
      "defined_out": [
        "\"previous_bidder\"",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "\"previous_bidder\""
      ]
    },
    "226": {
      "op": "swap",
      "stack_out": [
        "\"previous_bidder\"",
        "new_state_value%1#0"
      ]
    },
    "227": {
      "op": "app_global_put",
      "stack_out": []
    },
    "228": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "230": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%7#0",
        "pay#0 (copy)"
      ]
    },
    "232": {
      "op": "gtxns Amount",
      "defined_out": [
        "new_state_value%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%2#0"
      ]
    },
    "234": {
      "op": "swap",
      "stack_out": [
        "new_state_value%2#0",
        "tmp%7#0"
      ]
    },
    "235": {
      "op": "bytec 5 // \"claim\"",
      "defined_out": [
        "\"claim\"",
        "new_state_value%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "new_state_value%2#0",
        "tmp%7#0",
        "\"claim\""
      ]
    },
    "237": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%7#0",
        "\"claim\"",
        "new_state_value%2#0"
      ]
    },
    "239": {
      "op": "app_local_put",
      "stack_out": []
    },
    "240": {
      "retsub": true,
      "op": "retsub"
    },
    "241": {
      "subroutine": "examples.auction.contract.Auction.claim_bids",
      "params": {},
      "block": "claim_bids",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "244": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "246": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "247": {
      "op": "bytec 5 // \"claim\"",
      "defined_out": [
        "\"claim\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"claim\""
      ]
    },
    "249": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "250": {
      "error": "check self.claimable_amount exists for account",
      "op": "assert // check self.claimable_amount exists for account",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "251": {
      "op": "dupn 2",
      "defined_out": [
        "amount#0",
        "original_amount#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#0"
      ]
    },
    "253": {
      "op": "txn Sender",
      "defined_out": [
        "amount#0",
        "original_amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#0",
        "tmp%1#0"
      ]
    },
    "255": {
      "op": "intc_0 // 0",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#0",
        "tmp%1#0",
        "0"
      ]
    },
    "256": {
      "op": "bytec_2 // \"previous_bidder\"",
      "defined_out": [
        "\"previous_bidder\"",
        "0",
        "amount#0",
        "original_amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#0",
        "tmp%1#0",
        "0",
        "\"previous_bidder\""
      ]
    },
    "257": {
      "op": "app_global_get_ex",
      "defined_out": [
        "amount#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "original_amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#0",
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "258": {
      "error": "check self.previous_bidder exists",
      "op": "assert // check self.previous_bidder exists",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#0",
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "259": {
      "op": "==",
      "defined_out": [
        "amount#0",
        "amount#5",
        "original_amount#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "tmp%2#0"
      ]
    },
    "260": {
      "op": "bz claim_bids_after_if_else@2",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5"
      ]
    },
    "263": {
      "block": "claim_bids_if_body@1",
      "stack_in": [
        "original_amount#0",
        "amount#0",
        "amount#5"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "0"
      ]
    },
    "264": {
      "op": "bytec_1 // \"previous_bid\"",
      "defined_out": [
        "\"previous_bid\"",
        "0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "0",
        "\"previous_bid\""
      ]
    },
    "265": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "266": {
      "error": "check self.previous_bid exists",
      "op": "assert // check self.previous_bid exists",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "maybe_value%2#0"
      ]
    },
    "267": {
      "op": "frame_dig 1",
      "defined_out": [
        "amount#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "maybe_value%2#0",
        "amount#0"
      ]
    },
    "269": {
      "op": "swap",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "amount#0",
        "maybe_value%2#0"
      ]
    },
    "270": {
      "op": "-",
      "defined_out": [
        "amount#0",
        "amount#5"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "amount#5"
      ]
    },
    "271": {
      "op": "frame_bury 2",
      "defined_out": [
        "amount#0",
        "amount#5"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5"
      ]
    },
    "273": {
      "block": "claim_bids_after_if_else@2",
      "stack_in": [
        "original_amount#0",
        "amount#0",
        "amount#5"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "amount#0"
      ]
    },
    "275": {
      "op": "dup",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "amount#0",
        "amount#0"
      ]
    },
    "276": {
      "op": "frame_bury 1",
      "defined_out": [
        "amount#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "amount#0"
      ]
    },
    "278": {
      "op": "itxn_begin",
      "defined_out": [
        "amount#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "279": {
      "op": "txn Sender",
      "defined_out": [
        "amount#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "281": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "283": {
      "op": "itxn_field Amount",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5"
      ]
    },
    "285": {
      "op": "intc_1 // pay",
      "defined_out": [
        "amount#0",
        "pay"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "pay"
      ]
    },
    "286": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5"
      ]
    },
    "288": {
      "op": "intc_0 // 0",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "0"
      ]
    },
    "289": {
      "op": "itxn_field Fee",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5"
      ]
    },
    "291": {
      "block": "claim_bids_next_txn@3",
      "stack_in": [
        "original_amount#0",
        "amount#0",
        "amount#5"
      ],
      "op": "itxn_submit"
    },
    "292": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "tmp%3#0"
      ]
    },
    "294": {
      "op": "frame_dig 0",
      "defined_out": [
        "original_amount#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "tmp%3#0",
        "original_amount#0"
      ]
    },
    "296": {
      "op": "frame_dig 1",
      "defined_out": [
        "amount#0",
        "original_amount#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "tmp%3#0",
        "original_amount#0",
        "amount#0"
      ]
    },
    "298": {
      "op": "-",
      "defined_out": [
        "amount#0",
        "new_state_value%0#0",
        "original_amount#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "tmp%3#0",
        "new_state_value%0#0"
      ]
    },
    "299": {
      "op": "swap",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "new_state_value%0#0",
        "tmp%3#0"
      ]
    },
    "300": {
      "op": "bytec 5 // \"claim\"",
      "defined_out": [
        "\"claim\"",
        "amount#0",
        "new_state_value%0#0",
        "original_amount#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "new_state_value%0#0",
        "tmp%3#0",
        "\"claim\""
      ]
    },
    "302": {
      "op": "uncover 2",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5",
        "tmp%3#0",
        "\"claim\"",
        "new_state_value%0#0"
      ]
    },
    "304": {
      "op": "app_local_put",
      "stack_out": [
        "original_amount#0",
        "amount#0",
        "amount#5"
      ]
    },
    "305": {
      "retsub": true,
      "op": "retsub"
    },
    "306": {
      "subroutine": "examples.auction.contract.Auction.claim_asset",
      "params": {
        "asset#0": "uint64"
      },
      "block": "claim_asset",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "309": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "311": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "312": {
      "op": "bytec_0 // \"auction_end\"",
      "defined_out": [
        "\"auction_end\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"auction_end\""
      ]
    },
    "313": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "314": {
      "error": "check self.auction_end exists",
      "op": "assert // check self.auction_end exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "315": {
      "op": ">",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "316": {
      "error": "auction has not ended",
      "op": "assert // auction has not ended",
      "stack_out": []
    },
    "317": {
      "op": "itxn_begin"
    },
    "318": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "320": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "321": {
      "op": "bytec_2 // \"previous_bidder\"",
      "defined_out": [
        "\"previous_bidder\"",
        "0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0",
        "\"previous_bidder\""
      ]
    },
    "322": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "323": {
      "error": "check self.previous_bidder exists",
      "op": "assert // check self.previous_bidder exists",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "324": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "0"
      ]
    },
    "325": {
      "op": "bytec_2 // \"previous_bidder\"",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "0",
        "\"previous_bidder\""
      ]
    },
    "326": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "327": {
      "error": "check self.previous_bidder exists",
      "op": "assert // check self.previous_bidder exists",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "328": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "329": {
      "op": "bytec_3 // \"asa_amount\"",
      "defined_out": [
        "\"asa_amount\"",
        "0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"asa_amount\""
      ]
    },
    "330": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "331": {
      "error": "check self.asa_amount exists",
      "op": "assert // check self.asa_amount exists",
      "defined_out": [
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0"
      ]
    },
    "332": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "334": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetCloseTo_idx_0#0"
      ]
    },
    "336": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "338": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "340": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "341": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "343": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "344": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "346": {
      "block": "claim_asset_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "347": {
      "retsub": true,
      "op": "retsub"
    },
    "348": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "350": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "351": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "352": {
      "op": "bz approval_program_bare_routing@11",
      "stack_out": []
    },
    "355": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "358": {
      "op": "pushbytes 0x2826b202 // method \"opt_into_asset(asset)void\"",
      "defined_out": [
        "Method(opt_into_asset(asset)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(opt_into_asset(asset)void)"
      ]
    },
    "364": {
      "op": "pushbytes 0xf0aa7023 // method \"start_auction(uint64,uint64,axfer)void\"",
      "defined_out": [
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)"
      ]
    },
    "370": {
      "op": "pushbytes 0x30c6d58a // method \"opt_in()void\"",
      "defined_out": [
        "Method(opt_in()void)",
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)",
        "Method(opt_in()void)"
      ]
    },
    "376": {
      "op": "pushbytes 0xdb7fe843 // method \"bid(pay)void\"",
      "defined_out": [
        "Method(bid(pay)void)",
        "Method(opt_in()void)",
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)",
        "Method(opt_in()void)",
        "Method(bid(pay)void)"
      ]
    },
    "382": {
      "op": "pushbytes 0xe654625b // method \"claim_bids()void\"",
      "defined_out": [
        "Method(bid(pay)void)",
        "Method(claim_bids()void)",
        "Method(opt_in()void)",
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)",
        "Method(opt_in()void)",
        "Method(bid(pay)void)",
        "Method(claim_bids()void)"
      ]
    },
    "388": {
      "op": "pushbytes 0x1ec12bef // method \"claim_asset(asset)void\"",
      "defined_out": [
        "Method(bid(pay)void)",
        "Method(claim_asset(asset)void)",
        "Method(claim_bids()void)",
        "Method(opt_in()void)",
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)",
        "Method(opt_in()void)",
        "Method(bid(pay)void)",
        "Method(claim_bids()void)",
        "Method(claim_asset(asset)void)"
      ]
    },
    "394": {
      "op": "uncover 6",
      "stack_out": [
        "Method(opt_into_asset(asset)void)",
        "Method(start_auction(uint64,uint64,axfer)void)",
        "Method(opt_in()void)",
        "Method(bid(pay)void)",
        "Method(claim_bids()void)",
        "Method(claim_asset(asset)void)",
        "tmp%2#0"
      ]
    },
    "396": {
      "op": "match approval_program_opt_into_asset_route@3 approval_program_start_auction_route@4 approval_program_opt_in_route@5 approval_program_bid_route@6 approval_program_claim_bids_route@7 approval_program_claim_asset_route@8",
      "stack_out": []
    },
    "410": {
      "block": "approval_program_after_if_else@17",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "411": {
      "block": "approval_program_after_inlined_examples.auction.contract.Auction.__puya_arc4_router__@18",
      "stack_in": [
        "tmp%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "412": {
      "block": "approval_program_claim_asset_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "414": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "NoOp"
      ]
    },
    "415": {
      "op": "==",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "416": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "417": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "419": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "0"
      ]
    },
    "420": {
      "op": "!=",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "421": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "422": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "425": {
      "op": "btoi",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "426": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "428": {
      "callsub": "examples.auction.contract.Auction.claim_asset",
      "op": "callsub claim_asset",
      "stack_out": []
    },
    "431": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "432": {
      "op": "b approval_program_after_inlined_examples.auction.contract.Auction.__puya_arc4_router__@18"
    },
    "435": {
      "block": "approval_program_claim_bids_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "437": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "NoOp"
      ]
    },
    "438": {
      "op": "==",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "439": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "440": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "442": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "0"
      ]
    },
    "443": {
      "op": "!=",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "444": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "445": {
      "callsub": "examples.auction.contract.Auction.claim_bids",
      "op": "callsub claim_bids"
    },
    "448": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "449": {
      "op": "b approval_program_after_inlined_examples.auction.contract.Auction.__puya_arc4_router__@18"
    },
    "452": {
      "block": "approval_program_bid_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "454": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "NoOp"
      ]
    },
    "455": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "456": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "457": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "459": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "0"
      ]
    },
    "460": {
      "op": "!=",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "461": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "462": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "464": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "1"
      ]
    },
    "465": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "466": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "467": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "469": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "470": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "471": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "472": {
      "callsub": "examples.auction.contract.Auction.bid",
      "op": "callsub bid",
      "stack_out": []
    },
    "475": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "476": {
      "op": "b approval_program_after_inlined_examples.auction.contract.Auction.__puya_arc4_router__@18"
    },
    "479": {
      "block": "approval_program_opt_in_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "481": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "NoOp"
      ]
    },
    "482": {
      "op": "==",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "483": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "484": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "486": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "0"
      ]
    },
    "487": {
      "op": "!=",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "488": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "489": {
      "callsub": "examples.auction.contract.Auction.opt_in",
      "op": "callsub opt_in"
    },
    "492": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "493": {
      "op": "b approval_program_after_inlined_examples.auction.contract.Auction.__puya_arc4_router__@18"
    },
    "496": {
      "block": "approval_program_start_auction_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "498": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "NoOp"
      ]
    },
    "499": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "500": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "501": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "503": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "504": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "505": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "506": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "509": {
      "op": "btoi",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "510": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "513": {
      "op": "btoi",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "514": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "516": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "1"
      ]
    },
    "517": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "gtxn_idx%0#0"
      ]
    },
    "518": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "519": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "521": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "axfer"
      ]
    },
    "522": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "523": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "gtxn_idx%0#0"
      ]
    },
    "524": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%14#0",
        "gtxn_idx%0#0",
        "tmp%13#0"
      ]
    },
    "526": {
      "op": "uncover 2",
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "528": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "gtxn_idx%0#0"
      ]
    },
    "530": {
      "callsub": "examples.auction.contract.Auction.start_auction",
      "op": "callsub start_auction",
      "stack_out": []
    },
    "533": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "534": {
      "op": "b approval_program_after_inlined_examples.auction.contract.Auction.__puya_arc4_router__@18"
    },
    "537": {
      "block": "approval_program_opt_into_asset_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "539": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "540": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "541": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "542": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "544": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "545": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "546": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "547": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "550": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "551": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "553": {
      "callsub": "examples.auction.contract.Auction.opt_into_asset",
      "op": "callsub opt_into_asset",
      "stack_out": []
    },
    "556": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "557": {
      "op": "b approval_program_after_inlined_examples.auction.contract.Auction.__puya_arc4_router__@18"
    },
    "560": {
      "block": "approval_program_bare_routing@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "562": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "0"
      ]
    },
    "563": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%35#0"
      ]
    },
    "564": {
      "op": "match approval_program___algopy_default_create@12",
      "stack_out": []
    },
    "568": {
      "block": "approval_program_switch_case_next@16",
      "stack_in": [],
      "op": "b approval_program_after_if_else@17"
    },
    "571": {
      "block": "approval_program___algopy_default_create@12",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "573": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "0"
      ]
    },
    "574": {
      "op": "==",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "575": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "576": {
      "block": "approval_program_after_inlined_examples.auction.contract.Auction.__algopy_default_create@14",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "577": {
      "op": "b approval_program_after_inlined_examples.auction.contract.Auction.__puya_arc4_router__@18"
    }
  }
}