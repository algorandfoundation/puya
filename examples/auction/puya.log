debug: PuyaPyOptions(output_teal=True, output_arc32=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, match_algod_bytecode=False, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions=[], template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['auction'], output_awst=True, output_awst_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
info: writing auction/out/module.awst
debug: Sealing block@0: // L12
debug: Terminated block@0: // L12
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L20
debug: Terminated block@1: // while_top_L20
debug: Sealing block@2: // while_body_L21
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L20
debug: Terminated block@2: // while_body_L21
debug: Sealing block@3: // switch_case_0_L28
debug: Terminated block@3: // switch_case_0_L28
debug: Sealing block@4: // switch_case_1_L30
debug: Terminated block@4: // switch_case_1_L30
debug: Sealing block@5: // switch_case_default_L26
debug: Terminated block@5: // switch_case_default_L26
debug: Sealing block@6: // switch_case_next_L26
debug: Terminated block@6: // switch_case_next_L26
debug: Sealing block@1: // while_top_L20
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L12
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L26
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L12
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L26
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7: // after_while_L20
debug: Terminated block@7: // after_while_L20
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@2: // while_body_L12
debug: Terminated block@2: // while_body_L12
debug: Sealing block@3: // if_body_L13
debug: Terminated block@3: // if_body_L13
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L4
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L4
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L4
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L25
debug: Terminated block@0: // L25
debug: Sealing block@0: // L44
debug: Terminated block@0: // L44
debug: Sealing block@0: // L62
debug: Terminated block@0: // L62
debug: Sealing block@0: // L92
debug: Terminated block@0: // L92
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L110
debug: Terminated block@1: // for_header_L110
debug: Sealing block@2: // for_body_L111
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1: // for_header_L110
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L110
debug: Terminated block@2: // for_body_L111
debug: Sealing block@3: // for_footer_L110
debug: Terminated block@3: // for_footer_L110
debug: Sealing block@1: // for_header_L110
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L92
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L110
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0: // L92
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L92
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L110
debug: Sealing block@4: // after_for_L110
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1: // for_header_L110
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0: // L92
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1: // for_header_L110
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0: // L92
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1: // for_header_L110
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0: // L92
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1: // for_header_L110
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0: // L92
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L110
debug: Sealing block@0: // L124
debug: Terminated block@0: // L124
debug: Sealing block@1: // if_body_L147
debug: Terminated block@1: // if_body_L147
debug: Sealing block@2: // after_if_else_L146
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L146
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L124
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L146
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0: // L124
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L146
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L124
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L146
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@3: // for_header_L150
debug: Terminated block@3: // for_header_L150
debug: Sealing block@4: // for_body_L151
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3: // for_header_L150
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3: // for_header_L150
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3: // for_header_L150
debug: Terminated block@4: // for_body_L151
debug: Sealing block@5: // for_footer_L150
debug: Terminated block@5: // for_footer_L150
debug: Sealing block@3: // for_header_L150
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@2) in block@2: // after_if_else_L146
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@2, i#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2: // after_if_else_L146
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0: // L124
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1: // if_body_L147
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2: // after_if_else_L146
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@5) in block@5: // for_footer_L150
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2: // after_if_else_L146
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L146
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L124
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2: // after_if_else_L146
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) in block@5: // for_footer_L150
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0 in current definition for 3 blocks
debug: Sealing block@6: // after_for_L150
debug: Terminated block@6: // after_for_L150
debug: Sealing block@0: // L157
debug: Terminated block@0: // L157
debug: Sealing block@0: // L189
debug: Terminated block@0: // L189
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L199
debug: Terminated block@1: // for_header_L199
debug: Sealing block@2: // for_body_L200
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L199
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L199
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1: // for_header_L199
debug: Terminated block@2: // for_body_L200
debug: Sealing block@3: // for_footer_L199
debug: Terminated block@3: // for_footer_L199
debug: Sealing block@1: // for_header_L199
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L189
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L199
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L189
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L199
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0: // L189
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L199
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1: // for_header_L199
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L189
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L199
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5: // for_header_L204
debug: Terminated block@5: // for_header_L204
debug: Sealing block@6: // for_body_L205
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5: // for_header_L204
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5: // for_header_L204
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5: // for_header_L204
debug: Terminated block@6: // for_body_L205
debug: Sealing block@7: // for_footer_L204
debug: Terminated block@7: // for_footer_L204
debug: Sealing block@5: // for_header_L204
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4: // after_for_L199
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7: // for_footer_L204
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L199
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4: // after_for_L199
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7: // for_footer_L204
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4: // after_for_L199
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8: // after_for_L204
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5: // for_header_L204
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1: // for_header_L199
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0: // L189
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // for_header_L204
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5: // for_header_L204
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8: // after_for_L204
debug: Sealing block@0: // L217
debug: Terminated block@0: // L217
debug: Sealing block@0: // L240
debug: Terminated block@0: // L240
debug: Sealing block@0: // L252
debug: Terminated block@0: // L252
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L269
debug: Terminated block@1: // for_header_L269
debug: Sealing block@2: // for_body_L270
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L269
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1: // for_header_L269
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1: // for_header_L269
debug: Terminated block@2: // for_body_L270
debug: Sealing block@3: // for_footer_L269
debug: Terminated block@3: // for_footer_L269
debug: Sealing block@1: // for_header_L269
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L252
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L252
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0: // L252
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0: // L252
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L269
debug: Terminated block@4: // after_for_L269
debug: Sealing block@0: // L278
debug: Terminated block@0: // L278
debug: Sealing block@0: // L306
debug: Terminated block@0: // L306
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L327
debug: Terminated block@1: // for_header_L327
debug: Sealing block@2: // for_body_L328
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1: // for_header_L327
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L327
debug: Terminated block@2: // for_body_L328
debug: Sealing block@3: // for_footer_L327
debug: Terminated block@3: // for_footer_L327
debug: Sealing block@1: // for_header_L327
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L306
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3: // for_footer_L327
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0: // L306
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3: // for_footer_L327
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L306
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3: // for_footer_L327
debug: Sealing block@4: // after_for_L327
debug: Terminated block@4: // after_for_L327
debug: Sealing block@0: // L16
debug: Terminated block@0: // L16
debug: Sealing block@1: // abi_routing_L16
debug: Terminated block@1: // abi_routing_L16
debug: Sealing block@2: // opt_into_asset_route_L25
debug: Terminated block@2: // opt_into_asset_route_L25
debug: Sealing block@3: // start_auction_route_L40
debug: Terminated block@3: // start_auction_route_L40
debug: Sealing block@4: // opt_in_route_L62
debug: Terminated block@4: // opt_in_route_L62
debug: Sealing block@5: // bid_route_L66
debug: Terminated block@5: // bid_route_L66
debug: Sealing block@6: // claim_bids_route_L82
debug: Terminated block@6: // claim_bids_route_L82
debug: Sealing block@7: // claim_asset_route_L97
debug: Terminated block@7: // claim_asset_route_L97
debug: Sealing block@8: // switch_case_default_L16
debug: Terminated block@8: // switch_case_default_L16
debug: Sealing block@9: // switch_case_next_L16
debug: Terminated block@9: // switch_case_next_L16
debug: Sealing block@10: // bare_routing_L16
debug: Terminated block@10: // bare_routing_L16
debug: Sealing block@11: // __algopy_default_create_L16
debug: Terminated block@11: // __algopy_default_create_L16
debug: Sealing block@12: // switch_case_default_L16
debug: Terminated block@12: // switch_case_default_L16
debug: Sealing block@13: // switch_case_next_L16
debug: Terminated block@13: // switch_case_next_L16
debug: Sealing block@14: // after_if_else_L16
debug: Terminated block@14: // after_if_else_L16
debug: Sealing block@0: // L25
debug: Terminated block@0: // L25
debug: Sealing block@1: // next_txn_L35
debug: Terminated block@1: // next_txn_L35
debug: Sealing block@0: // L40
debug: Terminated block@0: // L40
debug: Sealing block@0: // L62
debug: Terminated block@0: // L62
debug: Sealing block@0: // L66
debug: Terminated block@0: // L66
debug: Sealing block@0: // L82
debug: Terminated block@0: // L82
debug: Sealing block@1: // if_body_L88
debug: Terminated block@1: // if_body_L88
debug: Sealing block@2: // after_if_else_L87
debug: Created Phi assignment: let amount#2: uint64 = undefined while trying to resolve 'amount' in block@2: // after_if_else_L87
debug: Added amount#0 to Phi node: let amount#2: uint64 = φ(amount#0 <- block@0) in block@0: // L82
debug: Added amount#1 to Phi node: let amount#2: uint64 = φ(amount#0 <- block@0, amount#1 <- block@1) in block@1: // if_body_L88
debug: Terminated block@2: // after_if_else_L87
debug: Sealing block@3: // next_txn_L90
debug: Created Phi assignment: let original_amount#1: uint64 = undefined while trying to resolve 'original_amount' in block@2: // after_if_else_L87
debug: Added original_amount#0 to Phi node: let original_amount#1: uint64 = φ(original_amount#0 <- block@0) in block@0: // L82
debug: Added original_amount#0 to Phi node: let original_amount#1: uint64 = φ(original_amount#0 <- block@0, original_amount#0 <- block@1) in block@1: // if_body_L88
debug: Replacing trivial Phi node: let original_amount#1: uint64 = φ(original_amount#0 <- block@0, original_amount#0 <- block@1) (original_amount#1) with original_amount#0
debug: Deleting Phi assignment: let original_amount#1: uint64 = φ(original_amount#0 <- block@0, original_amount#0 <- block@1)
debug: Replaced trivial Phi node: let original_amount#1: uint64 = φ(original_amount#0 <- block@0, original_amount#0 <- block@1) (original_amount#1) with original_amount#0 in current definition for 1 blocks
debug: Terminated block@3: // next_txn_L90
debug: Sealing block@0: // L97
debug: Terminated block@0: // L97
debug: Sealing block@1: // next_txn_L101
debug: Terminated block@1: // next_txn_L101
debug: Sealing block@0: // L16
debug: Terminated block@0: // L16
debug: Sealing block@0: // L17
debug: Terminated block@0: // L17
debug: Sealing block@0: // L1
debug: Terminated block@0: // L1
debug: Sealing block@1: // on_create_L17
debug: Terminated block@1: // on_create_L17
debug: Sealing block@2: // entrypoint_L17
debug: Terminated block@2: // entrypoint_L17
debug: Sealing block@0: // L115
debug: Terminated block@0: // L115
debug: Output IR to auction/out/Auction.ssa.ir
info: optimizing examples.auction.contract.Auction at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.__puya_arc4_router__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%10#0 NoOp) to (! tmp%10#0)
debug: Simplified (== tmp%19#0 NoOp) to (! tmp%19#0)
debug: Simplified (== tmp%23#0 NoOp) to (! tmp%23#0)
debug: Simplified (== tmp%28#0 NoOp) to (! tmp%28#0)
debug: Simplified (== tmp%32#0 NoOp) to (! tmp%32#0)
debug: Simplified (== tmp%40#0 0u) to (! tmp%40#0)
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable tmp%35#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L16 as a predecessor of block@9: // switch_case_next_L16 due to inlining of block@8: // switch_case_default_L16
debug: simplified terminator of block@1: // abi_routing_L16 from switch tmp%2#0 {method "opt_into_asset(asset)void" => block@2, method "start_auction(uint64,uint64,axfer)void" => block@3, method "opt_in()void" => block@4, method "bid(pay)void" => block@5, method "claim_bids()void" => block@6, method "claim_asset(asset)void" => block@7, * => block@8} to switch tmp%2#0 {method "opt_into_asset(asset)void" => block@2, method "start_auction(uint64,uint64,axfer)void" => block@3, method "opt_in()void" => block@4, method "bid(pay)void" => block@5, method "claim_bids()void" => block@6, method "claim_asset(asset)void" => block@7, * => block@9}
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@10: // bare_routing_L16 from switch tmp%39#0 {0u => block@11, * => block@12} to goto_nth [block@11][tmp%39#0] else goto block@12
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L16 as a predecessor of block@14: // after_if_else_L16 due to inlining of block@9: // switch_case_next_L16
debug: simplified terminator of block@1: // abi_routing_L16 from switch tmp%2#0 {method "opt_into_asset(asset)void" => block@2, method "start_auction(uint64,uint64,axfer)void" => block@3, method "opt_in()void" => block@4, method "bid(pay)void" => block@5, method "claim_bids()void" => block@6, method "claim_asset(asset)void" => block@7, * => block@9} to switch tmp%2#0 {method "opt_into_asset(asset)void" => block@2, method "start_auction(uint64,uint64,axfer)void" => block@3, method "opt_in()void" => block@4, method "bid(pay)void" => block@5, method "claim_bids()void" => block@6, method "claim_asset(asset)void" => block@7, * => block@14}
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@10: // bare_routing_L16 from goto_nth [block@11][tmp%39#0] else goto block@12 to goto tmp%39#0 ? block@12 : block@11
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@1: // abi_routing_L16 from switch tmp%2#0 {method "opt_into_asset(asset)void" => block@2, method "start_auction(uint64,uint64,axfer)void" => block@3, method "opt_in()void" => block@4, method "bid(pay)void" => block@5, method "claim_bids()void" => block@6, method "claim_asset(asset)void" => block@7, * => block@14} to switch tmp%2#0 {method "opt_into_asset(asset)void" => block@2, method "start_auction(uint64,uint64,axfer)void" => block@3, method "opt_in()void" => block@4, method "bid(pay)void" => block@5, method "claim_bids()void" => block@6, method "claim_asset(asset)void" => block@7, * => return 0u}
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@9: // switch_case_next_L16 with block@8: // switch_case_default_L16 in block@14: // after_if_else_L16
debug: Merged linear block@9: // switch_case_next_L16 into block@8: // switch_case_default_L16
debug: Replaced predecessor block@13: // switch_case_next_L16 with block@12: // switch_case_default_L16 in block@14: // after_if_else_L16
debug: Merged linear block@13: // switch_case_next_L16 into block@12: // switch_case_default_L16
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@8: // switch_case_default_L16
debug: Removed empty block: block@12: // switch_case_default_L16
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.opt_into_asset
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: asset#0, inner_txn_params%0%%param_XferAsset_idx_0#0
debug: Replacing {inner_txn_params%0%%param_XferAsset_idx_0#0} with asset#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== maybe_value%0#0 0u) to (! maybe_value%0#0)
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@1: // next_txn_L35 into block@0: // L25
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.start_auction
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== maybe_value%0#0 0u) to (! maybe_value%0#0)
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.opt_in
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.bid
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let new_state_value%0#0: uint64 = ((gtxns Amount) pay#0) with copy of existing registers (Register(source_location=auction/contract.py:73:15-25, ir_type=uint64, name='tmp%5', version=0),)
debug: Replacing redundant declaration let new_state_value%1#0: bytes = ((gtxns Sender) pay#0) with copy of existing registers (Register(source_location=auction/contract.py:72:15-25, ir_type=bytes, name='tmp%2', version=0),)
debug: Replacing redundant declaration let new_state_value%2#0: uint64 = ((gtxns Amount) pay#0) with copy of existing registers (Register(source_location=auction/contract.py:73:15-25, ir_type=uint64, name='tmp%5', version=0),)
debug: Found equivalence set: tmp%5#0, new_state_value%0#0, new_state_value%2#0
debug: Replacing {new_state_value%0#0, new_state_value%2#0} with tmp%5#0 made 2 modifications
debug: Found equivalence set: tmp%2#0, new_state_value%1#0
debug: Replacing {new_state_value%1#0} with tmp%2#0 made 1 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.claim_bids
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, original_amount#0, amount#0
debug: Replacing {maybe_value%0#0, amount#0} with original_amount#0 made 3 modifications
debug: Found equivalence set: amount#2, inner_txn_params%0%%param_Amount_idx_0#0
debug: Replacing {inner_txn_params%0%%param_Amount_idx_0#0} with amount#2 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@3: // next_txn_L90 into block@2: // after_if_else_L87
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.claim_asset
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: asset#0, inner_txn_params%0%%param_XferAsset_idx_0#0
debug: Replacing {inner_txn_params%0%%param_XferAsset_idx_0#0} with asset#0 made 1 modifications
debug: Found equivalence set: maybe_value%1#0, inner_txn_params%0%%param_AssetCloseTo_idx_0#0
debug: Replacing {inner_txn_params%0%%param_AssetCloseTo_idx_0#0} with maybe_value%1#0 made 1 modifications
debug: Found equivalence set: maybe_value%2#0, inner_txn_params%0%%param_AssetReceiver_idx_0#0
debug: Replacing {inner_txn_params%0%%param_AssetReceiver_idx_0#0} with maybe_value%2#0 made 1 modifications
debug: Found equivalence set: maybe_value%3#0, inner_txn_params%0%%param_AssetAmount_idx_0#0
debug: Replacing {inner_txn_params%0%%param_AssetAmount_idx_0#0} with maybe_value%3#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@1: // next_txn_L101 into block@0: // L97
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.__algopy_default_create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to auction/out/Auction.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.opt_into_asset
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.start_auction
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.bid
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.claim_bids
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.claim_asset
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine examples.auction.contract.Auction.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: No optimizations performed in pass 2, ending loop
debug: Removing Phis from algopy.arc4.ARC4Contract.approval_program
debug: Removing Phis from examples.auction.contract.Auction.__puya_arc4_router__
debug: Removing Phis from examples.auction.contract.Auction.opt_into_asset
debug: Removing Phis from examples.auction.contract.Auction.start_auction
debug: Removing Phis from examples.auction.contract.Auction.bid
debug: Removing Phis from examples.auction.contract.Auction.claim_bids
debug: Removing Phis from examples.auction.contract.Auction.claim_asset
debug: Removing Phis from examples.auction.contract.Auction.__init__
debug: Removing Phis from examples.auction.contract.Auction.clear_state_program
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.auction.contract.Auction.__puya_arc4_router__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.auction.contract.Auction.opt_into_asset using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.auction.contract.Auction.start_auction using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.auction.contract.Auction.bid using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.auction.contract.Auction.claim_bids using strategy RootOperandGrouping
debug: Coalescing amount#1 with [amount#4, amount#2]
debug: Coalescing resulted in 6 replacement/s
debug: Coalescing local variables in examples.auction.contract.Auction.claim_asset using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.auction.contract.Auction.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.auction.contract.Auction.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Sequentializing parallel copies in examples.auction.contract.Auction.__puya_arc4_router__
debug: Sequentializing parallel copies in examples.auction.contract.Auction.opt_into_asset
debug: Sequentializing parallel copies in examples.auction.contract.Auction.start_auction
debug: Sequentializing parallel copies in examples.auction.contract.Auction.bid
debug: Sequentializing parallel copies in examples.auction.contract.Auction.claim_bids
debug: Sequentializing parallel copies in examples.auction.contract.Auction.claim_asset
debug: Sequentializing parallel copies in examples.auction.contract.Auction.__init__
debug: Sequentializing parallel copies in examples.auction.contract.Auction.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to auction/out/Auction.destructured.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Found 1 edge set/s for examples.auction.contract.Auction.approval_program
debug: Inserted __puya_arc4_router___block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___abi_routing@1.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___abi_routing@1.ops[9]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___opt_into_asset_route@2.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___opt_into_asset_route@2.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___opt_into_asset_route@2.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___opt_into_asset_route@2.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___opt_into_asset_route@2.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___opt_into_asset_route@2.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___opt_into_asset_route@2.ops[15]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___opt_into_asset_route@2.ops[17]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___opt_into_asset_route@2.ops[19]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___opt_into_asset_route@2.ops[21]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___opt_into_asset_route@2.ops[23]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___opt_into_asset_route@2.ops[25]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[1]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[3]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[5]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[7]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[10]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[12]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[15]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[17]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[21]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[23]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[27]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[29]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[32]: 'store gtxn_idx%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[34]: 'load gtxn_idx%0#0' with 'load gtxn_idx%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[36]: 'store gtxn_type%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[38]: 'load gtxn_type%0#0' with 'load gtxn_type%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[41]: 'store gtxn_type_matches%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[43]: 'load gtxn_type_matches%0#0' with 'load gtxn_type_matches%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[35]: 'store gtxn_idx%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[48]: 'load gtxn_idx%0#0' with 'load gtxn_idx%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[25]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[48]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___start_auction_route@3.ops[19]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___start_auction_route@3.ops[48]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___opt_in_route@4.ops[1]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___opt_in_route@4.ops[3]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___opt_in_route@4.ops[5]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___opt_in_route@4.ops[7]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___opt_in_route@4.ops[10]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___opt_in_route@4.ops[12]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bid_route@5.ops[1]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bid_route@5.ops[3]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bid_route@5.ops[5]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bid_route@5.ops[7]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bid_route@5.ops[10]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bid_route@5.ops[12]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bid_route@5.ops[15]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bid_route@5.ops[17]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bid_route@5.ops[20]: 'store gtxn_idx%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bid_route@5.ops[22]: 'load gtxn_idx%1#0' with 'load gtxn_idx%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bid_route@5.ops[24]: 'store gtxn_type%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bid_route@5.ops[26]: 'load gtxn_type%1#0' with 'load gtxn_type%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bid_route@5.ops[29]: 'store gtxn_type_matches%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bid_route@5.ops[31]: 'load gtxn_type_matches%1#0' with 'load gtxn_type_matches%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bid_route@5.ops[23]: 'store gtxn_idx%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bid_route@5.ops[34]: 'load gtxn_idx%1#0' with 'load gtxn_idx%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___claim_bids_route@6.ops[1]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___claim_bids_route@6.ops[3]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___claim_bids_route@6.ops[5]: 'store tmp%29#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___claim_bids_route@6.ops[7]: 'load tmp%29#0' with 'load tmp%29#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___claim_bids_route@6.ops[10]: 'store tmp%30#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___claim_bids_route@6.ops[12]: 'load tmp%30#0' with 'load tmp%30#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___claim_asset_route@7.ops[1]: 'store tmp%32#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___claim_asset_route@7.ops[3]: 'load tmp%32#0' with 'load tmp%32#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___claim_asset_route@7.ops[5]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___claim_asset_route@7.ops[7]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___claim_asset_route@7.ops[10]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___claim_asset_route@7.ops[12]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___claim_asset_route@7.ops[15]: 'store tmp%36#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___claim_asset_route@7.ops[17]: 'load tmp%36#0' with 'load tmp%36#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___claim_asset_route@7.ops[19]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___claim_asset_route@7.ops[21]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___claim_asset_route@7.ops[23]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___claim_asset_route@7.ops[25]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bare_routing@10.ops[1]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bare_routing@10.ops[3]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router_____algopy_default_create@11.ops[1]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router_____algopy_default_create@11.ops[3]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router_____algopy_default_create@11.ops[5]: 'store tmp%41#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router_____algopy_default_create@11.ops[7]: 'load tmp%41#0' with 'load tmp%41#0 from l-stack (no copy)'
debug: Found 3 edge set/s for examples.auction.contract.Auction.__puya_arc4_router__
debug: Inserted opt_into_asset_block@0.ops[7]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[9]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[20]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[22]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[6]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[15]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[18]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[18]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[22]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[33]: 'store inner_txn_params%0%%param_AssetReceiver_idx_0#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[37]: 'load inner_txn_params%0%%param_AssetReceiver_idx_0#0' with 'load inner_txn_params%0%%param_AssetReceiver_idx_0#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[7]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[9]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[20]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[22]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[32]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[34]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[43]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[45]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[6]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[15]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[18]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[30]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[33]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[41]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[44]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[52]: 'store new_state_value%1#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[55]: 'load new_state_value%1#0' with 'load new_state_value%1#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[18]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[22]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[30]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[35]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[12]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[14]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[24]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[26]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[41]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[43]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[52]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[54]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[5]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[8]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[21]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[24]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[36]: 'store maybe_exists%1#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[39]: 'load maybe_exists%1#0' with 'load maybe_exists%1#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[19]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[24]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[7]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[12]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[40]: 'store maybe_value%1#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[45]: 'load maybe_value%1#0' with 'load maybe_value%1#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[45]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[53]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[35]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[46]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[56]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[66]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[27]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[60]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[7]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[10]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[17]: 'store maybe_exists%1#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[20]: 'load maybe_exists%1#0' with 'load maybe_exists%1#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[25]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[29]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[19]: 'store maybe_value%1#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[24]: 'load maybe_value%1#0' with 'load maybe_value%1#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[13]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[24]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[9]: 'store original_amount#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[30]: 'load original_amount#0' with 'load original_amount#0 from l-stack (no copy)'
debug: Inserted claim_bids_if_body@1.ops[3]: 'store maybe_exists%2#0 to l-stack (copy)'
debug: Replaced claim_bids_if_body@1.ops[6]: 'load maybe_exists%2#0' with 'load maybe_exists%2#0 from l-stack (no copy)'
debug: Inserted claim_bids_if_body@1.ops[5]: 'store maybe_value%2#0 to l-stack (copy)'
debug: Replaced claim_bids_if_body@1.ops[10]: 'load maybe_value%2#0' with 'load maybe_value%2#0 from l-stack (no copy)'
debug: Inserted claim_bids_after_if_else@2.ops[2]: 'store inner_txn_params%0%%param_Receiver_idx_0#0 to l-stack (copy)'
debug: Replaced claim_bids_after_if_else@2.ops[4]: 'load inner_txn_params%0%%param_Receiver_idx_0#0' with 'load inner_txn_params%0%%param_Receiver_idx_0#0 from l-stack (no copy)'
debug: Inserted claim_bids_after_if_else@2.ops[18]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced claim_bids_after_if_else@2.ops[22]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted claim_bids_after_if_else@2.ops[14]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced claim_bids_after_if_else@2.ops[21]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted claim_bids_after_if_else@2.ops[7]: 'store amount#1 to l-stack (copy)'
debug: Replaced claim_bids_after_if_else@2.ops[18]: 'load amount#1' with 'load amount#1 from l-stack (no copy)'
debug: Found 1 edge set/s for examples.auction.contract.Auction.claim_bids
debug: examples.auction.contract.Auction.claim_bids f-stack entry: []
debug: examples.auction.contract.Auction.claim_bids f-stack on first store: ['original_amount#0', 'amount#1']
debug: Inserted claim_asset_block@0.ops[12]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[14]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[5]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[8]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[21]: 'store maybe_exists%1#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[24]: 'load maybe_exists%1#0' with 'load maybe_exists%1#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[29]: 'store maybe_exists%2#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[32]: 'load maybe_exists%2#0' with 'load maybe_exists%2#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[37]: 'store maybe_exists%3#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[40]: 'load maybe_exists%3#0' with 'load maybe_exists%3#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[39]: 'store maybe_value%3#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[43]: 'load maybe_value%3#0' with 'load maybe_value%3#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[7]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[12]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[33]: 'store maybe_value%2#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[48]: 'load maybe_value%2#0' with 'load maybe_value%2#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[25]: 'store maybe_value%1#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[51]: 'load maybe_value%1#0' with 'load maybe_value%1#0 from l-stack (no copy)'
debug: Inserted __init___block@0.ops[13]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced __init___block@0.ops[16]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
info: Writing auction/out/Auction.arc32.json
info: Writing auction/out/Auction.approval.teal
info: Writing auction/out/Auction.clear.teal
info: Writing auction/out/Auction.approval.bin
info: Writing auction/out/Auction.clear.bin
info: writing auction/out/client_Auction.py