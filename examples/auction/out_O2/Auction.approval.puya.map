{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBQ;AAAmB;AAAnB;AACA;AAAoB;AAApB;AACA;AAAkB;AAAlB;AACA;;AAAW;AAAX;AACA;AAAuB;;AAAvB;AANR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;AAiFK;;AAAA;AAAA;AAAA;;AAAA;AAjFL;;;AAAA;AAmFe;;AAA0B;AAAA;AAAA;AAAA;AAA1B;AAAP;AAEA;AAEmB;AAAA;AAAA;AAAA;AAEF;AAAA;AAAA;AAAA;;;;;;;;;;AAJjB;;;AAAA;;;AAAA;AAJH;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAEoD;;AAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGxB;;AAAc;AAAA;AAAA;AAAA;AAAd;;;;AAAX;;;AACsB;AAAA;AAAA;AAAA;AAAV;;AAAA;AAAA;AAAA;;AAEJ;AAEa;;;;;;;;;AAFb;;;AAAA;;;AAAA;AAKoC;;AAAA;AAAA;AAAd;;AAAtB;;AAAA;;AAAA;AAbH;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAlDL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqDe;;AAA0B;AAAA;AAAA;AAAA;AAA1B;AAAP;AAGO;AAAA;;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;;AAAa;AAAA;AAAA;AAAA;AAAb;;AAAA;AAAP;AAGA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAGsB;;AAAtB;;AAAA;;AAAA;AAdH;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAtBA;;AAAA;AAAA;AAAA;;AAAA;AAxBL;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA+Be;;AAAc;;AAAd;AAAP;AAGO;AAAA;AAAA;AAAA;AAAA;AAAP;AAII;AAAA;;AAAwB;;AAAxB;AADJ;AAKkB;;AAAlB;AAAA;AAAA;AACmB;;AAAA;AAAnB;AAAA;AAAA;AACA;AAAA;AAAA;AApBH;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AATL;;;AAAA;AAYe;;AAAc;;AAAd;AAAP;AAEO;AAAA;;AAAA;AAAA;AAAA;AAAP;AAEA;;AAAA;;AAAA;AAGA;AACmB;;;;;;AADnB;;;AAAA;;;AAAA;AAVH;;AATL;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "153": {
      "error": "OnCompletion is not NoOp"
    },
    "156": {
      "error": "can only call when not creating"
    },
    "166": {
      "error": "check self.auction_end exists"
    },
    "168": {
      "error": "auction has not ended"
    },
    "173": {
      "error": "check self.previous_bidder exists"
    },
    "177": {
      "error": "check self.asa_amount exists"
    },
    "199": {
      "error": "OnCompletion is not NoOp"
    },
    "202": {
      "error": "can only call when not creating"
    },
    "215": {
      "error": "check self.claimable_amount exists for account"
    },
    "221": {
      "error": "check self.previous_bidder exists"
    },
    "232": {
      "error": "check self.previous_bid exists"
    },
    "272": {
      "error": "OnCompletion is not NoOp"
    },
    "275": {
      "error": "can only call when not creating"
    },
    "285": {
      "error": "transaction type is pay"
    },
    "291": {
      "error": "check self.auction_end exists"
    },
    "293": {
      "error": "auction has ended"
    },
    "301": {
      "error": "payment sender must match transaction sender"
    },
    "308": {
      "error": "check self.previous_bid exists"
    },
    "312": {
      "error": "Bid must be higher than previous bid"
    },
    "333": {
      "error": "OnCompletion is not NoOp"
    },
    "336": {
      "error": "can only call when not creating"
    },
    "342": {
      "error": "OnCompletion is not NoOp"
    },
    "345": {
      "error": "can only call when not creating"
    },
    "363": {
      "error": "transaction type is axfer"
    },
    "369": {
      "error": "auction must be started by creator"
    },
    "373": {
      "error": "check self.auction_end exists"
    },
    "375": {
      "error": "auction already started"
    },
    "382": {
      "error": "axfer must transfer to this app"
    },
    "402": {
      "error": "OnCompletion is not NoOp"
    },
    "405": {
      "error": "can only call when not creating"
    },
    "415": {
      "error": "Only creator can opt in to ASA"
    },
    "420": {
      "error": "check self.asa exists"
    },
    "422": {
      "error": "ASA already opted in"
    },
    "452": {
      "error": "can only call when creating"
    }
  }
}