#pragma version 10

examples.auction.contract.Auction.approval_program:
    txn ApplicationID
    bnz main_entrypoint@2
    callsub __init__

main_entrypoint@2:
    txn NumAppArgs
    bz main_bare_routing@12
    method "opt_into_asset(asset)void"
    method "start_auction(uint64,uint64,axfer)void"
    method "opt_in()void"
    method "bid(pay)void"
    method "claim_bids()void"
    method "claim_asset(asset)void"
    txna ApplicationArgs 0
    match main_opt_into_asset_route@4 main_start_auction_route@5 main_opt_in_route@6 main_bid_route@7 main_claim_bids_route@8 main_claim_asset_route@9
    err // reject transaction

main_opt_into_asset_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Assets
    callsub opt_into_asset
    int 1
    return

main_start_auction_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    btoi
    txn GroupIndex
    int 1
    -
    dup
    gtxns TypeEnum
    int axfer
    ==
    assert // transaction type is axfer
    callsub start_auction
    int 1
    return

main_opt_in_route@6:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    int 1
    return

main_bid_route@7:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txn GroupIndex
    int 1
    -
    dup
    gtxns TypeEnum
    int pay
    ==
    assert // transaction type is pay
    callsub bid
    int 1
    return

main_claim_bids_route@8:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub claim_bids
    int 1
    return

main_claim_asset_route@9:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Assets
    callsub claim_asset
    int 1
    return

main_bare_routing@12:
    txn OnCompletion
    !
    assert // reject transaction
    txn ApplicationID
    !
    assert // is creating
    int 1
    return


// examples.auction.contract.Auction.opt_into_asset(asset: uint64) -> void:
opt_into_asset:
    proto 1 0
    txn Sender
    global CreatorAddress
    ==
    assert // Only creator can opt in to ASA
    int 0
    byte "asa"
    app_global_get_ex
    assert // check self.asa exists
    !
    assert // ASA already opted in
    byte "asa"
    frame_dig -1
    app_global_put
    itxn_begin
    global CurrentApplicationAddress
    frame_dig -1
    itxn_field XferAsset
    itxn_field AssetReceiver
    int axfer
    itxn_field TypeEnum
    int 0
    itxn_field Fee
    itxn_submit
    retsub


// examples.auction.contract.Auction.start_auction(starting_price: uint64, length: uint64, axfer: uint64) -> void:
start_auction:
    proto 3 0
    txn Sender
    global CreatorAddress
    ==
    assert // auction must be started by creator
    int 0
    byte "auction_end"
    app_global_get_ex
    assert // check self.auction_end exists
    !
    assert // auction already started
    frame_dig -1
    gtxns AssetReceiver
    global CurrentApplicationAddress
    ==
    assert // axfer must transfer to this app
    frame_dig -1
    gtxns AssetAmount
    byte "asa_amount"
    swap
    app_global_put
    global LatestTimestamp
    frame_dig -2
    +
    byte "auction_end"
    swap
    app_global_put
    byte "previous_bid"
    frame_dig -3
    app_global_put
    retsub


// examples.auction.contract.Auction.bid(pay: uint64) -> void:
bid:
    proto 1 0
    global LatestTimestamp
    int 0
    byte "auction_end"
    app_global_get_ex
    assert // check self.auction_end exists
    <
    assert // auction has ended
    frame_dig -1
    gtxns Sender
    dup
    txn Sender
    ==
    assert // payment sender must match transaction sender
    frame_dig -1
    gtxns Amount
    int 0
    byte "previous_bid"
    app_global_get_ex
    assert // check self.previous_bid exists
    dig 1
    <
    assert // Bid must be higher than previous bid
    byte "previous_bid"
    dig 1
    app_global_put
    byte "previous_bidder"
    uncover 2
    app_global_put
    txn Sender
    byte "claim"
    uncover 2
    app_local_put
    retsub


// examples.auction.contract.Auction.claim_bids() -> void:
claim_bids:
    proto 0 0
    txn Sender
    int 0
    byte "claim"
    app_local_get_ex
    swap
    dup
    uncover 2
    assert // check self.claimable_amount exists for account
    txn Sender
    int 0
    byte "previous_bidder"
    app_global_get_ex
    assert // check self.previous_bidder exists
    ==
    bz claim_bids_after_if_else@2
    int 0
    byte "previous_bid"
    app_global_get_ex
    assert // check self.previous_bid exists
    frame_dig 0
    swap
    -
    frame_bury 1

claim_bids_after_if_else@2:
    itxn_begin
    txn Sender
    itxn_field Receiver
    frame_dig 1
    dup
    itxn_field Amount
    int pay
    itxn_field TypeEnum
    int 0
    itxn_field Fee
    itxn_submit
    txn Sender
    frame_dig 0
    uncover 2
    -
    byte "claim"
    swap
    app_local_put
    retsub


// examples.auction.contract.Auction.claim_asset(asset: uint64) -> void:
claim_asset:
    proto 1 0
    global LatestTimestamp
    int 0
    byte "auction_end"
    app_global_get_ex
    assert // check self.auction_end exists
    >
    assert // auction has not ended
    itxn_begin
    int 0
    byte "previous_bidder"
    app_global_get_ex
    assert // check self.previous_bidder exists
    int 0
    byte "previous_bidder"
    app_global_get_ex
    assert // check self.previous_bidder exists
    int 0
    byte "asa_amount"
    app_global_get_ex
    assert // check self.asa_amount exists
    itxn_field AssetAmount
    itxn_field AssetReceiver
    itxn_field AssetCloseTo
    frame_dig -1
    itxn_field XferAsset
    int axfer
    itxn_field TypeEnum
    int 0
    itxn_field Fee
    itxn_submit
    retsub


// examples.auction.contract.Auction.__init__() -> void:
__init__:
    proto 0 0
    byte "auction_end"
    int 0
    app_global_put
    byte "previous_bid"
    int 0
    app_global_put
    byte "asa_amount"
    int 0
    app_global_put
    byte "asa"
    int 0
    app_global_put
    byte "previous_bidder"
    global ZeroAddress
    app_global_put
    retsub
