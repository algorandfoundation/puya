{
    "name": "Auction",
    "structs": {},
    "methods": [
        {
            "name": "opt_into_asset",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "start_auction",
            "args": [
                {
                    "type": "uint64",
                    "name": "starting_price"
                },
                {
                    "type": "uint64",
                    "name": "length"
                },
                {
                    "type": "axfer",
                    "name": "axfer"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_in",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "bid",
            "args": [
                {
                    "type": "pay",
                    "name": "pay"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "claim_bids",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "claim_asset",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 4,
                "bytes": 1
            },
            "local": {
                "ints": 1,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "auction_end": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXVjdGlvbl9lbmQ="
                },
                "previous_bid": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "cHJldmlvdXNfYmlk"
                },
                "asa_amount": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNhX2Ftb3VudA=="
                },
                "asa": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNh"
                },
                "previous_bidder": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "cHJldmlvdXNfYmlkZGVy"
                }
            },
            "local": {
                "claimable_amount": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y2xhaW0=",
                    "desc": "The claimable amount"
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        188
                    ],
                    "errorMessage": "ASA already opted in"
                },
                {
                    "pc": [
                        309
                    ],
                    "errorMessage": "Bid must be higher than previous bid"
                },
                {
                    "pc": [
                        101
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        164
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        181
                    ],
                    "errorMessage": "Only creator can opt in to ASA"
                },
                {
                    "pc": [
                        249
                    ],
                    "errorMessage": "auction already started"
                },
                {
                    "pc": [
                        290
                    ],
                    "errorMessage": "auction has ended"
                },
                {
                    "pc": [
                        400
                    ],
                    "errorMessage": "auction has not ended"
                },
                {
                    "pc": [
                        243
                    ],
                    "errorMessage": "auction must be started by creator"
                },
                {
                    "pc": [
                        256
                    ],
                    "errorMessage": "axfer must transfer to this app"
                },
                {
                    "pc": [
                        186
                    ],
                    "errorMessage": "check self.asa exists"
                },
                {
                    "pc": [
                        409
                    ],
                    "errorMessage": "check self.asa_amount exists"
                },
                {
                    "pc": [
                        247,
                        288,
                        398
                    ],
                    "errorMessage": "check self.auction_end exists"
                },
                {
                    "pc": [
                        333
                    ],
                    "errorMessage": "check self.claimable_amount exists for account"
                },
                {
                    "pc": [
                        305,
                        376
                    ],
                    "errorMessage": "check self.previous_bid exists"
                },
                {
                    "pc": [
                        339,
                        405
                    ],
                    "errorMessage": "check self.previous_bidder exists"
                },
                {
                    "pc": [
                        174,
                        217,
                        226,
                        391
                    ],
                    "errorMessage": "invalid number of bytes for uint64"
                },
                {
                    "pc": [
                        298
                    ],
                    "errorMessage": "payment sender must match transaction sender"
                },
                {
                    "pc": [
                        237
                    ],
                    "errorMessage": "transaction type is axfer"
                },
                {
                    "pc": [
                        282
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBleGFtcGxlcy5hdWN0aW9uLmNvbnRyYWN0LkF1Y3Rpb24uY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIC8vIGF1Y3Rpb24vY29udHJhY3QucHk6MTE2CiAgICAvLyByZXR1cm4gVHJ1ZQogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CyAEAAEIBCYGC2F1Y3Rpb25fZW5kDHByZXZpb3VzX2JpZA9wcmV2aW91c19iaWRkZXIKYXNhX2Ftb3VudANhc2EFY2xhaW0xGEAAESgiZykiZysiZycEImcqMgNnMRtBADsxGRREMRhEggYE2PYtmgTwqnAjBDDG1YoE23/oQwTmVGJbBFmyqyY2GgCOBgANADgAAQB3AK0A5gAjQzEZFDEYFBBEI0M2GgFJFSQSRBcxADIJEkQiJwRlRBREJwRLAWexMgqyFLIRJbIQIrIBsyNDNhoBSRUkEkQXNhoCSRUkEkQXMRYjCUk4ECUSRDEAMgkSRCIoZUQUREk4FDIKEkQ4EitMZzIHCChMZylMZyNDMRYjCUk4ECMSRDIHIihlRAxESTgASTEAEkRMOAgiKWVESwEMRClLAWcqTwJnMQAnBU8CZiNDMQAiJwVjRDEAIiplRBJAAB1JsTEAsgdJsggjshAisgGzSwFMCTEAJwVPAmYjQyIpZURLAUwJQv/ZNhoBSRUkEkQXMgciKGVEDUSxIiplRCIrZUSyEkmyFLIVshElshAisgGzI0M=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}