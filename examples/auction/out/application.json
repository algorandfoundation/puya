{
    "hints": {
        "opt_into_asset(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "start_auction(uint64,uint64,axfer)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "opt_in()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "bid(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_bids()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_asset(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKCi8vIGV4YW1wbGVzLmF1Y3Rpb24uY29udHJhY3QuQXVjdGlvbi5jbGVhcl9zdGF0ZV9wcm9ncmFtKCkgLT4gdWludDY0OgptYWluX2Jsb2NrQDA6CiAgICAgICAgaW50IDEKICAgICAgICByZXR1cm4KCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 4
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 1
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asa": {
                    "type": "uint64",
                    "key": "asa"
                },
                "asa_amount": {
                    "type": "uint64",
                    "key": "asa_amount"
                },
                "auction_end": {
                    "type": "uint64",
                    "key": "auction_end"
                },
                "previous_bid": {
                    "type": "uint64",
                    "key": "previous_bid"
                },
                "previous_bidder": {
                    "type": "bytes",
                    "key": "previous_bidder"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "claimable_amount": {
                    "type": "uint64",
                    "key": "claimable_amount"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "Auction",
        "methods": [
            {
                "name": "opt_into_asset",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "start_auction",
                "args": [
                    {
                        "type": "uint64",
                        "name": "starting_price"
                    },
                    {
                        "type": "uint64",
                        "name": "length"
                    },
                    {
                        "type": "axfer",
                        "name": "axfer"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "opt_in",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "bid",
                "args": [
                    {
                        "type": "pay",
                        "name": "pay"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "claim_bids",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "claim_asset",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}