{
    "hints": {
        "opt_into_asset(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "start_auction(uint64,uint64,axfer)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "opt_in()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "bid(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_bids()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_asset(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKCi8vIGV4YW1wbGVzLlRFQUxTY3JpcHQuYXVjdGlvbi5jb250cmFjdC5BdWN0aW9uLmFwcHJvdmFsX3Byb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW5fYmxvY2tAMDoKICAgICAgICB0eG4gQXBwbGljYXRpb25JRAogICAgICAgIGJueiBtYWluX2VudHJ5cG9pbnRAMgoKbWFpbl9vbl9jcmVhdGVAMToKICAgICAgICBjYWxsc3ViIF9faW5pdF9fCgptYWluX2VudHJ5cG9pbnRAMjoKICAgICAgICB0eG4gTnVtQXBwQXJncwogICAgICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDEyCgptYWluX2FiaV9yb3V0aW5nQDM6CiAgICAgICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgICAgIG1ldGhvZCAib3B0X2ludG9fYXNzZXQoYXNzZXQpdm9pZCIKICAgICAgICBtZXRob2QgInN0YXJ0X2F1Y3Rpb24odWludDY0LHVpbnQ2NCxheGZlcil2b2lkIgogICAgICAgIG1ldGhvZCAib3B0X2luKCl2b2lkIgogICAgICAgIG1ldGhvZCAiYmlkKHBheSl2b2lkIgogICAgICAgIG1ldGhvZCAiY2xhaW1fYmlkcygpdm9pZCIKICAgICAgICBtZXRob2QgImNsYWltX2Fzc2V0KGFzc2V0KXZvaWQiCiAgICAgICAgdW5jb3ZlciA2CiAgICAgICAgbWF0Y2ggbWFpbl9vcHRfaW50b19hc3NldF9yb3V0ZUA0IG1haW5fc3RhcnRfYXVjdGlvbl9yb3V0ZUA1IG1haW5fb3B0X2luX3JvdXRlQDYgbWFpbl9iaWRfcm91dGVANyBtYWluX2NsYWltX2JpZHNfcm91dGVAOCBtYWluX2NsYWltX2Fzc2V0X3JvdXRlQDkKICAgICAgICBiIG1haW5fc3dpdGNoX2Nhc2VfZGVmYXVsdEAxMAoKbWFpbl9vcHRfaW50b19hc3NldF9yb3V0ZUA0OgogICAgICAgIHR4biBPbkNvbXBsZXRpb24KICAgICAgICAhCiAgICAgICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICAgICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICAgICBhc3NlcnQgLy8gaXMgbm90IGNyZWF0aW5nCiAgICAgICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgICAgIGJ0b2kKICAgICAgICB0eG5hcyBBc3NldHMKICAgICAgICBjYWxsc3ViIG9wdF9pbnRvX2Fzc2V0CiAgICAgICAgaW50IDEKICAgICAgICByZXR1cm4KCm1haW5fc3RhcnRfYXVjdGlvbl9yb3V0ZUA1OgogICAgICAgIHR4biBPbkNvbXBsZXRpb24KICAgICAgICAhCiAgICAgICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICAgICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICAgICBhc3NlcnQgLy8gaXMgbm90IGNyZWF0aW5nCiAgICAgICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgICAgICB0eG4gR3JvdXBJbmRleAogICAgICAgIGludCAxCiAgICAgICAgLQogICAgICAgIGR1cAogICAgICAgIGd0eG5zIFR5cGVFbnVtCiAgICAgICAgaW50IGF4ZmVyCiAgICAgICAgPT0KICAgICAgICBhc3NlcnQgLy8gdHJhbnNhY3Rpb24gdHlwZSBpcyBheGZlcgogICAgICAgIGNhbGxzdWIgc3RhcnRfYXVjdGlvbgogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgptYWluX29wdF9pbl9yb3V0ZUA2OgogICAgICAgIHR4biBPbkNvbXBsZXRpb24KICAgICAgICAhCiAgICAgICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICAgICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICAgICBhc3NlcnQgLy8gaXMgbm90IGNyZWF0aW5nCiAgICAgICAgY2FsbHN1YiBvcHRfaW4KICAgICAgICBpbnQgMQogICAgICAgIHJldHVybgoKbWFpbl9iaWRfcm91dGVANzoKICAgICAgICB0eG4gT25Db21wbGV0aW9uCiAgICAgICAgIQogICAgICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgTm9PcAogICAgICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAgICAgYXNzZXJ0IC8vIGlzIG5vdCBjcmVhdGluZwogICAgICAgIHR4biBHcm91cEluZGV4CiAgICAgICAgaW50IDEKICAgICAgICAtCiAgICAgICAgZHVwCiAgICAgICAgZ3R4bnMgVHlwZUVudW0KICAgICAgICBpbnQgcGF5CiAgICAgICAgPT0KICAgICAgICBhc3NlcnQgLy8gdHJhbnNhY3Rpb24gdHlwZSBpcyBwYXkKICAgICAgICBjYWxsc3ViIGJpZAogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgptYWluX2NsYWltX2JpZHNfcm91dGVAODoKICAgICAgICB0eG4gT25Db21wbGV0aW9uCiAgICAgICAgIQogICAgICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgTm9PcAogICAgICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAgICAgYXNzZXJ0IC8vIGlzIG5vdCBjcmVhdGluZwogICAgICAgIGNhbGxzdWIgY2xhaW1fYmlkcwogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgptYWluX2NsYWltX2Fzc2V0X3JvdXRlQDk6CiAgICAgICAgdHhuIE9uQ29tcGxldGlvbgogICAgICAgICEKICAgICAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIE5vT3AKICAgICAgICB0eG4gQXBwbGljYXRpb25JRAogICAgICAgIGFzc2VydCAvLyBpcyBub3QgY3JlYXRpbmcKICAgICAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICAgICAgYnRvaQogICAgICAgIHR4bmFzIEFzc2V0cwogICAgICAgIGNhbGxzdWIgY2xhaW1fYXNzZXQKICAgICAgICBpbnQgMQogICAgICAgIHJldHVybgoKbWFpbl9zd2l0Y2hfY2FzZV9kZWZhdWx0QDEwOgogICAgICAgIGVyciAvLyByZWplY3QgdHJhbnNhY3Rpb24KCm1haW5fYmFyZV9yb3V0aW5nQDEyOgogICAgICAgIHR4biBPbkNvbXBsZXRpb24KICAgICAgICBibnogbWFpbl9yZWplY3RfYmFyZV9vbl9jb21wbGV0aW9uQDE0CgptYWluX2NyZWF0ZUAxMzoKICAgICAgICB0eG4gQXBwbGljYXRpb25JRAogICAgICAgICEKICAgICAgICBhc3NlcnQgLy8gaXMgY3JlYXRpbmcKICAgICAgICBpbnQgMQogICAgICAgIHJldHVybgoKbWFpbl9yZWplY3RfYmFyZV9vbl9jb21wbGV0aW9uQDE0OgogICAgICAgIGVyciAvLyByZWplY3QgdHJhbnNhY3Rpb24KCgovLyBleGFtcGxlcy5URUFMU2NyaXB0LmF1Y3Rpb24uY29udHJhY3QuQXVjdGlvbi5vcHRfaW50b19hc3NldChhc3NldCMwOiB1aW50NjQpIC0+IHZvaWQ6Cm9wdF9pbnRvX2Fzc2V0OgogICAgICAgIHByb3RvIDEgMAoKb3B0X2ludG9fYXNzZXRfYmxvY2tAMDoKICAgICAgICB0eG4gU2VuZGVyCiAgICAgICAgZ2xvYmFsIENyZWF0b3JBZGRyZXNzCiAgICAgICAgPT0KICAgICAgICBhc3NlcnQgLy8gT25seSBjcmVhdG9yIGNhbiBvcHQgaW4gdG8gQVNBCiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJhc2EiCiAgICAgICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgICAgICBhc3NlcnQgLy8gY2hlY2sgdmFsdWUgZXhpc3RzCiAgICAgICAgIQogICAgICAgIGFzc2VydCAvLyBBU0EgYWxyZWFkeSBvcHRlZCBpbgogICAgICAgIGJ5dGUgImFzYSIKICAgICAgICBmcmFtZV9kaWcgLTEKICAgICAgICBhcHBfZ2xvYmFsX3B1dAogICAgICAgIGl0eG5fYmVnaW4KICAgICAgICBpbnQgYXhmZXIKICAgICAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAgICAgaW50IDAKICAgICAgICBpdHhuX2ZpZWxkIEZlZQogICAgICAgIGdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCiAgICAgICAgaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCiAgICAgICAgZnJhbWVfZGlnIC0xCiAgICAgICAgaXR4bl9maWVsZCBYZmVyQXNzZXQKICAgICAgICBpdHhuX3N1Ym1pdAogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLlRFQUxTY3JpcHQuYXVjdGlvbi5jb250cmFjdC5BdWN0aW9uLnN0YXJ0X2F1Y3Rpb24oc3RhcnRpbmdfcHJpY2UjMDogYnl0ZXMsIGxlbmd0aCMwOiBieXRlcywgYXhmZXIjMDogdWludDY0KSAtPiB2b2lkOgpzdGFydF9hdWN0aW9uOgogICAgICAgIHByb3RvIDMgMAoKc3RhcnRfYXVjdGlvbl9ibG9ja0AwOgogICAgICAgIHR4biBTZW5kZXIKICAgICAgICBnbG9iYWwgQ3JlYXRvckFkZHJlc3MKICAgICAgICA9PQogICAgICAgIGFzc2VydCAvLyBhdWN0aW9uIG11c3QgYmUgc3RhcnRlZCBieSBjcmVhdG9yCiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJhdWN0aW9uX2VuZCIKICAgICAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgICAgIGFzc2VydCAvLyBjaGVjayB2YWx1ZSBleGlzdHMKICAgICAgICAhCiAgICAgICAgYXNzZXJ0IC8vIGF1Y3Rpb24gYWxyZWFkeSBzdGFydGVkCiAgICAgICAgZnJhbWVfZGlnIC0xCiAgICAgICAgZ3R4bnMgQXNzZXRSZWNlaXZlcgogICAgICAgIGdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCiAgICAgICAgPT0KICAgICAgICBhc3NlcnQgLy8gYXhmZXIgbXVzdCB0cmFuc2ZlciB0byB0aGlzIGFwcAogICAgICAgIGZyYW1lX2RpZyAtMQogICAgICAgIGd0eG5zIEFzc2V0QW1vdW50CiAgICAgICAgYnl0ZSAiYXNhX2Ftb3VudCIKICAgICAgICBzd2FwCiAgICAgICAgYXBwX2dsb2JhbF9wdXQKICAgICAgICBnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCiAgICAgICAgZnJhbWVfZGlnIC0yCiAgICAgICAgYnRvaQogICAgICAgICsKICAgICAgICBieXRlICJhdWN0aW9uX2VuZCIKICAgICAgICBzd2FwCiAgICAgICAgYXBwX2dsb2JhbF9wdXQKICAgICAgICBmcmFtZV9kaWcgLTMKICAgICAgICBidG9pCiAgICAgICAgYnl0ZSAicHJldmlvdXNfYmlkIgogICAgICAgIHN3YXAKICAgICAgICBhcHBfZ2xvYmFsX3B1dAogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLlRFQUxTY3JpcHQuYXVjdGlvbi5jb250cmFjdC5BdWN0aW9uLm9wdF9pbigpIC0+IHZvaWQ6Cm9wdF9pbjoKICAgICAgICBwcm90byAwIDAKCm9wdF9pbl9ibG9ja0AwOgogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLlRFQUxTY3JpcHQuYXVjdGlvbi5jb250cmFjdC5BdWN0aW9uLmJpZChwYXkjMDogdWludDY0KSAtPiB2b2lkOgpiaWQ6CiAgICAgICAgcHJvdG8gMSAwCgpiaWRfYmxvY2tAMDoKICAgICAgICBnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJhdWN0aW9uX2VuZCIKICAgICAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgICAgIGFzc2VydCAvLyBjaGVjayB2YWx1ZSBleGlzdHMKICAgICAgICA8CiAgICAgICAgYXNzZXJ0IC8vIGF1Y3Rpb24gaGFzIGVuZGVkCiAgICAgICAgZnJhbWVfZGlnIC0xCiAgICAgICAgZ3R4bnMgU2VuZGVyCiAgICAgICAgdHhuIFNlbmRlcgogICAgICAgID09CiAgICAgICAgYXNzZXJ0IC8vIHBheW1lbnQgc2VuZGVyIG11c3QgbWF0Y2ggdHJhbnNhY3Rpb24gc2VuZGVyCiAgICAgICAgZnJhbWVfZGlnIC0xCiAgICAgICAgZ3R4bnMgQW1vdW50CiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJwcmV2aW91c19iaWQiCiAgICAgICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgICAgICBhc3NlcnQgLy8gY2hlY2sgdmFsdWUgZXhpc3RzCiAgICAgICAgPgogICAgICAgIGFzc2VydCAvLyBCaWQgbXVzdCBiZSBoaWdoZXIgdGhhbiBwcmV2aW91cyBiaWQKICAgICAgICBmcmFtZV9kaWcgLTEKICAgICAgICBndHhucyBBbW91bnQKICAgICAgICBieXRlICJwcmV2aW91c19iaWQiCiAgICAgICAgc3dhcAogICAgICAgIGFwcF9nbG9iYWxfcHV0CiAgICAgICAgZnJhbWVfZGlnIC0xCiAgICAgICAgZ3R4bnMgU2VuZGVyCiAgICAgICAgYnl0ZSAicHJldmlvdXNfYmlkZGVyIgogICAgICAgIHN3YXAKICAgICAgICBhcHBfZ2xvYmFsX3B1dAogICAgICAgIGZyYW1lX2RpZyAtMQogICAgICAgIGd0eG5zIEFtb3VudAogICAgICAgIHR4biBTZW5kZXIKICAgICAgICBieXRlICJjbGFpbWFibGVfYW1vdW50IgogICAgICAgIHVuY292ZXIgMgogICAgICAgIGFwcF9sb2NhbF9wdXQKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5URUFMU2NyaXB0LmF1Y3Rpb24uY29udHJhY3QuQXVjdGlvbi5jbGFpbV9iaWRzKCkgLT4gdm9pZDoKY2xhaW1fYmlkczoKICAgICAgICBwcm90byAwIDAKCmNsYWltX2JpZHNfYmxvY2tAMDoKICAgICAgICB0eG4gU2VuZGVyCiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJjbGFpbWFibGVfYW1vdW50IgogICAgICAgIGFwcF9sb2NhbF9nZXRfZXgKICAgICAgICBzd2FwCiAgICAgICAgZHVwCiAgICAgICAgY292ZXIgMgogICAgICAgIGNvdmVyIDIKICAgICAgICBhc3NlcnQgLy8gY2hlY2sgdmFsdWUgZXhpc3RzCiAgICAgICAgdHhuIFNlbmRlcgogICAgICAgIGludCAwCiAgICAgICAgYnl0ZSAicHJldmlvdXNfYmlkZGVyIgogICAgICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICAgICAgYXNzZXJ0IC8vIGNoZWNrIHZhbHVlIGV4aXN0cwogICAgICAgID09CiAgICAgICAgYnogY2xhaW1fYmlkc19hZnRlcl9pZl9lbHNlQDIKCmNsYWltX2JpZHNfaWZfYm9keUAxOgogICAgICAgIGludCAwCiAgICAgICAgYnl0ZSAicHJldmlvdXNfYmlkIgogICAgICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICAgICAgYXNzZXJ0IC8vIGNoZWNrIHZhbHVlIGV4aXN0cwogICAgICAgIGZyYW1lX2RpZyAwCiAgICAgICAgc3dhcAogICAgICAgIC0KICAgICAgICBmcmFtZV9idXJ5IDEKCmNsYWltX2JpZHNfYWZ0ZXJfaWZfZWxzZUAyOgogICAgICAgIGl0eG5fYmVnaW4KICAgICAgICBpbnQgcGF5CiAgICAgICAgaXR4bl9maWVsZCBUeXBlRW51bQogICAgICAgIGludCAwCiAgICAgICAgaXR4bl9maWVsZCBGZWUKICAgICAgICB0eG4gU2VuZGVyCiAgICAgICAgaXR4bl9maWVsZCBSZWNlaXZlcgogICAgICAgIGZyYW1lX2RpZyAxCiAgICAgICAgZHVwCiAgICAgICAgaXR4bl9maWVsZCBBc3NldEFtb3VudAogICAgICAgIGl0eG5fc3VibWl0CiAgICAgICAgZnJhbWVfZGlnIDAKICAgICAgICBzd2FwCiAgICAgICAgLQogICAgICAgIHR4biBTZW5kZXIKICAgICAgICBieXRlICJjbGFpbWFibGVfYW1vdW50IgogICAgICAgIHVuY292ZXIgMgogICAgICAgIGFwcF9sb2NhbF9wdXQKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5URUFMU2NyaXB0LmF1Y3Rpb24uY29udHJhY3QuQXVjdGlvbi5jbGFpbV9hc3NldChhc3NldCMwOiB1aW50NjQpIC0+IHZvaWQ6CmNsYWltX2Fzc2V0OgogICAgICAgIHByb3RvIDEgMAoKY2xhaW1fYXNzZXRfYmxvY2tAMDoKICAgICAgICBnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJhdWN0aW9uX2VuZCIKICAgICAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgICAgIGFzc2VydCAvLyBjaGVjayB2YWx1ZSBleGlzdHMKICAgICAgICA+CiAgICAgICAgYXNzZXJ0IC8vIGF1Y3Rpb24gaGFzIG5vdCBlbmRlZAogICAgICAgIGl0eG5fYmVnaW4KICAgICAgICBpbnQgYXhmZXIKICAgICAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAgICAgaW50IDAKICAgICAgICBpdHhuX2ZpZWxkIEZlZQogICAgICAgIGludCAwCiAgICAgICAgYnl0ZSAicHJldmlvdXNfYmlkZGVyIgogICAgICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICAgICAgYXNzZXJ0IC8vIGNoZWNrIHZhbHVlIGV4aXN0cwogICAgICAgIGl0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgogICAgICAgIGZyYW1lX2RpZyAtMQogICAgICAgIGl0eG5fZmllbGQgWGZlckFzc2V0CiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJhc2FfYW1vdW50IgogICAgICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICAgICAgYXNzZXJ0IC8vIGNoZWNrIHZhbHVlIGV4aXN0cwogICAgICAgIGl0eG5fZmllbGQgQXNzZXRBbW91bnQKICAgICAgICBpbnQgMAogICAgICAgIGJ5dGUgInByZXZpb3VzX2JpZGRlciIKICAgICAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgICAgIGFzc2VydCAvLyBjaGVjayB2YWx1ZSBleGlzdHMKICAgICAgICBpdHhuX2ZpZWxkIEFzc2V0Q2xvc2VUbwogICAgICAgIGl0eG5fc3VibWl0CiAgICAgICAgcmV0c3ViCgoKLy8gZXhhbXBsZXMuVEVBTFNjcmlwdC5hdWN0aW9uLmNvbnRyYWN0LkF1Y3Rpb24uX19pbml0X18oKSAtPiB2b2lkOgpfX2luaXRfXzoKICAgICAgICBwcm90byAwIDAKCl9faW5pdF9fX2Jsb2NrQDA6CiAgICAgICAgYnl0ZSAiYXVjdGlvbl9lbmQiCiAgICAgICAgaW50IDAKICAgICAgICBhcHBfZ2xvYmFsX3B1dAogICAgICAgIGJ5dGUgInByZXZpb3VzX2JpZCIKICAgICAgICBpbnQgMAogICAgICAgIGFwcF9nbG9iYWxfcHV0CiAgICAgICAgYnl0ZSAiYXNhX2Ftb3VudCIKICAgICAgICBpbnQgMAogICAgICAgIGFwcF9nbG9iYWxfcHV0CiAgICAgICAgYnl0ZSAiYXNhIgogICAgICAgIGludCAwCiAgICAgICAgYXBwX2dsb2JhbF9wdXQKICAgICAgICBieXRlICJwcmV2aW91c19iaWRkZXIiCiAgICAgICAgZ2xvYmFsIFplcm9BZGRyZXNzCiAgICAgICAgYXBwX2dsb2JhbF9wdXQKICAgICAgICByZXRzdWIKCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKCi8vIGV4YW1wbGVzLlRFQUxTY3JpcHQuYXVjdGlvbi5jb250cmFjdC5BdWN0aW9uLmNsZWFyX3N0YXRlX3Byb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW5fYmxvY2tAMDoKICAgICAgICBpbnQgMQogICAgICAgIHJldHVybgoK"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 4
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 1
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asa": {
                    "type": "uint64",
                    "key": "asa"
                },
                "asa_amount": {
                    "type": "uint64",
                    "key": "asa_amount"
                },
                "auction_end": {
                    "type": "uint64",
                    "key": "auction_end"
                },
                "previous_bid": {
                    "type": "uint64",
                    "key": "previous_bid"
                },
                "previous_bidder": {
                    "type": "bytes",
                    "key": "previous_bidder"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "claimable_amount": {
                    "type": "uint64",
                    "key": "claimable_amount"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "Auction",
        "methods": [
            {
                "name": "opt_into_asset",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "start_auction",
                "args": [
                    {
                        "type": "uint64",
                        "name": "starting_price"
                    },
                    {
                        "type": "uint64",
                        "name": "length"
                    },
                    {
                        "type": "axfer",
                        "name": "axfer"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "opt_in",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "bid",
                "args": [
                    {
                        "type": "pay",
                        "name": "pay"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "claim_bids",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "claim_asset",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}