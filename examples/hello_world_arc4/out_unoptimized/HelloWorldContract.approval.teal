#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1
    b block@0

block@0:
    b block@1

block@1:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz __algopy_default_create@6
    b abi_routing@2

abi_routing@2:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0x02bece11 // method "hello(string)string"
    uncover 1
    match hello_route@3
    b switch_case_default@4

switch_case_default@4:
    b switch_case_next@5

switch_case_next@5:
    b after_if_else@7

after_if_else@7:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    err

hello_route@3:
    // hello_world_arc4/contract.py:10
    // @arc4.abimethod
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    !=
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    callsub hello
    b switch_case_next@5

__algopy_default_create@6:
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    b block@9

block@9:
    b after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__algopy_default_create@10

after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__algopy_default_create@10:
    intc_1 // 1
    return


// examples.hello_world_arc4.contract.HelloWorldContract.hello[routing]() -> void:
hello:
    b hello_block@0

hello_block@0:
    // hello_world_arc4/contract.py:10
    // @arc4.abimethod
    txna ApplicationArgs 1
    extract 2 0
    callsub examples.hello_world_arc4.contract.HelloWorldContract.hello
    dup
    len
    itob
    extract 6 2
    uncover 1
    concat
    pushbytes 0x151f7c75
    uncover 1
    concat
    log
    intc_1 // 1
    return


// examples.hello_world_arc4.contract.HelloWorldContract.hello(name: bytes) -> bytes:
examples.hello_world_arc4.contract.HelloWorldContract.hello:
    // hello_world_arc4/contract.py:10-11
    // @arc4.abimethod
    // def hello(self, name: String) -> String:
    proto 1 1
    b examples.hello_world_arc4.contract.HelloWorldContract.hello_block@0

examples.hello_world_arc4.contract.HelloWorldContract.hello_block@0:
    // hello_world_arc4/contract.py:12
    // return "Hello, " + name
    pushbytes "Hello, "
    frame_dig -1
    concat
    retsub
