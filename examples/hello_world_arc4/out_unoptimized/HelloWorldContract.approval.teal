#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 0
    b block@0

block@0:
    b block@1

block@1:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    txn ApplicationID
    !
    txn OnCompletion
    intc_0 // 1
    shl
    +
    intc_1 // 0
    intc_0 // 1
    pushint 2 // 2
    pushint 3 // 3
    pushint 4 // 4
    pushint 5 // 5
    pushint 6 // 6
    pushint 7 // 7
    pushint 8 // 8
    pushint 9 // 9
    pushint 10 // 10
    pushint 11 // 11
    uncover 12
    match call_NoOp create_NoOp call_OptIn create_OptIn call_CloseOut create_CloseOut call_ClearState create_ClearState call_UpdateApplication create_UpdateApplication call_DeleteApplication create_DeleteApplication
    b *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

create_DeleteApplication:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    b *NOT_IMPLEMENTED

call_DeleteApplication:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    b *NOT_IMPLEMENTED

create_UpdateApplication:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    b *NOT_IMPLEMENTED

call_UpdateApplication:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    b *NOT_IMPLEMENTED

create_ClearState:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    b *NOT_IMPLEMENTED

call_ClearState:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    b *NOT_IMPLEMENTED

create_CloseOut:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    b *NOT_IMPLEMENTED

call_CloseOut:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    b *NOT_IMPLEMENTED

create_OptIn:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    b *NOT_IMPLEMENTED

call_OptIn:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    b *NOT_IMPLEMENTED

create_NoOp:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    txn NumAppArgs
    intc_1 // 0
    ==
    bz else_body@8
    b __algopy_default_create@7

__algopy_default_create@7:
    b block@21

block@21:
    b after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__algopy_default_create@22

after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__algopy_default_create@22:
    intc_0 // 1
    return

else_body@8:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    err // this contract does not implement the given ABI method for create NoOp

call_NoOp:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0x02bece11 // method "hello(string)string"
    uncover 1
    match hello_route@3
    b switch_case_default@4

switch_case_default@4:
    b switch_case_next@5

switch_case_next@5:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    err // this contract does not implement the given ABI method for call NoOp

hello_route@3:
    // hello_world_arc4/contract.py:9
    // class HelloWorldContract(ARC4Contract):
    callsub hello
    b switch_case_next@5


// examples.hello_world_arc4.contract.HelloWorldContract.hello[routing]() -> void:
hello:
    b hello_block@0

hello_block@0:
    // hello_world_arc4/contract.py:10
    // @arc4.abimethod
    txna ApplicationArgs 1
    extract 2 0
    callsub examples.hello_world_arc4.contract.HelloWorldContract.hello
    dup
    len
    itob
    extract 6 2
    uncover 1
    concat
    pushbytes 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// examples.hello_world_arc4.contract.HelloWorldContract.hello(name: bytes) -> bytes:
examples.hello_world_arc4.contract.HelloWorldContract.hello:
    // hello_world_arc4/contract.py:10-11
    // @arc4.abimethod
    // def hello(self, name: String) -> String:
    proto 1 1
    b examples.hello_world_arc4.contract.HelloWorldContract.hello_block@0

examples.hello_world_arc4.contract.HelloWorldContract.hello_block@0:
    // hello_world_arc4/contract.py:12
    // return "Hello, " + name
    pushbytes "Hello, "
    frame_dig -1
    concat
    retsub
