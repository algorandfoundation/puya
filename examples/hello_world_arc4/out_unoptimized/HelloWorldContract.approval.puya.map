{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;AAQA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;;;;AAAA;;;;;;;AACK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADL;;;AAAA;;;AACK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAEe;;;;;;;;;AAAA;;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "7": {
      "op": "b main_block@0"
    },
    "10": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "13": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "15": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "16": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "17": {
      "op": "bz main_bare_routing@6",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "20": {
      "op": "b main_abi_routing@2"
    },
    "23": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "26": {
      "op": "pushbytes 0x02bece11 // method \"hello(string)string\"",
      "defined_out": [
        "Method(hello(string)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(hello(string)string)"
      ]
    },
    "32": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "Method(hello(string)string)",
        "tmp%2#0"
      ]
    },
    "34": {
      "op": "match main_hello_route@3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "38": {
      "op": "b main_switch_case_default@4"
    },
    "41": {
      "block": "main_switch_case_default@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@5"
    },
    "44": {
      "block": "main_switch_case_next@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "47": {
      "block": "main_after_if_else@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0"
      ]
    },
    "48": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "50": {
      "op": "b main_after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__@11"
    },
    "53": {
      "block": "main_after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "54": {
      "block": "main_hello_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "56": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "57": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "58": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "59": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "61": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "62": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "63": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "64": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "67": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "70": {
      "callsub": "examples.hello_world_arc4.contract.HelloWorldContract.hello",
      "op": "callsub hello",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "73": {
      "op": "dup",
      "defined_out": [
        "tmp%8#0",
        "tmp%8#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "tmp%8#0 (copy)"
      ]
    },
    "74": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "aggregate%length%0#0"
      ]
    },
    "75": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "76": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "79": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%8#0"
      ]
    },
    "81": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "82": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "88": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%9#0"
      ]
    },
    "90": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "91": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "92": {
      "op": "intc_1 // 1",
      "defined_out": [
        "examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0"
      ]
    },
    "93": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "95": {
      "op": "b main_after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__@11"
    },
    "98": {
      "block": "main_bare_routing@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "100": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "0"
      ]
    },
    "101": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%11#0"
      ]
    },
    "103": {
      "op": "match main___algopy_default_create@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "107": {
      "op": "b main_switch_case_default@8"
    },
    "110": {
      "block": "main_switch_case_default@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@9"
    },
    "113": {
      "block": "main_switch_case_next@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@10"
    },
    "116": {
      "block": "main___algopy_default_create@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "118": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0",
        "0"
      ]
    },
    "119": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "120": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "121": {
      "op": "b main_block@12"
    },
    "124": {
      "block": "main_block@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__algopy_default_create@13"
    },
    "127": {
      "block": "main_after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__algopy_default_create@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0"
      ]
    },
    "128": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "130": {
      "op": "b main_after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__@11"
    },
    "133": {
      "subroutine": "examples.hello_world_arc4.contract.HelloWorldContract.hello",
      "params": {
        "name#0": "bytes"
      },
      "block": "hello",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "136": {
      "op": "b hello_block@0"
    },
    "139": {
      "block": "hello_block@0",
      "stack_in": [],
      "op": "pushbytes \"Hello, \"",
      "defined_out": [
        "\"Hello, \""
      ],
      "stack_out": [
        "\"Hello, \""
      ]
    },
    "148": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ],
      "stack_out": [
        "\"Hello, \"",
        "name#0 (copy)"
      ]
    },
    "150": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "151": {
      "retsub": true,
      "op": "retsub"
    }
  }
}