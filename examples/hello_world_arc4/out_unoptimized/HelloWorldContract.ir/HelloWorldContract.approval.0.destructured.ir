main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        goto block@1
    block@1: // L9
        let tmp%0#1: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#1 0u)
        goto tmp%1#0 ? block@2 : block@6
    block@2: // abi_routing_L9
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "hello(string)string" => block@3, * => block@4}
    block@3: // hello_route_L10
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        let reinterpret_Encoded(len+utf8[])%0#0: Encoded(len+utf8[]) = (txna ApplicationArgs 1)
        let tmp%7#0: bytes = ((extract 2 0) reinterpret_Encoded(len+utf8[])%0#0)
        let to_encode%0#0: string = examples.hello_world_arc4.contract.HelloWorldContract.hello(tmp%7#0)
        let length%0#0: uint64 = (len to_encode%0#0)
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 to_encode%0#0)
        let tmp%8#0: bytes = (concat 0x151f7c75 encoded_value%0#0)
        (log tmp%8#0)
        let examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0
        goto block@11
    block@4: // switch_case_default_L9
        goto block@5
    block@5: // switch_case_next_L9
        goto block@10
    block@6: // bare_routing_L9
        let tmp%9#0: uint64 = (txn OnCompletion)
        switch tmp%9#0 {0u => block@7, * => block@8}
    block@7: // __algopy_default_create_L1
        let tmp%10#0: uint64 = (txn ApplicationID)
        let tmp%11#0: bool = (== tmp%10#0 0u)
        (assert tmp%11#0) // can only call when creating
        goto block@12
    block@12: // L1
        goto block@13
    block@13: // after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__algopy_default_create_L1
        let examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0
        goto block@11
    block@8: // switch_case_default_L9
        goto block@9
    block@9: // switch_case_next_L9
        goto block@10
    block@10: // after_if_else_L9
        let examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0: bool = 0u
        let tmp%0#0: bool = examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router__%0#0
        goto block@11
    block@11: // after_inlined_examples.hello_world_arc4.contract.HelloWorldContract.__puya_arc4_router___L1
        return tmp%0#0

subroutine examples.hello_world_arc4.contract.HelloWorldContract.hello(name: string) -> string:
    block@0: // L10
        let tmp%0#0: bytes = (concat "Hello, " name#0)
        return tmp%0#0