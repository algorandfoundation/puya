main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#1: bool = (txn ApplicationID)
        let tmp%1#0: bool = (! tmp%0#1)
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: uint64 = (shl tmp%2#0 1u)
        let tmp%4#0: uint64 = (+ tmp%1#0 tmp%3#0)
        goto_nth [block@2, block@6, block@19, block@19, block@19, block@19, block@19, block@19, block@19, block@19, block@19, block@19][tmp%4#0] else goto block@19
    block@2: // switch_case_0_L9
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "hello(string)string" => block@3, * => block@5}
    block@3: // hello_route_L10
        examples.hello_world_arc4.contract.HelloWorldContract.hello[routing]()
        goto block@5
    block@5: // switch_case_next_L9
        fail // this contract does not implement the given ABI method for call NoOp
    block@6: // switch_case_1_L9
        let tmp%6#0: uint64 = (txn NumAppArgs)
        let tmp%7#0: bool = (! tmp%6#0)
        (assert tmp%7#0) // this contract does not implement the given ABI method for create NoOp
        exit 1u
    block@19: // switch_case_default_L9
        fail // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

subroutine examples.hello_world_arc4.contract.HelloWorldContract.hello[routing]() -> void:
    block@0: // L10
        let reinterpret_Encoded(len+utf8[])%0#0: Encoded(len+utf8[]) = (txna ApplicationArgs 1)
        let name#0: string = decode_bytes<string>(reinterpret_Encoded(len+utf8[])%0#0)
        let tmp%0#1: bytes = (concat "Hello, " name#0)
        let tmp%2#0: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>(tmp%0#1)
        let tmp%3#0: bytes = (concat 0x151f7c75 tmp%2#0)
        (log tmp%3#0)
        exit 1u