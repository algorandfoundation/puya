>> poetry run puyapy -O1 --output-ssa-ir --output-optimization-ir --output-final-ir --output-cssa-ir --output-post-ssa-ir --output-parallel-copies-ir --out-dir=out --debug-level=1 --log-level=debug application
debug: Building AWST for __init__.py
debug: Building AWST for application
debug: Building AWST for embedded puyapy lib at <puya>/puyapy.py
debug: Building AWST for application/contract.py
debug: Sealing block@0: // L38
debug: Terminated block@0: // L38
debug: Sealing block@0: // L14
debug: Terminated block@0: // L14
debug: Sealing block@0: // L26
debug: Terminated block@0: // L26
debug: Sealing block@None: // on_create_L14
debug: Terminated block@1: // on_create_L14
debug: Sealing block@2: // entrypoint_L14
debug: Terminated block@2: // entrypoint_L14
debug: Sealing block@None: // if_body_L27
debug: Sealing block@None: // else_body_L27
debug: Terminated block@3: // if_body_L27
debug: Sealing block@None: // if_body_L28
debug: Sealing block@None: // else_body_L28
debug: Terminated block@4: // if_body_L28
debug: Terminated block@5: // else_body_L28
debug: Sealing block@6: // after_if_else_L28
debug: Terminated block@6: // after_if_else_L28
debug: Sealing block@7: // after_if_else_L27
debug: Terminated block@7: // after_if_else_L27
debug: Sealing block@0: // L34
debug: Terminated block@0: // L34
debug: Output IR to <git root>/examples/application/out/contract_Reference.ssa.ir
info: Optimizing examples.application.contract.Reference at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.application.contract.Reference.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@6: // after_if_else_L28 with block@4: // if_body_L28 in block@7: // after_if_else_L27
debug: Merged linear block@6: // after_if_else_L28 into block@4: // if_body_L28
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.application.contract.Reference.validate_asset
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.application.contract.Reference.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.application.contract.Reference.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to <git root>/examples/application/out/contract_Reference.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.application.contract.Reference.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.application.contract.Reference.validate_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.application.contract.Reference.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.application.contract.Reference.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: No optimizations performed in pass 2, ending loop
debug: Output IR to <git root>/examples/application/out/contract_Reference.cssa.ir
debug: Removing Phis from examples.application.contract.Reference.approval_program
debug: Removing Phis from examples.application.contract.Reference.validate_asset
debug: Removing Phis from examples.application.contract.Reference.__init__
debug: Removing Phis from examples.application.contract.Reference.clear_state_program
debug: Output IR to <git root>/examples/application/out/contract_Reference.post_ssa.ir
debug: Sequentializing parallel copies in examples.application.contract.Reference.approval_program
debug: Sequentializing parallel copies in examples.application.contract.Reference.validate_asset
debug: Sequentializing parallel copies in examples.application.contract.Reference.__init__
debug: Sequentializing parallel copies in examples.application.contract.Reference.clear_state_program
debug: Output IR to <git root>/examples/application/out/contract_Reference.parallel_copies.ir
debug: Coalescing local variables in examples.application.contract.Reference.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.application.contract.Reference.validate_asset using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.application.contract.Reference.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.application.contract.Reference.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Output IR to <git root>/examples/application/out/contract_Reference.final.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[3]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[6]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[8]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_if_body@3.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_if_body@3.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_if_body@3.ops[6]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_if_body@3.ops[8]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_if_body@4.ops[1]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced main_if_body@4.ops[3]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Found 3 edge set/s for examples.application.contract.Reference.approval_program
debug: Inserted validate_asset_block@0.ops[11]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[13]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[24]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[26]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[37]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[39]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[50]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[52]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[63]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[65]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[75]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[77]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[87]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[89]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[96]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[98]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[111]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[113]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[2]: 'store maybe_value_did_exist%1#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[5]: 'load maybe_value_did_exist%1#0' with 'load maybe_value_did_exist%1#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[8]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[11]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[19]: 'store maybe_value_did_exist%5#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[22]: 'load maybe_value_did_exist%5#0' with 'load maybe_value_did_exist%5#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[33]: 'store maybe_value_did_exist%8#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[36]: 'load maybe_value_did_exist%8#0' with 'load maybe_value_did_exist%8#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[47]: 'store maybe_value_did_exist%11#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[50]: 'load maybe_value_did_exist%11#0' with 'load maybe_value_did_exist%11#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[61]: 'store maybe_value_did_exist%14#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[64]: 'load maybe_value_did_exist%14#0' with 'load maybe_value_did_exist%14#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[75]: 'store maybe_value_did_exist%17#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[78]: 'load maybe_value_did_exist%17#0' with 'load maybe_value_did_exist%17#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[88]: 'store maybe_value_did_exist%20#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[91]: 'load maybe_value_did_exist%20#0' with 'load maybe_value_did_exist%20#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[100]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[103]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[111]: 'store maybe_value_did_exist%25#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[114]: 'load maybe_value_did_exist%25#0' with 'load maybe_value_did_exist%25#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[117]: 'store tmp%26#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[120]: 'load tmp%26#0' with 'load tmp%26#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[21]: 'store maybe_value%4#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[25]: 'load maybe_value%4#0' with 'load maybe_value%4#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[36]: 'store maybe_value%7#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[40]: 'load maybe_value%7#0' with 'load maybe_value%7#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[51]: 'store maybe_value%10#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[55]: 'load maybe_value%10#0' with 'load maybe_value%10#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[66]: 'store maybe_value%13#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[70]: 'load maybe_value%13#0' with 'load maybe_value%13#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[81]: 'store maybe_value%16#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[85]: 'load maybe_value%16#0' with 'load maybe_value%16#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[95]: 'store maybe_value%19#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[99]: 'load maybe_value%19#0' with 'load maybe_value%19#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[4]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[11]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted validate_asset_block@0.ops[120]: 'store maybe_value%24#0 to l-stack (copy)'
debug: Replaced validate_asset_block@0.ops[127]: 'load maybe_value%24#0' with 'load maybe_value%24#0 from l-stack (no copy)'
info: Writing application/out/contract.approval.teal
info: Writing application/out/contract.approval.debug.teal
info: Writing application/out/contract.clear.teal
info: Writing application/out/contract.clear.debug.teal
>> exit code = 0