>> poetry run puyapy -O1 --output-ssa-ir --output-optimization-ir --output-final-ir --output-cssa-ir --output-post-ssa-ir --output-parallel-copies-ir --out-dir=out --debug-level=1 --log-level=debug TEALScript
debug: Building AWST for __init__.py
debug: Building AWST for TEALScript
debug: Building AWST for TEALScript/auction
debug: Building AWST for embedded puyapy lib at <puya>/puyapy_lib_bytes.py
debug: Building AWST for embedded puyapy lib at <puya>/puyapy.py
debug: Building AWST for TEALScript/auction/contract.py
debug: Sealing block@0: // L13
debug: Terminated block@0: // L13
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L20
debug: Terminated block@1: // while_top_L20
debug: Sealing block@None: // while_body_L20
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L20
debug: Terminated block@2: // while_body_L20
debug: Sealing block@None: // switch_case_default_L26
debug: Sealing block@None: // switch_case_0_L28
debug: Sealing block@None: // switch_case_1_L30
debug: Terminated block@3: // switch_case_0_L28
debug: Terminated block@4: // switch_case_1_L30
debug: Terminated block@5: // switch_case_default_L26
debug: Sealing block@6: // switch_case_next_L26
debug: Terminated block@6: // switch_case_next_L26
debug: Sealing block@1: // while_top_L20
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L13
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L26
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L13
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L26
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@None: // after_while_L20
debug: Terminated block@7: // after_while_L20
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@None: // while_body_L11
debug: Terminated block@2: // while_body_L11
debug: Sealing block@None: // if_body_L12
debug: Sealing block@None: // else_body_L12
debug: Terminated block@3: // if_body_L12
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L5
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L5
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L5
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@None: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L28
debug: Terminated block@0: // L28
debug: Sealing block@0: // L45
debug: Terminated block@0: // L45
debug: Sealing block@0: // L66
debug: Terminated block@0: // L66
debug: Sealing block@0: // L70
debug: Terminated block@0: // L70
debug: Sealing block@0: // L86
debug: Terminated block@0: // L86
debug: Sealing block@None: // if_body_L92
debug: Sealing block@None: // else_body_L92
debug: Terminated block@1: // if_body_L92
debug: Sealing block@2: // after_if_else_L92
debug: Created Phi assignment: let amount#2: uint64 = undefined while trying to resolve 'amount' in block@2: // after_if_else_L92
debug: Added amount#0 to Phi node: let amount#2: uint64 = φ(amount#0 <- block@0) in block@0: // L86
debug: Added amount#1 to Phi node: let amount#2: uint64 = φ(amount#0 <- block@0, amount#1 <- block@1) in block@1: // if_body_L92
debug: Created Phi assignment: let original_amount#1: uint64 = undefined while trying to resolve 'original_amount' in block@2: // after_if_else_L92
debug: Added original_amount#0 to Phi node: let original_amount#1: uint64 = φ(original_amount#0 <- block@0) in block@0: // L86
debug: Added original_amount#0 to Phi node: let original_amount#1: uint64 = φ(original_amount#0 <- block@0, original_amount#0 <- block@1) in block@1: // if_body_L92
debug: Replacing trivial Phi node: let original_amount#1: uint64 = φ(original_amount#0 <- block@0, original_amount#0 <- block@1) (original_amount#1) with original_amount#0
debug: Deleting Phi assignment: let original_amount#1: uint64 = φ(original_amount#0 <- block@0, original_amount#0 <- block@1)
debug: Replaced trivial Phi node: let original_amount#1: uint64 = φ(original_amount#0 <- block@0, original_amount#0 <- block@1) (original_amount#1) with original_amount#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L92
debug: Sealing block@0: // L105
debug: Terminated block@0: // L105
debug: Sealing block@0: // L18
debug: Terminated block@0: // L18
debug: Sealing block@0: // L17
debug: Terminated block@0: // L17
debug: Sealing block@None: // on_create_L18
debug: Terminated block@1: // on_create_L18
debug: Sealing block@2: // entrypoint_L18
debug: Terminated block@2: // entrypoint_L18
debug: Sealing block@None: // abi_routing_L17
debug: Sealing block@None: // bare_routing_L17
debug: Terminated block@3: // abi_routing_L17
debug: Sealing block@None: // switch_case_default_L17
debug: Sealing block@None: // opt_into_asset_route_L27
debug: Sealing block@None: // start_auction_route_L44
debug: Sealing block@None: // opt_in_route_L65
debug: Sealing block@None: // bid_route_L69
debug: Sealing block@None: // claim_bids_route_L85
debug: Sealing block@None: // claim_asset_route_L104
debug: Terminated block@4: // opt_into_asset_route_L27
debug: Terminated block@5: // start_auction_route_L44
debug: Terminated block@6: // opt_in_route_L65
debug: Terminated block@7: // bid_route_L69
debug: Terminated block@8: // claim_bids_route_L85
debug: Terminated block@9: // claim_asset_route_L104
debug: Terminated block@10: // switch_case_default_L17
debug: Sealing block@11: // switch_case_next_L17
debug: Terminated block@11: // switch_case_next_L17
debug: Terminated block@12: // bare_routing_L17
debug: Sealing block@None: // reject_bare_on_completion_L17
debug: Sealing block@None: // create_L17
debug: Terminated block@13: // create_L17
debug: Terminated block@14: // reject_bare_on_completion_L17
debug: Sealing block@None: // switch_case_next_L17
debug: Sealing block@15: // after_if_else_L17
debug: Terminated block@15: // after_if_else_L17
debug: Sealing block@0: // L127
debug: Terminated block@0: // L127
debug: Output IR to <git root>/examples/TEALScript/auction/out/contract_Auction.ssa.ir
info: Optimizing examples.TEALScript.auction.contract.Auction at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%17#0, maybe_value%14#0
debug: Replacing {maybe_value%14#0} with awst_tmp%17#0 made 1 modifications
debug: Found equivalence set: tmp%19#0, maybe_value_did_exist%15#0
debug: Replacing {maybe_value_did_exist%15#0} with tmp%19#0 made 1 modifications
debug: Found equivalence set: awst_tmp%17#1, maybe_value%26#0
debug: Replacing {maybe_value%26#0} with awst_tmp%17#1 made 1 modifications
debug: Found equivalence set: tmp%30#0, maybe_value_did_exist%27#0
debug: Replacing {maybe_value_did_exist%27#0} with tmp%30#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Switch switch tmp%40#0 {0u => block@13, * => block@14} simplified to goto [block@13, ...block@14][tmp%40#0]
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@11: // switch_case_next_L17 with block@10: // switch_case_default_L17 in block@15: // after_if_else_L17
debug: Merged linear block@11: // switch_case_next_L17 into block@10: // switch_case_default_L17
debug: Merged linear block@15: // after_if_else_L17 into block@10: // switch_case_default_L17
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.opt_into_asset
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.start_auction
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.opt_in
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.bid
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.claim_bids
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: app_local_get_ex_value%1#0, original_amount#0, amount#0
debug: Replacing {app_local_get_ex_value%1#0, amount#0} with original_amount#0 made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.claim_asset
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to <git root>/examples/TEALScript/auction/out/contract_Auction.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: GotoNth goto [block@13, ...block@14][tmp%40#0] simplified to goto tmp%40#0 ? block@14 : block@13
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.opt_into_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.start_auction
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.opt_in
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.bid
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.claim_bids
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.claim_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to <git root>/examples/TEALScript/auction/out/contract_Auction.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.opt_into_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.start_auction
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.opt_in
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.bid
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.claim_bids
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.claim_asset
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.TEALScript.auction.contract.Auction.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: No optimizations performed in pass 3, ending loop
debug: Output IR to <git root>/examples/TEALScript/auction/out/contract_Auction.cssa.ir
debug: Removing Phis from examples.TEALScript.auction.contract.Auction.approval_program
debug: Removing Phis from examples.TEALScript.auction.contract.Auction.opt_into_asset
debug: Removing Phis from examples.TEALScript.auction.contract.Auction.start_auction
debug: Removing Phis from examples.TEALScript.auction.contract.Auction.opt_in
debug: Removing Phis from examples.TEALScript.auction.contract.Auction.bid
debug: Removing Phis from examples.TEALScript.auction.contract.Auction.claim_bids
debug: Removing Phis from examples.TEALScript.auction.contract.Auction.claim_asset
debug: Removing Phis from examples.TEALScript.auction.contract.Auction.__init__
debug: Removing Phis from examples.TEALScript.auction.contract.Auction.clear_state_program
debug: Output IR to <git root>/examples/TEALScript/auction/out/contract_Auction.post_ssa.ir
debug: Sequentializing parallel copies in examples.TEALScript.auction.contract.Auction.approval_program
debug: Sequentializing parallel copies in examples.TEALScript.auction.contract.Auction.opt_into_asset
debug: Sequentializing parallel copies in examples.TEALScript.auction.contract.Auction.start_auction
debug: Sequentializing parallel copies in examples.TEALScript.auction.contract.Auction.opt_in
debug: Sequentializing parallel copies in examples.TEALScript.auction.contract.Auction.bid
debug: Sequentializing parallel copies in examples.TEALScript.auction.contract.Auction.claim_bids
debug: Sequentializing parallel copies in examples.TEALScript.auction.contract.Auction.claim_asset
debug: Sequentializing parallel copies in examples.TEALScript.auction.contract.Auction.__init__
debug: Sequentializing parallel copies in examples.TEALScript.auction.contract.Auction.clear_state_program
debug: Output IR to <git root>/examples/TEALScript/auction/out/contract_Auction.parallel_copies.ir
debug: Coalescing local variables in examples.TEALScript.auction.contract.Auction.approval_program using strategy RootOperandGrouping
debug: Coalescing awst_tmp%17#0 with [awst_tmp%17#1]
debug: Coalescing resulted in 3 replacement/s
debug: Coalescing local variables in examples.TEALScript.auction.contract.Auction.opt_into_asset using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.TEALScript.auction.contract.Auction.start_auction using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.TEALScript.auction.contract.Auction.opt_in using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.TEALScript.auction.contract.Auction.bid using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.TEALScript.auction.contract.Auction.claim_bids using strategy RootOperandGrouping
debug: Coalescing amount#1 with [amount#4, amount#2]
debug: Coalescing resulted in 6 replacement/s
debug: Coalescing local variables in examples.TEALScript.auction.contract.Auction.claim_asset using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.TEALScript.auction.contract.Auction.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.TEALScript.auction.contract.Auction.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Output IR to <git root>/examples/TEALScript/auction/out/contract_Auction.final.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[3]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_abi_routing@3.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_abi_routing@3.ops[9]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@4.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@4.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@4.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@4.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@4.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@4.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@4.ops[15]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@4.ops[17]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@4.ops[19]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@4.ops[21]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted main_opt_into_asset_route@4.ops[23]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced main_opt_into_asset_route@4.ops[25]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted main_start_auction_route@5.ops[1]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced main_start_auction_route@5.ops[3]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted main_start_auction_route@5.ops[5]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced main_start_auction_route@5.ops[7]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted main_start_auction_route@5.ops[10]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced main_start_auction_route@5.ops[12]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted main_start_auction_route@5.ops[19]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced main_start_auction_route@5.ops[21]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted main_start_auction_route@5.ops[24]: 'store awst_tmp%17#0 to l-stack (copy)'
debug: Replaced main_start_auction_route@5.ops[26]: 'load awst_tmp%17#0' with 'load awst_tmp%17#0 from l-stack (no copy)'
debug: Inserted main_start_auction_route@5.ops[28]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced main_start_auction_route@5.ops[30]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted main_start_auction_route@5.ops[33]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced main_start_auction_route@5.ops[35]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted main_start_auction_route@5.ops[27]: 'store awst_tmp%17#0 to l-stack (copy)'
debug: Replaced main_start_auction_route@5.ops[40]: 'load awst_tmp%17#0' with 'load awst_tmp%17#0 from l-stack (no copy)'
debug: Inserted main_start_auction_route@5.ops[17]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced main_start_auction_route@5.ops[40]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted main_start_auction_route@5.ops[15]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced main_start_auction_route@5.ops[40]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted main_opt_in_route@6.ops[1]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced main_opt_in_route@6.ops[3]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted main_opt_in_route@6.ops[5]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced main_opt_in_route@6.ops[7]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted main_opt_in_route@6.ops[10]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced main_opt_in_route@6.ops[12]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted main_bid_route@7.ops[1]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced main_bid_route@7.ops[3]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted main_bid_route@7.ops[5]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced main_bid_route@7.ops[7]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted main_bid_route@7.ops[10]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced main_bid_route@7.ops[12]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted main_bid_route@7.ops[15]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced main_bid_route@7.ops[17]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted main_bid_route@7.ops[20]: 'store awst_tmp%17#0 to l-stack (copy)'
debug: Replaced main_bid_route@7.ops[22]: 'load awst_tmp%17#0' with 'load awst_tmp%17#0 from l-stack (no copy)'
debug: Inserted main_bid_route@7.ops[24]: 'store tmp%29#0 to l-stack (copy)'
debug: Replaced main_bid_route@7.ops[26]: 'load tmp%29#0' with 'load tmp%29#0 from l-stack (no copy)'
debug: Inserted main_bid_route@7.ops[29]: 'store tmp%30#0 to l-stack (copy)'
debug: Replaced main_bid_route@7.ops[31]: 'load tmp%30#0' with 'load tmp%30#0 from l-stack (no copy)'
debug: Inserted main_bid_route@7.ops[23]: 'store awst_tmp%17#0 to l-stack (copy)'
debug: Replaced main_bid_route@7.ops[34]: 'load awst_tmp%17#0' with 'load awst_tmp%17#0 from l-stack (no copy)'
debug: Inserted main_claim_bids_route@8.ops[1]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced main_claim_bids_route@8.ops[3]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted main_claim_bids_route@8.ops[5]: 'store tmp%32#0 to l-stack (copy)'
debug: Replaced main_claim_bids_route@8.ops[7]: 'load tmp%32#0' with 'load tmp%32#0 from l-stack (no copy)'
debug: Inserted main_claim_bids_route@8.ops[10]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced main_claim_bids_route@8.ops[12]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted main_claim_asset_route@9.ops[1]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced main_claim_asset_route@9.ops[3]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted main_claim_asset_route@9.ops[5]: 'store tmp%35#0 to l-stack (copy)'
debug: Replaced main_claim_asset_route@9.ops[7]: 'load tmp%35#0' with 'load tmp%35#0 from l-stack (no copy)'
debug: Inserted main_claim_asset_route@9.ops[10]: 'store tmp%36#0 to l-stack (copy)'
debug: Replaced main_claim_asset_route@9.ops[12]: 'load tmp%36#0' with 'load tmp%36#0 from l-stack (no copy)'
debug: Inserted main_claim_asset_route@9.ops[15]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced main_claim_asset_route@9.ops[17]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted main_claim_asset_route@9.ops[19]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced main_claim_asset_route@9.ops[21]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted main_claim_asset_route@9.ops[23]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced main_claim_asset_route@9.ops[25]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted main_bare_routing@12.ops[1]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced main_bare_routing@12.ops[3]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Inserted main_create@13.ops[1]: 'store tmp%41#0 to l-stack (copy)'
debug: Replaced main_create@13.ops[3]: 'load tmp%41#0' with 'load tmp%41#0 from l-stack (no copy)'
debug: Inserted main_create@13.ops[5]: 'store tmp%42#0 to l-stack (copy)'
debug: Replaced main_create@13.ops[7]: 'load tmp%42#0' with 'load tmp%42#0 from l-stack (no copy)'
debug: Found 4 edge set/s for examples.TEALScript.auction.contract.Auction.approval_program
debug: Simplified uncover 2; uncover 2; uncover 2 to 
debug: Inserted opt_into_asset_block@0.ops[7]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[9]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[20]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[22]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[33]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[35]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[6]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[15]: 'store app_global_get_ex_did_exist%4#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[18]: 'load app_global_get_ex_did_exist%4#0' with 'load app_global_get_ex_did_exist%4#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted opt_into_asset_block@0.ops[18]: 'store app_global_get_ex_value%3#0 to l-stack (copy)'
debug: Replaced opt_into_asset_block@0.ops[22]: 'load app_global_get_ex_value%3#0' with 'load app_global_get_ex_value%3#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[7]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[9]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[20]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[22]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[32]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[34]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[6]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[15]: 'store app_global_get_ex_did_exist%4#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[18]: 'load app_global_get_ex_did_exist%4#0' with 'load app_global_get_ex_did_exist%4#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[30]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[33]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[41]: 'store new_state_value%9#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[44]: 'load new_state_value%9#0' with 'load new_state_value%9#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[50]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[53]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[55]: 'store new_state_value%12#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[58]: 'load new_state_value%12#0' with 'load new_state_value%12#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[62]: 'store new_state_value%13#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[65]: 'load new_state_value%13#0' with 'load new_state_value%13#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[18]: 'store app_global_get_ex_value%3#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[22]: 'load app_global_get_ex_value%3#0' with 'load app_global_get_ex_value%3#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[30]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[35]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted start_auction_block@0.ops[50]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced start_auction_block@0.ops[56]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[12]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[14]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[24]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[26]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[41]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[43]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[61]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[63]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[5]: 'store app_global_get_ex_did_exist%2#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[8]: 'load app_global_get_ex_did_exist%2#0' with 'load app_global_get_ex_did_exist%2#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[21]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[24]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[36]: 'store app_global_get_ex_did_exist%9#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[39]: 'load app_global_get_ex_did_exist%9#0' with 'load app_global_get_ex_did_exist%9#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[50]: 'store new_state_value%11#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[53]: 'load new_state_value%11#0' with 'load new_state_value%11#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[57]: 'store new_state_value%12#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[60]: 'load new_state_value%12#0' with 'load new_state_value%12#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[19]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[24]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[7]: 'store app_global_get_ex_value%1#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[12]: 'load app_global_get_ex_value%1#0' with 'load app_global_get_ex_value%1#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[40]: 'store app_global_get_ex_value%8#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[45]: 'load app_global_get_ex_value%8#0' with 'load app_global_get_ex_value%8#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[67]: 'store new_state_value%13#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[74]: 'load new_state_value%13#0' with 'load new_state_value%13#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted bid_block@0.ops[35]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced bid_block@0.ops[46]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[7]: 'store app_local_get_ex_did_exist%2#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[10]: 'load app_local_get_ex_did_exist%2#0' with 'load app_local_get_ex_did_exist%2#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[17]: 'store app_global_get_ex_did_exist%5#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[20]: 'load app_global_get_ex_did_exist%5#0' with 'load app_global_get_ex_did_exist%5#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[25]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[29]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[19]: 'store app_global_get_ex_value%4#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[24]: 'load app_global_get_ex_value%4#0' with 'load app_global_get_ex_value%4#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[13]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[24]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted claim_bids_block@0.ops[9]: 'store original_amount#0 to l-stack (copy)'
debug: Replaced claim_bids_block@0.ops[30]: 'load original_amount#0' with 'load original_amount#0 from l-stack (no copy)'
debug: Inserted claim_bids_if_body@1.ops[3]: 'store app_global_get_ex_did_exist%8#0 to l-stack (copy)'
debug: Replaced claim_bids_if_body@1.ops[6]: 'load app_global_get_ex_did_exist%8#0' with 'load app_global_get_ex_did_exist%8#0 from l-stack (no copy)'
debug: Inserted claim_bids_if_body@1.ops[5]: 'store app_global_get_ex_value%7#0 to l-stack (copy)'
debug: Replaced claim_bids_if_body@1.ops[10]: 'load app_global_get_ex_value%7#0' with 'load app_global_get_ex_value%7#0 from l-stack (no copy)'
debug: Inserted claim_bids_after_if_else@2.ops[6]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced claim_bids_after_if_else@2.ops[8]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted claim_bids_after_if_else@2.ops[18]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced claim_bids_after_if_else@2.ops[20]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted claim_bids_after_if_else@2.ops[11]: 'store amount#1 to l-stack (copy)'
debug: Replaced claim_bids_after_if_else@2.ops[15]: 'load amount#1' with 'load amount#1 from l-stack (no copy)'
debug: Inserted claim_bids_after_if_else@2.ops[17]: 'store new_state_value%10#0 to l-stack (copy)'
debug: Replaced claim_bids_after_if_else@2.ops[24]: 'load new_state_value%10#0' with 'load new_state_value%10#0 from l-stack (no copy)'
debug: Found 1 edge set/s for examples.TEALScript.auction.contract.Auction.claim_bids
debug: examples.TEALScript.auction.contract.Auction.claim_bids f-stack entry: []
debug: examples.TEALScript.auction.contract.Auction.claim_bids f-stack on first store: ['original_amount#0', 'amount#1']
debug: Inserted claim_asset_block@0.ops[12]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[14]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[5]: 'store app_global_get_ex_did_exist%2#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[8]: 'load app_global_get_ex_did_exist%2#0' with 'load app_global_get_ex_did_exist%2#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[25]: 'store app_global_get_ex_did_exist%5#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[28]: 'load app_global_get_ex_did_exist%5#0' with 'load app_global_get_ex_did_exist%5#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[37]: 'store app_global_get_ex_did_exist%7#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[40]: 'load app_global_get_ex_did_exist%7#0' with 'load app_global_get_ex_did_exist%7#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[47]: 'store app_global_get_ex_did_exist%9#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[50]: 'load app_global_get_ex_did_exist%9#0' with 'load app_global_get_ex_did_exist%9#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[27]: 'store app_global_get_ex_value%4#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[31]: 'load app_global_get_ex_value%4#0' with 'load app_global_get_ex_value%4#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[40]: 'store app_global_get_ex_value%6#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[44]: 'load app_global_get_ex_value%6#0' with 'load app_global_get_ex_value%6#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[51]: 'store app_global_get_ex_value%8#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[55]: 'load app_global_get_ex_value%8#0' with 'load app_global_get_ex_value%8#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[7]: 'store app_global_get_ex_value%1#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[12]: 'load app_global_get_ex_value%1#0' with 'load app_global_get_ex_value%1#0 from l-stack (no copy)'
debug: Inserted claim_asset_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced claim_asset_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted __init___block@0.ops[13]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced __init___block@0.ops[16]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Simplified global ZeroAddress; byte "previous_bidder"; swap to byte "previous_bidder"; global ZeroAddress
info: Writing TEALScript/auction/out/contract.approval.teal
info: Writing TEALScript/auction/out/contract.approval.debug.teal
info: Writing TEALScript/auction/out/contract.clear.teal
info: Writing TEALScript/auction/out/contract.clear.debug.teal
info: Writing TEALScript/auction/out/application.json
>> exit code = 0