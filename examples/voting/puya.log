debug: PuyaOptions(paths=['voting'], output_teal=True, output_arc32=True, output_client=True, output_awst=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, debug_level=1, optimization_level=1, log_level=<LogLevel.debug: 10>, target_avm_version=10, locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>)
info: Found python prefix: <git root>/.venv
debug: Sealing block@0: // L11
debug: Terminated block@0: // L11
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L19
debug: Terminated block@1: // while_top_L19
debug: Sealing block@None: // while_body_L19
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L19
debug: Terminated block@2: // while_body_L19
debug: Sealing block@None: // switch_case_default_L25
debug: Sealing block@None: // switch_case_0_L27
debug: Sealing block@None: // switch_case_1_L29
debug: Terminated block@3: // switch_case_0_L27
debug: Terminated block@4: // switch_case_1_L29
debug: Terminated block@5: // switch_case_default_L25
debug: Sealing block@6: // switch_case_next_L25
debug: Terminated block@6: // switch_case_next_L25
debug: Sealing block@1: // while_top_L19
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L25
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L25
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@None: // after_while_L19
debug: Terminated block@7: // after_while_L19
debug: Sealing block@0: // L20
debug: Terminated block@0: // L20
debug: Sealing block@0: // L39
debug: Terminated block@0: // L39
debug: Sealing block@0: // L57
debug: Terminated block@0: // L57
debug: Sealing block@0: // L84
debug: Terminated block@0: // L84
debug: Sealing block@None: // if_body_L106
debug: Sealing block@None: // else_body_L106
debug: Terminated block@1: // if_body_L106
debug: Sealing block@2: // after_if_else_L106
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L106
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L84
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L106
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0: // L84
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L106
debug: Sealing block@None: // ternary_true_L110
debug: Sealing block@None: // ternary_false_L110
debug: Terminated block@3: // ternary_true_L110
debug: Terminated block@4: // ternary_false_L110
debug: Sealing block@5: // ternary_merge_L110
debug: Created Phi assignment: let ternary_result%0#2: uint64 = undefined while trying to resolve 'ternary_result%0' in block@5: // ternary_merge_L110
debug: Added ternary_result%0#0 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@3) in block@3: // ternary_true_L110
debug: Added ternary_result%0#1 to Phi node: let ternary_result%0#2: uint64 = φ(ternary_result%0#0 <- block@3, ternary_result%0#1 <- block@4) in block@4: // ternary_false_L110
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // ternary_merge_L110
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L106
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L84
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#2) with new_items_count#0 in current definition for 1 blocks
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3) in block@3: // ternary_true_L110
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@5: // ternary_merge_L110
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@6: // for_header_L110
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@6: // for_header_L110
debug: Terminated block@6: // for_header_L110
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@7: // for_body_L110
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@7: // for_body_L110
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@7: // for_body_L110
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@7: // for_body_L110
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@7: // for_body_L110
debug: Terminated block@7: // for_body_L110
debug: Sealing block@8: // for_footer_L110
debug: Terminated block@8: // for_footer_L110
debug: Sealing block@9: // for_increment_L110
debug: Terminated block@9: // for_increment_L110
debug: Sealing block@6: // for_header_L110
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@5) in block@5: // ternary_merge_L110
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@5, range_item%0#3 <- block@9) in block@9: // for_increment_L110
debug: Sealing block@7: // for_body_L110
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@6: // for_header_L110
debug: Created Phi assignment: let result#5: bytes = undefined while trying to resolve 'result' in block@5: // ternary_merge_L110
debug: Created Phi assignment: let result#6: bytes = undefined while trying to resolve 'result' in block@2: // after_if_else_L106
debug: Added result#0 to Phi node: let result#6: bytes = φ(result#0 <- block@0) in block@0: // L84
debug: Added result#1 to Phi node: let result#6: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1: // if_body_L106
debug: Added result#6 to Phi node: let result#5: bytes = φ(result#6 <- block@3) in block@3: // ternary_true_L110
debug: Added result#6 to Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) (result#5) with result#6
debug: Deleting Phi assignment: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4)
debug: Replaced trivial Phi node: let result#5: bytes = φ(result#6 <- block@3, result#6 <- block@4) (result#5) with result#6 in current definition for 1 blocks
debug: Added result#6 to Phi node: let result#4: bytes = φ(result#6 <- block@5) in block@5: // ternary_merge_L110
debug: Added result#3 to Phi node: let result#4: bytes = φ(result#6 <- block@5, result#3 <- block@9) in block@9: // for_increment_L110
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let result#2: bytes = φ(result#4 <- block@6) (result#2) with result#4
debug: Deleting Phi assignment: let result#2: bytes = φ(result#4 <- block@6)
debug: Replaced trivial Phi node: let result#2: bytes = φ(result#4 <- block@6) (result#2) with result#4 in current definition for 0 blocks
debug: Created Phi assignment: let write_offset#3: uint64 = undefined while trying to resolve 'write_offset' in block@6: // for_header_L110
debug: Created Phi assignment: let write_offset#4: uint64 = undefined while trying to resolve 'write_offset' in block@5: // ternary_merge_L110
debug: Added write_offset#0 to Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3) in block@3: // ternary_true_L110
debug: Added write_offset#0 to Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) (write_offset#4) with write_offset#0
debug: Deleting Phi assignment: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4)
debug: Replaced trivial Phi node: let write_offset#4: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) (write_offset#4) with write_offset#0 in current definition for 1 blocks
debug: Added write_offset#0 to Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@5) in block@5: // ternary_merge_L110
debug: Added write_offset#2 to Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@5, write_offset#2 <- block@9) in block@9: // for_increment_L110
debug: Added write_offset#3 to Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) (write_offset#1) with write_offset#3
debug: Deleting Phi assignment: let write_offset#1: uint64 = φ(write_offset#3 <- block@6)
debug: Replaced trivial Phi node: let write_offset#1: uint64 = φ(write_offset#3 <- block@6) (write_offset#1) with write_offset#3 in current definition for 0 blocks
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@6: // for_header_L110
debug: Created Phi assignment: let new_items_bytes#3: bytes = undefined while trying to resolve 'new_items_bytes' in block@5: // ternary_merge_L110
debug: Created Phi assignment: let new_items_bytes#4: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L106
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L84
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L106
debug: Replacing trivial Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#4) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#4: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#4) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3) in block@3: // ternary_true_L110
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) in block@4: // ternary_false_L110
debug: Replacing trivial Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) (new_items_bytes#3) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) (new_items_bytes#3) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5) in block@5: // ternary_merge_L110
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#1 <- block@9) in block@9: // for_increment_L110
debug: Added new_items_bytes#2 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) in block@6: // for_header_L110
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) (new_items_bytes#1) with new_items_bytes#2
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6)
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#2 <- block@6) (new_items_bytes#1) with new_items_bytes#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#2 <- block@9) (new_items_bytes#2) with new_items_bytes#0 in current definition for 4 blocks
debug: Sealing block@None: // after_for_L110
debug: Terminated block@10: // after_for_L110
debug: Sealing block@0: // L117
debug: Terminated block@0: // L117
debug: Sealing block@0: // L139
debug: Terminated block@0: // L139
debug: Sealing block@0: // L166
debug: Terminated block@0: // L166
debug: Sealing block@0: // L195
debug: Terminated block@0: // L195
debug: Sealing block@None: // if_body_L210
debug: Sealing block@None: // else_body_L210
debug: Terminated block@1: // if_body_L210
debug: Terminated block@2: // else_body_L210
debug: Sealing block@3: // after_if_else_L210
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@3: // after_if_else_L210
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@1) in block@1: // if_body_L210
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) (length#1) with length#0 in current definition for 1 blocks
debug: Created Phi assignment: let start_at_index#1: uint64 = undefined while trying to resolve 'start_at_index' in block@3: // after_if_else_L210
debug: Added start_at_index#0 to Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1) in block@1: // if_body_L210
debug: Added start_at_index#0 to Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) (start_at_index#1) with start_at_index#0
debug: Deleting Phi assignment: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2)
debug: Replaced trivial Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) (start_at_index#1) with start_at_index#0 in current definition for 1 blocks
debug: Terminated block@3: // after_if_else_L210
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@4: // for_header_L215
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@4: // for_header_L215
debug: Terminated block@4: // for_header_L215
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@5: // for_body_L215
debug: Looking for 'tail_cursor' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let tail_cursor#2: uint64 = undefined while trying to resolve 'tail_cursor' in block@5: // for_body_L215
debug: Looking for 'array_data' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let array_data#1: bytes = undefined while trying to resolve 'array_data' in block@5: // for_body_L215
debug: Looking for 'header_cursor' in an unsealed block creating an incomplete Phi: block@5: // for_body_L215
debug: Created Phi assignment: let header_cursor#1: uint64 = undefined while trying to resolve 'header_cursor' in block@5: // for_body_L215
debug: Terminated block@5: // for_body_L215
debug: Sealing block@6: // for_footer_L215
debug: Terminated block@6: // for_footer_L215
debug: Sealing block@7: // for_increment_L215
debug: Terminated block@7: // for_increment_L215
debug: Sealing block@4: // for_header_L215
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@3) in block@3: // after_if_else_L210
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@3, range_item%0#3 <- block@7) in block@7: // for_increment_L215
debug: Sealing block@5: // for_body_L215
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@4) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@4)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@4) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let tail_cursor#4: uint64 = undefined while trying to resolve 'tail_cursor' in block@4: // for_header_L215
debug: Created Phi assignment: let tail_cursor#5: uint64 = undefined while trying to resolve 'tail_cursor' in block@3: // after_if_else_L210
debug: Added tail_cursor#0 to Phi node: let tail_cursor#5: uint64 = φ(tail_cursor#0 <- block@1) in block@1: // if_body_L210
debug: Added tail_cursor#1 to Phi node: let tail_cursor#5: uint64 = φ(tail_cursor#0 <- block@1, tail_cursor#1 <- block@2) in block@2: // else_body_L210
debug: Added tail_cursor#5 to Phi node: let tail_cursor#4: uint64 = φ(tail_cursor#5 <- block@3) in block@3: // after_if_else_L210
debug: Added tail_cursor#3 to Phi node: let tail_cursor#4: uint64 = φ(tail_cursor#5 <- block@3, tail_cursor#3 <- block@7) in block@7: // for_increment_L215
debug: Added tail_cursor#4 to Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4) (tail_cursor#2) with tail_cursor#4
debug: Deleting Phi assignment: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4)
debug: Replaced trivial Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@4) (tail_cursor#2) with tail_cursor#4 in current definition for 0 blocks
debug: Created Phi assignment: let array_data#3: bytes = undefined while trying to resolve 'array_data' in block@4: // for_header_L215
debug: Created Phi assignment: let array_data#4: bytes = undefined while trying to resolve 'array_data' in block@3: // after_if_else_L210
debug: Added array_data#0 to Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1) in block@1: // if_body_L210
debug: Added array_data#0 to Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) (array_data#4) with array_data#0
debug: Deleting Phi assignment: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2)
debug: Replaced trivial Phi node: let array_data#4: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) (array_data#4) with array_data#0 in current definition for 1 blocks
debug: Added array_data#0 to Phi node: let array_data#3: bytes = φ(array_data#0 <- block@3) in block@3: // after_if_else_L210
debug: Added array_data#2 to Phi node: let array_data#3: bytes = φ(array_data#0 <- block@3, array_data#2 <- block@7) in block@7: // for_increment_L215
debug: Added array_data#3 to Phi node: let array_data#1: bytes = φ(array_data#3 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let array_data#1: bytes = φ(array_data#3 <- block@4) (array_data#1) with array_data#3
debug: Deleting Phi assignment: let array_data#1: bytes = φ(array_data#3 <- block@4)
debug: Replaced trivial Phi node: let array_data#1: bytes = φ(array_data#3 <- block@4) (array_data#1) with array_data#3 in current definition for 0 blocks
debug: Created Phi assignment: let header_cursor#3: uint64 = undefined while trying to resolve 'header_cursor' in block@4: // for_header_L215
debug: Created Phi assignment: let header_cursor#4: uint64 = undefined while trying to resolve 'header_cursor' in block@3: // after_if_else_L210
debug: Added header_cursor#0 to Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1) in block@1: // if_body_L210
debug: Added header_cursor#0 to Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) in block@2: // else_body_L210
debug: Replacing trivial Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) (header_cursor#4) with header_cursor#0
debug: Deleting Phi assignment: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2)
debug: Replaced trivial Phi node: let header_cursor#4: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) (header_cursor#4) with header_cursor#0 in current definition for 1 blocks
debug: Added header_cursor#0 to Phi node: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@3) in block@3: // after_if_else_L210
debug: Added header_cursor#2 to Phi node: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@3, header_cursor#2 <- block@7) in block@7: // for_increment_L215
debug: Added header_cursor#3 to Phi node: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4) in block@4: // for_header_L215
debug: Replacing trivial Phi node: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4) (header_cursor#1) with header_cursor#3
debug: Deleting Phi assignment: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4)
debug: Replaced trivial Phi node: let header_cursor#1: uint64 = φ(header_cursor#3 <- block@4) (header_cursor#1) with header_cursor#3 in current definition for 0 blocks
debug: Sealing block@None: // after_for_L215
debug: Terminated block@8: // after_for_L215
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@None: // while_body_L11
debug: Terminated block@2: // while_body_L11
debug: Sealing block@None: // if_body_L12
debug: Sealing block@None: // else_body_L12
debug: Terminated block@3: // if_body_L12
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L4
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L4
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L4
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@None: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L58
debug: Terminated block@0: // L58
debug: Sealing block@0: // L217
debug: Terminated block@0: // L217
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L223
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1: // for_header_L223
debug: Terminated block@1: // for_header_L223
debug: Sealing block@None: // for_body_L223
debug: Looking for 'total_options' in an unsealed block creating an incomplete Phi: block@1: // for_header_L223
debug: Created Phi assignment: let total_options#1: uint64 = undefined while trying to resolve 'total_options' in block@1: // for_header_L223
debug: Terminated block@2: // for_body_L223
debug: Sealing block@3: // for_footer_L223
debug: Sealing block@None: // after_for_L223
debug: Terminated block@3: // for_footer_L223
debug: Sealing block@1: // for_header_L223
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0: // L217
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3: // for_footer_L223
debug: Added total_options#0 to Phi node: let total_options#1: uint64 = φ(total_options#0 <- block@0) in block@0: // L217
debug: Added total_options#2 to Phi node: let total_options#1: uint64 = φ(total_options#0 <- block@0, total_options#2 <- block@3) in block@3: // for_footer_L223
debug: Created Phi assignment: let option_counts#1: bytes = undefined while trying to resolve 'option_counts' in block@1: // for_header_L223
debug: Added option_counts#0 to Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@0) in block@0: // L217
debug: Added option_counts#1 to Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@0, option_counts#1 <- block@3) in block@3: // for_footer_L223
debug: Replacing trivial Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@0, option_counts#1 <- block@3) (option_counts#1) with option_counts#0
debug: Deleting Phi assignment: let option_counts#1: bytes = φ(option_counts#0 <- block@0, option_counts#1 <- block@3)
debug: Replaced trivial Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@0, option_counts#1 <- block@3) (option_counts#1) with option_counts#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L223
debug: Sealing block@0: // L82
debug: Terminated block@0: // L82
debug: Sealing block@0: // L110
debug: Terminated block@0: // L110
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L132
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1: // for_header_L132
debug: Terminated block@1: // for_header_L132
debug: Sealing block@None: // for_body_L132
debug: Terminated block@2: // for_body_L132
debug: Sealing block@None: // if_body_L133
debug: Sealing block@None: // else_body_L133
debug: Looking for 'note' in an unsealed block creating an incomplete Phi: block@1: // for_header_L132
debug: Created Phi assignment: let note#1: bytes = undefined while trying to resolve 'note' in block@1: // for_header_L132
debug: Terminated block@3: // if_body_L133
debug: Sealing block@4: // after_if_else_L133
debug: Created Phi assignment: let question_options#1: bytes = undefined while trying to resolve 'question_options' in block@4: // after_if_else_L133
debug: Added question_options#0 to Phi node: let question_options#1: bytes = φ(question_options#0 <- block@2) in block@2: // for_body_L132
debug: Added question_options#0 to Phi node: let question_options#1: bytes = φ(question_options#0 <- block@2, question_options#0 <- block@3) in block@3: // if_body_L133
debug: Replacing trivial Phi node: let question_options#1: bytes = φ(question_options#0 <- block@2, question_options#0 <- block@3) (question_options#1) with question_options#0
debug: Deleting Phi assignment: let question_options#1: bytes = φ(question_options#0 <- block@2, question_options#0 <- block@3)
debug: Replaced trivial Phi node: let question_options#1: bytes = φ(question_options#0 <- block@2, question_options#0 <- block@3) (question_options#1) with question_options#0 in current definition for 1 blocks
debug: Terminated block@4: // after_if_else_L133
debug: Sealing block@None: // if_body_L135
debug: Sealing block@None: // else_body_L135
debug: Created Phi assignment: let note#3: bytes = undefined while trying to resolve 'note' in block@4: // after_if_else_L133
debug: Added note#1 to Phi node: let note#3: bytes = φ(note#1 <- block@2) in block@2: // for_body_L132
debug: Added note#2 to Phi node: let note#3: bytes = φ(note#1 <- block@2, note#2 <- block@3) in block@3: // if_body_L133
debug: Terminated block@5: // if_body_L135
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@6: // for_header_L137
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@6: // for_header_L137
debug: Terminated block@6: // for_header_L137
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@7: // for_body_L137
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@7: // for_body_L137
debug: Terminated block@7: // for_body_L137
debug: Sealing block@None: // if_body_L138
debug: Sealing block@None: // else_body_L138
debug: Looking for 'note' in an unsealed block creating an incomplete Phi: block@7: // for_body_L137
debug: Created Phi assignment: let note#5: bytes = undefined while trying to resolve 'note' in block@7: // for_body_L137
debug: Terminated block@8: // if_body_L138
debug: Sealing block@9: // after_if_else_L138
debug: Created Phi assignment: let current_index#1: uint64 = undefined while trying to resolve 'current_index' in block@9: // after_if_else_L138
debug: Looking for 'current_index' in an unsealed block creating an incomplete Phi: block@7: // for_body_L137
debug: Created Phi assignment: let current_index#2: uint64 = undefined while trying to resolve 'current_index' in block@7: // for_body_L137
debug: Added current_index#2 to Phi node: let current_index#1: uint64 = φ(current_index#2 <- block@7) in block@7: // for_body_L137
debug: Added current_index#2 to Phi node: let current_index#1: uint64 = φ(current_index#2 <- block@7, current_index#2 <- block@8) in block@8: // if_body_L138
debug: Replacing trivial Phi node: let current_index#1: uint64 = φ(current_index#2 <- block@7, current_index#2 <- block@8) (current_index#1) with current_index#2
debug: Deleting Phi assignment: let current_index#1: uint64 = φ(current_index#2 <- block@7, current_index#2 <- block@8)
debug: Replaced trivial Phi node: let current_index#1: uint64 = φ(current_index#2 <- block@7, current_index#2 <- block@8) (current_index#1) with current_index#2 in current definition for 1 blocks
debug: Created Phi assignment: let note#7: bytes = undefined while trying to resolve 'note' in block@9: // after_if_else_L138
debug: Added note#5 to Phi node: let note#7: bytes = φ(note#5 <- block@7) in block@7: // for_body_L137
debug: Added note#6 to Phi node: let note#7: bytes = φ(note#5 <- block@7, note#6 <- block@8) in block@8: // if_body_L138
debug: Terminated block@9: // after_if_else_L138
debug: Sealing block@10: // for_footer_L137
debug: Terminated block@10: // for_footer_L137
debug: Sealing block@11: // for_increment_L137
debug: Created Phi assignment: let range_item%0#3: uint64 = undefined while trying to resolve 'range_item%0' in block@9: // after_if_else_L138
debug: Added range_item%0#2 to Phi node: let range_item%0#3: uint64 = φ(range_item%0#2 <- block@7) in block@7: // for_body_L137
debug: Added range_item%0#2 to Phi node: let range_item%0#3: uint64 = φ(range_item%0#2 <- block@7, range_item%0#2 <- block@8) in block@8: // if_body_L138
debug: Replacing trivial Phi node: let range_item%0#3: uint64 = φ(range_item%0#2 <- block@7, range_item%0#2 <- block@8) (range_item%0#3) with range_item%0#2
debug: Deleting Phi assignment: let range_item%0#3: uint64 = φ(range_item%0#2 <- block@7, range_item%0#2 <- block@8)
debug: Replaced trivial Phi node: let range_item%0#3: uint64 = φ(range_item%0#2 <- block@7, range_item%0#2 <- block@8) (range_item%0#3) with range_item%0#2 in current definition for 1 blocks
debug: Terminated block@11: // for_increment_L137
debug: Sealing block@6: // for_header_L137
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@5) in block@5: // if_body_L135
debug: Added range_item%0#4 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@5, range_item%0#4 <- block@11) in block@11: // for_increment_L137
debug: Sealing block@7: // for_body_L137
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) in block@6: // for_header_L137
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@6) (range_item%0#2) with range_item%0#1 in current definition for 4 blocks
debug: Created Phi assignment: let note#9: bytes = undefined while trying to resolve 'note' in block@6: // for_header_L137
debug: Added note#4 to Phi node: let note#9: bytes = φ(note#4 <- block@5) in block@5: // if_body_L135
debug: Added note#8 to Phi node: let note#9: bytes = φ(note#4 <- block@5, note#8 <- block@11) in block@11: // for_increment_L137
debug: Added note#9 to Phi node: let note#5: bytes = φ(note#9 <- block@6) in block@6: // for_header_L137
debug: Replacing trivial Phi node: let note#5: bytes = φ(note#9 <- block@6) (note#5) with note#9
debug: Deleting Phi assignment: let note#5: bytes = φ(note#9 <- block@6)
debug: Replaced trivial Phi node: let note#5: bytes = φ(note#9 <- block@6) (note#5) with note#9 in current definition for 1 blocks
debug: Created Phi assignment: let current_index#4: uint64 = undefined while trying to resolve 'current_index' in block@6: // for_header_L137
debug: Created Phi assignment: let current_index#5: uint64 = undefined while trying to resolve 'current_index' in block@4: // after_if_else_L133
debug: Looking for 'current_index' in an unsealed block creating an incomplete Phi: block@1: // for_header_L132
debug: Created Phi assignment: let current_index#6: uint64 = undefined while trying to resolve 'current_index' in block@1: // for_header_L132
debug: Added current_index#6 to Phi node: let current_index#5: uint64 = φ(current_index#6 <- block@2) in block@2: // for_body_L132
debug: Added current_index#6 to Phi node: let current_index#5: uint64 = φ(current_index#6 <- block@2, current_index#6 <- block@3) in block@3: // if_body_L133
debug: Replacing trivial Phi node: let current_index#5: uint64 = φ(current_index#6 <- block@2, current_index#6 <- block@3) (current_index#5) with current_index#6
debug: Deleting Phi assignment: let current_index#5: uint64 = φ(current_index#6 <- block@2, current_index#6 <- block@3)
debug: Replaced trivial Phi node: let current_index#5: uint64 = φ(current_index#6 <- block@2, current_index#6 <- block@3) (current_index#5) with current_index#6 in current definition for 1 blocks
debug: Added current_index#6 to Phi node: let current_index#4: uint64 = φ(current_index#6 <- block@5) in block@5: // if_body_L135
debug: Added current_index#3 to Phi node: let current_index#4: uint64 = φ(current_index#6 <- block@5, current_index#3 <- block@11) in block@11: // for_increment_L137
debug: Added current_index#4 to Phi node: let current_index#2: uint64 = φ(current_index#4 <- block@6) in block@6: // for_header_L137
debug: Replacing trivial Phi node: let current_index#2: uint64 = φ(current_index#4 <- block@6) (current_index#2) with current_index#4
debug: Deleting Phi assignment: let current_index#2: uint64 = φ(current_index#4 <- block@6)
debug: Replaced trivial Phi node: let current_index#2: uint64 = φ(current_index#4 <- block@6) (current_index#2) with current_index#4 in current definition for 2 blocks
debug: Sealing block@None: // after_for_L137
debug: Terminated block@12: // after_for_L137
debug: Sealing block@13: // after_if_else_L135
debug: Terminated block@13: // after_if_else_L135
debug: Sealing block@14: // for_footer_L132
debug: Sealing block@None: // after_for_L132
debug: Created Phi assignment: let item_index_internal%0#2: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@13: // after_if_else_L135
debug: Created Phi assignment: let item_index_internal%0#3: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@4: // after_if_else_L133
debug: Added item_index_internal%0#1 to Phi node: let item_index_internal%0#3: uint64 = φ(item_index_internal%0#1 <- block@2) in block@2: // for_body_L132
debug: Added item_index_internal%0#1 to Phi node: let item_index_internal%0#3: uint64 = φ(item_index_internal%0#1 <- block@2, item_index_internal%0#1 <- block@3) in block@3: // if_body_L133
debug: Replacing trivial Phi node: let item_index_internal%0#3: uint64 = φ(item_index_internal%0#1 <- block@2, item_index_internal%0#1 <- block@3) (item_index_internal%0#3) with item_index_internal%0#1
debug: Deleting Phi assignment: let item_index_internal%0#3: uint64 = φ(item_index_internal%0#1 <- block@2, item_index_internal%0#1 <- block@3)
debug: Replaced trivial Phi node: let item_index_internal%0#3: uint64 = φ(item_index_internal%0#1 <- block@2, item_index_internal%0#1 <- block@3) (item_index_internal%0#3) with item_index_internal%0#1 in current definition for 1 blocks
debug: Added item_index_internal%0#1 to Phi node: let item_index_internal%0#2: uint64 = φ(item_index_internal%0#1 <- block@4) in block@4: // after_if_else_L133
debug: Created Phi assignment: let item_index_internal%0#4: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@6: // for_header_L137
debug: Added item_index_internal%0#1 to Phi node: let item_index_internal%0#4: uint64 = φ(item_index_internal%0#1 <- block@5) in block@5: // if_body_L135
debug: Created Phi assignment: let item_index_internal%0#5: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@9: // after_if_else_L138
debug: Added item_index_internal%0#4 to Phi node: let item_index_internal%0#5: uint64 = φ(item_index_internal%0#4 <- block@7) in block@7: // for_body_L137
debug: Added item_index_internal%0#4 to Phi node: let item_index_internal%0#5: uint64 = φ(item_index_internal%0#4 <- block@7, item_index_internal%0#4 <- block@8) in block@8: // if_body_L138
debug: Replacing trivial Phi node: let item_index_internal%0#5: uint64 = φ(item_index_internal%0#4 <- block@7, item_index_internal%0#4 <- block@8) (item_index_internal%0#5) with item_index_internal%0#4
debug: Deleting Phi assignment: let item_index_internal%0#5: uint64 = φ(item_index_internal%0#4 <- block@7, item_index_internal%0#4 <- block@8)
debug: Replaced trivial Phi node: let item_index_internal%0#5: uint64 = φ(item_index_internal%0#4 <- block@7, item_index_internal%0#4 <- block@8) (item_index_internal%0#5) with item_index_internal%0#4 in current definition for 1 blocks
debug: Added item_index_internal%0#4 to Phi node: let item_index_internal%0#4: uint64 = φ(item_index_internal%0#1 <- block@5, item_index_internal%0#4 <- block@11) in block@11: // for_increment_L137
debug: Replacing trivial Phi node: let item_index_internal%0#4: uint64 = φ(item_index_internal%0#1 <- block@5, item_index_internal%0#4 <- block@11) (item_index_internal%0#4) with item_index_internal%0#1
debug: Deleting Phi assignment: let item_index_internal%0#4: uint64 = φ(item_index_internal%0#1 <- block@5, item_index_internal%0#4 <- block@11)
debug: Replaced trivial Phi node: let item_index_internal%0#4: uint64 = φ(item_index_internal%0#1 <- block@5, item_index_internal%0#4 <- block@11) (item_index_internal%0#4) with item_index_internal%0#1 in current definition for 6 blocks
debug: Added item_index_internal%0#1 to Phi node: let item_index_internal%0#2: uint64 = φ(item_index_internal%0#1 <- block@4, item_index_internal%0#1 <- block@12) in block@12: // after_for_L137
debug: Replacing trivial Phi node: let item_index_internal%0#2: uint64 = φ(item_index_internal%0#1 <- block@4, item_index_internal%0#1 <- block@12) (item_index_internal%0#2) with item_index_internal%0#1
debug: Deleting Phi assignment: let item_index_internal%0#2: uint64 = φ(item_index_internal%0#1 <- block@4, item_index_internal%0#1 <- block@12)
debug: Replaced trivial Phi node: let item_index_internal%0#2: uint64 = φ(item_index_internal%0#1 <- block@4, item_index_internal%0#1 <- block@12) (item_index_internal%0#2) with item_index_internal%0#1 in current definition for 1 blocks
debug: Terminated block@14: // for_footer_L132
debug: Sealing block@1: // for_header_L132
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0: // L110
debug: Added item_index_internal%0#6 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#6 <- block@14) in block@14: // for_footer_L132
debug: Added note#0 to Phi node: let note#1: bytes = φ(note#0 <- block@0) in block@0: // L110
debug: Created Phi assignment: let note#11: bytes = undefined while trying to resolve 'note' in block@13: // after_if_else_L135
debug: Added note#3 to Phi node: let note#11: bytes = φ(note#3 <- block@4) in block@4: // after_if_else_L133
debug: Added note#10 to Phi node: let note#11: bytes = φ(note#3 <- block@4, note#10 <- block@12) in block@12: // after_for_L137
debug: Added note#11 to Phi node: let note#1: bytes = φ(note#0 <- block@0, note#11 <- block@14) in block@14: // for_footer_L132
debug: Added current_index#0 to Phi node: let current_index#6: uint64 = φ(current_index#0 <- block@0) in block@0: // L110
debug: Created Phi assignment: let current_index#7: uint64 = undefined while trying to resolve 'current_index' in block@13: // after_if_else_L135
debug: Added current_index#6 to Phi node: let current_index#7: uint64 = φ(current_index#6 <- block@4) in block@4: // after_if_else_L133
debug: Added current_index#4 to Phi node: let current_index#7: uint64 = φ(current_index#6 <- block@4, current_index#4 <- block@12) in block@12: // after_for_L137
debug: Added current_index#7 to Phi node: let current_index#6: uint64 = φ(current_index#0 <- block@0, current_index#7 <- block@14) in block@14: // for_footer_L132
debug: Terminated block@15: // after_for_L132
debug: Sealing block@16: // next_txn_L146
debug: Terminated block@16: // next_txn_L146
debug: Sealing block@0: // L249
debug: Terminated block@0: // L249
debug: Sealing block@None: // if_body_L253
debug: Sealing block@None: // else_body_L253
debug: Terminated block@1: // if_body_L253
debug: Sealing block@2: // after_if_else_L253
debug: Terminated block@2: // after_if_else_L253
debug: Sealing block@0: // L239
debug: Terminated block@0: // L239
debug: Sealing block@0: // L160
debug: Terminated block@0: // L160
debug: Sealing block@0: // L205
debug: Terminated block@0: // L205
debug: Sealing block@None: // and_contd_L208
debug: Terminated block@1: // and_contd_L208
debug: Sealing block@None: // and_contd_L208
debug: Terminated block@2: // and_contd_L208
debug: Sealing block@None: // and_contd_L210
debug: Terminated block@3: // and_contd_L210
debug: Sealing block@None: // bool_true_L208
debug: Sealing block@None: // bool_false_L208
debug: Terminated block@4: // bool_true_L208
debug: Terminated block@5: // bool_false_L208
debug: Sealing block@6: // bool_merge_L208
debug: Created Phi assignment: let and_result%0#2: bool = undefined while trying to resolve 'and_result%0' in block@6: // bool_merge_L208
debug: Added and_result%0#0 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@4) in block@4: // bool_true_L208
debug: Added and_result%0#1 to Phi node: let and_result%0#2: bool = φ(and_result%0#0 <- block@4, and_result%0#1 <- block@5) in block@5: // bool_false_L208
debug: Terminated block@6: // bool_merge_L208
debug: Sealing block@0: // L230
debug: Terminated block@0: // L230
debug: Sealing block@0: // L213
debug: Terminated block@0: // L213
debug: Sealing block@0: // L169
debug: Terminated block@0: // L169
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@1: // for_header_L195
debug: Created Phi assignment: let range_item%0#1: uint64 = undefined while trying to resolve 'range_item%0' in block@1: // for_header_L195
debug: Terminated block@1: // for_header_L195
debug: Looking for 'range_item%0' in an unsealed block creating an incomplete Phi: block@2: // for_body_L195
debug: Created Phi assignment: let range_item%0#2: uint64 = undefined while trying to resolve 'range_item%0' in block@2: // for_body_L195
debug: Looking for 'answer_ids' in an unsealed block creating an incomplete Phi: block@2: // for_body_L195
debug: Created Phi assignment: let answer_ids#1: bytes = undefined while trying to resolve 'answer_ids' in block@2: // for_body_L195
debug: Looking for 'cumulative_offset' in an unsealed block creating an incomplete Phi: block@2: // for_body_L195
debug: Created Phi assignment: let cumulative_offset#1: uint64 = undefined while trying to resolve 'cumulative_offset' in block@2: // for_body_L195
debug: Terminated block@2: // for_body_L195
debug: Sealing block@3: // for_footer_L195
debug: Terminated block@3: // for_footer_L195
debug: Sealing block@4: // for_increment_L195
debug: Terminated block@4: // for_increment_L195
debug: Sealing block@1: // for_header_L195
debug: Added range_item%0#0 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0) in block@0: // L169
debug: Added range_item%0#3 to Phi node: let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0, range_item%0#3 <- block@4) in block@4: // for_increment_L195
debug: Sealing block@2: // for_body_L195
debug: Added range_item%0#1 to Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) in block@1: // for_header_L195
debug: Replacing trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1
debug: Deleting Phi assignment: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1)
debug: Replaced trivial Phi node: let range_item%0#2: uint64 = φ(range_item%0#1 <- block@1) (range_item%0#2) with range_item%0#1 in current definition for 2 blocks
debug: Created Phi assignment: let answer_ids#2: bytes = undefined while trying to resolve 'answer_ids' in block@1: // for_header_L195
debug: Added answer_ids#0 to Phi node: let answer_ids#2: bytes = φ(answer_ids#0 <- block@0) in block@0: // L169
debug: Added answer_ids#1 to Phi node: let answer_ids#2: bytes = φ(answer_ids#0 <- block@0, answer_ids#1 <- block@4) in block@4: // for_increment_L195
debug: Added answer_ids#2 to Phi node: let answer_ids#1: bytes = φ(answer_ids#2 <- block@1) in block@1: // for_header_L195
debug: Replacing trivial Phi node: let answer_ids#1: bytes = φ(answer_ids#2 <- block@1) (answer_ids#1) with answer_ids#2
debug: Deleting Phi assignment: let answer_ids#1: bytes = φ(answer_ids#2 <- block@1)
debug: Replacing trivial Phi node: let answer_ids#2: bytes = φ(answer_ids#0 <- block@0, answer_ids#2 <- block@4) (answer_ids#2) with answer_ids#0
debug: Deleting Phi assignment: let answer_ids#2: bytes = φ(answer_ids#0 <- block@0, answer_ids#2 <- block@4)
debug: Replaced trivial Phi node: let answer_ids#1: bytes = φ(answer_ids#2 <- block@1) (answer_ids#1) with answer_ids#2 in current definition for 3 blocks
debug: Replaced trivial Phi node: let answer_ids#2: bytes = φ(answer_ids#0 <- block@0, answer_ids#2 <- block@4) (answer_ids#2) with answer_ids#0 in current definition for 4 blocks
debug: Created Phi assignment: let cumulative_offset#3: uint64 = undefined while trying to resolve 'cumulative_offset' in block@1: // for_header_L195
debug: Added cumulative_offset#0 to Phi node: let cumulative_offset#3: uint64 = φ(cumulative_offset#0 <- block@0) in block@0: // L169
debug: Added cumulative_offset#2 to Phi node: let cumulative_offset#3: uint64 = φ(cumulative_offset#0 <- block@0, cumulative_offset#2 <- block@4) in block@4: // for_increment_L195
debug: Added cumulative_offset#3 to Phi node: let cumulative_offset#1: uint64 = φ(cumulative_offset#3 <- block@1) in block@1: // for_header_L195
debug: Replacing trivial Phi node: let cumulative_offset#1: uint64 = φ(cumulative_offset#3 <- block@1) (cumulative_offset#1) with cumulative_offset#3
debug: Deleting Phi assignment: let cumulative_offset#1: uint64 = φ(cumulative_offset#3 <- block@1)
debug: Replaced trivial Phi node: let cumulative_offset#1: uint64 = φ(cumulative_offset#3 <- block@1) (cumulative_offset#1) with cumulative_offset#3 in current definition for 0 blocks
debug: Sealing block@None: // after_for_L195
debug: Terminated block@5: // after_for_L195
debug: Sealing block@0: // L243
debug: Terminated block@0: // L243
debug: Sealing block@0: // L50
debug: Terminated block@0: // L50
debug: Sealing block@0: // L49
debug: Terminated block@0: // L49
debug: Sealing block@None: // on_create_L50
debug: Terminated block@1: // on_create_L50
debug: Sealing block@2: // entrypoint_L50
debug: Terminated block@2: // entrypoint_L50
debug: Sealing block@None: // switch_case_default_L49
debug: Sealing block@None: // create_route_L58
debug: Sealing block@None: // bootstrap_route_L82
debug: Sealing block@None: // close_route_L110
debug: Sealing block@None: // get_preconditions_route_L160
debug: Sealing block@None: // vote_route_L169
debug: Terminated block@3: // create_route_L58
debug: Terminated block@4: // bootstrap_route_L82
debug: Terminated block@5: // close_route_L110
debug: Terminated block@6: // get_preconditions_route_L160
debug: Terminated block@7: // vote_route_L169
debug: Terminated block@8: // switch_case_default_L49
debug: Sealing block@9: // switch_case_next_L49
debug: Terminated block@9: // switch_case_next_L49
debug: Sealing block@0: // L49
debug: Terminated block@0: // L49
debug: Output IR to voting/out/VotingRoundApp.ssa.ir
info: Optimizing examples.voting.voting.VotingRoundApp at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%0#0, value%0#0
debug: Replacing {value%0#0} with awst_tmp%0#0 made 1 modifications
debug: Found equivalence set: tmp%25#0, check%0#0
debug: Replacing {check%0#0} with tmp%25#0 made 1 modifications
debug: Found equivalence set: awst_tmp%1#0, value%1#0
debug: Replacing {value%1#0} with awst_tmp%1#0 made 1 modifications
debug: Found equivalence set: tmp%41#0, check%1#0
debug: Replacing {check%1#0} with tmp%41#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%1#0 NoOp) to (! tmp%1#0)
debug: Simplified (== tmp%20#0 NoOp) to (! tmp%20#0)
debug: Simplified (== tmp%26#0 NoOp) to (! tmp%26#0)
debug: Simplified (== tmp%29#0 NoOp) to (! tmp%29#0)
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: adding block@2: // entrypoint_L50 as a predecessor of block@9: // switch_case_next_L49 due to inlining of block@8: // switch_case_default_L49
debug: simplified terminator of block@2: // entrypoint_L50 from switch tmp%0#0 {method "create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void" => block@3, method "bootstrap(pay)void" => block@4, method "close()void" => block@5, method "get_preconditions(byte[])(uint64,uint64,uint64,uint64)" => block@6, method "vote(pay,byte[],uint8[])void" => block@7, * => block@8} to switch tmp%0#0 {method "create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void" => block@3, method "bootstrap(pay)void" => block@4, method "close()void" => block@5, method "get_preconditions(byte[])(uint64,uint64,uint64,uint64)" => block@6, method "vote(pay,byte[],uint8[])void" => block@7, * => block@9}
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@2: // entrypoint_L50 from switch tmp%0#0 {method "create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void" => block@3, method "bootstrap(pay)void" => block@4, method "close()void" => block@5, method "get_preconditions(byte[])(uint64,uint64,uint64,uint64)" => block@6, method "vote(pay,byte[],uint8[])void" => block@7, * => block@9} to switch tmp%0#0 {method "create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void" => block@3, method "bootstrap(pay)void" => block@4, method "close()void" => block@5, method "get_preconditions(byte[])(uint64,uint64,uint64,uint64)" => block@6, method "vote(pay,byte[],uint8[])void" => block@7, * => fail // reject transaction}
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@9: // switch_case_next_L49 into block@8: // switch_case_default_L49
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@8: // switch_case_default_L49
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: option_counts#0, copy%0#0
debug: Replacing {copy%0#0} with option_counts#0 made 1 modifications
debug: Found equivalence set: store_option_counts%0#0, copy%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let store_option_counts%0#0: bytes = examples.voting.voting.VotingRoundApp.store_option_counts(option_counts#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.store_option_counts
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: Found equivalence set: option_counts#0, copy%0#0
debug: Replacing {copy%0#0} with option_counts#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* item_index_internal%0#1 1u) to item_index_internal%0#1
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L223 with block@2: // for_body_L223 in block@1: // for_header_L223
debug: Merged linear block@3: // for_footer_L223 into block@2: // for_body_L223
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%0#0: uint64 = (extract_uint16 option_counts#0 0u) with copy of existing registers [Register(ir_type=bool, name='reinterpret_bool%0', version=0, source_location=voting/voting.py:219:15-35)]
debug: Replacing redundant declaration let array_length%0#0: uint64 = (extract_uint16 option_counts#0 0u) with copy of existing registers [Register(ir_type=bool, name='reinterpret_bool%0', version=0, source_location=voting/voting.py:219:15-35)]
debug: Found equivalence set: reinterpret_bool%0#0, tmp%0#0, array_length%0#0
debug: Replacing {tmp%0#0, array_length%0#0} with reinterpret_bool%0#0 made 2 modifications
debug: Found equivalence set: item_index_internal%0#1, item_index%0#0
debug: Replacing {item_index%0#0} with item_index_internal%0#1 made 1 modifications
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.bootstrap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.close
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: Found equivalence set: nft_image_url_value%0#0, inner_txn_params%0%%param_ConfigAssetURL_idx_0#0
debug: Replacing {inner_txn_params%0%%param_ConfigAssetURL_idx_0#0} with nft_image_url_value%0#0 made 1 modifications
debug: Found equivalence set: note#12, inner_txn_params%0%%param_Note_idx_0#0
debug: Replacing {inner_txn_params%0%%param_Note_idx_0#0} with note#12 made 1 modifications
debug: Found equivalence set: item_index_internal%0#1, question_index#0
debug: Replacing {item_index_internal%0#1} with question_index#0 made 4 modifications
debug: Found equivalence set: question_options#0, reinterpret_biguint%0#0
debug: Replacing {reinterpret_biguint%0#0} with question_options#0 made 1 modifications
debug: Found equivalence set: range_item%0#1, option_index#0
debug: Replacing {range_item%0#1} with option_index#0 made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* question_index#0 1u) to question_index#0
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%12#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetTotal_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetDecimals_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetDefaultFrozen_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@10: // for_footer_L137 with block@9: // after_if_else_L138 in block@11: // for_increment_L137
debug: Merged linear block@10: // for_footer_L137 into block@9: // after_if_else_L138
debug: Replaced predecessor block@11: // for_increment_L137 with block@9: // after_if_else_L138 in block@6: // for_header_L137
debug: Merged linear block@11: // for_increment_L137 into block@9: // after_if_else_L138
debug: Replaced predecessor block@14: // for_footer_L132 with block@13: // after_if_else_L135 in block@1: // for_header_L132
debug: Merged linear block@14: // for_footer_L132 into block@13: // after_if_else_L135
debug: Merged linear block@16: // next_txn_L146 into block@15: // after_for_L132
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine algopy.ensure_budget
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@2: // while_body_L19 from switch fee_source#0 {0u => block@3, 1u => block@4, * => block@5} to goto_nth [block@3, block@4][fee_source#0] else goto block@5
debug: inlining the default target of a switch/goto nth
debug: adding block@2: // while_body_L19 as a predecessor of block@6: // switch_case_next_L25 due to inlining of block@5: // switch_case_default_L25
debug: simplified terminator of block@2: // while_body_L19 from goto_nth [block@3, block@4][fee_source#0] else goto block@5 to goto_nth [block@3, block@4][fee_source#0] else goto block@6
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@5: // switch_case_default_L25
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.itoa
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len "0123456789") to 10u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_vote_from_box
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_preconditions
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.voting_open
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.already_voted
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat "" tmp%0#0) to tmp%0#0
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.vote
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: range_item%0#1, question_index#0
debug: Replacing {range_item%0#1} with question_index#0 made 3 modifications
debug: Found equivalence set: answer_ids#0, copy%0#0
debug: Replacing {copy%0#0} with answer_ids#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 1u tmp%6#0) to tmp%6#0
debug: Simplified (* question_index#0 1u) to question_index#0
debug: Simplified (* question_index#0 1u) to question_index#0
debug: Simplified (concat "" tmp%20#0) to tmp%20#0
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let box_del_res%0#0: bool = (box_del tmp%21#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L195 with block@2: // for_body_L195 in block@4: // for_increment_L195
debug: Merged linear block@3: // for_footer_L195 into block@2: // for_body_L195
debug: Replaced predecessor block@4: // for_increment_L195 with block@2: // for_body_L195 in block@1: // for_header_L195
debug: Merged linear block@4: // for_increment_L195 into block@2: // for_body_L195
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%6#0: uint64 = (extract_uint16 answer_ids#0 0u) with copy of existing registers [Register(ir_type=uint64, name='tmp%4', version=0, source_location=voting/voting.py:182:15-32)]
debug: Replacing redundant declaration let array_length%0#0: uint64 = (extract_uint16 answer_ids#0 0u) with copy of existing registers [Register(ir_type=uint64, name='tmp%4', version=0, source_location=voting/voting.py:182:15-32)]
debug: Found equivalence set: tmp%4#0, tmp%6#0, tmp%7#0, array_length%0#0
debug: Replacing {tmp%6#0, tmp%7#0, array_length%0#0} with tmp%4#0 made 2 modifications
debug: Found equivalence set: question_index#0, item_index%0#0, item_index%1#0
debug: Replacing {item_index%0#0, item_index%1#0} with question_index#0 made 2 modifications
debug: Found equivalence set: tmp%20#0, tmp%21#0
debug: Replacing {tmp%21#0} with tmp%20#0 made 2 modifications
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.increment_vote_in_box
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to voting/out/VotingRoundApp.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.create
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let store_option_counts%0#0: bytes = examples.voting.voting.VotingRoundApp.store_option_counts(option_counts#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.store_option_counts
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.bootstrap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.close
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: question_index#0, item_index%0#0
debug: Replacing {item_index%0#0} with question_index#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine algopy.ensure_budget
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.itoa
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable radix#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_vote_from_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_preconditions
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%0#1
debug: Replacing {encoded_tuple_buffer%0#1} with val_as_bytes%0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.voting_open
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.already_voted
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Replacing {tmp%1#0} with tmp%0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.vote
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let box_del_res%0#0: bool = (box_del tmp%20#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.increment_vote_in_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Output IR to voting/out/VotingRoundApp.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.create
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let store_option_counts%0#0: bytes = examples.voting.voting.VotingRoundApp.store_option_counts(option_counts#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.store_option_counts
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.bootstrap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.close
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine algopy.ensure_budget
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.itoa
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_vote_from_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_preconditions
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.voting_open
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.already_voted
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.vote
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let box_del_res%0#0: bool = (box_del tmp%20#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.increment_vote_in_box
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: No optimizations performed in pass 3, ending loop
debug: Removing Phis from examples.voting.voting.VotingRoundApp.approval_program
debug: Removing Phis from examples.voting.voting.VotingRoundApp.create
debug: Removing Phis from examples.voting.voting.VotingRoundApp.store_option_counts
debug: Removing Phis from examples.voting.voting.VotingRoundApp.bootstrap
debug: Removing Phis from examples.voting.voting.VotingRoundApp.close
debug: Removing Phis from algopy.ensure_budget
debug: Removing Phis from examples.voting.voting.itoa
debug: Removing Phis from examples.voting.voting.VotingRoundApp.get_vote_from_box
debug: Removing Phis from examples.voting.voting.VotingRoundApp.get_preconditions
debug: Removing Phis from examples.voting.voting.VotingRoundApp.voting_open
debug: Removing Phis from examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Removing Phis from examples.voting.voting.VotingRoundApp.already_voted
debug: Removing Phis from examples.voting.voting.VotingRoundApp.vote
debug: Removing Phis from examples.voting.voting.VotingRoundApp.increment_vote_in_box
debug: Removing Phis from examples.voting.voting.VotingRoundApp.__init__
debug: Removing Phis from examples.voting.voting.VotingRoundApp.clear_state_program
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.create using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.store_option_counts using strategy RootOperandGrouping
debug: Coalescing total_options#0 with [total_options#5, total_options#1, total_options#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 18 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.bootstrap using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.close using strategy RootOperandGrouping
debug: Coalescing note#0 with [note#15, note#1, note#2, note#3, note#4, note#21, note#9, note#6, note#7, note#8, note#10, note#11, note#12]
debug: Coalescing note#18 with [note#27, note#24]
debug: Coalescing current_index#0 with [current_index#10, current_index#6, current_index#13, current_index#4, current_index#3, current_index#7]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#6]
debug: Coalescing question_index#0 with [question_index#1]
debug: Coalescing range_item%0#0 with [range_item%0#4]
debug: Coalescing option_index#0 with [option_index#1]
debug: Coalescing resulted in 66 replacement/s
debug: Coalescing local variables in algopy.ensure_budget using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.itoa using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.get_vote_from_box using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.get_preconditions using strategy RootOperandGrouping
debug: Coalescing encoded_tuple_buffer%0#2 with [encoded_tuple_buffer%0#3, encoded_tuple_buffer%0#4]
debug: Coalescing resulted in 4 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.voting_open using strategy RootOperandGrouping
debug: Coalescing and_result%0#0 with [and_result%0#5, and_result%0#1, and_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.allowed_to_vote using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.already_voted using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.vote using strategy RootOperandGrouping
debug: Coalescing cumulative_offset#0 with [cumulative_offset#6, cumulative_offset#3, cumulative_offset#2]
debug: Coalescing range_item%0#0 with [range_item%0#3]
debug: Coalescing question_index#0 with [question_index#1]
debug: Coalescing resulted in 13 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.increment_vote_in_box using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.approval_program
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.create
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.store_option_counts
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total_options#0=total_options#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total_options#0=total_options#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total_options#0
debug: * to_do total_options#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total_options#0=total_options#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total_options#0=total_options#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total_options#0
debug: * to_do total_options#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total_options#0=total_options#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total_options#0=total_options#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total_options#0
debug: * to_do total_options#0
debug: * to_do item_index_internal%0#0
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.bootstrap
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.close
debug: loc: {question_index#0=None, note#0=note#0, current_index#0=current_index#0, item_index_internal%0#0=item_index_internal%0#0}
debug: pred: {question_index#0=item_index_internal%0#0, note#0=note#0, current_index#0=current_index#0}
debug: ready: question_index#0
debug: to_do: question_index#0, note#0, current_index#0
debug: * avail question_index#0
debug: * avail item_index_internal%0#0
debug: * to_do current_index#0
debug: * to_do note#0
debug: * to_do question_index#0
debug: loc: {question_index#0=question_index#0, note#0=note#0, current_index#0=current_index#0}
debug: pred: {question_index#0=question_index#0, note#0=note#0, current_index#0=current_index#0}
debug: ready: 
debug: to_do: question_index#0, note#0, current_index#0
debug: * to_do current_index#0
debug: * to_do note#0
debug: * to_do question_index#0
debug: loc: {note#18=None, current_index#16=None, note#0=note#0, current_index#0=current_index#0}
debug: pred: {note#18=note#0, current_index#16=current_index#0}
debug: ready: note#18, current_index#16
debug: to_do: note#18, current_index#16
debug: * avail current_index#16
debug: * avail current_index#0
debug: * avail note#18
debug: * avail note#0
debug: * to_do current_index#16
debug: * to_do note#18
debug: loc: {option_index#0=None, note#0=note#0, current_index#0=current_index#0, range_item%0#0=range_item%0#0}
debug: pred: {option_index#0=range_item%0#0, note#0=note#0, current_index#0=current_index#0}
debug: ready: option_index#0
debug: to_do: option_index#0, note#0, current_index#0
debug: * avail option_index#0
debug: * avail range_item%0#0
debug: * to_do current_index#0
debug: * to_do note#0
debug: * to_do option_index#0
debug: loc: {option_index#0=option_index#0, note#0=note#0, current_index#0=current_index#0}
debug: pred: {option_index#0=option_index#0, note#0=note#0, current_index#0=current_index#0}
debug: ready: 
debug: to_do: option_index#0, note#0, current_index#0
debug: * to_do current_index#0
debug: * to_do note#0
debug: * to_do option_index#0
debug: loc: {option_index#0=None, note#0=note#0, current_index#0=current_index#0, range_item%0#0=range_item%0#0}
debug: pred: {option_index#0=range_item%0#0, note#0=note#0, current_index#0=current_index#0}
debug: ready: option_index#0
debug: to_do: option_index#0, note#0, current_index#0
debug: * avail option_index#0
debug: * avail range_item%0#0
debug: * to_do current_index#0
debug: * to_do note#0
debug: * to_do option_index#0
debug: loc: {note#18=None, current_index#16=None, note#0=note#0, current_index#0=current_index#0}
debug: pred: {note#18=note#0, current_index#16=current_index#0}
debug: ready: note#18, current_index#16
debug: to_do: note#18, current_index#16
debug: * avail current_index#16
debug: * avail current_index#0
debug: * avail note#18
debug: * avail note#0
debug: * to_do current_index#16
debug: * to_do note#18
debug: loc: {note#0=None, current_index#0=None, note#18=note#18, current_index#16=current_index#16}
debug: pred: {note#0=note#18, current_index#0=current_index#16}
debug: ready: note#0, current_index#0
debug: to_do: note#0, current_index#0
debug: * avail current_index#0
debug: * avail current_index#16
debug: * avail note#0
debug: * avail note#18
debug: * to_do current_index#0
debug: * to_do note#0
debug: loc: {question_index#0=None, note#0=note#0, current_index#0=current_index#0, item_index_internal%0#0=item_index_internal%0#0}
debug: pred: {question_index#0=item_index_internal%0#0, note#0=note#0, current_index#0=current_index#0}
debug: ready: question_index#0
debug: to_do: question_index#0, note#0, current_index#0
debug: * avail question_index#0
debug: * avail item_index_internal%0#0
debug: * to_do current_index#0
debug: * to_do note#0
debug: * to_do question_index#0
debug: Sequentializing parallel copies in algopy.ensure_budget
debug: Sequentializing parallel copies in examples.voting.voting.itoa
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.get_vote_from_box
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.get_preconditions
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.voting_open
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.already_voted
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.vote
debug: loc: {question_index#0=None, cumulative_offset#0=cumulative_offset#0, range_item%0#0=range_item%0#0}
debug: pred: {question_index#0=range_item%0#0, cumulative_offset#0=cumulative_offset#0}
debug: ready: question_index#0
debug: to_do: question_index#0, cumulative_offset#0
debug: * avail question_index#0
debug: * avail range_item%0#0
debug: * to_do cumulative_offset#0
debug: * to_do question_index#0
debug: loc: {question_index#0=question_index#0, cumulative_offset#0=cumulative_offset#0}
debug: pred: {question_index#0=question_index#0, cumulative_offset#0=cumulative_offset#0}
debug: ready: 
debug: to_do: question_index#0, cumulative_offset#0
debug: * to_do cumulative_offset#0
debug: * to_do question_index#0
debug: loc: {question_index#0=None, cumulative_offset#0=cumulative_offset#0, range_item%0#0=range_item%0#0}
debug: pred: {question_index#0=range_item%0#0, cumulative_offset#0=cumulative_offset#0}
debug: ready: question_index#0
debug: to_do: question_index#0, cumulative_offset#0
debug: * avail question_index#0
debug: * avail range_item%0#0
debug: * to_do cumulative_offset#0
debug: * to_do question_index#0
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.increment_vote_in_box
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.__init__
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to voting/out/VotingRoundApp.destructured.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[8]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[1]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[3]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[5]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[7]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[10]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[12]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[14]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[16]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[19]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[21]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[25]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[27]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[31]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[33]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[37]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[39]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[43]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[45]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[51]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[53]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[57]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[59]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[61]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[70]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[55]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[70]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[49]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[70]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[47]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[70]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[41]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[70]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[35]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[70]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[29]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[70]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted main_create_route@3.ops[23]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced main_create_route@3.ops[70]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@4.ops[1]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@4.ops[3]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@4.ops[5]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@4.ops[7]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@4.ops[10]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@4.ops[12]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@4.ops[15]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@4.ops[17]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@4.ops[20]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@4.ops[22]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@4.ops[24]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@4.ops[26]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@4.ops[29]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@4.ops[31]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@4.ops[23]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@4.ops[34]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted main_close_route@5.ops[1]: 'store tmp%26#0 to l-stack (copy)'
debug: Replaced main_close_route@5.ops[3]: 'load tmp%26#0' with 'load tmp%26#0 from l-stack (no copy)'
debug: Inserted main_close_route@5.ops[5]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced main_close_route@5.ops[7]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted main_close_route@5.ops[10]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced main_close_route@5.ops[12]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@6.ops[1]: 'store tmp%29#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@6.ops[3]: 'load tmp%29#0' with 'load tmp%29#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@6.ops[5]: 'store tmp%30#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@6.ops[7]: 'load tmp%30#0' with 'load tmp%30#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@6.ops[10]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@6.ops[12]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@6.ops[15]: 'store tmp%32#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@6.ops[17]: 'load tmp%32#0' with 'load tmp%32#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@6.ops[19]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@6.ops[21]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@6.ops[27]: 'store tmp%35#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@6.ops[29]: 'load tmp%35#0' with 'load tmp%35#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@6.ops[23]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@6.ops[26]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[1]: 'store tmp%36#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[3]: 'load tmp%36#0' with 'load tmp%36#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[5]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[7]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[10]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[12]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[15]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[17]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[20]: 'store awst_tmp%1#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[22]: 'load awst_tmp%1#0' with 'load awst_tmp%1#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[24]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[26]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[29]: 'store tmp%41#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[31]: 'load tmp%41#0' with 'load tmp%41#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[34]: 'store tmp%42#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[36]: 'load tmp%42#0' with 'load tmp%42#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[40]: 'store tmp%44#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[44]: 'load tmp%44#0' with 'load tmp%44#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[38]: 'store tmp%43#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[44]: 'load tmp%43#0' with 'load tmp%43#0 from l-stack (no copy)'
debug: Inserted main_vote_route@7.ops[23]: 'store awst_tmp%1#0 to l-stack (copy)'
debug: Replaced main_vote_route@7.ops[44]: 'load awst_tmp%1#0' with 'load awst_tmp%1#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.approval_program
debug: Inserted create_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[12]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[14]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[8]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[11]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[3]: 'store reinterpret_bool%0#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[5]: 'load reinterpret_bool%0#0' with 'load reinterpret_bool%0#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[10]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[12]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[6]: 'store reinterpret_bool%0#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[8]: 'load reinterpret_bool%0#0' with 'load reinterpret_bool%0#0 from l-stack (no copy)'
debug: Inserted store_option_counts_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced store_option_counts_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted store_option_counts_for_body@2.ops[4]: 'store item#0 to l-stack (copy)'
debug: Replaced store_option_counts_for_body@2.ops[6]: 'load item#0' with 'load item#0 from l-stack (no copy)'
debug: Inserted store_option_counts_for_body@2.ops[8]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced store_option_counts_for_body@2.ops[11]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted store_option_counts_for_body@2.ops[2]: 'store item_index_internal%0#0 to l-stack (copy)'
debug: Replaced store_option_counts_for_body@2.ops[15]: 'load item_index_internal%0#0' with 'load item_index_internal%0#0 from l-stack (no copy)'
debug: Inserted store_option_counts_after_for@4.ops[3]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced store_option_counts_after_for@4.ops[5]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted store_option_counts_after_for@4.ops[1]: 'store total_options#0 to l-stack (copy)'
debug: Replaced store_option_counts_after_for@4.ops[12]: 'load total_options#0' with 'load total_options#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.store_option_counts
debug: examples.voting.voting.VotingRoundApp.store_option_counts f-stack entry: []
debug: examples.voting.voting.VotingRoundApp.store_option_counts f-stack on first store: ['reinterpret_bool%0#0', 'total_options#0', 'array_value%0#0', 'item_index_internal%0#0']
debug: Inserted bootstrap_block@0.ops[9]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[11]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[24]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[26]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[38]: 'store tally_box_size#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[40]: 'load tally_box_size#0' with 'load tally_box_size#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[47]: 'store min_balance_req#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[49]: 'load min_balance_req#0' with 'load min_balance_req#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[51]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[53]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[57]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[59]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[62]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[64]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[69]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[71]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[3]: 'store is_bootstrapped_exists%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[6]: 'load is_bootstrapped_exists%0#0' with 'load is_bootstrapped_exists%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[21]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[24]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[33]: 'store total_options_exists%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[36]: 'load total_options_exists%0#0' with 'load total_options_exists%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[46]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[49]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[5]: 'store is_bootstrapped_value%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[9]: 'load is_bootstrapped_value%0#0' with 'load is_bootstrapped_value%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[20]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[25]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[37]: 'store total_options_value%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[41]: 'load total_options_value%0#0' with 'load total_options_value%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[57]: 'store min_balance_req#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[68]: 'load min_balance_req#0' with 'load min_balance_req#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[47]: 'store tally_box_size#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[76]: 'load tally_box_size#0' with 'load tally_box_size#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[10]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[12]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[29]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[31]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[45]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[47]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[61]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[63]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[80]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[82]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[99]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[101]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[122]: 'store item_index_internal%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[124]: 'load item_index_internal%0#0' with 'load item_index_internal%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[6]: 'store close_time_exists%1#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[9]: 'load close_time_exists%1#0' with 'load close_time_exists%1#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[16]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[19]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[24]: 'store vote_id_exists%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[27]: 'load vote_id_exists%0#0' with 'load vote_id_exists%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[41]: 'store metadata_ipfs_cid_exists%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[44]: 'load metadata_ipfs_cid_exists%0#0' with 'load metadata_ipfs_cid_exists%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[58]: 'store vote_id_exists%1#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[61]: 'load vote_id_exists%1#0' with 'load vote_id_exists%1#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[75]: 'store quorum_exists%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[78]: 'load quorum_exists%0#0' with 'load quorum_exists%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[82]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[85]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[96]: 'store voter_count_exists%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[99]: 'load voter_count_exists%0#0' with 'load voter_count_exists%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[103]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[106]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[119]: 'store option_counts_exists%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[122]: 'load option_counts_exists%0#0' with 'load option_counts_exists%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[77]: 'store quorum_value%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[81]: 'load quorum_value%0#0' with 'load quorum_value%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[99]: 'store voter_count_value%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[103]: 'load voter_count_value%0#0' with 'load voter_count_value%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[123]: 'store option_counts_value%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[127]: 'load option_counts_value%0#0' with 'load option_counts_value%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[26]: 'store vote_id_value%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[31]: 'load vote_id_value%0#0' with 'load vote_id_value%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[44]: 'store metadata_ipfs_cid_value%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[49]: 'load metadata_ipfs_cid_value%0#0' with 'load metadata_ipfs_cid_value%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[62]: 'store vote_id_value%1#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[67]: 'load vote_id_value%1#0' with 'load vote_id_value%1#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[131]: 'store option_counts_value%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[135]: 'load option_counts_value%0#0' with 'load option_counts_value%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[38]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[49]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[57]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[68]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[76]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[91]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[99]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[114]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted close_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced close_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[2]: 'store question_index#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[8]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted close_if_body@3.ops[3]: 'store note#0 to l-stack (copy)'
debug: Replaced close_if_body@3.ops[5]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@4.ops[5]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced close_after_if_else@4.ops[11]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@4.ops[1]: 'store note#0 to l-stack (copy)'
debug: Replaced close_after_if_else@4.ops[10]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_if_body@5.ops[8]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced close_if_body@5.ops[10]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted close_for_header@6.ops[3]: 'store continue_looping%1#0 to l-stack (copy)'
debug: Replaced close_for_header@6.ops[5]: 'load continue_looping%1#0' with 'load continue_looping%1#0 from l-stack (no copy)'
debug: Inserted close_if_body@8.ops[3]: 'store note#0 to l-stack (copy)'
debug: Replaced close_if_body@8.ops[5]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@9.ops[4]: 'store votes_for_option#0 to l-stack (copy)'
debug: Replaced close_after_if_else@9.ops[6]: 'load votes_for_option#0' with 'load votes_for_option#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@9.ops[20]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced close_after_if_else@9.ops[22]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@9.ops[8]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced close_after_if_else@9.ops[11]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@9.ops[1]: 'store note#0 to l-stack (copy)'
debug: Replaced close_after_if_else@9.ops[11]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@9.ops[4]: 'store current_index#0 to l-stack (copy)'
debug: Replaced close_after_if_else@9.ops[16]: 'load current_index#0' with 'load current_index#0 from l-stack (no copy)'
debug: Inserted close_after_for@12.ops[3]: 'store note#0 to l-stack (copy)'
debug: Replaced close_after_for@12.ops[7]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@13.ops[7]: 'store item_index_internal%0#0 to l-stack (copy)'
debug: Replaced close_after_if_else@13.ops[9]: 'load item_index_internal%0#0' with 'load item_index_internal%0#0 from l-stack (no copy)'
debug: Inserted close_after_for@15.ops[10]: 'store vote_id_exists%2#0 to l-stack (copy)'
debug: Replaced close_after_for@15.ops[13]: 'load vote_id_exists%2#0' with 'load vote_id_exists%2#0 from l-stack (no copy)'
debug: Inserted close_after_for@15.ops[22]: 'store nft_image_url_exists%0#0 to l-stack (copy)'
debug: Replaced close_after_for@15.ops[25]: 'load nft_image_url_exists%0#0' with 'load nft_image_url_exists%0#0 from l-stack (no copy)'
debug: Inserted close_after_for@15.ops[47]: 'store new_state_value%1#0 to l-stack (copy)'
debug: Replaced close_after_for@15.ops[50]: 'load new_state_value%1#0' with 'load new_state_value%1#0 from l-stack (no copy)'
debug: Inserted close_after_for@15.ops[12]: 'store vote_id_value%2#0 to l-stack (copy)'
debug: Replaced close_after_for@15.ops[17]: 'load vote_id_value%2#0' with 'load vote_id_value%2#0 from l-stack (no copy)'
debug: Inserted close_after_for@15.ops[25]: 'store nft_image_url_value%0#0 to l-stack (copy)'
debug: Replaced close_after_for@15.ops[31]: 'load nft_image_url_value%0#0' with 'load nft_image_url_value%0#0 from l-stack (no copy)'
debug: Inserted close_after_for@15.ops[19]: 'store inner_txn_params%0%%param_ConfigAssetName_idx_0#0 to l-stack (copy)'
debug: Replaced close_after_for@15.ops[36]: 'load inner_txn_params%0%%param_ConfigAssetName_idx_0#0' with 'load inner_txn_params%0%%param_ConfigAssetName_idx_0#0 from l-stack (no copy)'
debug: Inserted close_after_for@15.ops[3]: 'store note#0 to l-stack (copy)'
debug: Replaced close_after_for@15.ops[31]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_after_for@15.ops[7]: 'store inner_txn_params%0%%param_Fee_idx_0#0 to l-stack (copy)'
debug: Replaced close_after_for@15.ops[48]: 'load inner_txn_params%0%%param_Fee_idx_0#0' with 'load inner_txn_params%0%%param_Fee_idx_0#0 from l-stack (no copy)'
debug: Found 7 edge set/s for examples.voting.voting.VotingRoundApp.close
debug: examples.voting.voting.VotingRoundApp.close f-stack entry: ['note#18', 'question_options#0', 'current_index#16', 'option_index#0', 'tmp%14#0']
debug: examples.voting.voting.VotingRoundApp.close f-stack on first store: ['note#0', 'current_index#0', 'array_length%0#0', 'array_value%0#0', 'question_index#0']
debug: Inserted ensure_budget_while_top@1.ops[5]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced ensure_budget_while_top@1.ops[7]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted ensure_budget_while_top@1.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced ensure_budget_while_top@1.ops[4]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted ensure_budget_switch_case_1@4.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced ensure_budget_switch_case_1@4.ops[3]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Found 3 edge set/s for algopy.ensure_budget
debug: algopy.ensure_budget f-stack entry: []
debug: algopy.ensure_budget f-stack on first store: ['required_budget_with_buffer#0']
debug: Inserted itoa_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced itoa_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted itoa_if_body@1.ops[8]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced itoa_if_body@1.ops[10]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted itoa_if_body@1.ops[3]: 'store index_plus_1%0#0 to l-stack (copy)'
debug: Replaced itoa_if_body@1.ops[7]: 'load index_plus_1%0#0' with 'load index_plus_1%0#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[3]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[5]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[11]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[13]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[25]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[27]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[21]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[24]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[16]: 'store index_plus_1%1#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[20]: 'load index_plus_1%1#0' with 'load index_plus_1%1#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[14]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[20]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[7]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[26]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Found 1 edge set/s for examples.voting.voting.itoa
debug: Inserted get_vote_from_box_block@0.ops[4]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced get_vote_from_box_block@0.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted get_vote_from_box_block@0.ops[8]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced get_vote_from_box_block@0.ops[10]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[8]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[10]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[14]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[16]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[20]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[22]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[28]: 'store encoded_tuple_buffer%0#2 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[30]: 'load encoded_tuple_buffer%0#2' with 'load encoded_tuple_buffer%0#2 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[33]: 'store encoded_tuple_buffer%0#2 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[35]: 'load encoded_tuple_buffer%0#2' with 'load encoded_tuple_buffer%0#2 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[38]: 'store encoded_tuple_buffer%0#2 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[40]: 'load encoded_tuple_buffer%0#2' with 'load encoded_tuple_buffer%0#2 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[24]: 'store val_as_bytes%3#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[37]: 'load val_as_bytes%3#0' with 'load val_as_bytes%3#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[18]: 'store val_as_bytes%2#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[33]: 'load val_as_bytes%2#0' with 'load val_as_bytes%2#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[12]: 'store val_as_bytes%1#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[29]: 'load val_as_bytes%1#0' with 'load val_as_bytes%1#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[5]: 'store val_as_bytes%0#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[29]: 'load val_as_bytes%0#0' with 'load val_as_bytes%0#0 from l-stack (no copy)'
debug: Inserted voting_open_block@0.ops[3]: 'store is_bootstrapped_exists%0#0 to l-stack (copy)'
debug: Replaced voting_open_block@0.ops[6]: 'load is_bootstrapped_exists%0#0' with 'load is_bootstrapped_exists%0#0 from l-stack (no copy)'
debug: Inserted voting_open_block@0.ops[5]: 'store is_bootstrapped_value%0#0 to l-stack (copy)'
debug: Replaced voting_open_block@0.ops[9]: 'load is_bootstrapped_value%0#0' with 'load is_bootstrapped_value%0#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@1.ops[3]: 'store close_time_exists%1#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@1.ops[6]: 'load close_time_exists%1#0' with 'load close_time_exists%1#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[12]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[14]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[3]: 'store start_time_exists%0#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[6]: 'load start_time_exists%0#0' with 'load start_time_exists%0#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[9]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[12]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[5]: 'store start_time_value%0#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[12]: 'load start_time_value%0#0' with 'load start_time_value%0#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@3.ops[10]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@3.ops[12]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@3.ops[3]: 'store end_time_exists%0#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@3.ops[6]: 'load end_time_exists%0#0' with 'load end_time_exists%0#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@3.ops[5]: 'store end_time_value%0#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@3.ops[10]: 'load end_time_value%0#0' with 'load end_time_value%0#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.voting_open
debug: Allocated 1 variable/s to x-stack: and_result%0#0
debug: shared x-stack for voting_open_bool_true@4 -> voting_open_bool_merge@6: and_result%0#0
debug: shared x-stack for voting_open_bool_false@5 -> voting_open_bool_merge@6: and_result%0#0
debug: examples.voting.voting.VotingRoundApp.voting_open f-stack entry: ['awst_tmp%0#0']
debug: examples.voting.voting.VotingRoundApp.voting_open f-stack on first store: []
debug: Inserted allowed_to_vote_block@0.ops[16]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[18]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted allowed_to_vote_block@0.ops[8]: 'store snapshot_public_key_exists%0#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[11]: 'load snapshot_public_key_exists%0#0' with 'load snapshot_public_key_exists%0#0 from l-stack (no copy)'
debug: Inserted allowed_to_vote_block@0.ops[10]: 'store snapshot_public_key_value%0#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[16]: 'load snapshot_public_key_value%0#0' with 'load snapshot_public_key_value%0#0 from l-stack (no copy)'
debug: Inserted allowed_to_vote_block@0.ops[4]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[15]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted already_voted_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced already_voted_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted already_voted_block@0.ops[5]: 'store box_exists%0#0 to l-stack (copy)'
debug: Replaced already_voted_block@0.ops[8]: 'load box_exists%0#0' with 'load box_exists%0#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[5]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[7]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[10]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[12]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[15]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[17]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[19]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[21]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[37]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[39]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[42]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[44]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[49]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[51]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[67]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[69]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[73]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[75]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[79]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[81]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[84]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[86]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[91]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[93]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[26]: 'store option_counts_exists%0#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[29]: 'load option_counts_exists%0#0' with 'load option_counts_exists%0#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[55]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[58]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[65]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[68]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[28]: 'store option_counts_value%0#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[32]: 'load option_counts_value%0#0' with 'load option_counts_value%0#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[64]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[69]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[35]: 'store questions_count#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[43]: 'load questions_count#0' with 'load questions_count#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[43]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[51]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[79]: 'store min_bal_req#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[90]: 'load min_bal_req#0' with 'load min_bal_req#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[63]: 'store min_bal_req#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[79]: 'load min_bal_req#0' with 'load min_bal_req#0 from l-stack (no copy)'
debug: Inserted vote_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced vote_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[3]: 'store index_is_in_bounds%0#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[5]: 'load index_is_in_bounds%0#0' with 'load index_is_in_bounds%0#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[9]: 'store array_data_sans_header%0#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[11]: 'load array_data_sans_header%0#0' with 'load array_data_sans_header%0#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[15]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[17]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[34]: 'store index_is_in_bounds%1#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[36]: 'load index_is_in_bounds%1#0' with 'load index_is_in_bounds%1#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[40]: 'store array_data_sans_header%1#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[42]: 'load array_data_sans_header%1#0' with 'load array_data_sans_header%1#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[46]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[48]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[54]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[56]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[61]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[63]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[70]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[72]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[95]: 'store range_item%0#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[97]: 'load range_item%0#0' with 'load range_item%0#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[23]: 'store option_counts_exists%1#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[26]: 'load option_counts_exists%1#0' with 'load option_counts_exists%1#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[31]: 'store array_length%1#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[34]: 'load array_length%1#0' with 'load array_length%1#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[52]: 'store options_count#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[55]: 'load options_count#0' with 'load options_count#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[84]: 'store voter_count_exists%0#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[87]: 'load voter_count_exists%0#0' with 'load voter_count_exists%0#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[92]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[95]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[25]: 'store option_counts_value%1#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[29]: 'load option_counts_value%1#0' with 'load option_counts_value%1#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[77]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[80]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[88]: 'store voter_count_value%0#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[92]: 'load voter_count_value%0#0' with 'load voter_count_value%0#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[63]: 'store cumulative_offset#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[70]: 'load cumulative_offset#0' with 'load cumulative_offset#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[56]: 'store answer_option_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[65]: 'load answer_option_index#0' with 'load answer_option_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[1]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[13]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[31]: 'store option_counts_value%1#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[43]: 'load option_counts_value%1#0' with 'load option_counts_value%1#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[37]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[49]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[61]: 'store options_count#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[76]: 'load options_count#0' with 'load options_count#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[14]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[37]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[21]: 'store answer_option_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[60]: 'load answer_option_index#0' with 'load answer_option_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[52]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[109]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.vote
debug: examples.voting.voting.VotingRoundApp.vote f-stack entry: []
debug: examples.voting.voting.VotingRoundApp.vote f-stack on first store: ['questions_count#0', 'tmp%4#0', 'cumulative_offset#0', 'question_index#0']
debug: Inserted increment_vote_in_box_block@0.ops[2]: 'store current_vote#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[4]: 'load current_vote#0' with 'load current_vote#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[7]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[9]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[11]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[15]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
info: Writing voting/out/VotingRoundApp.approval.teal
info: Writing voting/out/VotingRoundApp.clear.teal
info: Writing voting/out/VotingRoundApp.arc32.json
info: Writing voting/out/client_VotingRoundApp.py