debug: PuyaOptions(paths=['voting'], output_teal=True, output_arc32=True, output_awst=False, output_ssa_ir=True, output_optimization_ir=True, output_cssa_ir=True, output_post_ssa_ir=True, output_parallel_copies_ir=True, output_final_ir=True, debug_level=1, optimization_level=1, log_level=<LogLevel.debug: 10>)
debug: Sealing block@0: // L13
debug: Terminated block@0: // L13
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L20
debug: Terminated block@1: // while_top_L20
debug: Sealing block@None: // while_body_L20
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L20
debug: Terminated block@2: // while_body_L20
debug: Sealing block@None: // switch_case_default_L26
debug: Sealing block@None: // switch_case_0_L28
debug: Sealing block@None: // switch_case_1_L30
debug: Terminated block@3: // switch_case_0_L28
debug: Terminated block@4: // switch_case_1_L30
debug: Terminated block@5: // switch_case_default_L26
debug: Sealing block@6: // switch_case_next_L26
debug: Terminated block@6: // switch_case_next_L26
debug: Sealing block@1: // while_top_L20
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L13
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L26
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L13
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L26
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@None: // after_while_L20
debug: Terminated block@7: // after_while_L20
debug: Sealing block@0: // L18
debug: Terminated block@0: // L18
debug: Sealing block@0: // L37
debug: Terminated block@0: // L37
debug: Sealing block@0: // L55
debug: Terminated block@0: // L55
debug: Sealing block@0: // L82
debug: Terminated block@0: // L82
debug: Sealing block@None: // if_body_L101
debug: Sealing block@None: // else_body_L101
debug: Terminated block@1: // if_body_L101
debug: Sealing block@2: // after_if_else_L101
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L101
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L82
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L101
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: uint64 = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L101
debug: Added is_packed#0 to Phi node: let is_packed#1: uint64 = φ(is_packed#0 <- block@0) in block@0: // L82
debug: Added is_packed#0 to Phi node: let is_packed#1: uint64 = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L101
debug: Replacing trivial Phi node: let is_packed#1: uint64 = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: uint64 = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: uint64 = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L101
debug: Sealing block@None: // ternary_true_L105
debug: Sealing block@None: // ternary_false_L105
debug: Terminated block@3: // ternary_true_L105
debug: Terminated block@4: // ternary_false_L105
debug: Sealing block@5: // ternary_merge_L105
debug: Created Phi assignment: let ternary_result%9#2: uint64 = undefined while trying to resolve 'ternary_result%9' in block@5: // ternary_merge_L105
debug: Added ternary_result%9#0 to Phi node: let ternary_result%9#2: uint64 = φ(ternary_result%9#0 <- block@3) in block@3: // ternary_true_L105
debug: Added ternary_result%9#1 to Phi node: let ternary_result%9#2: uint64 = φ(ternary_result%9#0 <- block@3, ternary_result%9#1 <- block@4) in block@4: // ternary_false_L105
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // ternary_merge_L105
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L101
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L82
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L101
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#2) with new_items_count#0 in current definition for 1 blocks
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3) in block@3: // ternary_true_L105
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) in block@4: // ternary_false_L105
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@3, new_items_count#0 <- block@4) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@5: // ternary_merge_L105
debug: Looking for 'range_item%10' in an unsealed block creating an incomplete Phi: block@6: // for_header_L105
debug: Created Phi assignment: let range_item%10#1: uint64 = undefined while trying to resolve 'range_item%10' in block@6: // for_header_L105
debug: Terminated block@6: // for_header_L105
debug: Sealing block@None: // for_body_L105
debug: Looking for 'source' in an unsealed block creating an incomplete Phi: block@6: // for_header_L105
debug: Created Phi assignment: let source#3: bytes = undefined while trying to resolve 'source' in block@6: // for_header_L105
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@6: // for_header_L105
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@6: // for_header_L105
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@6: // for_header_L105
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@6: // for_header_L105
debug: Terminated block@7: // for_body_L105
debug: Sealing block@8: // for_footer_L105
debug: Sealing block@None: // after_for_L105
debug: Terminated block@8: // for_footer_L105
debug: Sealing block@6: // for_header_L105
debug: Added range_item%10#0 to Phi node: let range_item%10#1: uint64 = φ(range_item%10#0 <- block@5) in block@5: // ternary_merge_L105
debug: Added range_item%10#2 to Phi node: let range_item%10#1: uint64 = φ(range_item%10#0 <- block@5, range_item%10#2 <- block@8) in block@8: // for_footer_L105
debug: Created Phi assignment: let source#5: bytes = undefined while trying to resolve 'source' in block@5: // ternary_merge_L105
debug: Created Phi assignment: let source#6: bytes = undefined while trying to resolve 'source' in block@2: // after_if_else_L101
debug: Added source#1 to Phi node: let source#6: bytes = φ(source#1 <- block@0) in block@0: // L82
debug: Added source#2 to Phi node: let source#6: bytes = φ(source#1 <- block@0, source#2 <- block@1) in block@1: // if_body_L101
debug: Added source#6 to Phi node: let source#5: bytes = φ(source#6 <- block@3) in block@3: // ternary_true_L105
debug: Added source#6 to Phi node: let source#5: bytes = φ(source#6 <- block@3, source#6 <- block@4) in block@4: // ternary_false_L105
debug: Replacing trivial Phi node: let source#5: bytes = φ(source#6 <- block@3, source#6 <- block@4) (source#5) with source#6
debug: Deleting Phi assignment: let source#5: bytes = φ(source#6 <- block@3, source#6 <- block@4)
debug: Replaced trivial Phi node: let source#5: bytes = φ(source#6 <- block@3, source#6 <- block@4) (source#5) with source#6 in current definition for 1 blocks
debug: Added source#6 to Phi node: let source#3: bytes = φ(source#6 <- block@5) in block@5: // ternary_merge_L105
debug: Added source#4 to Phi node: let source#3: bytes = φ(source#6 <- block@5, source#4 <- block@8) in block@8: // for_footer_L105
debug: Created Phi assignment: let write_offset#3: uint64 = undefined while trying to resolve 'write_offset' in block@5: // ternary_merge_L105
debug: Added write_offset#0 to Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@3) in block@3: // ternary_true_L105
debug: Added write_offset#0 to Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) in block@4: // ternary_false_L105
debug: Replacing trivial Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) (write_offset#3) with write_offset#0
debug: Deleting Phi assignment: let write_offset#3: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4)
debug: Replaced trivial Phi node: let write_offset#3: uint64 = φ(write_offset#0 <- block@3, write_offset#0 <- block@4) (write_offset#3) with write_offset#0 in current definition for 1 blocks
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@5) in block@5: // ternary_merge_L105
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@5, write_offset#2 <- block@8) in block@8: // for_footer_L105
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@5: // ternary_merge_L105
debug: Created Phi assignment: let new_items_bytes#3: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L101
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L82
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L101
debug: Replacing trivial Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#3) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#3: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#3) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@3) in block@3: // ternary_true_L105
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) in block@4: // ternary_false_L105
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@3, new_items_bytes#0 <- block@4) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@5) in block@5: // ternary_merge_L105
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#1 <- block@8) in block@8: // for_footer_L105
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#1 <- block@8) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#1 <- block@8)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@5, new_items_bytes#1 <- block@8) (new_items_bytes#1) with new_items_bytes#0 in current definition for 3 blocks
debug: Terminated block@9: // after_for_L105
debug: Sealing block@0: // L113
debug: Terminated block@0: // L113
debug: Sealing block@0: // L134
debug: Terminated block@0: // L134
debug: Sealing block@0: // L161
debug: Terminated block@0: // L161
debug: Sealing block@0: // L190
debug: Terminated block@0: // L190
debug: Sealing block@0: // L209
debug: Terminated block@0: // L209
debug: Sealing block@0: // L227
debug: Terminated block@0: // L227
debug: Sealing block@None: // if_body_L241
debug: Sealing block@None: // else_body_L241
debug: Terminated block@1: // if_body_L241
debug: Terminated block@2: // else_body_L241
debug: Sealing block@3: // after_if_else_L241
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@3: // after_if_else_L241
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@1) in block@1: // if_body_L241
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) in block@2: // else_body_L241
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@1, length#0 <- block@2) (length#1) with length#0 in current definition for 1 blocks
debug: Created Phi assignment: let start_at_index#1: uint64 = undefined while trying to resolve 'start_at_index' in block@3: // after_if_else_L241
debug: Added start_at_index#0 to Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1) in block@1: // if_body_L241
debug: Added start_at_index#0 to Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) in block@2: // else_body_L241
debug: Replacing trivial Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) (start_at_index#1) with start_at_index#0
debug: Deleting Phi assignment: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2)
debug: Replaced trivial Phi node: let start_at_index#1: uint64 = φ(start_at_index#0 <- block@1, start_at_index#0 <- block@2) (start_at_index#1) with start_at_index#0 in current definition for 1 blocks
debug: Terminated block@3: // after_if_else_L241
debug: Looking for 'range_item%1' in an unsealed block creating an incomplete Phi: block@4: // for_header_L246
debug: Created Phi assignment: let range_item%1#1: uint64 = undefined while trying to resolve 'range_item%1' in block@4: // for_header_L246
debug: Terminated block@4: // for_header_L246
debug: Sealing block@None: // for_body_L246
debug: Looking for 'tail_cursor' in an unsealed block creating an incomplete Phi: block@4: // for_header_L246
debug: Created Phi assignment: let tail_cursor#2: uint64 = undefined while trying to resolve 'tail_cursor' in block@4: // for_header_L246
debug: Looking for 'array_data' in an unsealed block creating an incomplete Phi: block@4: // for_header_L246
debug: Created Phi assignment: let array_data#1: bytes = undefined while trying to resolve 'array_data' in block@4: // for_header_L246
debug: Looking for 'header_cursor' in an unsealed block creating an incomplete Phi: block@4: // for_header_L246
debug: Created Phi assignment: let header_cursor#1: uint64 = undefined while trying to resolve 'header_cursor' in block@4: // for_header_L246
debug: Terminated block@5: // for_body_L246
debug: Sealing block@6: // for_footer_L246
debug: Sealing block@None: // after_for_L246
debug: Terminated block@6: // for_footer_L246
debug: Sealing block@4: // for_header_L246
debug: Added range_item%1#0 to Phi node: let range_item%1#1: uint64 = φ(range_item%1#0 <- block@3) in block@3: // after_if_else_L241
debug: Added range_item%1#2 to Phi node: let range_item%1#1: uint64 = φ(range_item%1#0 <- block@3, range_item%1#2 <- block@6) in block@6: // for_footer_L246
debug: Created Phi assignment: let tail_cursor#4: uint64 = undefined while trying to resolve 'tail_cursor' in block@3: // after_if_else_L241
debug: Added tail_cursor#0 to Phi node: let tail_cursor#4: uint64 = φ(tail_cursor#0 <- block@1) in block@1: // if_body_L241
debug: Added tail_cursor#1 to Phi node: let tail_cursor#4: uint64 = φ(tail_cursor#0 <- block@1, tail_cursor#1 <- block@2) in block@2: // else_body_L241
debug: Added tail_cursor#4 to Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@3) in block@3: // after_if_else_L241
debug: Added tail_cursor#3 to Phi node: let tail_cursor#2: uint64 = φ(tail_cursor#4 <- block@3, tail_cursor#3 <- block@6) in block@6: // for_footer_L246
debug: Created Phi assignment: let array_data#3: bytes = undefined while trying to resolve 'array_data' in block@3: // after_if_else_L241
debug: Added array_data#0 to Phi node: let array_data#3: bytes = φ(array_data#0 <- block@1) in block@1: // if_body_L241
debug: Added array_data#0 to Phi node: let array_data#3: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) in block@2: // else_body_L241
debug: Replacing trivial Phi node: let array_data#3: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) (array_data#3) with array_data#0
debug: Deleting Phi assignment: let array_data#3: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2)
debug: Replaced trivial Phi node: let array_data#3: bytes = φ(array_data#0 <- block@1, array_data#0 <- block@2) (array_data#3) with array_data#0 in current definition for 1 blocks
debug: Added array_data#0 to Phi node: let array_data#1: bytes = φ(array_data#0 <- block@3) in block@3: // after_if_else_L241
debug: Added array_data#2 to Phi node: let array_data#1: bytes = φ(array_data#0 <- block@3, array_data#2 <- block@6) in block@6: // for_footer_L246
debug: Created Phi assignment: let header_cursor#3: uint64 = undefined while trying to resolve 'header_cursor' in block@3: // after_if_else_L241
debug: Added header_cursor#0 to Phi node: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@1) in block@1: // if_body_L241
debug: Added header_cursor#0 to Phi node: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) in block@2: // else_body_L241
debug: Replacing trivial Phi node: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) (header_cursor#3) with header_cursor#0
debug: Deleting Phi assignment: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2)
debug: Replaced trivial Phi node: let header_cursor#3: uint64 = φ(header_cursor#0 <- block@1, header_cursor#0 <- block@2) (header_cursor#3) with header_cursor#0 in current definition for 1 blocks
debug: Added header_cursor#0 to Phi node: let header_cursor#1: uint64 = φ(header_cursor#0 <- block@3) in block@3: // after_if_else_L241
debug: Added header_cursor#2 to Phi node: let header_cursor#1: uint64 = φ(header_cursor#0 <- block@3, header_cursor#2 <- block@6) in block@6: // for_footer_L246
debug: Terminated block@7: // after_for_L246
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@None: // while_body_L11
debug: Terminated block@2: // while_body_L11
debug: Sealing block@None: // if_body_L12
debug: Sealing block@None: // else_body_L12
debug: Terminated block@3: // if_body_L12
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L5
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L5
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L5
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@None: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L61
debug: Terminated block@0: // L61
debug: Sealing block@0: // L216
debug: Terminated block@0: // L216
debug: Looking for 'item_index_internal%5' in an unsealed block creating an incomplete Phi: block@1: // for_header_L221
debug: Created Phi assignment: let item_index_internal%5#1: uint64 = undefined while trying to resolve 'item_index_internal%5' in block@1: // for_header_L221
debug: Terminated block@1: // for_header_L221
debug: Sealing block@None: // for_body_L221
debug: Looking for 'total_options' in an unsealed block creating an incomplete Phi: block@1: // for_header_L221
debug: Created Phi assignment: let total_options#1: uint64 = undefined while trying to resolve 'total_options' in block@1: // for_header_L221
debug: Terminated block@2: // for_body_L221
debug: Sealing block@3: // for_footer_L221
debug: Sealing block@None: // after_for_L221
debug: Terminated block@3: // for_footer_L221
debug: Sealing block@1: // for_header_L221
debug: Added item_index_internal%5#0 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@0) in block@0: // L216
debug: Added item_index_internal%5#2 to Phi node: let item_index_internal%5#1: uint64 = φ(item_index_internal%5#0 <- block@0, item_index_internal%5#2 <- block@3) in block@3: // for_footer_L221
debug: Added total_options#0 to Phi node: let total_options#1: uint64 = φ(total_options#0 <- block@0) in block@0: // L216
debug: Added total_options#2 to Phi node: let total_options#1: uint64 = φ(total_options#0 <- block@0, total_options#2 <- block@3) in block@3: // for_footer_L221
debug: Created Phi assignment: let option_counts#1: bytes = undefined while trying to resolve 'option_counts' in block@1: // for_header_L221
debug: Added option_counts#0 to Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@0) in block@0: // L216
debug: Added option_counts#1 to Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@0, option_counts#1 <- block@3) in block@3: // for_footer_L221
debug: Replacing trivial Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@0, option_counts#1 <- block@3) (option_counts#1) with option_counts#0
debug: Deleting Phi assignment: let option_counts#1: bytes = φ(option_counts#0 <- block@0, option_counts#1 <- block@3)
debug: Replaced trivial Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@0, option_counts#1 <- block@3) (option_counts#1) with option_counts#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L221
debug: Sealing block@0: // L85
debug: Terminated block@0: // L85
debug: Sealing block@0: // L113
debug: Terminated block@0: // L113
debug: Looking for 'item_index_internal%29' in an unsealed block creating an incomplete Phi: block@1: // for_header_L134
debug: Created Phi assignment: let item_index_internal%29#1: uint64 = undefined while trying to resolve 'item_index_internal%29' in block@1: // for_header_L134
debug: Terminated block@1: // for_header_L134
debug: Sealing block@None: // for_body_L134
debug: Terminated block@2: // for_body_L134
debug: Sealing block@None: // if_body_L135
debug: Sealing block@None: // else_body_L135
debug: Looking for 'note' in an unsealed block creating an incomplete Phi: block@1: // for_header_L134
debug: Created Phi assignment: let note#1: bytes = undefined while trying to resolve 'note' in block@1: // for_header_L134
debug: Terminated block@3: // if_body_L135
debug: Sealing block@4: // after_if_else_L135
debug: Created Phi assignment: let question_options_arc#1: bytes = undefined while trying to resolve 'question_options_arc' in block@4: // after_if_else_L135
debug: Added question_options_arc#0 to Phi node: let question_options_arc#1: bytes = φ(question_options_arc#0 <- block@2) in block@2: // for_body_L134
debug: Added question_options_arc#0 to Phi node: let question_options_arc#1: bytes = φ(question_options_arc#0 <- block@2, question_options_arc#0 <- block@3) in block@3: // if_body_L135
debug: Replacing trivial Phi node: let question_options_arc#1: bytes = φ(question_options_arc#0 <- block@2, question_options_arc#0 <- block@3) (question_options_arc#1) with question_options_arc#0
debug: Deleting Phi assignment: let question_options_arc#1: bytes = φ(question_options_arc#0 <- block@2, question_options_arc#0 <- block@3)
debug: Replaced trivial Phi node: let question_options_arc#1: bytes = φ(question_options_arc#0 <- block@2, question_options_arc#0 <- block@3) (question_options_arc#1) with question_options_arc#0 in current definition for 1 blocks
debug: Terminated block@4: // after_if_else_L135
debug: Sealing block@None: // if_body_L138
debug: Sealing block@None: // else_body_L138
debug: Created Phi assignment: let note#3: bytes = undefined while trying to resolve 'note' in block@4: // after_if_else_L135
debug: Added note#1 to Phi node: let note#3: bytes = φ(note#1 <- block@2) in block@2: // for_body_L134
debug: Added note#2 to Phi node: let note#3: bytes = φ(note#1 <- block@2, note#2 <- block@3) in block@3: // if_body_L135
debug: Terminated block@5: // if_body_L138
debug: Looking for 'range_item%34' in an unsealed block creating an incomplete Phi: block@6: // for_header_L140
debug: Created Phi assignment: let range_item%34#1: uint64 = undefined while trying to resolve 'range_item%34' in block@6: // for_header_L140
debug: Terminated block@6: // for_header_L140
debug: Sealing block@None: // for_body_L140
debug: Terminated block@7: // for_body_L140
debug: Sealing block@None: // if_body_L141
debug: Sealing block@None: // else_body_L141
debug: Looking for 'note' in an unsealed block creating an incomplete Phi: block@6: // for_header_L140
debug: Created Phi assignment: let note#5: bytes = undefined while trying to resolve 'note' in block@6: // for_header_L140
debug: Terminated block@8: // if_body_L141
debug: Sealing block@9: // after_if_else_L141
debug: Created Phi assignment: let current_index#1: uint64 = undefined while trying to resolve 'current_index' in block@9: // after_if_else_L141
debug: Looking for 'current_index' in an unsealed block creating an incomplete Phi: block@6: // for_header_L140
debug: Created Phi assignment: let current_index#2: uint64 = undefined while trying to resolve 'current_index' in block@6: // for_header_L140
debug: Added current_index#2 to Phi node: let current_index#1: uint64 = φ(current_index#2 <- block@7) in block@7: // for_body_L140
debug: Added current_index#2 to Phi node: let current_index#1: uint64 = φ(current_index#2 <- block@7, current_index#2 <- block@8) in block@8: // if_body_L141
debug: Replacing trivial Phi node: let current_index#1: uint64 = φ(current_index#2 <- block@7, current_index#2 <- block@8) (current_index#1) with current_index#2
debug: Deleting Phi assignment: let current_index#1: uint64 = φ(current_index#2 <- block@7, current_index#2 <- block@8)
debug: Replaced trivial Phi node: let current_index#1: uint64 = φ(current_index#2 <- block@7, current_index#2 <- block@8) (current_index#1) with current_index#2 in current definition for 1 blocks
debug: Created Phi assignment: let note#7: bytes = undefined while trying to resolve 'note' in block@9: // after_if_else_L141
debug: Added note#5 to Phi node: let note#7: bytes = φ(note#5 <- block@7) in block@7: // for_body_L140
debug: Added note#6 to Phi node: let note#7: bytes = φ(note#5 <- block@7, note#6 <- block@8) in block@8: // if_body_L141
debug: Terminated block@9: // after_if_else_L141
debug: Sealing block@10: // for_footer_L140
debug: Sealing block@None: // after_for_L140
debug: Created Phi assignment: let range_item%34#2: uint64 = undefined while trying to resolve 'range_item%34' in block@9: // after_if_else_L141
debug: Added range_item%34#1 to Phi node: let range_item%34#2: uint64 = φ(range_item%34#1 <- block@7) in block@7: // for_body_L140
debug: Added range_item%34#1 to Phi node: let range_item%34#2: uint64 = φ(range_item%34#1 <- block@7, range_item%34#1 <- block@8) in block@8: // if_body_L141
debug: Replacing trivial Phi node: let range_item%34#2: uint64 = φ(range_item%34#1 <- block@7, range_item%34#1 <- block@8) (range_item%34#2) with range_item%34#1
debug: Deleting Phi assignment: let range_item%34#2: uint64 = φ(range_item%34#1 <- block@7, range_item%34#1 <- block@8)
debug: Replaced trivial Phi node: let range_item%34#2: uint64 = φ(range_item%34#1 <- block@7, range_item%34#1 <- block@8) (range_item%34#2) with range_item%34#1 in current definition for 1 blocks
debug: Terminated block@10: // for_footer_L140
debug: Sealing block@6: // for_header_L140
debug: Added range_item%34#0 to Phi node: let range_item%34#1: uint64 = φ(range_item%34#0 <- block@5) in block@5: // if_body_L138
debug: Added range_item%34#3 to Phi node: let range_item%34#1: uint64 = φ(range_item%34#0 <- block@5, range_item%34#3 <- block@10) in block@10: // for_footer_L140
debug: Added note#4 to Phi node: let note#5: bytes = φ(note#4 <- block@5) in block@5: // if_body_L138
debug: Added note#8 to Phi node: let note#5: bytes = φ(note#4 <- block@5, note#8 <- block@10) in block@10: // for_footer_L140
debug: Created Phi assignment: let current_index#4: uint64 = undefined while trying to resolve 'current_index' in block@4: // after_if_else_L135
debug: Looking for 'current_index' in an unsealed block creating an incomplete Phi: block@1: // for_header_L134
debug: Created Phi assignment: let current_index#5: uint64 = undefined while trying to resolve 'current_index' in block@1: // for_header_L134
debug: Added current_index#5 to Phi node: let current_index#4: uint64 = φ(current_index#5 <- block@2) in block@2: // for_body_L134
debug: Added current_index#5 to Phi node: let current_index#4: uint64 = φ(current_index#5 <- block@2, current_index#5 <- block@3) in block@3: // if_body_L135
debug: Replacing trivial Phi node: let current_index#4: uint64 = φ(current_index#5 <- block@2, current_index#5 <- block@3) (current_index#4) with current_index#5
debug: Deleting Phi assignment: let current_index#4: uint64 = φ(current_index#5 <- block@2, current_index#5 <- block@3)
debug: Replaced trivial Phi node: let current_index#4: uint64 = φ(current_index#5 <- block@2, current_index#5 <- block@3) (current_index#4) with current_index#5 in current definition for 1 blocks
debug: Added current_index#5 to Phi node: let current_index#2: uint64 = φ(current_index#5 <- block@5) in block@5: // if_body_L138
debug: Added current_index#3 to Phi node: let current_index#2: uint64 = φ(current_index#5 <- block@5, current_index#3 <- block@10) in block@10: // for_footer_L140
debug: Terminated block@11: // after_for_L140
debug: Sealing block@12: // after_if_else_L138
debug: Terminated block@12: // after_if_else_L138
debug: Sealing block@13: // for_footer_L134
debug: Sealing block@None: // after_for_L134
debug: Created Phi assignment: let item_index_internal%29#2: uint64 = undefined while trying to resolve 'item_index_internal%29' in block@12: // after_if_else_L138
debug: Created Phi assignment: let item_index_internal%29#3: uint64 = undefined while trying to resolve 'item_index_internal%29' in block@4: // after_if_else_L135
debug: Added item_index_internal%29#1 to Phi node: let item_index_internal%29#3: uint64 = φ(item_index_internal%29#1 <- block@2) in block@2: // for_body_L134
debug: Added item_index_internal%29#1 to Phi node: let item_index_internal%29#3: uint64 = φ(item_index_internal%29#1 <- block@2, item_index_internal%29#1 <- block@3) in block@3: // if_body_L135
debug: Replacing trivial Phi node: let item_index_internal%29#3: uint64 = φ(item_index_internal%29#1 <- block@2, item_index_internal%29#1 <- block@3) (item_index_internal%29#3) with item_index_internal%29#1
debug: Deleting Phi assignment: let item_index_internal%29#3: uint64 = φ(item_index_internal%29#1 <- block@2, item_index_internal%29#1 <- block@3)
debug: Replaced trivial Phi node: let item_index_internal%29#3: uint64 = φ(item_index_internal%29#1 <- block@2, item_index_internal%29#1 <- block@3) (item_index_internal%29#3) with item_index_internal%29#1 in current definition for 1 blocks
debug: Added item_index_internal%29#1 to Phi node: let item_index_internal%29#2: uint64 = φ(item_index_internal%29#1 <- block@4) in block@4: // after_if_else_L135
debug: Created Phi assignment: let item_index_internal%29#4: uint64 = undefined while trying to resolve 'item_index_internal%29' in block@6: // for_header_L140
debug: Added item_index_internal%29#1 to Phi node: let item_index_internal%29#4: uint64 = φ(item_index_internal%29#1 <- block@5) in block@5: // if_body_L138
debug: Created Phi assignment: let item_index_internal%29#5: uint64 = undefined while trying to resolve 'item_index_internal%29' in block@9: // after_if_else_L141
debug: Added item_index_internal%29#4 to Phi node: let item_index_internal%29#5: uint64 = φ(item_index_internal%29#4 <- block@7) in block@7: // for_body_L140
debug: Added item_index_internal%29#4 to Phi node: let item_index_internal%29#5: uint64 = φ(item_index_internal%29#4 <- block@7, item_index_internal%29#4 <- block@8) in block@8: // if_body_L141
debug: Replacing trivial Phi node: let item_index_internal%29#5: uint64 = φ(item_index_internal%29#4 <- block@7, item_index_internal%29#4 <- block@8) (item_index_internal%29#5) with item_index_internal%29#4
debug: Deleting Phi assignment: let item_index_internal%29#5: uint64 = φ(item_index_internal%29#4 <- block@7, item_index_internal%29#4 <- block@8)
debug: Replaced trivial Phi node: let item_index_internal%29#5: uint64 = φ(item_index_internal%29#4 <- block@7, item_index_internal%29#4 <- block@8) (item_index_internal%29#5) with item_index_internal%29#4 in current definition for 1 blocks
debug: Added item_index_internal%29#4 to Phi node: let item_index_internal%29#4: uint64 = φ(item_index_internal%29#1 <- block@5, item_index_internal%29#4 <- block@10) in block@10: // for_footer_L140
debug: Replacing trivial Phi node: let item_index_internal%29#4: uint64 = φ(item_index_internal%29#1 <- block@5, item_index_internal%29#4 <- block@10) (item_index_internal%29#4) with item_index_internal%29#1
debug: Deleting Phi assignment: let item_index_internal%29#4: uint64 = φ(item_index_internal%29#1 <- block@5, item_index_internal%29#4 <- block@10)
debug: Replaced trivial Phi node: let item_index_internal%29#4: uint64 = φ(item_index_internal%29#1 <- block@5, item_index_internal%29#4 <- block@10) (item_index_internal%29#4) with item_index_internal%29#1 in current definition for 5 blocks
debug: Added item_index_internal%29#1 to Phi node: let item_index_internal%29#2: uint64 = φ(item_index_internal%29#1 <- block@4, item_index_internal%29#1 <- block@11) in block@11: // after_for_L140
debug: Replacing trivial Phi node: let item_index_internal%29#2: uint64 = φ(item_index_internal%29#1 <- block@4, item_index_internal%29#1 <- block@11) (item_index_internal%29#2) with item_index_internal%29#1
debug: Deleting Phi assignment: let item_index_internal%29#2: uint64 = φ(item_index_internal%29#1 <- block@4, item_index_internal%29#1 <- block@11)
debug: Replaced trivial Phi node: let item_index_internal%29#2: uint64 = φ(item_index_internal%29#1 <- block@4, item_index_internal%29#1 <- block@11) (item_index_internal%29#2) with item_index_internal%29#1 in current definition for 1 blocks
debug: Terminated block@13: // for_footer_L134
debug: Sealing block@1: // for_header_L134
debug: Added item_index_internal%29#0 to Phi node: let item_index_internal%29#1: uint64 = φ(item_index_internal%29#0 <- block@0) in block@0: // L113
debug: Added item_index_internal%29#6 to Phi node: let item_index_internal%29#1: uint64 = φ(item_index_internal%29#0 <- block@0, item_index_internal%29#6 <- block@13) in block@13: // for_footer_L134
debug: Added note#0 to Phi node: let note#1: bytes = φ(note#0 <- block@0) in block@0: // L113
debug: Created Phi assignment: let note#10: bytes = undefined while trying to resolve 'note' in block@12: // after_if_else_L138
debug: Added note#3 to Phi node: let note#10: bytes = φ(note#3 <- block@4) in block@4: // after_if_else_L135
debug: Added note#9 to Phi node: let note#10: bytes = φ(note#3 <- block@4, note#9 <- block@11) in block@11: // after_for_L140
debug: Added note#10 to Phi node: let note#1: bytes = φ(note#0 <- block@0, note#10 <- block@13) in block@13: // for_footer_L134
debug: Added current_index#0 to Phi node: let current_index#5: uint64 = φ(current_index#0 <- block@0) in block@0: // L113
debug: Created Phi assignment: let current_index#6: uint64 = undefined while trying to resolve 'current_index' in block@12: // after_if_else_L138
debug: Added current_index#5 to Phi node: let current_index#6: uint64 = φ(current_index#5 <- block@4) in block@4: // after_if_else_L135
debug: Added current_index#2 to Phi node: let current_index#6: uint64 = φ(current_index#5 <- block@4, current_index#2 <- block@11) in block@11: // after_for_L140
debug: Added current_index#6 to Phi node: let current_index#5: uint64 = φ(current_index#0 <- block@0, current_index#6 <- block@13) in block@13: // for_footer_L134
debug: Terminated block@14: // after_for_L134
debug: Sealing block@0: // L254
debug: Terminated block@0: // L254
debug: Sealing block@None: // if_body_L257
debug: Sealing block@None: // else_body_L257
debug: Terminated block@1: // if_body_L257
debug: Sealing block@2: // after_if_else_L257
debug: Terminated block@2: // after_if_else_L257
debug: Sealing block@0: // L239
debug: Terminated block@0: // L239
debug: Sealing block@0: // L161
debug: Terminated block@0: // L161
debug: Sealing block@None: // ternary_true_L164
debug: Sealing block@None: // ternary_false_L164
debug: Terminated block@1: // ternary_true_L164
debug: Terminated block@2: // ternary_false_L164
debug: Sealing block@3: // ternary_merge_L164
debug: Created Phi assignment: let ternary_result%4#2: uint64 = undefined while trying to resolve 'ternary_result%4' in block@3: // ternary_merge_L164
debug: Added ternary_result%4#0 to Phi node: let ternary_result%4#2: uint64 = φ(ternary_result%4#0 <- block@1) in block@1: // ternary_true_L164
debug: Added ternary_result%4#1 to Phi node: let ternary_result%4#2: uint64 = φ(ternary_result%4#0 <- block@1, ternary_result%4#1 <- block@2) in block@2: // ternary_false_L164
debug: Terminated block@3: // ternary_merge_L164
debug: Sealing block@0: // L203
debug: Terminated block@0: // L203
debug: Sealing block@None: // and_contd_L205
debug: Terminated block@1: // and_contd_L205
debug: Sealing block@None: // and_contd_L205
debug: Terminated block@2: // and_contd_L205
debug: Sealing block@None: // and_contd_L207
debug: Terminated block@3: // and_contd_L207
debug: Sealing block@None: // bool_true_L205
debug: Sealing block@None: // bool_false_L205
debug: Terminated block@4: // bool_true_L205
debug: Terminated block@5: // bool_false_L205
debug: Sealing block@6: // bool_merge_L205
debug: Created Phi assignment: let and_result%11#2: uint64 = undefined while trying to resolve 'and_result%11' in block@6: // bool_merge_L205
debug: Added and_result%11#0 to Phi node: let and_result%11#2: uint64 = φ(and_result%11#0 <- block@4) in block@4: // bool_true_L205
debug: Added and_result%11#1 to Phi node: let and_result%11#2: uint64 = φ(and_result%11#0 <- block@4, and_result%11#1 <- block@5) in block@5: // bool_false_L205
debug: Terminated block@6: // bool_merge_L205
debug: Sealing block@0: // L229
debug: Terminated block@0: // L229
debug: Sealing block@0: // L211
debug: Terminated block@0: // L211
debug: Sealing block@0: // L170
debug: Terminated block@0: // L170
debug: Looking for 'range_item%18' in an unsealed block creating an incomplete Phi: block@1: // for_header_L192
debug: Created Phi assignment: let range_item%18#1: uint64 = undefined while trying to resolve 'range_item%18' in block@1: // for_header_L192
debug: Terminated block@1: // for_header_L192
debug: Sealing block@None: // for_body_L192
debug: Looking for 'answer_ids' in an unsealed block creating an incomplete Phi: block@1: // for_header_L192
debug: Created Phi assignment: let answer_ids#1: bytes = undefined while trying to resolve 'answer_ids' in block@1: // for_header_L192
debug: Looking for 'cumulative_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L192
debug: Created Phi assignment: let cumulative_offset#1: uint64 = undefined while trying to resolve 'cumulative_offset' in block@1: // for_header_L192
debug: Terminated block@2: // for_body_L192
debug: Sealing block@3: // for_footer_L192
debug: Sealing block@None: // after_for_L192
debug: Terminated block@3: // for_footer_L192
debug: Sealing block@1: // for_header_L192
debug: Added range_item%18#0 to Phi node: let range_item%18#1: uint64 = φ(range_item%18#0 <- block@0) in block@0: // L170
debug: Added range_item%18#2 to Phi node: let range_item%18#1: uint64 = φ(range_item%18#0 <- block@0, range_item%18#2 <- block@3) in block@3: // for_footer_L192
debug: Added answer_ids#0 to Phi node: let answer_ids#1: bytes = φ(answer_ids#0 <- block@0) in block@0: // L170
debug: Added answer_ids#1 to Phi node: let answer_ids#1: bytes = φ(answer_ids#0 <- block@0, answer_ids#1 <- block@3) in block@3: // for_footer_L192
debug: Replacing trivial Phi node: let answer_ids#1: bytes = φ(answer_ids#0 <- block@0, answer_ids#1 <- block@3) (answer_ids#1) with answer_ids#0
debug: Deleting Phi assignment: let answer_ids#1: bytes = φ(answer_ids#0 <- block@0, answer_ids#1 <- block@3)
debug: Replaced trivial Phi node: let answer_ids#1: bytes = φ(answer_ids#0 <- block@0, answer_ids#1 <- block@3) (answer_ids#1) with answer_ids#0 in current definition for 3 blocks
debug: Added cumulative_offset#0 to Phi node: let cumulative_offset#1: uint64 = φ(cumulative_offset#0 <- block@0) in block@0: // L170
debug: Added cumulative_offset#2 to Phi node: let cumulative_offset#1: uint64 = φ(cumulative_offset#0 <- block@0, cumulative_offset#2 <- block@3) in block@3: // for_footer_L192
debug: Terminated block@4: // after_for_L192
debug: Sealing block@0: // L246
debug: Terminated block@0: // L246
debug: Sealing block@0: // L54
debug: Terminated block@0: // L54
debug: Sealing block@0: // L53
debug: Terminated block@0: // L53
debug: Sealing block@None: // on_create_L54
debug: Terminated block@1: // on_create_L54
debug: Sealing block@2: // entrypoint_L54
debug: Terminated block@2: // entrypoint_L54
debug: Sealing block@None: // abi_routing_L53
debug: Sealing block@None: // else_body_L53
debug: Terminated block@3: // abi_routing_L53
debug: Sealing block@None: // switch_case_default_L53
debug: Sealing block@None: // create_route_L60
debug: Sealing block@None: // bootstrap_route_L84
debug: Sealing block@None: // close_route_L112
debug: Sealing block@None: // get_preconditions_route_L160
debug: Sealing block@None: // vote_route_L169
debug: Terminated block@4: // create_route_L60
debug: Terminated block@5: // bootstrap_route_L84
debug: Terminated block@6: // close_route_L112
debug: Terminated block@7: // get_preconditions_route_L160
debug: Terminated block@8: // vote_route_L169
debug: Terminated block@9: // switch_case_default_L53
debug: Sealing block@10: // switch_case_next_L53
debug: Terminated block@10: // switch_case_next_L53
debug: Sealing block@11: // after_if_else_L53
debug: Terminated block@11: // after_if_else_L53
debug: Sealing block@0: // L53
debug: Terminated block@0: // L53
debug: Output IR to voting/out/voting_VotingRoundApp.ssa.ir
info: Optimizing examples.voting.voting.VotingRoundApp at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%25#0, maybe_value%22#0
debug: Replacing {maybe_value%22#0} with awst_tmp%25#0 made 1 modifications
debug: Found equivalence set: tmp%27#0, maybe_value_did_exist%23#0
debug: Replacing {maybe_value_did_exist%23#0} with tmp%27#0 made 1 modifications
debug: Found equivalence set: awst_tmp%25#1, maybe_value%40#0
debug: Replacing {maybe_value%40#0} with awst_tmp%25#1 made 1 modifications
debug: Found equivalence set: tmp%44#0, maybe_value_did_exist%41#0
debug: Replacing {maybe_value_did_exist%41#0} with tmp%44#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@10: // switch_case_next_L53 with block@9: // switch_case_default_L53 in block@11: // after_if_else_L53
debug: Merged linear block@10: // switch_case_next_L53 into block@9: // switch_case_default_L53
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@9: // switch_case_default_L53
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.store_option_counts
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Folded item_index_internal%5#1 * 1u to item_index_internal%5#1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: item_index_internal%5#1, item_index%7#0
debug: Replacing {item_index%7#0} with item_index_internal%5#1 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L221 with block@2: // for_body_L221 in block@1: // for_header_L221
debug: Merged linear block@3: // for_footer_L221 into block@2: // for_body_L221
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.bootstrap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.close
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Folded item_index_internal%29#1 * 1u to item_index_internal%29#1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: item_index_internal%29#1, item_index%31#0, question_index#0
debug: Replacing {item_index_internal%29#1, item_index%31#0} with question_index#0 made 4 modifications
debug: Found equivalence set: range_item%34#1, option_index#0
debug: Replacing {range_item%34#1} with option_index#0 made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@10: // for_footer_L140 with block@9: // after_if_else_L141 in block@6: // for_header_L140
debug: Merged linear block@10: // for_footer_L140 into block@9: // after_if_else_L141
debug: Replaced predecessor block@13: // for_footer_L134 with block@12: // after_if_else_L138 in block@1: // for_header_L134
debug: Merged linear block@13: // for_footer_L134 into block@12: // after_if_else_L138
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine puyapy.ensure_budget
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Switch switch fee_source#0 {0u => block@3, 1u => block@4, * => block@5} simplified to goto [block@3, block@4, ...block@5][fee_source#0]
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@5: // switch_case_default_L26
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.itoa
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable digits#0
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.get_vote_from_box
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, box_data#0
debug: Replacing {tuple_assignment%0#0} with box_data#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%1#0, exists#0
debug: Replacing {tuple_assignment%1#0} with exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_preconditions
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%2#0, ternary_result%4#1
debug: Replacing {ternary_result%4#1} with awst_tmp%2#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%13#0
debug: Removing unused variable encoded_tuple_buffer%14#0
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L164 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.voting_open
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.already_voted
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%1#0, votes#0
debug: Replacing {tuple_assignment%1#0} with votes#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%2#0, exists#0
debug: Replacing {tuple_assignment%2#0} with exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.vote
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Folded 1u * tmp%8#0 to tmp%8#0
debug: Folded question_index#0 * 1u to question_index#0
debug: Folded question_index#0 * 1u to question_index#0
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%8#0, tmp%9#0
debug: Replacing {tmp%9#0} with tmp%8#0 made 1 modifications
debug: Found equivalence set: range_item%18#1, question_index#0, item_index%23#0, item_index%30#0
debug: Replacing {range_item%18#1, item_index%23#0, item_index%30#0} with question_index#0 made 5 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L192 with block@2: // for_body_L192 in block@1: // for_header_L192
debug: Merged linear block@3: // for_footer_L192 into block@2: // for_body_L192
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.increment_vote_in_box
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, box_data#0
debug: Replacing {tuple_assignment%0#0} with box_data#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%1#0, exists#0
debug: Replacing {tuple_assignment%1#0} with exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to voting/out/voting_VotingRoundApp.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.create
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.store_option_counts
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.bootstrap
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.close
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine puyapy.ensure_budget
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.itoa
debug: Optimizer: Arithmetic Simplification
debug: Folded len("0123456789") to 10
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable radix#0
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.get_vote_from_box
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_preconditions
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%1#0, encoded_tuple_buffer%14#1
debug: Replacing {encoded_tuple_buffer%14#1} with val_as_bytes%1#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L164 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.voting_open
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.already_voted
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.vote
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.increment_vote_in_box
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to voting/out/voting_VotingRoundApp.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.create
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.store_option_counts
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.bootstrap
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.close
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine puyapy.ensure_budget
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.itoa
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.get_vote_from_box
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_preconditions
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L164 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.voting_open
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.already_voted
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.vote
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.increment_vote_in_box
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: No optimizations performed in pass 3, ending loop
debug: Output IR to voting/out/voting_VotingRoundApp.cssa.ir
debug: Removing Phis from examples.voting.voting.VotingRoundApp.approval_program
debug: Removing Phis from examples.voting.voting.VotingRoundApp.create
debug: Removing Phis from examples.voting.voting.VotingRoundApp.store_option_counts
debug: Removing Phis from examples.voting.voting.VotingRoundApp.bootstrap
debug: Removing Phis from examples.voting.voting.VotingRoundApp.close
debug: Removing Phis from puyapy.ensure_budget
debug: Removing Phis from examples.voting.voting.itoa
debug: Removing Phis from examples.voting.voting.get_vote_from_box
debug: Removing Phis from examples.voting.voting.VotingRoundApp.get_preconditions
debug: Removing Phis from examples.voting.voting.VotingRoundApp.voting_open
debug: Removing Phis from examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Removing Phis from examples.voting.voting.VotingRoundApp.already_voted
debug: Removing Phis from examples.voting.voting.VotingRoundApp.vote
debug: Removing Phis from examples.voting.voting.increment_vote_in_box
debug: Removing Phis from examples.voting.voting.VotingRoundApp.__init__
debug: Removing Phis from examples.voting.voting.VotingRoundApp.clear_state_program
debug: Output IR to voting/out/voting_VotingRoundApp.post_ssa.ir
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.approval_program
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.create
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.store_option_counts
debug: loc: {total_options#5=None, item_index_internal%5#5=None, total_options#0=total_options#0, item_index_internal%5#0=item_index_internal%5#0}
debug: pred: {total_options#5=total_options#0, item_index_internal%5#5=item_index_internal%5#0}
debug: ready: total_options#5, item_index_internal%5#5
debug: to_do: total_options#5, item_index_internal%5#5
debug: * avail item_index_internal%5#5
debug: * avail item_index_internal%5#0
debug: * avail total_options#5
debug: * avail total_options#0
debug: * to_do item_index_internal%5#5
debug: * to_do total_options#5
debug: loc: {total_options#1=None, item_index_internal%5#1=None, total_options#5=total_options#5, item_index_internal%5#5=item_index_internal%5#5}
debug: pred: {total_options#1=total_options#5, item_index_internal%5#1=item_index_internal%5#5}
debug: ready: total_options#1, item_index_internal%5#1
debug: to_do: total_options#1, item_index_internal%5#1
debug: * avail item_index_internal%5#1
debug: * avail item_index_internal%5#5
debug: * avail total_options#1
debug: * avail total_options#5
debug: * to_do item_index_internal%5#1
debug: * to_do total_options#1
debug: loc: {total_options#5=None, item_index_internal%5#5=None, total_options#2=total_options#2, item_index_internal%5#2=item_index_internal%5#2}
debug: pred: {total_options#5=total_options#2, item_index_internal%5#5=item_index_internal%5#2}
debug: ready: total_options#5, item_index_internal%5#5
debug: to_do: total_options#5, item_index_internal%5#5
debug: * avail item_index_internal%5#5
debug: * avail item_index_internal%5#2
debug: * avail total_options#5
debug: * avail total_options#2
debug: * to_do item_index_internal%5#5
debug: * to_do total_options#5
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.bootstrap
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.close
debug: loc: {current_index#9=None, note#14=None, question_index#1=None, current_index#0=current_index#0, note#0=note#0, item_index_internal%29#0=item_index_internal%29#0}
debug: pred: {current_index#9=current_index#0, note#14=note#0, question_index#1=item_index_internal%29#0}
debug: ready: current_index#9, note#14, question_index#1
debug: to_do: current_index#9, note#14, question_index#1
debug: * avail question_index#1
debug: * avail item_index_internal%29#0
debug: * avail note#14
debug: * avail note#0
debug: * avail current_index#9
debug: * avail current_index#0
debug: * to_do question_index#1
debug: * to_do note#14
debug: * to_do current_index#9
debug: loc: {current_index#5=None, note#1=None, question_index#0=None, current_index#9=current_index#9, note#14=note#14, question_index#1=question_index#1}
debug: pred: {current_index#5=current_index#9, note#1=note#14, question_index#0=question_index#1}
debug: ready: current_index#5, note#1, question_index#0
debug: to_do: current_index#5, note#1, question_index#0
debug: * avail question_index#0
debug: * avail question_index#1
debug: * avail note#1
debug: * avail note#14
debug: * avail current_index#5
debug: * avail current_index#9
debug: * to_do question_index#0
debug: * to_do note#1
debug: * to_do current_index#5
debug: loc: {current_index#15=None, note#26=None, current_index#5=current_index#5, note#3=note#3}
debug: pred: {current_index#15=current_index#5, note#26=note#3}
debug: ready: current_index#15, note#26
debug: to_do: current_index#15, note#26
debug: * avail note#26
debug: * avail note#3
debug: * avail current_index#15
debug: * avail current_index#5
debug: * to_do note#26
debug: * to_do current_index#15
debug: loc: {current_index#12=None, note#20=None, option_index#1=None, current_index#5=current_index#5, note#4=note#4, range_item%34#0=range_item%34#0}
debug: pred: {current_index#12=current_index#5, note#20=note#4, option_index#1=range_item%34#0}
debug: ready: current_index#12, note#20, option_index#1
debug: to_do: current_index#12, note#20, option_index#1
debug: * avail option_index#1
debug: * avail range_item%34#0
debug: * avail note#20
debug: * avail note#4
debug: * avail current_index#12
debug: * avail current_index#5
debug: * to_do option_index#1
debug: * to_do note#20
debug: * to_do current_index#12
debug: loc: {current_index#2=None, note#5=None, option_index#0=None, current_index#12=current_index#12, note#20=note#20, option_index#1=option_index#1}
debug: pred: {current_index#2=current_index#12, note#5=note#20, option_index#0=option_index#1}
debug: ready: current_index#2, note#5, option_index#0
debug: to_do: current_index#2, note#5, option_index#0
debug: * avail option_index#0
debug: * avail option_index#1
debug: * avail note#5
debug: * avail note#20
debug: * avail current_index#2
debug: * avail current_index#12
debug: * to_do option_index#0
debug: * to_do note#5
debug: * to_do current_index#2
debug: loc: {current_index#12=None, note#20=None, option_index#1=None, current_index#3=current_index#3, note#8=note#8, range_item%34#3=range_item%34#3}
debug: pred: {current_index#12=current_index#3, note#20=note#8, option_index#1=range_item%34#3}
debug: ready: current_index#12, note#20, option_index#1
debug: to_do: current_index#12, note#20, option_index#1
debug: * avail option_index#1
debug: * avail range_item%34#3
debug: * avail note#20
debug: * avail note#8
debug: * avail current_index#12
debug: * avail current_index#3
debug: * to_do option_index#1
debug: * to_do note#20
debug: * to_do current_index#12
debug: loc: {current_index#15=None, note#26=None, current_index#2=current_index#2, note#9=note#9}
debug: pred: {current_index#15=current_index#2, note#26=note#9}
debug: ready: current_index#15, note#26
debug: to_do: current_index#15, note#26
debug: * avail note#26
debug: * avail note#9
debug: * avail current_index#15
debug: * avail current_index#2
debug: * to_do note#26
debug: * to_do current_index#15
debug: loc: {current_index#6=None, note#10=None, current_index#15=current_index#15, note#26=note#26}
debug: pred: {current_index#6=current_index#15, note#10=note#26}
debug: ready: current_index#6, note#10
debug: to_do: current_index#6, note#10
debug: * avail note#10
debug: * avail note#26
debug: * avail current_index#6
debug: * avail current_index#15
debug: * to_do note#10
debug: * to_do current_index#6
debug: loc: {current_index#9=None, note#14=None, question_index#1=None, current_index#6=current_index#6, note#10=note#10, item_index_internal%29#6=item_index_internal%29#6}
debug: pred: {current_index#9=current_index#6, note#14=note#10, question_index#1=item_index_internal%29#6}
debug: ready: current_index#9, note#14, question_index#1
debug: to_do: current_index#9, note#14, question_index#1
debug: * avail question_index#1
debug: * avail item_index_internal%29#6
debug: * avail note#14
debug: * avail note#10
debug: * avail current_index#9
debug: * avail current_index#6
debug: * to_do question_index#1
debug: * to_do note#14
debug: * to_do current_index#9
debug: Sequentializing parallel copies in puyapy.ensure_budget
debug: Sequentializing parallel copies in examples.voting.voting.itoa
debug: Sequentializing parallel copies in examples.voting.voting.get_vote_from_box
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.get_preconditions
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.voting_open
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.already_voted
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.vote
debug: loc: {cumulative_offset#5=None, question_index#1=None, cumulative_offset#0=cumulative_offset#0, range_item%18#0=range_item%18#0}
debug: pred: {cumulative_offset#5=cumulative_offset#0, question_index#1=range_item%18#0}
debug: ready: cumulative_offset#5, question_index#1
debug: to_do: cumulative_offset#5, question_index#1
debug: * avail question_index#1
debug: * avail range_item%18#0
debug: * avail cumulative_offset#5
debug: * avail cumulative_offset#0
debug: * to_do question_index#1
debug: * to_do cumulative_offset#5
debug: loc: {cumulative_offset#1=None, question_index#0=None, cumulative_offset#5=cumulative_offset#5, question_index#1=question_index#1}
debug: pred: {cumulative_offset#1=cumulative_offset#5, question_index#0=question_index#1}
debug: ready: cumulative_offset#1, question_index#0
debug: to_do: cumulative_offset#1, question_index#0
debug: * avail question_index#0
debug: * avail question_index#1
debug: * avail cumulative_offset#1
debug: * avail cumulative_offset#5
debug: * to_do question_index#0
debug: * to_do cumulative_offset#1
debug: loc: {cumulative_offset#5=None, question_index#1=None, cumulative_offset#2=cumulative_offset#2, range_item%18#2=range_item%18#2}
debug: pred: {cumulative_offset#5=cumulative_offset#2, question_index#1=range_item%18#2}
debug: ready: cumulative_offset#5, question_index#1
debug: to_do: cumulative_offset#5, question_index#1
debug: * avail question_index#1
debug: * avail range_item%18#2
debug: * avail cumulative_offset#5
debug: * avail cumulative_offset#2
debug: * to_do question_index#1
debug: * to_do cumulative_offset#5
debug: Sequentializing parallel copies in examples.voting.voting.increment_vote_in_box
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.__init__
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.clear_state_program
debug: Output IR to voting/out/voting_VotingRoundApp.parallel_copies.ir
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.approval_program using strategy RootOperandGrouping
debug: Coalescing awst_tmp%25#0 with [awst_tmp%25#1]
debug: Coalescing resulted in 3 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.create using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.store_option_counts using strategy RootOperandGrouping
debug: Coalescing total_options#0 with [total_options#5, total_options#1, total_options#2]
debug: Coalescing item_index_internal%5#0 with [item_index_internal%5#5, item_index_internal%5#1, item_index_internal%5#2]
debug: Coalescing resulted in 18 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.bootstrap using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.close using strategy RootOperandGrouping
debug: Coalescing note#0 with [note#14, note#1, note#2, note#3, note#4, note#20, note#5, note#6, note#7, note#8, note#9, note#10, note#11]
debug: Coalescing note#17 with [note#26, note#23]
debug: Coalescing current_index#0 with [current_index#9, current_index#5, current_index#12, current_index#2, current_index#3, current_index#6]
debug: Coalescing item_index_internal%29#0 with [item_index_internal%29#6]
debug: Coalescing question_index#0 with [question_index#1]
debug: Coalescing range_item%34#0 with [range_item%34#3]
debug: Coalescing option_index#0 with [option_index#1]
debug: Coalescing resulted in 66 replacement/s
debug: Coalescing local variables in puyapy.ensure_budget using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.itoa using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.get_vote_from_box using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.get_preconditions using strategy RootOperandGrouping
debug: Coalescing ternary_result%4#0 with [ternary_result%4#4, ternary_result%4#2]
debug: Coalescing encoded_tuple_buffer%14#2 with [encoded_tuple_buffer%14#3, encoded_tuple_buffer%14#4]
debug: Coalescing resulted in 9 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.voting_open using strategy RootOperandGrouping
debug: Coalescing and_result%11#0 with [and_result%11#5, and_result%11#1, and_result%11#2]
debug: Coalescing resulted in 7 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.allowed_to_vote using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.already_voted using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.vote using strategy RootOperandGrouping
debug: Coalescing cumulative_offset#0 with [cumulative_offset#5, cumulative_offset#1, cumulative_offset#2]
debug: Coalescing range_item%18#0 with [range_item%18#2]
debug: Coalescing question_index#0 with [question_index#1]
debug: Coalescing resulted in 13 replacement/s
debug: Coalescing local variables in examples.voting.voting.increment_vote_in_box using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Output IR to voting/out/voting_VotingRoundApp.final.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[3]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_abi_routing@3.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_abi_routing@3.ops[8]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[14]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[16]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[21]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[23]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[29]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[31]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[35]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[37]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[43]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[45]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[49]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[58]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[47]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[58]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[41]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[58]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[39]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[58]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[33]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[58]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[27]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[58]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[25]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[58]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[19]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[58]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[1]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[3]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[5]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[7]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[10]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[12]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[15]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[17]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[20]: 'store awst_tmp%25#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[22]: 'load awst_tmp%25#0' with 'load awst_tmp%25#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[24]: 'store tmp%26#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[26]: 'load tmp%26#0' with 'load tmp%26#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[29]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[31]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[23]: 'store awst_tmp%25#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[34]: 'load awst_tmp%25#0' with 'load awst_tmp%25#0 from l-stack (no copy)'
debug: Inserted main_close_route@6.ops[1]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced main_close_route@6.ops[3]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted main_close_route@6.ops[5]: 'store tmp%29#0 to l-stack (copy)'
debug: Replaced main_close_route@6.ops[7]: 'load tmp%29#0' with 'load tmp%29#0 from l-stack (no copy)'
debug: Inserted main_close_route@6.ops[10]: 'store tmp%30#0 to l-stack (copy)'
debug: Replaced main_close_route@6.ops[12]: 'load tmp%30#0' with 'load tmp%30#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[1]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[3]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[5]: 'store tmp%32#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[7]: 'load tmp%32#0' with 'load tmp%32#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[10]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[12]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[15]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[17]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[23]: 'store tmp%36#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[25]: 'load tmp%36#0' with 'load tmp%36#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[19]: 'store tmp%35#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[22]: 'load tmp%35#0' with 'load tmp%35#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[1]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[3]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[5]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[7]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[10]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[12]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[15]: 'store tmp%42#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[17]: 'load tmp%42#0' with 'load tmp%42#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[20]: 'store awst_tmp%25#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[22]: 'load awst_tmp%25#0' with 'load awst_tmp%25#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[24]: 'store tmp%43#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[26]: 'load tmp%43#0' with 'load tmp%43#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[29]: 'store tmp%44#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[31]: 'load tmp%44#0' with 'load tmp%44#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[34]: 'store tmp%45#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[36]: 'load tmp%45#0' with 'load tmp%45#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[40]: 'store tmp%47#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[44]: 'load tmp%47#0' with 'load tmp%47#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[38]: 'store tmp%46#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[44]: 'load tmp%46#0' with 'load tmp%46#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[23]: 'store awst_tmp%25#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[44]: 'load awst_tmp%25#0' with 'load awst_tmp%25#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.approval_program
debug: Simplified uncover 7; uncover 7; uncover 7; uncover 7; uncover 7; uncover 7; uncover 7; uncover 7 to 
debug: Simplified uncover 2; uncover 2; uncover 2 to 
debug: Inserted create_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[12]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[14]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[8]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[11]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[19]: 'store new_state_value%3#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[22]: 'load new_state_value%3#0' with 'load new_state_value%3#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[29]: 'store new_state_value%4#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[32]: 'load new_state_value%4#0' with 'load new_state_value%4#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[45]: 'store new_state_value%5#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[48]: 'load new_state_value%5#0' with 'load new_state_value%5#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[10]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[12]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[15]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[17]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted store_option_counts_for_header@1.ops[3]: 'store continue_looping%6#0 to l-stack (copy)'
debug: Replaced store_option_counts_for_header@1.ops[5]: 'load continue_looping%6#0' with 'load continue_looping%6#0 from l-stack (no copy)'
debug: Inserted store_option_counts_for_body@2.ops[4]: 'store item#0 to l-stack (copy)'
debug: Replaced store_option_counts_for_body@2.ops[6]: 'load item#0' with 'load item#0 from l-stack (no copy)'
debug: Inserted store_option_counts_for_body@2.ops[8]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced store_option_counts_for_body@2.ops[11]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted store_option_counts_for_body@2.ops[2]: 'store item_index_internal%5#0 to l-stack (copy)'
debug: Replaced store_option_counts_for_body@2.ops[15]: 'load item_index_internal%5#0' with 'load item_index_internal%5#0 from l-stack (no copy)'
debug: Inserted store_option_counts_after_for@4.ops[3]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced store_option_counts_after_for@4.ops[5]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted store_option_counts_after_for@4.ops[1]: 'store total_options#0 to l-stack (copy)'
debug: Replaced store_option_counts_after_for@4.ops[12]: 'load total_options#0' with 'load total_options#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.store_option_counts
debug: examples.voting.voting.VotingRoundApp.store_option_counts f-stack entry: []
debug: examples.voting.voting.VotingRoundApp.store_option_counts f-stack on first store: ['total_options#0', 'array_length%3#0', 'array_value%4#0', 'item_index_internal%5#0']
debug: Inserted bootstrap_block@0.ops[9]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[11]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[24]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[26]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[38]: 'store tally_box_size#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[40]: 'load tally_box_size#0' with 'load tally_box_size#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[47]: 'store min_balance_req#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[49]: 'load min_balance_req#0' with 'load min_balance_req#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[51]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[53]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[57]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[59]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[62]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[64]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[69]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[71]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[3]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[6]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[21]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[24]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[33]: 'store app_global_get_ex_did_exist%7#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[36]: 'load app_global_get_ex_did_exist%7#0' with 'load app_global_get_ex_did_exist%7#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[46]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[49]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[5]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[9]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[20]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[25]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[37]: 'store app_global_get_ex_value%6#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[41]: 'load app_global_get_ex_value%6#0' with 'load app_global_get_ex_value%6#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[57]: 'store min_balance_req#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[68]: 'load min_balance_req#0' with 'load min_balance_req#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[47]: 'store tally_box_size#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[76]: 'load tally_box_size#0' with 'load tally_box_size#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[10]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[29]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[31]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[45]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[47]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[61]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[63]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[80]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[82]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[99]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[101]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[122]: 'store item_index_internal%29#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[124]: 'load item_index_internal%29#0' with 'load item_index_internal%29#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[6]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[9]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[16]: 'store new_state_value%3#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[19]: 'load new_state_value%3#0' with 'load new_state_value%3#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[24]: 'store app_global_get_ex_did_exist%5#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[27]: 'load app_global_get_ex_did_exist%5#0' with 'load app_global_get_ex_did_exist%5#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[41]: 'store app_global_get_ex_did_exist%9#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[44]: 'load app_global_get_ex_did_exist%9#0' with 'load app_global_get_ex_did_exist%9#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[58]: 'store app_global_get_ex_did_exist%13#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[61]: 'load app_global_get_ex_did_exist%13#0' with 'load app_global_get_ex_did_exist%13#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[75]: 'store app_global_get_ex_did_exist%17#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[78]: 'load app_global_get_ex_did_exist%17#0' with 'load app_global_get_ex_did_exist%17#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[82]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[85]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[96]: 'store app_global_get_ex_did_exist%22#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[99]: 'load app_global_get_ex_did_exist%22#0' with 'load app_global_get_ex_did_exist%22#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[103]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[106]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[119]: 'store app_global_get_ex_did_exist%26#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[122]: 'load app_global_get_ex_did_exist%26#0' with 'load app_global_get_ex_did_exist%26#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[77]: 'store app_global_get_ex_value%16#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[81]: 'load app_global_get_ex_value%16#0' with 'load app_global_get_ex_value%16#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[99]: 'store app_global_get_ex_value%21#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[103]: 'load app_global_get_ex_value%21#0' with 'load app_global_get_ex_value%21#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[123]: 'store app_global_get_ex_value%25#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[127]: 'load app_global_get_ex_value%25#0' with 'load app_global_get_ex_value%25#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[26]: 'store app_global_get_ex_value%4#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[31]: 'load app_global_get_ex_value%4#0' with 'load app_global_get_ex_value%4#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[44]: 'store app_global_get_ex_value%8#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[49]: 'load app_global_get_ex_value%8#0' with 'load app_global_get_ex_value%8#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[62]: 'store app_global_get_ex_value%12#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[67]: 'load app_global_get_ex_value%12#0' with 'load app_global_get_ex_value%12#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[131]: 'store app_global_get_ex_value%25#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[135]: 'load app_global_get_ex_value%25#0' with 'load app_global_get_ex_value%25#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[38]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[49]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[57]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[68]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[76]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[91]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[99]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[114]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted close_for_header@1.ops[3]: 'store continue_looping%30#0 to l-stack (copy)'
debug: Replaced close_for_header@1.ops[5]: 'load continue_looping%30#0' with 'load continue_looping%30#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[8]: 'store tmp%32#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[12]: 'load tmp%32#0' with 'load tmp%32#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[2]: 'store question_index#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[6]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted close_if_body@3.ops[3]: 'store note#0 to l-stack (copy)'
debug: Replaced close_if_body@3.ops[5]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@4.ops[4]: 'store question_options#0 to l-stack (copy)'
debug: Replaced close_after_if_else@4.ops[6]: 'load question_options#0' with 'load question_options#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@4.ops[9]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced close_after_if_else@4.ops[15]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@4.ops[1]: 'store note#0 to l-stack (copy)'
debug: Replaced close_after_if_else@4.ops[12]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_if_body@5.ops[5]: 'store range_item%34#0 to l-stack (copy)'
debug: Replaced close_if_body@5.ops[7]: 'load range_item%34#0' with 'load range_item%34#0 from l-stack (no copy)'
debug: Inserted close_for_header@6.ops[3]: 'store continue_looping%35#0 to l-stack (copy)'
debug: Replaced close_for_header@6.ops[5]: 'load continue_looping%35#0' with 'load continue_looping%35#0 from l-stack (no copy)'
debug: Inserted close_for_body@7.ops[3]: 'store tmp%36#0 to l-stack (copy)'
debug: Replaced close_for_body@7.ops[7]: 'load tmp%36#0' with 'load tmp%36#0 from l-stack (no copy)'
debug: Inserted close_if_body@8.ops[3]: 'store note#0 to l-stack (copy)'
debug: Replaced close_if_body@8.ops[5]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@9.ops[4]: 'store votes_for_option#0 to l-stack (copy)'
debug: Replaced close_after_if_else@9.ops[6]: 'load votes_for_option#0' with 'load votes_for_option#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@9.ops[20]: 'store range_item%34#0 to l-stack (copy)'
debug: Replaced close_after_if_else@9.ops[22]: 'load range_item%34#0' with 'load range_item%34#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@9.ops[8]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced close_after_if_else@9.ops[11]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@9.ops[1]: 'store note#0 to l-stack (copy)'
debug: Replaced close_after_if_else@9.ops[11]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@9.ops[4]: 'store current_index#0 to l-stack (copy)'
debug: Replaced close_after_if_else@9.ops[16]: 'load current_index#0' with 'load current_index#0 from l-stack (no copy)'
debug: Inserted close_after_for@11.ops[3]: 'store note#0 to l-stack (copy)'
debug: Replaced close_after_for@11.ops[5]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Inserted close_after_if_else@12.ops[7]: 'store item_index_internal%29#0 to l-stack (copy)'
debug: Replaced close_after_if_else@12.ops[9]: 'load item_index_internal%29#0' with 'load item_index_internal%29#0 from l-stack (no copy)'
debug: Inserted close_after_for@14.ops[23]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced close_after_for@14.ops[25]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Inserted close_after_for@14.ops[16]: 'store app_global_get_ex_did_exist%39#0 to l-stack (copy)'
debug: Replaced close_after_for@14.ops[19]: 'load app_global_get_ex_did_exist%39#0' with 'load app_global_get_ex_did_exist%39#0 from l-stack (no copy)'
debug: Inserted close_after_for@14.ops[33]: 'store app_global_get_ex_did_exist%42#0 to l-stack (copy)'
debug: Replaced close_after_for@14.ops[36]: 'load app_global_get_ex_did_exist%42#0' with 'load app_global_get_ex_did_exist%42#0 from l-stack (no copy)'
debug: Inserted close_after_for@14.ops[44]: 'store new_state_value%43#0 to l-stack (copy)'
debug: Replaced close_after_for@14.ops[47]: 'load new_state_value%43#0' with 'load new_state_value%43#0 from l-stack (no copy)'
debug: Inserted close_after_for@14.ops[35]: 'store app_global_get_ex_value%41#0 to l-stack (copy)'
debug: Replaced close_after_for@14.ops[39]: 'load app_global_get_ex_value%41#0' with 'load app_global_get_ex_value%41#0 from l-stack (no copy)'
debug: Inserted close_after_for@14.ops[18]: 'store app_global_get_ex_value%38#0 to l-stack (copy)'
debug: Replaced close_after_for@14.ops[23]: 'load app_global_get_ex_value%38#0' with 'load app_global_get_ex_value%38#0 from l-stack (no copy)'
debug: Inserted close_after_for@14.ops[3]: 'store note#0 to l-stack (copy)'
debug: Replaced close_after_for@14.ops[43]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Found 7 edge set/s for examples.voting.voting.VotingRoundApp.close
debug: examples.voting.voting.VotingRoundApp.close f-stack entry: ['note#17', 'question_options_arc#0', 'current_index#15', 'option_index#0', 'question_options#0']
debug: examples.voting.voting.VotingRoundApp.close f-stack on first store: ['note#0', 'current_index#0', 'array_length%27#0', 'array_value%28#0', 'question_index#0']
debug: Inserted ensure_budget_while_top@1.ops[5]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced ensure_budget_while_top@1.ops[7]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted ensure_budget_while_top@1.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced ensure_budget_while_top@1.ops[4]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted ensure_budget_switch_case_1@4.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced ensure_budget_switch_case_1@4.ops[3]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Found 3 edge set/s for puyapy.ensure_budget
debug: puyapy.ensure_budget f-stack entry: []
debug: puyapy.ensure_budget f-stack on first store: ['required_budget_with_buffer#0']
debug: Inserted itoa_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced itoa_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted itoa_if_body@1.ops[8]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced itoa_if_body@1.ops[10]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted itoa_if_body@1.ops[3]: 'store index_plus_1%1#0 to l-stack (copy)'
debug: Replaced itoa_if_body@1.ops[7]: 'load index_plus_1%1#0' with 'load index_plus_1%1#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[3]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[5]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[11]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[13]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[25]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[27]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[21]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[24]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[16]: 'store index_plus_1%6#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[20]: 'load index_plus_1%6#0' with 'load index_plus_1%6#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[14]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[20]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted itoa_after_if_else@2.ops[7]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced itoa_after_if_else@2.ops[26]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Found 1 edge set/s for examples.voting.voting.itoa
debug: Simplified uncover 2; uncover 2 to cover 2
debug: Inserted get_vote_from_box_block@0.ops[10]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced get_vote_from_box_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted get_vote_from_box_block@0.ops[14]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced get_vote_from_box_block@0.ops[16]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted get_vote_from_box_block@0.ops[2]: 'store exists#0 to l-stack (copy)'
debug: Replaced get_vote_from_box_block@0.ops[5]: 'load exists#0' with 'load exists#0 from l-stack (no copy)'
debug: Inserted get_vote_from_box_block@0.ops[4]: 'store box_data#0 to l-stack (copy)'
debug: Replaced get_vote_from_box_block@0.ops[8]: 'load box_data#0' with 'load box_data#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[12]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[14]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[8]: 'store awst_tmp%2#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[11]: 'load awst_tmp%2#0' with 'load awst_tmp%2#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[7]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[9]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[11]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[13]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[17]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[19]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[23]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[25]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[31]: 'store encoded_tuple_buffer%14#2 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[33]: 'load encoded_tuple_buffer%14#2' with 'load encoded_tuple_buffer%14#2 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[36]: 'store encoded_tuple_buffer%14#2 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[38]: 'load encoded_tuple_buffer%14#2' with 'load encoded_tuple_buffer%14#2 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[41]: 'store encoded_tuple_buffer%14#2 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[43]: 'load encoded_tuple_buffer%14#2' with 'load encoded_tuple_buffer%14#2 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[2]: 'store base_length%5#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[6]: 'load base_length%5#0' with 'load base_length%5#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[28]: 'store val_as_bytes%12#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[41]: 'load val_as_bytes%12#0' with 'load val_as_bytes%12#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[22]: 'store val_as_bytes%10#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[37]: 'load val_as_bytes%10#0' with 'load val_as_bytes%10#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[16]: 'store val_as_bytes%8#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[33]: 'load val_as_bytes%8#0' with 'load val_as_bytes%8#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.get_preconditions
debug: Allocated 1 variable/s to x-stack: ternary_result%4#0
debug: shared x-stack for get_preconditions_ternary_true@1 -> get_preconditions_ternary_merge@3: ternary_result%4#0
debug: shared x-stack for get_preconditions_ternary_false@2 -> get_preconditions_ternary_merge@3: ternary_result%4#0
debug: examples.voting.voting.VotingRoundApp.get_preconditions f-stack entry: []
debug: examples.voting.voting.VotingRoundApp.get_preconditions f-stack on first store: ['val_as_bytes%1#0', 'awst_tmp%2#0']
debug: Simplified uncover 2; uncover 2 to cover 2
debug: Inserted voting_open_block@0.ops[3]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced voting_open_block@0.ops[6]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted voting_open_block@0.ops[5]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced voting_open_block@0.ops[9]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@1.ops[3]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@1.ops[6]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[12]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[14]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[3]: 'store app_global_get_ex_did_exist%5#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[6]: 'load app_global_get_ex_did_exist%5#0' with 'load app_global_get_ex_did_exist%5#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[9]: 'store awst_tmp%6#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[12]: 'load awst_tmp%6#0' with 'load awst_tmp%6#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[5]: 'store app_global_get_ex_value%4#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[12]: 'load app_global_get_ex_value%4#0' with 'load app_global_get_ex_value%4#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@3.ops[10]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@3.ops[12]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@3.ops[3]: 'store app_global_get_ex_did_exist%9#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@3.ops[6]: 'load app_global_get_ex_did_exist%9#0' with 'load app_global_get_ex_did_exist%9#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@3.ops[5]: 'store app_global_get_ex_value%8#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@3.ops[10]: 'load app_global_get_ex_value%8#0' with 'load app_global_get_ex_value%8#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.voting_open
debug: Allocated 1 variable/s to x-stack: and_result%11#0
debug: shared x-stack for voting_open_bool_true@4 -> voting_open_bool_merge@6: and_result%11#0
debug: shared x-stack for voting_open_bool_false@5 -> voting_open_bool_merge@6: and_result%11#0
debug: examples.voting.voting.VotingRoundApp.voting_open f-stack entry: ['awst_tmp%6#0']
debug: examples.voting.voting.VotingRoundApp.voting_open f-stack on first store: []
debug: Inserted allowed_to_vote_block@0.ops[16]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[18]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted allowed_to_vote_block@0.ops[8]: 'store app_global_get_ex_did_exist%2#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[11]: 'load app_global_get_ex_did_exist%2#0' with 'load app_global_get_ex_did_exist%2#0 from l-stack (no copy)'
debug: Inserted allowed_to_vote_block@0.ops[10]: 'store app_global_get_ex_value%1#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[16]: 'load app_global_get_ex_value%1#0' with 'load app_global_get_ex_value%1#0 from l-stack (no copy)'
debug: Inserted allowed_to_vote_block@0.ops[4]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[15]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted already_voted_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced already_voted_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted already_voted_block@0.ops[5]: 'store exists#0 to l-stack (copy)'
debug: Replaced already_voted_block@0.ops[8]: 'load exists#0' with 'load exists#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[5]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[7]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[10]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[12]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[15]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[17]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[19]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[21]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[37]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[39]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[42]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[44]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[53]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[55]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[71]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[73]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[77]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[79]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[83]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[85]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[88]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[90]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[95]: 'store range_item%18#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[97]: 'load range_item%18#0' with 'load range_item%18#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[26]: 'store app_global_get_ex_did_exist%5#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[29]: 'load app_global_get_ex_did_exist%5#0' with 'load app_global_get_ex_did_exist%5#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[50]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[53]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[60]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[63]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[70]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[73]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[28]: 'store app_global_get_ex_value%4#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[32]: 'load app_global_get_ex_value%4#0' with 'load app_global_get_ex_value%4#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[69]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[74]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[35]: 'store questions_count#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[43]: 'load questions_count#0' with 'load questions_count#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[83]: 'store min_bal_req#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[94]: 'load min_bal_req#0' with 'load min_bal_req#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[67]: 'store min_bal_req#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[83]: 'load min_bal_req#0' with 'load min_bal_req#0 from l-stack (no copy)'
debug: Inserted vote_for_header@1.ops[3]: 'store continue_looping%19#0 to l-stack (copy)'
debug: Replaced vote_for_header@1.ops[5]: 'load continue_looping%19#0' with 'load continue_looping%19#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[7]: 'store index_is_in_bounds%21#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[9]: 'load index_is_in_bounds%21#0' with 'load index_is_in_bounds%21#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[13]: 'store array_data_sans_header%22#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[15]: 'load array_data_sans_header%22#0' with 'load array_data_sans_header%22#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[19]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[21]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[38]: 'store index_is_in_bounds%28#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[40]: 'load index_is_in_bounds%28#0' with 'load index_is_in_bounds%28#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[44]: 'store array_data_sans_header%29#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[46]: 'load array_data_sans_header%29#0' with 'load array_data_sans_header%29#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[50]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[52]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[58]: 'store tmp%32#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[60]: 'load tmp%32#0' with 'load tmp%32#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[65]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[67]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[74]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[76]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[96]: 'store range_item%18#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[98]: 'load range_item%18#0' with 'load range_item%18#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[3]: 'store array_length%20#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[6]: 'load array_length%20#0' with 'load array_length%20#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[28]: 'store app_global_get_ex_did_exist%26#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[31]: 'load app_global_get_ex_did_exist%26#0' with 'load app_global_get_ex_did_exist%26#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[36]: 'store array_length%27#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[39]: 'load array_length%27#0' with 'load array_length%27#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[57]: 'store options_count#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[60]: 'load options_count#0' with 'load options_count#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[86]: 'store app_global_get_ex_did_exist%36#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[89]: 'load app_global_get_ex_did_exist%36#0' with 'load app_global_get_ex_did_exist%36#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[94]: 'store new_state_value%37#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[97]: 'load new_state_value%37#0' with 'load new_state_value%37#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[30]: 'store app_global_get_ex_value%25#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[34]: 'load app_global_get_ex_value%25#0' with 'load app_global_get_ex_value%25#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[89]: 'store app_global_get_ex_value%35#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[93]: 'load app_global_get_ex_value%35#0' with 'load app_global_get_ex_value%35#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[68]: 'store cumulative_offset#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[75]: 'load cumulative_offset#0' with 'load cumulative_offset#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[61]: 'store answer_option_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[70]: 'load answer_option_index#0' with 'load answer_option_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[6]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[18]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[36]: 'store app_global_get_ex_value%25#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[48]: 'load app_global_get_ex_value%25#0' with 'load app_global_get_ex_value%25#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[42]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[54]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[66]: 'store options_count#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[81]: 'load options_count#0' with 'load options_count#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[19]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[42]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[26]: 'store answer_option_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[65]: 'load answer_option_index#0' with 'load answer_option_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@2.ops[57]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@2.ops[110]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.vote
debug: examples.voting.voting.VotingRoundApp.vote f-stack entry: []
debug: examples.voting.voting.VotingRoundApp.vote f-stack on first store: ['questions_count#0', 'cumulative_offset#0', 'question_index#0']
debug: Inserted increment_vote_in_box_block@0.ops[10]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[14]: 'store current_vote#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[16]: 'load current_vote#0' with 'load current_vote#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[19]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[21]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[2]: 'store exists#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[5]: 'load exists#0' with 'load exists#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[4]: 'store box_data#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[8]: 'load box_data#0' with 'load box_data#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[25]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[29]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
info: Writing voting/out/voting.approval.teal
info: Writing voting/out/voting.approval.debug.teal
info: Writing voting/out/voting.clear.teal
info: Writing voting/out/voting.clear.debug.teal
info: Writing voting/out/application.json