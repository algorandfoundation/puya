>> poetry run puyapy -O1 --output-ssa-ir --output-optimization-ir --output-final-ir --output-cssa-ir --output-post-ssa-ir --output-parallel-copies-ir --out-dir=out --debug-level=1 --log-level=debug voting
debug: Sealing block@0: // L13
debug: Terminated block@0: // L13
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L20
debug: Terminated block@1: // while_top_L20
debug: Sealing block@None: // while_body_L20
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L20
debug: Terminated block@2: // while_body_L20
debug: Sealing block@None: // switch_case_default_L26
debug: Sealing block@None: // switch_case_0_L28
debug: Sealing block@None: // switch_case_1_L30
debug: Terminated block@3: // switch_case_0_L28
debug: Terminated block@4: // switch_case_1_L30
debug: Terminated block@5: // switch_case_default_L26
debug: Sealing block@6: // switch_case_next_L26
debug: Terminated block@6: // switch_case_next_L26
debug: Sealing block@1: // while_top_L20
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L13
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L26
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L13
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L26
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@None: // after_while_L20
debug: Terminated block@7: // after_while_L20
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@None: // while_body_L11
debug: Terminated block@2: // while_body_L11
debug: Sealing block@None: // if_body_L12
debug: Sealing block@None: // else_body_L12
debug: Terminated block@3: // if_body_L12
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L5
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L5
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L5
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@None: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L73
debug: Terminated block@0: // L73
debug: Sealing block@None: // ternary_true_L90
debug: Sealing block@None: // ternary_false_L90
debug: Terminated block@1: // ternary_true_L90
debug: Terminated block@2: // ternary_false_L90
debug: Sealing block@3: // ternary_merge_L90
debug: Created Phi assignment: let ternary_result%6#2: uint64 = undefined while trying to resolve 'ternary_result%6' in block@3: // ternary_merge_L90
debug: Added ternary_result%6#0 to Phi node: let ternary_result%6#2: uint64 = φ(ternary_result%6#0 <- block@1) in block@1: // ternary_true_L90
debug: Added ternary_result%6#1 to Phi node: let ternary_result%6#2: uint64 = φ(ternary_result%6#0 <- block@1, ternary_result%6#1 <- block@2) in block@2: // ternary_false_L90
debug: Created Phi assignment: let metadata_ipfs_cid#1: bytes = undefined while trying to resolve 'metadata_ipfs_cid' in block@3: // ternary_merge_L90
debug: Added metadata_ipfs_cid#0 to Phi node: let metadata_ipfs_cid#1: bytes = φ(metadata_ipfs_cid#0 <- block@1) in block@1: // ternary_true_L90
debug: Added metadata_ipfs_cid#0 to Phi node: let metadata_ipfs_cid#1: bytes = φ(metadata_ipfs_cid#0 <- block@1, metadata_ipfs_cid#0 <- block@2) in block@2: // ternary_false_L90
debug: Replacing trivial Phi node: let metadata_ipfs_cid#1: bytes = φ(metadata_ipfs_cid#0 <- block@1, metadata_ipfs_cid#0 <- block@2) (metadata_ipfs_cid#1) with metadata_ipfs_cid#0
debug: Deleting Phi assignment: let metadata_ipfs_cid#1: bytes = φ(metadata_ipfs_cid#0 <- block@1, metadata_ipfs_cid#0 <- block@2)
debug: Replaced trivial Phi node: let metadata_ipfs_cid#1: bytes = φ(metadata_ipfs_cid#0 <- block@1, metadata_ipfs_cid#0 <- block@2) (metadata_ipfs_cid#1) with metadata_ipfs_cid#0 in current definition for 1 blocks
debug: Created Phi assignment: let st#1: uint64 = undefined while trying to resolve 'st' in block@3: // ternary_merge_L90
debug: Added st#0 to Phi node: let st#1: uint64 = φ(st#0 <- block@1) in block@1: // ternary_true_L90
debug: Added st#0 to Phi node: let st#1: uint64 = φ(st#0 <- block@1, st#0 <- block@2) in block@2: // ternary_false_L90
debug: Replacing trivial Phi node: let st#1: uint64 = φ(st#0 <- block@1, st#0 <- block@2) (st#1) with st#0
debug: Deleting Phi assignment: let st#1: uint64 = φ(st#0 <- block@1, st#0 <- block@2)
debug: Replaced trivial Phi node: let st#1: uint64 = φ(st#0 <- block@1, st#0 <- block@2) (st#1) with st#0 in current definition for 1 blocks
debug: Created Phi assignment: let et#1: uint64 = undefined while trying to resolve 'et' in block@3: // ternary_merge_L90
debug: Added et#0 to Phi node: let et#1: uint64 = φ(et#0 <- block@1) in block@1: // ternary_true_L90
debug: Added et#0 to Phi node: let et#1: uint64 = φ(et#0 <- block@1, et#0 <- block@2) in block@2: // ternary_false_L90
debug: Replacing trivial Phi node: let et#1: uint64 = φ(et#0 <- block@1, et#0 <- block@2) (et#1) with et#0
debug: Deleting Phi assignment: let et#1: uint64 = φ(et#0 <- block@1, et#0 <- block@2)
debug: Replaced trivial Phi node: let et#1: uint64 = φ(et#0 <- block@1, et#0 <- block@2) (et#1) with et#0 in current definition for 1 blocks
debug: Created Phi assignment: let quorum#1: bytes = undefined while trying to resolve 'quorum' in block@3: // ternary_merge_L90
debug: Added quorum#0 to Phi node: let quorum#1: bytes = φ(quorum#0 <- block@1) in block@1: // ternary_true_L90
debug: Added quorum#0 to Phi node: let quorum#1: bytes = φ(quorum#0 <- block@1, quorum#0 <- block@2) in block@2: // ternary_false_L90
debug: Replacing trivial Phi node: let quorum#1: bytes = φ(quorum#0 <- block@1, quorum#0 <- block@2) (quorum#1) with quorum#0
debug: Deleting Phi assignment: let quorum#1: bytes = φ(quorum#0 <- block@1, quorum#0 <- block@2)
debug: Replaced trivial Phi node: let quorum#1: bytes = φ(quorum#0 <- block@1, quorum#0 <- block@2) (quorum#1) with quorum#0 in current definition for 1 blocks
debug: Created Phi assignment: let nft_image_url#1: bytes = undefined while trying to resolve 'nft_image_url' in block@3: // ternary_merge_L90
debug: Added nft_image_url#0 to Phi node: let nft_image_url#1: bytes = φ(nft_image_url#0 <- block@1) in block@1: // ternary_true_L90
debug: Added nft_image_url#0 to Phi node: let nft_image_url#1: bytes = φ(nft_image_url#0 <- block@1, nft_image_url#0 <- block@2) in block@2: // ternary_false_L90
debug: Replacing trivial Phi node: let nft_image_url#1: bytes = φ(nft_image_url#0 <- block@1, nft_image_url#0 <- block@2) (nft_image_url#1) with nft_image_url#0
debug: Deleting Phi assignment: let nft_image_url#1: bytes = φ(nft_image_url#0 <- block@1, nft_image_url#0 <- block@2)
debug: Replaced trivial Phi node: let nft_image_url#1: bytes = φ(nft_image_url#0 <- block@1, nft_image_url#0 <- block@2) (nft_image_url#1) with nft_image_url#0 in current definition for 1 blocks
debug: Created Phi assignment: let option_counts#1: bytes = undefined while trying to resolve 'option_counts' in block@3: // ternary_merge_L90
debug: Added option_counts#0 to Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@1) in block@1: // ternary_true_L90
debug: Added option_counts#0 to Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@1, option_counts#0 <- block@2) in block@2: // ternary_false_L90
debug: Replacing trivial Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@1, option_counts#0 <- block@2) (option_counts#1) with option_counts#0
debug: Deleting Phi assignment: let option_counts#1: bytes = φ(option_counts#0 <- block@1, option_counts#0 <- block@2)
debug: Replaced trivial Phi node: let option_counts#1: bytes = φ(option_counts#0 <- block@1, option_counts#0 <- block@2) (option_counts#1) with option_counts#0 in current definition for 1 blocks
debug: Terminated block@3: // ternary_merge_L90
debug: Sealing block@0: // L233
debug: Terminated block@0: // L233
debug: Sealing block@0: // L245
debug: Terminated block@0: // L245
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@1: // for_header_L247
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@1: // for_header_L247
debug: Terminated block@1: // for_header_L247
debug: Sealing block@None: // for_body_L247
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1: // for_header_L247
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1: // for_header_L247
debug: Terminated block@2: // for_body_L247
debug: Sealing block@3: // for_footer_L247
debug: Sealing block@None: // after_for_L247
debug: Terminated block@3: // for_footer_L247
debug: Sealing block@1: // for_header_L247
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@0) in block@0: // L245
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@0, item_index_internal%2#2 <- block@3) in block@3: // for_footer_L247
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0: // L245
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3: // for_footer_L247
debug: Terminated block@4: // after_for_L247
debug: Sealing block@0: // L99
debug: Terminated block@0: // L99
debug: Sealing block@0: // L123
debug: Terminated block@0: // L123
debug: Looking for 'range_item%28' in an unsealed block creating an incomplete Phi: block@1: // for_header_L144
debug: Created Phi assignment: let range_item%28#1: uint64 = undefined while trying to resolve 'range_item%28' in block@1: // for_header_L144
debug: Terminated block@1: // for_header_L144
debug: Sealing block@None: // for_body_L144
debug: Terminated block@2: // for_body_L144
debug: Looking for 'range_item%37' in an unsealed block creating an incomplete Phi: block@3: // for_header_L146
debug: Created Phi assignment: let range_item%37#1: uint64 = undefined while trying to resolve 'range_item%37' in block@3: // for_header_L146
debug: Terminated block@3: // for_header_L146
debug: Sealing block@None: // for_body_L146
debug: Looking for 'current_index' in an unsealed block creating an incomplete Phi: block@3: // for_header_L146
debug: Created Phi assignment: let current_index#1: uint64 = undefined while trying to resolve 'current_index' in block@3: // for_header_L146
debug: Looking for 'note' in an unsealed block creating an incomplete Phi: block@3: // for_header_L146
debug: Created Phi assignment: let note#1: bytes = undefined while trying to resolve 'note' in block@3: // for_header_L146
debug: Terminated block@4: // for_body_L146
debug: Sealing block@None: // ternary_true_L149
debug: Sealing block@None: // ternary_false_L149
debug: Terminated block@5: // ternary_true_L149
debug: Looking for 'question_options' in an unsealed block creating an incomplete Phi: block@3: // for_header_L146
debug: Created Phi assignment: let question_options#1: uint64 = undefined while trying to resolve 'question_options' in block@3: // for_header_L146
debug: Terminated block@6: // ternary_false_L149
debug: Sealing block@None: // ternary_true_L151
debug: Sealing block@None: // ternary_false_L151
debug: Terminated block@7: // ternary_true_L151
debug: Looking for 'question_index' in an unsealed block creating an incomplete Phi: block@3: // for_header_L146
debug: Created Phi assignment: let question_index#1: uint64 = undefined while trying to resolve 'question_index' in block@3: // for_header_L146
debug: Terminated block@8: // ternary_false_L151
debug: Sealing block@None: // ternary_true_L153
debug: Sealing block@None: // ternary_false_L153
debug: Terminated block@9: // ternary_true_L153
debug: Terminated block@10: // ternary_false_L153
debug: Sealing block@11: // ternary_merge_L153
debug: Created Phi assignment: let ternary_result%51#2: bytes = undefined while trying to resolve 'ternary_result%51' in block@11: // ternary_merge_L153
debug: Added ternary_result%51#0 to Phi node: let ternary_result%51#2: bytes = φ(ternary_result%51#0 <- block@9) in block@9: // ternary_true_L153
debug: Added ternary_result%51#1 to Phi node: let ternary_result%51#2: bytes = φ(ternary_result%51#0 <- block@9, ternary_result%51#1 <- block@10) in block@10: // ternary_false_L153
debug: Terminated block@11: // ternary_merge_L153
debug: Sealing block@12: // ternary_merge_L151
debug: Created Phi assignment: let ternary_result%43#2: bytes = undefined while trying to resolve 'ternary_result%43' in block@12: // ternary_merge_L151
debug: Added ternary_result%43#0 to Phi node: let ternary_result%43#2: bytes = φ(ternary_result%43#0 <- block@7) in block@7: // ternary_true_L151
debug: Added ternary_result%43#1 to Phi node: let ternary_result%43#2: bytes = φ(ternary_result%43#0 <- block@7, ternary_result%43#1 <- block@11) in block@11: // ternary_merge_L153
debug: Terminated block@12: // ternary_merge_L151
debug: Sealing block@13: // ternary_merge_L149
debug: Created Phi assignment: let ternary_result%40#2: bytes = undefined while trying to resolve 'ternary_result%40' in block@13: // ternary_merge_L149
debug: Added ternary_result%40#0 to Phi node: let ternary_result%40#2: bytes = φ(ternary_result%40#0 <- block@5) in block@5: // ternary_true_L149
debug: Added ternary_result%40#1 to Phi node: let ternary_result%40#2: bytes = φ(ternary_result%40#0 <- block@5, ternary_result%40#1 <- block@12) in block@12: // ternary_merge_L151
debug: Created Phi assignment: let current_index#2: uint64 = undefined while trying to resolve 'current_index' in block@13: // ternary_merge_L149
debug: Added current_index#1 to Phi node: let current_index#2: uint64 = φ(current_index#1 <- block@5) in block@5: // ternary_true_L149
debug: Created Phi assignment: let current_index#3: uint64 = undefined while trying to resolve 'current_index' in block@12: // ternary_merge_L151
debug: Added current_index#1 to Phi node: let current_index#3: uint64 = φ(current_index#1 <- block@7) in block@7: // ternary_true_L151
debug: Created Phi assignment: let current_index#4: uint64 = undefined while trying to resolve 'current_index' in block@11: // ternary_merge_L153
debug: Added current_index#1 to Phi node: let current_index#4: uint64 = φ(current_index#1 <- block@9) in block@9: // ternary_true_L153
debug: Added current_index#1 to Phi node: let current_index#4: uint64 = φ(current_index#1 <- block@9, current_index#1 <- block@10) in block@10: // ternary_false_L153
debug: Replacing trivial Phi node: let current_index#4: uint64 = φ(current_index#1 <- block@9, current_index#1 <- block@10) (current_index#4) with current_index#1
debug: Deleting Phi assignment: let current_index#4: uint64 = φ(current_index#1 <- block@9, current_index#1 <- block@10)
debug: Replaced trivial Phi node: let current_index#4: uint64 = φ(current_index#1 <- block@9, current_index#1 <- block@10) (current_index#4) with current_index#1 in current definition for 1 blocks
debug: Added current_index#1 to Phi node: let current_index#3: uint64 = φ(current_index#1 <- block@7, current_index#1 <- block@11) in block@11: // ternary_merge_L153
debug: Replacing trivial Phi node: let current_index#3: uint64 = φ(current_index#1 <- block@7, current_index#1 <- block@11) (current_index#3) with current_index#1
debug: Deleting Phi assignment: let current_index#3: uint64 = φ(current_index#1 <- block@7, current_index#1 <- block@11)
debug: Replaced trivial Phi node: let current_index#3: uint64 = φ(current_index#1 <- block@7, current_index#1 <- block@11) (current_index#3) with current_index#1 in current definition for 1 blocks
debug: Added current_index#1 to Phi node: let current_index#2: uint64 = φ(current_index#1 <- block@5, current_index#1 <- block@12) in block@12: // ternary_merge_L151
debug: Replacing trivial Phi node: let current_index#2: uint64 = φ(current_index#1 <- block@5, current_index#1 <- block@12) (current_index#2) with current_index#1
debug: Deleting Phi assignment: let current_index#2: uint64 = φ(current_index#1 <- block@5, current_index#1 <- block@12)
debug: Replaced trivial Phi node: let current_index#2: uint64 = φ(current_index#1 <- block@5, current_index#1 <- block@12) (current_index#2) with current_index#1 in current definition for 1 blocks
debug: Terminated block@13: // ternary_merge_L149
debug: Sealing block@14: // for_footer_L146
debug: Sealing block@None: // after_for_L146
debug: Created Phi assignment: let range_item%37#2: uint64 = undefined while trying to resolve 'range_item%37' in block@13: // ternary_merge_L149
debug: Added range_item%37#1 to Phi node: let range_item%37#2: uint64 = φ(range_item%37#1 <- block@5) in block@5: // ternary_true_L149
debug: Created Phi assignment: let range_item%37#3: uint64 = undefined while trying to resolve 'range_item%37' in block@12: // ternary_merge_L151
debug: Added range_item%37#1 to Phi node: let range_item%37#3: uint64 = φ(range_item%37#1 <- block@7) in block@7: // ternary_true_L151
debug: Created Phi assignment: let range_item%37#4: uint64 = undefined while trying to resolve 'range_item%37' in block@11: // ternary_merge_L153
debug: Added range_item%37#1 to Phi node: let range_item%37#4: uint64 = φ(range_item%37#1 <- block@9) in block@9: // ternary_true_L153
debug: Added range_item%37#1 to Phi node: let range_item%37#4: uint64 = φ(range_item%37#1 <- block@9, range_item%37#1 <- block@10) in block@10: // ternary_false_L153
debug: Replacing trivial Phi node: let range_item%37#4: uint64 = φ(range_item%37#1 <- block@9, range_item%37#1 <- block@10) (range_item%37#4) with range_item%37#1
debug: Deleting Phi assignment: let range_item%37#4: uint64 = φ(range_item%37#1 <- block@9, range_item%37#1 <- block@10)
debug: Replaced trivial Phi node: let range_item%37#4: uint64 = φ(range_item%37#1 <- block@9, range_item%37#1 <- block@10) (range_item%37#4) with range_item%37#1 in current definition for 1 blocks
debug: Added range_item%37#1 to Phi node: let range_item%37#3: uint64 = φ(range_item%37#1 <- block@7, range_item%37#1 <- block@11) in block@11: // ternary_merge_L153
debug: Replacing trivial Phi node: let range_item%37#3: uint64 = φ(range_item%37#1 <- block@7, range_item%37#1 <- block@11) (range_item%37#3) with range_item%37#1
debug: Deleting Phi assignment: let range_item%37#3: uint64 = φ(range_item%37#1 <- block@7, range_item%37#1 <- block@11)
debug: Replaced trivial Phi node: let range_item%37#3: uint64 = φ(range_item%37#1 <- block@7, range_item%37#1 <- block@11) (range_item%37#3) with range_item%37#1 in current definition for 1 blocks
debug: Added range_item%37#1 to Phi node: let range_item%37#2: uint64 = φ(range_item%37#1 <- block@5, range_item%37#1 <- block@12) in block@12: // ternary_merge_L151
debug: Replacing trivial Phi node: let range_item%37#2: uint64 = φ(range_item%37#1 <- block@5, range_item%37#1 <- block@12) (range_item%37#2) with range_item%37#1
debug: Deleting Phi assignment: let range_item%37#2: uint64 = φ(range_item%37#1 <- block@5, range_item%37#1 <- block@12)
debug: Replaced trivial Phi node: let range_item%37#2: uint64 = φ(range_item%37#1 <- block@5, range_item%37#1 <- block@12) (range_item%37#2) with range_item%37#1 in current definition for 1 blocks
debug: Terminated block@14: // for_footer_L146
debug: Sealing block@3: // for_header_L146
debug: Added range_item%37#0 to Phi node: let range_item%37#1: uint64 = φ(range_item%37#0 <- block@2) in block@2: // for_body_L144
debug: Added range_item%37#5 to Phi node: let range_item%37#1: uint64 = φ(range_item%37#0 <- block@2, range_item%37#5 <- block@14) in block@14: // for_footer_L146
debug: Looking for 'current_index' in an unsealed block creating an incomplete Phi: block@1: // for_header_L144
debug: Created Phi assignment: let current_index#6: uint64 = undefined while trying to resolve 'current_index' in block@1: // for_header_L144
debug: Added current_index#6 to Phi node: let current_index#1: uint64 = φ(current_index#6 <- block@2) in block@2: // for_body_L144
debug: Added current_index#5 to Phi node: let current_index#1: uint64 = φ(current_index#6 <- block@2, current_index#5 <- block@14) in block@14: // for_footer_L146
debug: Looking for 'note' in an unsealed block creating an incomplete Phi: block@1: // for_header_L144
debug: Created Phi assignment: let note#3: bytes = undefined while trying to resolve 'note' in block@1: // for_header_L144
debug: Added note#3 to Phi node: let note#1: bytes = φ(note#3 <- block@2) in block@2: // for_body_L144
debug: Added note#2 to Phi node: let note#1: bytes = φ(note#3 <- block@2, note#2 <- block@14) in block@14: // for_footer_L146
debug: Added question_options#0 to Phi node: let question_options#1: uint64 = φ(question_options#0 <- block@2) in block@2: // for_body_L144
debug: Created Phi assignment: let question_options#2: uint64 = undefined while trying to resolve 'question_options' in block@13: // ternary_merge_L149
debug: Added question_options#1 to Phi node: let question_options#2: uint64 = φ(question_options#1 <- block@5) in block@5: // ternary_true_L149
debug: Created Phi assignment: let question_options#3: uint64 = undefined while trying to resolve 'question_options' in block@12: // ternary_merge_L151
debug: Added question_options#1 to Phi node: let question_options#3: uint64 = φ(question_options#1 <- block@7) in block@7: // ternary_true_L151
debug: Created Phi assignment: let question_options#4: uint64 = undefined while trying to resolve 'question_options' in block@11: // ternary_merge_L153
debug: Added question_options#1 to Phi node: let question_options#4: uint64 = φ(question_options#1 <- block@9) in block@9: // ternary_true_L153
debug: Added question_options#1 to Phi node: let question_options#4: uint64 = φ(question_options#1 <- block@9, question_options#1 <- block@10) in block@10: // ternary_false_L153
debug: Replacing trivial Phi node: let question_options#4: uint64 = φ(question_options#1 <- block@9, question_options#1 <- block@10) (question_options#4) with question_options#1
debug: Deleting Phi assignment: let question_options#4: uint64 = φ(question_options#1 <- block@9, question_options#1 <- block@10)
debug: Replaced trivial Phi node: let question_options#4: uint64 = φ(question_options#1 <- block@9, question_options#1 <- block@10) (question_options#4) with question_options#1 in current definition for 1 blocks
debug: Added question_options#1 to Phi node: let question_options#3: uint64 = φ(question_options#1 <- block@7, question_options#1 <- block@11) in block@11: // ternary_merge_L153
debug: Replacing trivial Phi node: let question_options#3: uint64 = φ(question_options#1 <- block@7, question_options#1 <- block@11) (question_options#3) with question_options#1
debug: Deleting Phi assignment: let question_options#3: uint64 = φ(question_options#1 <- block@7, question_options#1 <- block@11)
debug: Replaced trivial Phi node: let question_options#3: uint64 = φ(question_options#1 <- block@7, question_options#1 <- block@11) (question_options#3) with question_options#1 in current definition for 1 blocks
debug: Added question_options#1 to Phi node: let question_options#2: uint64 = φ(question_options#1 <- block@5, question_options#1 <- block@12) in block@12: // ternary_merge_L151
debug: Replacing trivial Phi node: let question_options#2: uint64 = φ(question_options#1 <- block@5, question_options#1 <- block@12) (question_options#2) with question_options#1
debug: Deleting Phi assignment: let question_options#2: uint64 = φ(question_options#1 <- block@5, question_options#1 <- block@12)
debug: Replaced trivial Phi node: let question_options#2: uint64 = φ(question_options#1 <- block@5, question_options#1 <- block@12) (question_options#2) with question_options#1 in current definition for 1 blocks
debug: Added question_options#1 to Phi node: let question_options#1: uint64 = φ(question_options#0 <- block@2, question_options#1 <- block@14) in block@14: // for_footer_L146
debug: Replacing trivial Phi node: let question_options#1: uint64 = φ(question_options#0 <- block@2, question_options#1 <- block@14) (question_options#1) with question_options#0
debug: Deleting Phi assignment: let question_options#1: uint64 = φ(question_options#0 <- block@2, question_options#1 <- block@14)
debug: Replaced trivial Phi node: let question_options#1: uint64 = φ(question_options#0 <- block@2, question_options#1 <- block@14) (question_options#1) with question_options#0 in current definition for 12 blocks
debug: Added question_index#0 to Phi node: let question_index#1: uint64 = φ(question_index#0 <- block@2) in block@2: // for_body_L144
debug: Created Phi assignment: let question_index#2: uint64 = undefined while trying to resolve 'question_index' in block@13: // ternary_merge_L149
debug: Added question_index#1 to Phi node: let question_index#2: uint64 = φ(question_index#1 <- block@5) in block@5: // ternary_true_L149
debug: Created Phi assignment: let question_index#3: uint64 = undefined while trying to resolve 'question_index' in block@12: // ternary_merge_L151
debug: Added question_index#1 to Phi node: let question_index#3: uint64 = φ(question_index#1 <- block@7) in block@7: // ternary_true_L151
debug: Created Phi assignment: let question_index#4: uint64 = undefined while trying to resolve 'question_index' in block@11: // ternary_merge_L153
debug: Added question_index#1 to Phi node: let question_index#4: uint64 = φ(question_index#1 <- block@9) in block@9: // ternary_true_L153
debug: Added question_index#1 to Phi node: let question_index#4: uint64 = φ(question_index#1 <- block@9, question_index#1 <- block@10) in block@10: // ternary_false_L153
debug: Replacing trivial Phi node: let question_index#4: uint64 = φ(question_index#1 <- block@9, question_index#1 <- block@10) (question_index#4) with question_index#1
debug: Deleting Phi assignment: let question_index#4: uint64 = φ(question_index#1 <- block@9, question_index#1 <- block@10)
debug: Replaced trivial Phi node: let question_index#4: uint64 = φ(question_index#1 <- block@9, question_index#1 <- block@10) (question_index#4) with question_index#1 in current definition for 1 blocks
debug: Added question_index#1 to Phi node: let question_index#3: uint64 = φ(question_index#1 <- block@7, question_index#1 <- block@11) in block@11: // ternary_merge_L153
debug: Replacing trivial Phi node: let question_index#3: uint64 = φ(question_index#1 <- block@7, question_index#1 <- block@11) (question_index#3) with question_index#1
debug: Deleting Phi assignment: let question_index#3: uint64 = φ(question_index#1 <- block@7, question_index#1 <- block@11)
debug: Replaced trivial Phi node: let question_index#3: uint64 = φ(question_index#1 <- block@7, question_index#1 <- block@11) (question_index#3) with question_index#1 in current definition for 1 blocks
debug: Added question_index#1 to Phi node: let question_index#2: uint64 = φ(question_index#1 <- block@5, question_index#1 <- block@12) in block@12: // ternary_merge_L151
debug: Replacing trivial Phi node: let question_index#2: uint64 = φ(question_index#1 <- block@5, question_index#1 <- block@12) (question_index#2) with question_index#1
debug: Deleting Phi assignment: let question_index#2: uint64 = φ(question_index#1 <- block@5, question_index#1 <- block@12)
debug: Replaced trivial Phi node: let question_index#2: uint64 = φ(question_index#1 <- block@5, question_index#1 <- block@12) (question_index#2) with question_index#1 in current definition for 1 blocks
debug: Added question_index#1 to Phi node: let question_index#1: uint64 = φ(question_index#0 <- block@2, question_index#1 <- block@14) in block@14: // for_footer_L146
debug: Replacing trivial Phi node: let question_index#1: uint64 = φ(question_index#0 <- block@2, question_index#1 <- block@14) (question_index#1) with question_index#0
debug: Deleting Phi assignment: let question_index#1: uint64 = φ(question_index#0 <- block@2, question_index#1 <- block@14)
debug: Replaced trivial Phi node: let question_index#1: uint64 = φ(question_index#0 <- block@2, question_index#1 <- block@14) (question_index#1) with question_index#0 in current definition for 12 blocks
debug: Terminated block@15: // after_for_L146
debug: Sealing block@16: // for_footer_L144
debug: Sealing block@None: // after_for_L144
debug: Created Phi assignment: let range_item%28#2: uint64 = undefined while trying to resolve 'range_item%28' in block@3: // for_header_L146
debug: Added range_item%28#1 to Phi node: let range_item%28#2: uint64 = φ(range_item%28#1 <- block@2) in block@2: // for_body_L144
debug: Created Phi assignment: let range_item%28#3: uint64 = undefined while trying to resolve 'range_item%28' in block@13: // ternary_merge_L149
debug: Added range_item%28#2 to Phi node: let range_item%28#3: uint64 = φ(range_item%28#2 <- block@5) in block@5: // ternary_true_L149
debug: Created Phi assignment: let range_item%28#4: uint64 = undefined while trying to resolve 'range_item%28' in block@12: // ternary_merge_L151
debug: Added range_item%28#2 to Phi node: let range_item%28#4: uint64 = φ(range_item%28#2 <- block@7) in block@7: // ternary_true_L151
debug: Created Phi assignment: let range_item%28#5: uint64 = undefined while trying to resolve 'range_item%28' in block@11: // ternary_merge_L153
debug: Added range_item%28#2 to Phi node: let range_item%28#5: uint64 = φ(range_item%28#2 <- block@9) in block@9: // ternary_true_L153
debug: Added range_item%28#2 to Phi node: let range_item%28#5: uint64 = φ(range_item%28#2 <- block@9, range_item%28#2 <- block@10) in block@10: // ternary_false_L153
debug: Replacing trivial Phi node: let range_item%28#5: uint64 = φ(range_item%28#2 <- block@9, range_item%28#2 <- block@10) (range_item%28#5) with range_item%28#2
debug: Deleting Phi assignment: let range_item%28#5: uint64 = φ(range_item%28#2 <- block@9, range_item%28#2 <- block@10)
debug: Replaced trivial Phi node: let range_item%28#5: uint64 = φ(range_item%28#2 <- block@9, range_item%28#2 <- block@10) (range_item%28#5) with range_item%28#2 in current definition for 1 blocks
debug: Added range_item%28#2 to Phi node: let range_item%28#4: uint64 = φ(range_item%28#2 <- block@7, range_item%28#2 <- block@11) in block@11: // ternary_merge_L153
debug: Replacing trivial Phi node: let range_item%28#4: uint64 = φ(range_item%28#2 <- block@7, range_item%28#2 <- block@11) (range_item%28#4) with range_item%28#2
debug: Deleting Phi assignment: let range_item%28#4: uint64 = φ(range_item%28#2 <- block@7, range_item%28#2 <- block@11)
debug: Replaced trivial Phi node: let range_item%28#4: uint64 = φ(range_item%28#2 <- block@7, range_item%28#2 <- block@11) (range_item%28#4) with range_item%28#2 in current definition for 1 blocks
debug: Added range_item%28#2 to Phi node: let range_item%28#3: uint64 = φ(range_item%28#2 <- block@5, range_item%28#2 <- block@12) in block@12: // ternary_merge_L151
debug: Replacing trivial Phi node: let range_item%28#3: uint64 = φ(range_item%28#2 <- block@5, range_item%28#2 <- block@12) (range_item%28#3) with range_item%28#2
debug: Deleting Phi assignment: let range_item%28#3: uint64 = φ(range_item%28#2 <- block@5, range_item%28#2 <- block@12)
debug: Replaced trivial Phi node: let range_item%28#3: uint64 = φ(range_item%28#2 <- block@5, range_item%28#2 <- block@12) (range_item%28#3) with range_item%28#2 in current definition for 1 blocks
debug: Added range_item%28#2 to Phi node: let range_item%28#2: uint64 = φ(range_item%28#1 <- block@2, range_item%28#2 <- block@14) in block@14: // for_footer_L146
debug: Replacing trivial Phi node: let range_item%28#2: uint64 = φ(range_item%28#1 <- block@2, range_item%28#2 <- block@14) (range_item%28#2) with range_item%28#1
debug: Deleting Phi assignment: let range_item%28#2: uint64 = φ(range_item%28#1 <- block@2, range_item%28#2 <- block@14)
debug: Replaced trivial Phi node: let range_item%28#2: uint64 = φ(range_item%28#1 <- block@2, range_item%28#2 <- block@14) (range_item%28#2) with range_item%28#1 in current definition for 12 blocks
debug: Terminated block@16: // for_footer_L144
debug: Sealing block@1: // for_header_L144
debug: Added range_item%28#0 to Phi node: let range_item%28#1: uint64 = φ(range_item%28#0 <- block@0) in block@0: // L123
debug: Added range_item%28#6 to Phi node: let range_item%28#1: uint64 = φ(range_item%28#0 <- block@0, range_item%28#6 <- block@16) in block@16: // for_footer_L144
debug: Added current_index#0 to Phi node: let current_index#6: uint64 = φ(current_index#0 <- block@0) in block@0: // L123
debug: Added current_index#1 to Phi node: let current_index#6: uint64 = φ(current_index#0 <- block@0, current_index#1 <- block@16) in block@16: // for_footer_L144
debug: Added note#0 to Phi node: let note#3: bytes = φ(note#0 <- block@0) in block@0: // L123
debug: Added note#1 to Phi node: let note#3: bytes = φ(note#0 <- block@0, note#1 <- block@16) in block@16: // for_footer_L144
debug: Terminated block@17: // after_for_L144
debug: Sealing block@0: // L263
debug: Terminated block@0: // L263
debug: Sealing block@0: // L172
debug: Terminated block@0: // L172
debug: Sealing block@None: // ternary_true_L175
debug: Sealing block@None: // ternary_false_L175
debug: Terminated block@1: // ternary_true_L175
debug: Terminated block@2: // ternary_false_L175
debug: Sealing block@3: // ternary_merge_L175
debug: Created Phi assignment: let ternary_result%4#2: uint64 = undefined while trying to resolve 'ternary_result%4' in block@3: // ternary_merge_L175
debug: Added ternary_result%4#0 to Phi node: let ternary_result%4#2: uint64 = φ(ternary_result%4#0 <- block@1) in block@1: // ternary_true_L175
debug: Added ternary_result%4#1 to Phi node: let ternary_result%4#2: uint64 = φ(ternary_result%4#0 <- block@1, ternary_result%4#1 <- block@2) in block@2: // ternary_false_L175
debug: Terminated block@3: // ternary_merge_L175
debug: Sealing block@0: // L220
debug: Terminated block@0: // L220
debug: Sealing block@None: // and_contd_L222
debug: Terminated block@1: // and_contd_L222
debug: Sealing block@None: // and_contd_L222
debug: Terminated block@2: // and_contd_L222
debug: Sealing block@None: // and_contd_L224
debug: Terminated block@3: // and_contd_L224
debug: Sealing block@None: // bool_true_L222
debug: Sealing block@None: // bool_false_L222
debug: Terminated block@4: // bool_true_L222
debug: Terminated block@5: // bool_false_L222
debug: Sealing block@6: // bool_merge_L222
debug: Created Phi assignment: let and_result%11#2: uint64 = undefined while trying to resolve 'and_result%11' in block@6: // bool_merge_L222
debug: Added and_result%11#0 to Phi node: let and_result%11#2: uint64 = φ(and_result%11#0 <- block@4) in block@4: // bool_true_L222
debug: Added and_result%11#1 to Phi node: let and_result%11#2: uint64 = φ(and_result%11#0 <- block@4, and_result%11#1 <- block@5) in block@5: // bool_false_L222
debug: Terminated block@6: // bool_merge_L222
debug: Sealing block@0: // L253
debug: Terminated block@0: // L253
debug: Sealing block@0: // L228
debug: Terminated block@0: // L228
debug: Sealing block@0: // L181
debug: Terminated block@0: // L181
debug: Sealing block@None: // ternary_true_L190
debug: Sealing block@None: // ternary_false_L190
debug: Terminated block@1: // ternary_true_L190
debug: Terminated block@2: // ternary_false_L190
debug: Sealing block@3: // ternary_merge_L190
debug: Created Phi assignment: let ternary_result%2#2: uint64 = undefined while trying to resolve 'ternary_result%2' in block@3: // ternary_merge_L190
debug: Added ternary_result%2#0 to Phi node: let ternary_result%2#2: uint64 = φ(ternary_result%2#0 <- block@1) in block@1: // ternary_true_L190
debug: Added ternary_result%2#1 to Phi node: let ternary_result%2#2: uint64 = φ(ternary_result%2#0 <- block@1, ternary_result%2#1 <- block@2) in block@2: // ternary_false_L190
debug: Created Phi assignment: let answer_ids#1: bytes = undefined while trying to resolve 'answer_ids' in block@3: // ternary_merge_L190
debug: Added answer_ids#0 to Phi node: let answer_ids#1: bytes = φ(answer_ids#0 <- block@1) in block@1: // ternary_true_L190
debug: Added answer_ids#0 to Phi node: let answer_ids#1: bytes = φ(answer_ids#0 <- block@1, answer_ids#0 <- block@2) in block@2: // ternary_false_L190
debug: Replacing trivial Phi node: let answer_ids#1: bytes = φ(answer_ids#0 <- block@1, answer_ids#0 <- block@2) (answer_ids#1) with answer_ids#0
debug: Deleting Phi assignment: let answer_ids#1: bytes = φ(answer_ids#0 <- block@1, answer_ids#0 <- block@2)
debug: Replaced trivial Phi node: let answer_ids#1: bytes = φ(answer_ids#0 <- block@1, answer_ids#0 <- block@2) (answer_ids#1) with answer_ids#0 in current definition for 1 blocks
debug: Created Phi assignment: let fund_min_bal_req#1: uint64 = undefined while trying to resolve 'fund_min_bal_req' in block@3: // ternary_merge_L190
debug: Added fund_min_bal_req#0 to Phi node: let fund_min_bal_req#1: uint64 = φ(fund_min_bal_req#0 <- block@1) in block@1: // ternary_true_L190
debug: Added fund_min_bal_req#0 to Phi node: let fund_min_bal_req#1: uint64 = φ(fund_min_bal_req#0 <- block@1, fund_min_bal_req#0 <- block@2) in block@2: // ternary_false_L190
debug: Replacing trivial Phi node: let fund_min_bal_req#1: uint64 = φ(fund_min_bal_req#0 <- block@1, fund_min_bal_req#0 <- block@2) (fund_min_bal_req#1) with fund_min_bal_req#0
debug: Deleting Phi assignment: let fund_min_bal_req#1: uint64 = φ(fund_min_bal_req#0 <- block@1, fund_min_bal_req#0 <- block@2)
debug: Replaced trivial Phi node: let fund_min_bal_req#1: uint64 = φ(fund_min_bal_req#0 <- block@1, fund_min_bal_req#0 <- block@2) (fund_min_bal_req#1) with fund_min_bal_req#0 in current definition for 1 blocks
debug: Terminated block@3: // ternary_merge_L190
debug: Looking for 'range_item%23' in an unsealed block creating an incomplete Phi: block@4: // for_header_L207
debug: Created Phi assignment: let range_item%23#1: uint64 = undefined while trying to resolve 'range_item%23' in block@4: // for_header_L207
debug: Terminated block@4: // for_header_L207
debug: Sealing block@None: // for_body_L207
debug: Looking for 'answer_ids' in an unsealed block creating an incomplete Phi: block@4: // for_header_L207
debug: Created Phi assignment: let answer_ids#2: bytes = undefined while trying to resolve 'answer_ids' in block@4: // for_header_L207
debug: Looking for 'cumulative_offset' in an unsealed block creating an incomplete Phi: block@4: // for_header_L207
debug: Created Phi assignment: let cumulative_offset#1: uint64 = undefined while trying to resolve 'cumulative_offset' in block@4: // for_header_L207
debug: Terminated block@5: // for_body_L207
debug: Sealing block@6: // for_footer_L207
debug: Sealing block@None: // after_for_L207
debug: Terminated block@6: // for_footer_L207
debug: Sealing block@4: // for_header_L207
debug: Added range_item%23#0 to Phi node: let range_item%23#1: uint64 = φ(range_item%23#0 <- block@3) in block@3: // ternary_merge_L190
debug: Added range_item%23#2 to Phi node: let range_item%23#1: uint64 = φ(range_item%23#0 <- block@3, range_item%23#2 <- block@6) in block@6: // for_footer_L207
debug: Added answer_ids#0 to Phi node: let answer_ids#2: bytes = φ(answer_ids#0 <- block@3) in block@3: // ternary_merge_L190
debug: Added answer_ids#2 to Phi node: let answer_ids#2: bytes = φ(answer_ids#0 <- block@3, answer_ids#2 <- block@6) in block@6: // for_footer_L207
debug: Replacing trivial Phi node: let answer_ids#2: bytes = φ(answer_ids#0 <- block@3, answer_ids#2 <- block@6) (answer_ids#2) with answer_ids#0
debug: Deleting Phi assignment: let answer_ids#2: bytes = φ(answer_ids#0 <- block@3, answer_ids#2 <- block@6)
debug: Replaced trivial Phi node: let answer_ids#2: bytes = φ(answer_ids#0 <- block@3, answer_ids#2 <- block@6) (answer_ids#2) with answer_ids#0 in current definition for 3 blocks
debug: Added cumulative_offset#0 to Phi node: let cumulative_offset#1: uint64 = φ(cumulative_offset#0 <- block@3) in block@3: // ternary_merge_L190
debug: Added cumulative_offset#2 to Phi node: let cumulative_offset#1: uint64 = φ(cumulative_offset#0 <- block@3, cumulative_offset#2 <- block@6) in block@6: // for_footer_L207
debug: Terminated block@7: // after_for_L207
debug: Sealing block@0: // L270
debug: Terminated block@0: // L270
debug: Sealing block@0: // L52
debug: Terminated block@0: // L52
debug: Sealing block@0: // L51
debug: Terminated block@0: // L51
debug: Sealing block@None: // on_create_L52
debug: Terminated block@1: // on_create_L52
debug: Sealing block@2: // entrypoint_L52
debug: Terminated block@2: // entrypoint_L52
debug: Sealing block@None: // abi_routing_L51
debug: Sealing block@None: // else_body_L51
debug: Terminated block@3: // abi_routing_L51
debug: Sealing block@None: // switch_case_default_L51
debug: Sealing block@None: // create_route_L72
debug: Sealing block@None: // bootstrap_route_L98
debug: Sealing block@None: // close_route_L122
debug: Sealing block@None: // get_preconditions_route_L171
debug: Sealing block@None: // vote_route_L180
debug: Terminated block@4: // create_route_L72
debug: Terminated block@5: // bootstrap_route_L98
debug: Terminated block@6: // close_route_L122
debug: Terminated block@7: // get_preconditions_route_L171
debug: Terminated block@8: // vote_route_L180
debug: Terminated block@9: // switch_case_default_L51
debug: Sealing block@10: // switch_case_next_L51
debug: Terminated block@10: // switch_case_next_L51
debug: Sealing block@11: // after_if_else_L51
debug: Terminated block@11: // after_if_else_L51
debug: Sealing block@0: // L69
debug: Terminated block@0: // L69
debug: Output IR to voting/out/voting_VotingRoundApp.ssa.ir
info: Optimizing examples.voting.voting.VotingRoundApp at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%21#0, maybe_value%18#0
debug: Replacing {maybe_value%18#0} with awst_tmp%21#0 made 1 modifications
debug: Found equivalence set: tmp%23#0, maybe_value_did_exist%19#0
debug: Replacing {maybe_value_did_exist%19#0} with tmp%23#0 made 1 modifications
debug: Found equivalence set: awst_tmp%21#1, maybe_value%36#0
debug: Replacing {maybe_value%36#0} with awst_tmp%21#1 made 1 modifications
debug: Found equivalence set: tmp%40#0, maybe_value_did_exist%37#0
debug: Replacing {maybe_value_did_exist%37#0} with tmp%40#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@10: // switch_case_next_L51 with block@9: // switch_case_default_L51 in block@11: // after_if_else_L51
debug: Merged linear block@10: // switch_case_next_L51 into block@9: // switch_case_default_L51
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@9: // switch_case_default_L51
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%4#0, ternary_result%6#1
debug: Replacing {ternary_result%6#1} with awst_tmp%4#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L90 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.store_option_counts
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.calculate_total_options_count
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Folded item_index_internal%2#1 * 1u to item_index_internal%2#1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: item_index_internal%2#1, item_index%4#0
debug: Replacing {item_index%4#0} with item_index_internal%2#1 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L247 with block@2: // for_body_L247 in block@1: // for_header_L247
debug: Merged linear block@3: // for_footer_L247 into block@2: // for_body_L247
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.bootstrap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable bytes_per_option#0
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.close
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Folded question_index#0 * 1u to question_index#0
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: range_item%28#1, question_index#0, item_index%35#0
debug: Replacing {range_item%28#1, item_index%35#0} with question_index#0 made 4 modifications
debug: Found equivalence set: range_item%37#1, option_index#0
debug: Replacing {range_item%37#1} with option_index#0 made 3 modifications
debug: Found equivalence set: tmp%44#0, tmp%45#0
debug: Replacing {tmp%45#0} with tmp%44#0 made 1 modifications
debug: Found equivalence set: ternary_result%43#2, ternary_result%40#1
debug: Replacing {ternary_result%40#1} with ternary_result%43#2 made 1 modifications
debug: Found equivalence set: ternary_result%51#2, ternary_result%43#1
debug: Replacing {ternary_result%43#1} with ternary_result%51#2 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@14: // for_footer_L146 with block@13: // ternary_merge_L149 in block@3: // for_header_L146
debug: Merged linear block@14: // for_footer_L146 into block@13: // ternary_merge_L149
debug: Replaced predecessor block@16: // for_footer_L144 with block@15: // after_for_L146 in block@1: // for_header_L144
debug: Merged linear block@16: // for_footer_L144 into block@15: // after_for_L146
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine puyapy.ensure_budget
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Switch switch fee_source#0 {0u => block@3, 1u => block@4, * => block@5} simplified to goto [block@3, block@4, ...block@5][fee_source#0]
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@5: // switch_case_default_L26
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.get_vote_from_box
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, box_data#0
debug: Replacing {tuple_assignment%0#0} with box_data#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%1#0, exists#0
debug: Replacing {tuple_assignment%1#0} with exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_preconditions
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%2#0, ternary_result%4#1
debug: Replacing {ternary_result%4#1} with awst_tmp%2#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%13#0
debug: Removing unused variable encoded_tuple_buffer%14#0
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L175 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.voting_open
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.already_voted
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%1#0, votes#0
debug: Replacing {tuple_assignment%1#0} with votes#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%2#0, exists#0
debug: Replacing {tuple_assignment%2#0} with exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.vote
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Folded 1u * tmp%13#0 to tmp%13#0
debug: Folded question_index#0 * 1u to question_index#0
debug: Folded question_index#0 * 1u to question_index#0
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%0#0, ternary_result%2#1
debug: Replacing {ternary_result%2#1} with awst_tmp%0#0 made 1 modifications
debug: Found equivalence set: tmp%13#0, tmp%14#0
debug: Replacing {tmp%14#0} with tmp%13#0 made 1 modifications
debug: Found equivalence set: range_item%23#1, question_index#0, item_index%28#0, item_index%34#0
debug: Replacing {range_item%23#1, item_index%28#0, item_index%34#0} with question_index#0 made 5 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@6: // for_footer_L207 with block@5: // for_body_L207 in block@4: // for_header_L207
debug: Merged linear block@6: // for_footer_L207 into block@5: // for_body_L207
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L190 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.increment_vote_in_box
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, box_data#0
debug: Replacing {tuple_assignment%0#0} with box_data#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%1#0, exists#0
debug: Replacing {tuple_assignment%1#0} with exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to voting/out/voting_VotingRoundApp.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.create
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L90 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.store_option_counts
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.calculate_total_options_count
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.bootstrap
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.close
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine puyapy.ensure_budget
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.get_vote_from_box
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_preconditions
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%1#0, encoded_tuple_buffer%14#1
debug: Replacing {encoded_tuple_buffer%14#1} with val_as_bytes%1#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L175 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.voting_open
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.already_voted
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.vote
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L190 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.increment_vote_in_box
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to voting/out/voting_VotingRoundApp.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.create
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L90 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.store_option_counts
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.calculate_total_options_count
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.bootstrap
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.close
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine puyapy.ensure_budget
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.get_vote_from_box
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.get_preconditions
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L175 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.voting_open
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.already_voted
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.vote
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@2: // ternary_false_L190 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.increment_vote_in_box
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.voting.voting.VotingRoundApp.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: No optimizations performed in pass 3, ending loop
debug: Output IR to voting/out/voting_VotingRoundApp.cssa.ir
debug: Removing Phis from examples.voting.voting.VotingRoundApp.approval_program
debug: Removing Phis from examples.voting.voting.VotingRoundApp.create
debug: Removing Phis from examples.voting.voting.VotingRoundApp.store_option_counts
debug: Removing Phis from examples.voting.voting.VotingRoundApp.calculate_total_options_count
debug: Removing Phis from examples.voting.voting.VotingRoundApp.bootstrap
debug: Removing Phis from examples.voting.voting.VotingRoundApp.close
debug: Removing Phis from puyapy.ensure_budget
debug: Removing Phis from examples.voting.voting.get_vote_from_box
debug: Removing Phis from examples.voting.voting.VotingRoundApp.get_preconditions
debug: Removing Phis from examples.voting.voting.VotingRoundApp.voting_open
debug: Removing Phis from examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Removing Phis from examples.voting.voting.VotingRoundApp.already_voted
debug: Removing Phis from examples.voting.voting.VotingRoundApp.vote
debug: Removing Phis from examples.voting.voting.increment_vote_in_box
debug: Removing Phis from examples.voting.voting.VotingRoundApp.__init__
debug: Removing Phis from examples.voting.voting.VotingRoundApp.clear_state_program
debug: Output IR to voting/out/voting_VotingRoundApp.post_ssa.ir
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.approval_program
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.create
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.store_option_counts
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.calculate_total_options_count
debug: loc: {total#5=None, item_index_internal%2#5=None, total#0=total#0, item_index_internal%2#0=item_index_internal%2#0}
debug: pred: {total#5=total#0, item_index_internal%2#5=item_index_internal%2#0}
debug: ready: total#5, item_index_internal%2#5
debug: to_do: total#5, item_index_internal%2#5
debug: * avail item_index_internal%2#5
debug: * avail item_index_internal%2#0
debug: * avail total#5
debug: * avail total#0
debug: * to_do item_index_internal%2#5
debug: * to_do total#5
debug: loc: {total#1=None, item_index_internal%2#1=None, total#5=total#5, item_index_internal%2#5=item_index_internal%2#5}
debug: pred: {total#1=total#5, item_index_internal%2#1=item_index_internal%2#5}
debug: ready: total#1, item_index_internal%2#1
debug: to_do: total#1, item_index_internal%2#1
debug: * avail item_index_internal%2#1
debug: * avail item_index_internal%2#5
debug: * avail total#1
debug: * avail total#5
debug: * to_do item_index_internal%2#1
debug: * to_do total#1
debug: loc: {total#5=None, item_index_internal%2#5=None, total#2=total#2, item_index_internal%2#2=item_index_internal%2#2}
debug: pred: {total#5=total#2, item_index_internal%2#5=item_index_internal%2#2}
debug: ready: total#5, item_index_internal%2#5
debug: to_do: total#5, item_index_internal%2#5
debug: * avail item_index_internal%2#5
debug: * avail item_index_internal%2#2
debug: * avail total#5
debug: * avail total#2
debug: * to_do item_index_internal%2#5
debug: * to_do total#5
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.bootstrap
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.close
debug: loc: {note#7=None, current_index#9=None, question_index#1=None, note#0=note#0, current_index#0=current_index#0, range_item%28#0=range_item%28#0}
debug: pred: {note#7=note#0, current_index#9=current_index#0, question_index#1=range_item%28#0}
debug: ready: note#7, current_index#9, question_index#1
debug: to_do: note#7, current_index#9, question_index#1
debug: * avail question_index#1
debug: * avail range_item%28#0
debug: * avail current_index#9
debug: * avail current_index#0
debug: * avail note#7
debug: * avail note#0
debug: * to_do question_index#1
debug: * to_do current_index#9
debug: * to_do note#7
debug: loc: {note#3=None, current_index#6=None, question_index#0=None, note#7=note#7, current_index#9=current_index#9, question_index#1=question_index#1}
debug: pred: {note#3=note#7, current_index#6=current_index#9, question_index#0=question_index#1}
debug: ready: note#3, current_index#6, question_index#0
debug: to_do: note#3, current_index#6, question_index#0
debug: * avail question_index#0
debug: * avail question_index#1
debug: * avail current_index#6
debug: * avail current_index#9
debug: * avail note#3
debug: * avail note#7
debug: * to_do question_index#0
debug: * to_do current_index#6
debug: * to_do note#3
debug: loc: {note#10=None, current_index#12=None, option_index#1=None, note#3=note#3, current_index#6=current_index#6, range_item%37#0=range_item%37#0}
debug: pred: {note#10=note#3, current_index#12=current_index#6, option_index#1=range_item%37#0}
debug: ready: note#10, current_index#12, option_index#1
debug: to_do: note#10, current_index#12, option_index#1
debug: * avail option_index#1
debug: * avail range_item%37#0
debug: * avail current_index#12
debug: * avail current_index#6
debug: * avail note#10
debug: * avail note#3
debug: * to_do option_index#1
debug: * to_do current_index#12
debug: * to_do note#10
debug: loc: {note#1=None, current_index#1=None, option_index#0=None, note#10=note#10, current_index#12=current_index#12, option_index#1=option_index#1}
debug: pred: {note#1=note#10, current_index#1=current_index#12, option_index#0=option_index#1}
debug: ready: note#1, current_index#1, option_index#0
debug: to_do: note#1, current_index#1, option_index#0
debug: * avail option_index#0
debug: * avail option_index#1
debug: * avail current_index#1
debug: * avail current_index#12
debug: * avail note#1
debug: * avail note#10
debug: * to_do option_index#0
debug: * to_do current_index#1
debug: * to_do note#1
debug: loc: {note#10=None, current_index#12=None, option_index#1=None, note#2=note#2, current_index#5=current_index#5, range_item%37#5=range_item%37#5}
debug: pred: {note#10=note#2, current_index#12=current_index#5, option_index#1=range_item%37#5}
debug: ready: note#10, current_index#12, option_index#1
debug: to_do: note#10, current_index#12, option_index#1
debug: * avail option_index#1
debug: * avail range_item%37#5
debug: * avail current_index#12
debug: * avail current_index#5
debug: * avail note#10
debug: * avail note#2
debug: * to_do option_index#1
debug: * to_do current_index#12
debug: * to_do note#10
debug: loc: {note#7=None, current_index#9=None, question_index#1=None, note#1=note#1, current_index#1=current_index#1, range_item%28#6=range_item%28#6}
debug: pred: {note#7=note#1, current_index#9=current_index#1, question_index#1=range_item%28#6}
debug: ready: note#7, current_index#9, question_index#1
debug: to_do: note#7, current_index#9, question_index#1
debug: * avail question_index#1
debug: * avail range_item%28#6
debug: * avail current_index#9
debug: * avail current_index#1
debug: * avail note#7
debug: * avail note#1
debug: * to_do question_index#1
debug: * to_do current_index#9
debug: * to_do note#7
debug: Sequentializing parallel copies in puyapy.ensure_budget
debug: Sequentializing parallel copies in examples.voting.voting.get_vote_from_box
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.get_preconditions
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.voting_open
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.allowed_to_vote
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.already_voted
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.vote
debug: loc: {cumulative_offset#5=None, question_index#1=None, cumulative_offset#0=cumulative_offset#0, range_item%23#0=range_item%23#0}
debug: pred: {cumulative_offset#5=cumulative_offset#0, question_index#1=range_item%23#0}
debug: ready: cumulative_offset#5, question_index#1
debug: to_do: cumulative_offset#5, question_index#1
debug: * avail question_index#1
debug: * avail range_item%23#0
debug: * avail cumulative_offset#5
debug: * avail cumulative_offset#0
debug: * to_do question_index#1
debug: * to_do cumulative_offset#5
debug: loc: {cumulative_offset#1=None, question_index#0=None, cumulative_offset#5=cumulative_offset#5, question_index#1=question_index#1}
debug: pred: {cumulative_offset#1=cumulative_offset#5, question_index#0=question_index#1}
debug: ready: cumulative_offset#1, question_index#0
debug: to_do: cumulative_offset#1, question_index#0
debug: * avail question_index#0
debug: * avail question_index#1
debug: * avail cumulative_offset#1
debug: * avail cumulative_offset#5
debug: * to_do question_index#0
debug: * to_do cumulative_offset#1
debug: loc: {cumulative_offset#5=None, question_index#1=None, cumulative_offset#2=cumulative_offset#2, range_item%23#2=range_item%23#2}
debug: pred: {cumulative_offset#5=cumulative_offset#2, question_index#1=range_item%23#2}
debug: ready: cumulative_offset#5, question_index#1
debug: to_do: cumulative_offset#5, question_index#1
debug: * avail question_index#1
debug: * avail range_item%23#2
debug: * avail cumulative_offset#5
debug: * avail cumulative_offset#2
debug: * to_do question_index#1
debug: * to_do cumulative_offset#5
debug: Sequentializing parallel copies in examples.voting.voting.increment_vote_in_box
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.__init__
debug: Sequentializing parallel copies in examples.voting.voting.VotingRoundApp.clear_state_program
debug: Output IR to voting/out/voting_VotingRoundApp.parallel_copies.ir
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.approval_program using strategy RootOperandGrouping
debug: Coalescing awst_tmp%21#0 with [awst_tmp%21#1]
debug: Coalescing resulted in 3 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.create using strategy RootOperandGrouping
debug: Coalescing ternary_result%6#0 with [ternary_result%6#4, ternary_result%6#2]
debug: Coalescing resulted in 5 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.store_option_counts using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.calculate_total_options_count using strategy RootOperandGrouping
debug: Coalescing total#0 with [total#5, total#1, total#2]
debug: Coalescing item_index_internal%2#0 with [item_index_internal%2#5, item_index_internal%2#1, item_index_internal%2#2]
debug: Coalescing resulted in 17 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.bootstrap using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.close using strategy RootOperandGrouping
debug: Coalescing note#0 with [note#7, note#3, note#10, note#1, note#2, note#4]
debug: Coalescing current_index#0 with [current_index#9, current_index#6, current_index#12, current_index#1, current_index#5]
debug: Coalescing range_item%28#0 with [range_item%28#6]
debug: Coalescing question_index#0 with [question_index#1]
debug: Coalescing range_item%37#0 with [range_item%37#5]
debug: Coalescing option_index#0 with [option_index#1]
debug: Coalescing ternary_result%40#0 with [ternary_result%40#4, ternary_result%40#2]
debug: Coalescing ternary_result%43#0 with [ternary_result%43#4, ternary_result%43#2]
debug: Coalescing ternary_result%51#0 with [ternary_result%51#5, ternary_result%51#1, ternary_result%51#2]
debug: Coalescing resulted in 57 replacement/s
debug: Coalescing local variables in puyapy.ensure_budget using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.get_vote_from_box using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.get_preconditions using strategy RootOperandGrouping
debug: Coalescing ternary_result%4#0 with [ternary_result%4#4, ternary_result%4#2]
debug: Coalescing encoded_tuple_buffer%14#2 with [encoded_tuple_buffer%14#3, encoded_tuple_buffer%14#4]
debug: Coalescing resulted in 9 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.voting_open using strategy RootOperandGrouping
debug: Coalescing and_result%11#0 with [and_result%11#5, and_result%11#1, and_result%11#2]
debug: Coalescing resulted in 7 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.allowed_to_vote using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.already_voted using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.vote using strategy RootOperandGrouping
debug: Coalescing ternary_result%2#0 with [ternary_result%2#4, ternary_result%2#2]
debug: Coalescing cumulative_offset#0 with [cumulative_offset#5, cumulative_offset#1, cumulative_offset#2]
debug: Coalescing range_item%23#0 with [range_item%23#2]
debug: Coalescing question_index#0 with [question_index#1]
debug: Coalescing resulted in 18 replacement/s
debug: Coalescing local variables in examples.voting.voting.increment_vote_in_box using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.voting.voting.VotingRoundApp.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Output IR to voting/out/voting_VotingRoundApp.final.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[3]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_abi_routing@3.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_abi_routing@3.ops[8]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[14]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[16]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[33]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[42]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[31]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[42]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[29]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[42]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[27]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[42]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[25]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[42]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[23]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[42]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[21]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[42]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[19]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[42]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[1]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[3]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[5]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[7]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[10]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[12]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[15]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[17]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[20]: 'store awst_tmp%21#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[22]: 'load awst_tmp%21#0' with 'load awst_tmp%21#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[24]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[26]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[29]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[31]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted main_bootstrap_route@5.ops[23]: 'store awst_tmp%21#0 to l-stack (copy)'
debug: Replaced main_bootstrap_route@5.ops[34]: 'load awst_tmp%21#0' with 'load awst_tmp%21#0 from l-stack (no copy)'
debug: Inserted main_close_route@6.ops[1]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced main_close_route@6.ops[3]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted main_close_route@6.ops[5]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced main_close_route@6.ops[7]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted main_close_route@6.ops[10]: 'store tmp%26#0 to l-stack (copy)'
debug: Replaced main_close_route@6.ops[12]: 'load tmp%26#0' with 'load tmp%26#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[1]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[3]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[5]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[7]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[10]: 'store tmp%29#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[12]: 'load tmp%29#0' with 'load tmp%29#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[15]: 'store tmp%30#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[17]: 'load tmp%30#0' with 'load tmp%30#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[23]: 'store tmp%32#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[25]: 'load tmp%32#0' with 'load tmp%32#0 from l-stack (no copy)'
debug: Inserted main_get_preconditions_route@7.ops[19]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced main_get_preconditions_route@7.ops[22]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[1]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[3]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[5]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[7]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[10]: 'store tmp%35#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[12]: 'load tmp%35#0' with 'load tmp%35#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[15]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[17]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[20]: 'store awst_tmp%21#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[22]: 'load awst_tmp%21#0' with 'load awst_tmp%21#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[24]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[26]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[29]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[31]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[36]: 'store tmp%42#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[40]: 'load tmp%42#0' with 'load tmp%42#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[34]: 'store tmp%41#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[40]: 'load tmp%41#0' with 'load tmp%41#0 from l-stack (no copy)'
debug: Inserted main_vote_route@8.ops[23]: 'store awst_tmp%21#0 to l-stack (copy)'
debug: Replaced main_vote_route@8.ops[40]: 'load awst_tmp%21#0' with 'load awst_tmp%21#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.approval_program
debug: Simplified uncover 7; uncover 7; uncover 7; uncover 7; uncover 7; uncover 7; uncover 7; uncover 7 to 
debug: Simplified uncover 2; uncover 2; uncover 2 to 
debug: Inserted create_block@0.ops[9]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[11]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[18]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[20]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[34]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[36]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[5]: 'store et#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[8]: 'load et#0' with 'load et#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[15]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[18]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[26]: 'store new_state_value%3#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[29]: 'load new_state_value%3#0' with 'load new_state_value%3#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[33]: 'store awst_tmp%4#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[36]: 'load awst_tmp%4#0' with 'load awst_tmp%4#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[2]: 'store st#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[8]: 'load st#0' with 'load st#0 from l-stack (no copy)'
debug: Inserted create_block@0.ops[10]: 'store et#0 to l-stack (copy)'
debug: Replaced create_block@0.ops[19]: 'load et#0' with 'load et#0 from l-stack (no copy)'
debug: Inserted create_ternary_merge@3.ops[7]: 'store new_state_value%8#0 to l-stack (copy)'
debug: Replaced create_ternary_merge@3.ops[10]: 'load new_state_value%8#0' with 'load new_state_value%8#0 from l-stack (no copy)'
debug: Inserted create_ternary_merge@3.ops[14]: 'store new_state_value%9#0 to l-stack (copy)'
debug: Replaced create_ternary_merge@3.ops[17]: 'load new_state_value%9#0' with 'load new_state_value%9#0 from l-stack (no copy)'
debug: Inserted create_ternary_merge@3.ops[27]: 'store new_state_value%10#0 to l-stack (copy)'
debug: Replaced create_ternary_merge@3.ops[30]: 'load new_state_value%10#0' with 'load new_state_value%10#0 from l-stack (no copy)'
debug: Inserted create_ternary_merge@3.ops[34]: 'store new_state_value%11#0 to l-stack (copy)'
debug: Replaced create_ternary_merge@3.ops[37]: 'load new_state_value%11#0' with 'load new_state_value%11#0 from l-stack (no copy)'
debug: Inserted create_ternary_merge@3.ops[2]: 'store base_length%7#0 to l-stack (copy)'
debug: Replaced create_ternary_merge@3.ops[6]: 'load base_length%7#0' with 'load base_length%7#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.create
debug: Allocated 1 variable/s to x-stack: ternary_result%6#0
debug: shared x-stack for create_ternary_true@1 -> create_ternary_merge@3: ternary_result%6#0
debug: shared x-stack for create_ternary_false@2 -> create_ternary_merge@3: ternary_result%6#0
debug: examples.voting.voting.VotingRoundApp.create f-stack entry: []
debug: examples.voting.voting.VotingRoundApp.create f-stack on first store: ['st#0', 'et#0', 'awst_tmp%4#0']
debug: Simplified uncover 2; uncover 2 to cover 2
debug: Inserted store_option_counts_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[10]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[12]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[15]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[17]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[24]: 'store total_options#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[26]: 'load total_options#0' with 'load total_options#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[29]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[31]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted store_option_counts_block@0.ops[27]: 'store total_options#0 to l-stack (copy)'
debug: Replaced store_option_counts_block@0.ops[35]: 'load total_options#0' with 'load total_options#0 from l-stack (no copy)'
debug: Inserted calculate_total_options_count_for_header@1.ops[3]: 'store continue_looping%3#0 to l-stack (copy)'
debug: Replaced calculate_total_options_count_for_header@1.ops[5]: 'load continue_looping%3#0' with 'load continue_looping%3#0 from l-stack (no copy)'
debug: Inserted calculate_total_options_count_for_body@2.ops[4]: 'store item#0 to l-stack (copy)'
debug: Replaced calculate_total_options_count_for_body@2.ops[6]: 'load item#0' with 'load item#0 from l-stack (no copy)'
debug: Inserted calculate_total_options_count_for_body@2.ops[8]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced calculate_total_options_count_for_body@2.ops[11]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted calculate_total_options_count_for_body@2.ops[2]: 'store item_index_internal%2#0 to l-stack (copy)'
debug: Replaced calculate_total_options_count_for_body@2.ops[15]: 'load item_index_internal%2#0' with 'load item_index_internal%2#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.calculate_total_options_count
debug: examples.voting.voting.VotingRoundApp.calculate_total_options_count f-stack entry: []
debug: examples.voting.voting.VotingRoundApp.calculate_total_options_count f-stack on first store: ['total#0', 'array_length%0#0', 'array_value%1#0', 'item_index_internal%2#0']
debug: Simplified frame_dig 0; frame_bury 0; retsub to retsub
debug: Inserted bootstrap_block@0.ops[9]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[11]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[26]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[28]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[48]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[50]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[54]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[56]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[60]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[62]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[65]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[67]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[83]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[85]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[3]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[6]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[20]: 'store app_global_get_ex_did_exist%4#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[23]: 'load app_global_get_ex_did_exist%4#0' with 'load app_global_get_ex_did_exist%4#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[33]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[36]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[38]: 'store box_cost#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[41]: 'load box_cost#0' with 'load box_cost#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[48]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[51]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[77]: 'store app_global_get_ex_did_exist%14#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[80]: 'load app_global_get_ex_did_exist%14#0' with 'load app_global_get_ex_did_exist%14#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[85]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[88]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[5]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[9]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[23]: 'store app_global_get_ex_value%3#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[27]: 'load app_global_get_ex_value%3#0' with 'load app_global_get_ex_value%3#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[48]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[53]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[82]: 'store app_global_get_ex_value%13#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[86]: 'load app_global_get_ex_value%13#0' with 'load app_global_get_ex_value%13#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[61]: 'store min_balance_req#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[72]: 'load min_balance_req#0' with 'load min_balance_req#0 from l-stack (no copy)'
debug: Inserted bootstrap_block@0.ops[45]: 'store min_balance_req#0 to l-stack (copy)'
debug: Replaced bootstrap_block@0.ops[61]: 'load min_balance_req#0' with 'load min_balance_req#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[12]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[14]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[31]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[33]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[47]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[49]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[63]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[65]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[82]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[84]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[101]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[103]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[121]: 'store range_item%28#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[123]: 'load range_item%28#0' with 'load range_item%28#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[6]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[9]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[18]: 'store new_state_value%3#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[21]: 'load new_state_value%3#0' with 'load new_state_value%3#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[26]: 'store app_global_get_ex_did_exist%5#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[29]: 'load app_global_get_ex_did_exist%5#0' with 'load app_global_get_ex_did_exist%5#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[43]: 'store app_global_get_ex_did_exist%9#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[46]: 'load app_global_get_ex_did_exist%9#0' with 'load app_global_get_ex_did_exist%9#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[60]: 'store app_global_get_ex_did_exist%13#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[63]: 'load app_global_get_ex_did_exist%13#0' with 'load app_global_get_ex_did_exist%13#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[77]: 'store app_global_get_ex_did_exist%17#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[80]: 'load app_global_get_ex_did_exist%17#0' with 'load app_global_get_ex_did_exist%17#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[84]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[87]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[98]: 'store app_global_get_ex_did_exist%22#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[101]: 'load app_global_get_ex_did_exist%22#0' with 'load app_global_get_ex_did_exist%22#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[105]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[108]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[121]: 'store app_global_get_ex_did_exist%26#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[124]: 'load app_global_get_ex_did_exist%26#0' with 'load app_global_get_ex_did_exist%26#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[8]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[12]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[80]: 'store app_global_get_ex_value%16#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[84]: 'load app_global_get_ex_value%16#0' with 'load app_global_get_ex_value%16#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[102]: 'store app_global_get_ex_value%21#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[106]: 'load app_global_get_ex_value%21#0' with 'load app_global_get_ex_value%21#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[126]: 'store app_global_get_ex_value%25#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[130]: 'load app_global_get_ex_value%25#0' with 'load app_global_get_ex_value%25#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[29]: 'store app_global_get_ex_value%4#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[34]: 'load app_global_get_ex_value%4#0' with 'load app_global_get_ex_value%4#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[47]: 'store app_global_get_ex_value%8#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[52]: 'load app_global_get_ex_value%8#0' with 'load app_global_get_ex_value%8#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[65]: 'store app_global_get_ex_value%12#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[70]: 'load app_global_get_ex_value%12#0' with 'load app_global_get_ex_value%12#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[41]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[52]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[60]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[71]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[79]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[94]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted close_block@0.ops[102]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced close_block@0.ops[117]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted close_for_header@1.ops[3]: 'store continue_looping%29#0 to l-stack (copy)'
debug: Replaced close_for_header@1.ops[5]: 'load continue_looping%29#0' with 'load continue_looping%29#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[14]: 'store index_is_in_bounds%33#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[16]: 'load index_is_in_bounds%33#0' with 'load index_is_in_bounds%33#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[20]: 'store array_data_sans_header%34#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[22]: 'load array_data_sans_header%34#0' with 'load array_data_sans_header%34#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[26]: 'store tmp%36#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[28]: 'load tmp%36#0' with 'load tmp%36#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[32]: 'store range_item%37#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[34]: 'load range_item%37#0' with 'load range_item%37#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[3]: 'store app_global_get_ex_did_exist%31#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[6]: 'load app_global_get_ex_did_exist%31#0' with 'load app_global_get_ex_did_exist%31#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[11]: 'store array_length%32#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[14]: 'load array_length%32#0' with 'load array_length%32#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[5]: 'store app_global_get_ex_value%30#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[9]: 'load app_global_get_ex_value%30#0' with 'load app_global_get_ex_value%30#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[10]: 'store app_global_get_ex_value%30#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[22]: 'load app_global_get_ex_value%30#0' with 'load app_global_get_ex_value%30#0 from l-stack (no copy)'
debug: Inserted close_for_body@2.ops[16]: 'store question_index#0 to l-stack (copy)'
debug: Replaced close_for_body@2.ops[28]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted close_for_header@3.ops[3]: 'store continue_looping%38#0 to l-stack (copy)'
debug: Replaced close_for_header@3.ops[5]: 'load continue_looping%38#0' with 'load continue_looping%38#0 from l-stack (no copy)'
debug: Inserted close_for_body@4.ops[5]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced close_for_body@4.ops[7]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted close_ternary_false@6.ops[7]: 'store tmp%42#0 to l-stack (copy)'
debug: Replaced close_ternary_false@6.ops[9]: 'load tmp%42#0' with 'load tmp%42#0 from l-stack (no copy)'
debug: Inserted close_ternary_false@6.ops[3]: 'store tmp%41#0 to l-stack (copy)'
debug: Replaced close_ternary_false@6.ops[6]: 'load tmp%41#0' with 'load tmp%41#0 from l-stack (no copy)'
debug: Inserted close_ternary_true@7.ops[2]: 'store tmp%44#0 to l-stack (copy)'
debug: Replaced close_ternary_true@7.ops[4]: 'load tmp%44#0' with 'load tmp%44#0 from l-stack (no copy)'
debug: Inserted close_ternary_false@8.ops[10]: 'store tmp%48#0 to l-stack (copy)'
debug: Replaced close_ternary_false@8.ops[12]: 'load tmp%48#0' with 'load tmp%48#0 from l-stack (no copy)'
debug: Inserted close_ternary_false@8.ops[19]: 'store tmp%50#0 to l-stack (copy)'
debug: Replaced close_ternary_false@8.ops[21]: 'load tmp%50#0' with 'load tmp%50#0 from l-stack (no copy)'
debug: Inserted close_ternary_false@8.ops[3]: 'store app_global_get_ex_did_exist%47#0 to l-stack (copy)'
debug: Replaced close_ternary_false@8.ops[6]: 'load app_global_get_ex_did_exist%47#0' with 'load app_global_get_ex_did_exist%47#0 from l-stack (no copy)'
debug: Inserted close_ternary_false@8.ops[16]: 'store tmp%49#0 to l-stack (copy)'
debug: Replaced close_ternary_false@8.ops[19]: 'load tmp%49#0' with 'load tmp%49#0 from l-stack (no copy)'
debug: Inserted close_ternary_false@8.ops[5]: 'store app_global_get_ex_value%46#0 to l-stack (copy)'
debug: Replaced close_ternary_false@8.ops[9]: 'load app_global_get_ex_value%46#0' with 'load app_global_get_ex_value%46#0 from l-stack (no copy)'
debug: Inserted close_ternary_merge@13.ops[11]: 'store range_item%37#0 to l-stack (copy)'
debug: Replaced close_ternary_merge@13.ops[13]: 'load range_item%37#0' with 'load range_item%37#0 from l-stack (no copy)'
debug: Inserted close_after_for@15.ops[3]: 'store range_item%28#0 to l-stack (copy)'
debug: Replaced close_after_for@15.ops[5]: 'load range_item%28#0' with 'load range_item%28#0 from l-stack (no copy)'
debug: Inserted close_after_for@17.ops[23]: 'store tmp%54#0 to l-stack (copy)'
debug: Replaced close_after_for@17.ops[25]: 'load tmp%54#0' with 'load tmp%54#0 from l-stack (no copy)'
debug: Inserted close_after_for@17.ops[16]: 'store app_global_get_ex_did_exist%53#0 to l-stack (copy)'
debug: Replaced close_after_for@17.ops[19]: 'load app_global_get_ex_did_exist%53#0' with 'load app_global_get_ex_did_exist%53#0 from l-stack (no copy)'
debug: Inserted close_after_for@17.ops[33]: 'store app_global_get_ex_did_exist%56#0 to l-stack (copy)'
debug: Replaced close_after_for@17.ops[36]: 'load app_global_get_ex_did_exist%56#0' with 'load app_global_get_ex_did_exist%56#0 from l-stack (no copy)'
debug: Inserted close_after_for@17.ops[44]: 'store new_state_value%57#0 to l-stack (copy)'
debug: Replaced close_after_for@17.ops[47]: 'load new_state_value%57#0' with 'load new_state_value%57#0 from l-stack (no copy)'
debug: Inserted close_after_for@17.ops[35]: 'store app_global_get_ex_value%55#0 to l-stack (copy)'
debug: Replaced close_after_for@17.ops[39]: 'load app_global_get_ex_value%55#0' with 'load app_global_get_ex_value%55#0 from l-stack (no copy)'
debug: Inserted close_after_for@17.ops[18]: 'store app_global_get_ex_value%52#0 to l-stack (copy)'
debug: Replaced close_after_for@17.ops[23]: 'load app_global_get_ex_value%52#0' with 'load app_global_get_ex_value%52#0 from l-stack (no copy)'
debug: Inserted close_after_for@17.ops[3]: 'store note#0 to l-stack (copy)'
debug: Replaced close_after_for@17.ops[43]: 'load note#0' with 'load note#0 from l-stack (no copy)'
debug: Found 10 edge set/s for examples.voting.voting.VotingRoundApp.close
debug: Allocated 3 variable/s to x-stack: ternary_result%40#0, ternary_result%43#0, ternary_result%51#0
debug: shared x-stack for close_ternary_true@5 -> close_ternary_merge@13: ternary_result%40#0
debug: shared x-stack for close_ternary_merge@12 -> close_ternary_merge@13: ternary_result%40#0
debug: shared x-stack for close_ternary_true@7 -> close_ternary_merge@12: ternary_result%43#0
debug: shared x-stack for close_ternary_merge@11 -> close_ternary_merge@12: ternary_result%43#0
debug: shared x-stack for close_ternary_true@9 -> close_ternary_merge@11: ternary_result%51#0
debug: shared x-stack for close_ternary_false@10 -> close_ternary_merge@11: ternary_result%51#0
debug: examples.voting.voting.VotingRoundApp.close f-stack entry: ['option_index#0', 'question_options#0', 'votes_for_option#0']
debug: examples.voting.voting.VotingRoundApp.close f-stack on first store: ['note#0', 'current_index#0', 'tmp%27#0', 'question_index#0']
debug: Simplified global LatestTimestamp; byte "close_time"; swap to byte "close_time"; global LatestTimestamp
debug: Inserted ensure_budget_while_top@1.ops[5]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced ensure_budget_while_top@1.ops[7]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted ensure_budget_while_top@1.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced ensure_budget_while_top@1.ops[4]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted ensure_budget_switch_case_1@4.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced ensure_budget_switch_case_1@4.ops[3]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Found 3 edge set/s for puyapy.ensure_budget
debug: puyapy.ensure_budget f-stack entry: []
debug: puyapy.ensure_budget f-stack on first store: ['required_budget_with_buffer#0']
debug: Inserted get_vote_from_box_block@0.ops[10]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced get_vote_from_box_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted get_vote_from_box_block@0.ops[14]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced get_vote_from_box_block@0.ops[16]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted get_vote_from_box_block@0.ops[2]: 'store exists#0 to l-stack (copy)'
debug: Replaced get_vote_from_box_block@0.ops[5]: 'load exists#0' with 'load exists#0 from l-stack (no copy)'
debug: Inserted get_vote_from_box_block@0.ops[4]: 'store box_data#0 to l-stack (copy)'
debug: Replaced get_vote_from_box_block@0.ops[8]: 'load box_data#0' with 'load box_data#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[12]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[14]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted get_preconditions_block@0.ops[8]: 'store awst_tmp%2#0 to l-stack (copy)'
debug: Replaced get_preconditions_block@0.ops[11]: 'load awst_tmp%2#0' with 'load awst_tmp%2#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[7]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[9]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[11]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[13]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[17]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[19]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[23]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[25]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[31]: 'store encoded_tuple_buffer%14#2 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[33]: 'load encoded_tuple_buffer%14#2' with 'load encoded_tuple_buffer%14#2 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[36]: 'store encoded_tuple_buffer%14#2 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[38]: 'load encoded_tuple_buffer%14#2' with 'load encoded_tuple_buffer%14#2 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[41]: 'store encoded_tuple_buffer%14#2 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[43]: 'load encoded_tuple_buffer%14#2' with 'load encoded_tuple_buffer%14#2 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[2]: 'store base_length%5#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[6]: 'load base_length%5#0' with 'load base_length%5#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[28]: 'store val_as_bytes%12#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[41]: 'load val_as_bytes%12#0' with 'load val_as_bytes%12#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[22]: 'store val_as_bytes%10#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[37]: 'load val_as_bytes%10#0' with 'load val_as_bytes%10#0 from l-stack (no copy)'
debug: Inserted get_preconditions_ternary_merge@3.ops[16]: 'store val_as_bytes%8#0 to l-stack (copy)'
debug: Replaced get_preconditions_ternary_merge@3.ops[33]: 'load val_as_bytes%8#0' with 'load val_as_bytes%8#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.get_preconditions
debug: Allocated 1 variable/s to x-stack: ternary_result%4#0
debug: shared x-stack for get_preconditions_ternary_true@1 -> get_preconditions_ternary_merge@3: ternary_result%4#0
debug: shared x-stack for get_preconditions_ternary_false@2 -> get_preconditions_ternary_merge@3: ternary_result%4#0
debug: examples.voting.voting.VotingRoundApp.get_preconditions f-stack entry: []
debug: examples.voting.voting.VotingRoundApp.get_preconditions f-stack on first store: ['val_as_bytes%1#0', 'awst_tmp%2#0']
debug: Simplified uncover 2; uncover 2 to cover 2
debug: Inserted voting_open_block@0.ops[3]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced voting_open_block@0.ops[6]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted voting_open_block@0.ops[5]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced voting_open_block@0.ops[9]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@1.ops[3]: 'store app_global_get_ex_did_exist%3#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@1.ops[6]: 'load app_global_get_ex_did_exist%3#0' with 'load app_global_get_ex_did_exist%3#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@1.ops[5]: 'store app_global_get_ex_value%2#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@1.ops[9]: 'load app_global_get_ex_value%2#0' with 'load app_global_get_ex_value%2#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[12]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[14]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[3]: 'store app_global_get_ex_did_exist%5#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[6]: 'load app_global_get_ex_did_exist%5#0' with 'load app_global_get_ex_did_exist%5#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[9]: 'store awst_tmp%6#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[12]: 'load awst_tmp%6#0' with 'load awst_tmp%6#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@2.ops[5]: 'store app_global_get_ex_value%4#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@2.ops[12]: 'load app_global_get_ex_value%4#0' with 'load app_global_get_ex_value%4#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@3.ops[10]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@3.ops[12]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@3.ops[3]: 'store app_global_get_ex_did_exist%9#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@3.ops[6]: 'load app_global_get_ex_did_exist%9#0' with 'load app_global_get_ex_did_exist%9#0 from l-stack (no copy)'
debug: Inserted voting_open_and_contd@3.ops[5]: 'store app_global_get_ex_value%8#0 to l-stack (copy)'
debug: Replaced voting_open_and_contd@3.ops[10]: 'load app_global_get_ex_value%8#0' with 'load app_global_get_ex_value%8#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.voting.voting.VotingRoundApp.voting_open
debug: Allocated 1 variable/s to x-stack: and_result%11#0
debug: shared x-stack for voting_open_bool_true@4 -> voting_open_bool_merge@6: and_result%11#0
debug: shared x-stack for voting_open_bool_false@5 -> voting_open_bool_merge@6: and_result%11#0
debug: examples.voting.voting.VotingRoundApp.voting_open f-stack entry: ['awst_tmp%6#0']
debug: examples.voting.voting.VotingRoundApp.voting_open f-stack on first store: []
debug: Inserted allowed_to_vote_block@0.ops[16]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[18]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted allowed_to_vote_block@0.ops[8]: 'store app_global_get_ex_did_exist%2#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[11]: 'load app_global_get_ex_did_exist%2#0' with 'load app_global_get_ex_did_exist%2#0 from l-stack (no copy)'
debug: Inserted allowed_to_vote_block@0.ops[10]: 'store app_global_get_ex_value%1#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[16]: 'load app_global_get_ex_value%1#0' with 'load app_global_get_ex_value%1#0 from l-stack (no copy)'
debug: Inserted allowed_to_vote_block@0.ops[4]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced allowed_to_vote_block@0.ops[15]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted already_voted_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced already_voted_block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted already_voted_block@0.ops[5]: 'store exists#0 to l-stack (copy)'
debug: Replaced already_voted_block@0.ops[8]: 'load exists#0' with 'load exists#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[9]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[11]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted vote_block@0.ops[5]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced vote_block@0.ops[8]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[7]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[9]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[11]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[13]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[16]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[18]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[21]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[23]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[25]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[27]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[43]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[45]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[48]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[50]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[59]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[61]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[77]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[79]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[83]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[85]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[89]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[91]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[94]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[96]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[101]: 'store range_item%23#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[103]: 'load range_item%23#0' with 'load range_item%23#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[32]: 'store app_global_get_ex_did_exist%10#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[35]: 'load app_global_get_ex_did_exist%10#0' with 'load app_global_get_ex_did_exist%10#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[56]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[59]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[66]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[69]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[76]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[79]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[2]: 'store base_length%3#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[6]: 'load base_length%3#0' with 'load base_length%3#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[35]: 'store app_global_get_ex_value%9#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[39]: 'load app_global_get_ex_value%9#0' with 'load app_global_get_ex_value%9#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[76]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[81]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[42]: 'store questions_count#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[50]: 'load questions_count#0' with 'load questions_count#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[90]: 'store min_bal_req#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[101]: 'load min_bal_req#0' with 'load min_bal_req#0 from l-stack (no copy)'
debug: Inserted vote_ternary_merge@3.ops[74]: 'store min_bal_req#0 to l-stack (copy)'
debug: Replaced vote_ternary_merge@3.ops[90]: 'load min_bal_req#0' with 'load min_bal_req#0 from l-stack (no copy)'
debug: Inserted vote_for_header@4.ops[3]: 'store continue_looping%24#0 to l-stack (copy)'
debug: Replaced vote_for_header@4.ops[5]: 'load continue_looping%24#0' with 'load continue_looping%24#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[7]: 'store index_is_in_bounds%26#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[9]: 'load index_is_in_bounds%26#0' with 'load index_is_in_bounds%26#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[13]: 'store array_data_sans_header%27#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[15]: 'load array_data_sans_header%27#0' with 'load array_data_sans_header%27#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[34]: 'store index_is_in_bounds%32#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[36]: 'load index_is_in_bounds%32#0' with 'load index_is_in_bounds%32#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[40]: 'store array_data_sans_header%33#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[42]: 'load array_data_sans_header%33#0' with 'load array_data_sans_header%33#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[56]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[58]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[66]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[68]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[78]: 'store tmp%41#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[80]: 'load tmp%41#0' with 'load tmp%41#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[100]: 'store range_item%23#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[102]: 'load range_item%23#0' with 'load range_item%23#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[3]: 'store array_length%25#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[6]: 'load array_length%25#0' with 'load array_length%25#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[24]: 'store app_global_get_ex_did_exist%30#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[27]: 'load app_global_get_ex_did_exist%30#0' with 'load app_global_get_ex_did_exist%30#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[32]: 'store array_length%31#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[35]: 'load array_length%31#0' with 'load array_length%31#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[55]: 'store tmp%36#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[58]: 'load tmp%36#0' with 'load tmp%36#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[66]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[69]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[77]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[80]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[92]: 'store app_global_get_ex_did_exist%43#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[95]: 'load app_global_get_ex_did_exist%43#0' with 'load app_global_get_ex_did_exist%43#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[100]: 'store new_state_value%44#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[103]: 'load new_state_value%44#0' with 'load new_state_value%44#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[26]: 'store app_global_get_ex_value%29#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[30]: 'load app_global_get_ex_value%29#0' with 'load app_global_get_ex_value%29#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[95]: 'store app_global_get_ex_value%42#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[99]: 'load app_global_get_ex_value%42#0' with 'load app_global_get_ex_value%42#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[50]: 'store options_count#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[55]: 'load options_count#0' with 'load options_count#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[54]: 'store tmp%35#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[60]: 'load tmp%35#0' with 'load tmp%35#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[72]: 'store cumulative_offset#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[83]: 'load cumulative_offset#0' with 'load cumulative_offset#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[6]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[18]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[32]: 'store app_global_get_ex_value%29#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[44]: 'load app_global_get_ex_value%29#0' with 'load app_global_get_ex_value%29#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[38]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[50]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[56]: 'store answer_option_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[71]: 'load answer_option_index#0' with 'load answer_option_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[19]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[38]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[62]: 'store options_count#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[85]: 'load options_count#0' with 'load options_count#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[22]: 'store answer_option_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[57]: 'load answer_option_index#0' with 'load answer_option_index#0 from l-stack (no copy)'
debug: Inserted vote_for_body@5.ops[53]: 'store question_index#0 to l-stack (copy)'
debug: Replaced vote_for_body@5.ops[118]: 'load question_index#0' with 'load question_index#0 from l-stack (no copy)'
debug: Found 4 edge set/s for examples.voting.voting.VotingRoundApp.vote
debug: Allocated 1 variable/s to x-stack: ternary_result%2#0
debug: shared x-stack for vote_ternary_true@1 -> vote_ternary_merge@3: ternary_result%2#0
debug: shared x-stack for vote_ternary_false@2 -> vote_ternary_merge@3: ternary_result%2#0
debug: examples.voting.voting.VotingRoundApp.vote f-stack entry: ['cumulative_offset#0', 'question_index#0', 'questions_count#0']
debug: examples.voting.voting.VotingRoundApp.vote f-stack on first store: ['awst_tmp%0#0']
debug: Simplified uncover 2; uncover 2 to cover 2
debug: Inserted increment_vote_in_box_block@0.ops[10]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[14]: 'store current_vote#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[16]: 'load current_vote#0' with 'load current_vote#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[19]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[21]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[2]: 'store exists#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[5]: 'load exists#0' with 'load exists#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[4]: 'store box_data#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[8]: 'load box_data#0' with 'load box_data#0 from l-stack (no copy)'
debug: Inserted increment_vote_in_box_block@0.ops[25]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced increment_vote_in_box_block@0.ops[29]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
info: Writing voting/out/voting.approval.teal
info: Writing voting/out/voting.approval.debug.teal
info: Writing voting/out/voting.clear.teal
info: Writing voting/out/voting.clear.debug.teal
info: Writing voting/out/application.json
>> exit code = 0