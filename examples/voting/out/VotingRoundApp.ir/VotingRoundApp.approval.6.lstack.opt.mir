// Op                                                                                         Stack (out)
// examples.voting.voting.VotingRoundApp.__algopy_entrypoint_with_init() -> uint64:
main:
    txn ApplicationID                                                                         tmp%0#0
    bz main_call___init__@1 ; b main_after_if_else@2

main_call___init__@1:
    // voting/voting.py:51
    // self.is_bootstrapped = False
    byte "is_bootstrapped"                                                                    "is_bootstrapped"
    int 0                                                                                     "is_bootstrapped",0
    app_global_put
    // voting/voting.py:53
    // self.voter_count = UInt64(0)
    byte "voter_count"                                                                        "voter_count"
    int 0                                                                                     "voter_count",0
    app_global_put
    b main_after_if_else@2

main_after_if_else@2:
    // voting/voting.py:49
    // class VotingRoundApp(ARC4Contract):
    txn NumAppArgs                                                                            tmp%0#2
    bz main_after_if_else@10 ; b main_abi_routing@4

main_abi_routing@4:
    // voting/voting.py:49
    // class VotingRoundApp(ARC4Contract):
    txna ApplicationArgs 0                                                                    tmp%2#0
    method create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void               tmp%2#0,Method(create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void)
    method bootstrap(pay)void                                                                 tmp%2#0,Method(create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void),Method(bootstrap(pay)void)
    method close()void                                                                        tmp%2#0,Method(create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void),Method(bootstrap(pay)void),Method(close()void)
    method get_preconditions(byte[])(uint64,uint64,uint64,uint64)                             tmp%2#0,Method(create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void),Method(bootstrap(pay)void),Method(close()void),Method(get_preconditions(byte[])(uint64,uint64,uint64,uint64))
    method vote(pay,byte[],uint8[])void                                                       tmp%2#0,Method(create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void),Method(bootstrap(pay)void),Method(close()void),Method(get_preconditions(byte[])(uint64,uint64,uint64,uint64)),Method(vote(pay,byte[],uint8[])void)
    l-load tmp%2#0 5                                                                          Method(create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void),Method(bootstrap(pay)void),Method(close()void),Method(get_preconditions(byte[])(uint64,uint64,uint64,uint64)),Method(vote(pay,byte[],uint8[])void),tmp%2#0
    match main_create_route@5 main_bootstrap_route@6 main_close_route@7 main_get_preconditions_route@8 main_vote_route@9 ; b main_after_if_else@10 

main_create_route@5:
    // voting/voting.py:58
    // @arc4.abimethod(create="require")
    txn OnCompletion                                                                          tmp%3#0
    !                                                                                         tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                         tmp%5#0
    !                                                                                         tmp%6#0
    assert // can only call when creating
    // voting/voting.py:49
    // class VotingRoundApp(ARC4Contract):
    txna ApplicationArgs 1                                                                    tmp%7#0
    extract 2 0                                                                               tmp%8#0
    txna ApplicationArgs 2                                                                    tmp%8#0,tmp%9#0
    extract 2 0                                                                               tmp%8#0,tmp%10#0
    txna ApplicationArgs 3                                                                    tmp%8#0,tmp%10#0,tmp%11#0
    extract 2 0                                                                               tmp%8#0,tmp%10#0,tmp%12#0
    txna ApplicationArgs 4                                                                    tmp%8#0,tmp%10#0,tmp%12#0,tmp%13#0
    btoi                                                                                      tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0
    txna ApplicationArgs 5                                                                    tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%15#0
    btoi                                                                                      tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0
    txna ApplicationArgs 6                                                                    tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0,tmp%17#0
    txna ApplicationArgs 7                                                                    tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0,tmp%17#0,tmp%18#0
    btoi                                                                                      tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0,tmp%17#0,tmp%19#0
    txna ApplicationArgs 8                                                                    tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0,tmp%17#0,tmp%19#0,tmp%20#0
    extract 2 0                                                                               tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0,tmp%17#0,tmp%19#0,tmp%21#0
    // voting/voting.py:58
    // @arc4.abimethod(create="require")
    l-load tmp%8#0 7                                                                          tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0,tmp%17#0,tmp%19#0,tmp%21#0,tmp%8#0
    l-load tmp%10#0 7                                                                         tmp%12#0,tmp%14#0,tmp%16#0,tmp%17#0,tmp%19#0,tmp%21#0,tmp%8#0,tmp%10#0
    l-load tmp%12#0 7                                                                         tmp%14#0,tmp%16#0,tmp%17#0,tmp%19#0,tmp%21#0,tmp%8#0,tmp%10#0,tmp%12#0
    l-load tmp%14#0 7                                                                         tmp%16#0,tmp%17#0,tmp%19#0,tmp%21#0,tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0
    l-load tmp%16#0 7                                                                         tmp%17#0,tmp%19#0,tmp%21#0,tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0
    l-load tmp%17#0 7                                                                         tmp%19#0,tmp%21#0,tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0,tmp%17#0
    l-load tmp%19#0 7                                                                         tmp%21#0,tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0,tmp%17#0,tmp%19#0
    l-load tmp%21#0 7                                                                         tmp%8#0,tmp%10#0,tmp%12#0,tmp%14#0,tmp%16#0,tmp%17#0,tmp%19#0,tmp%21#0
    callsub create
    int 1                                                                                     examples.voting.voting.VotingRoundApp.__puya_arc4_router__%0#0
    v-store tmp%0#0
    b main_after_inlined_examples.voting.voting.VotingRoundApp.__puya_arc4_router__@11 

main_bootstrap_route@6:
    // voting/voting.py:82
    // @arc4.abimethod
    txn OnCompletion                                                                          tmp%22#0
    !                                                                                         tmp%23#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                         tmp%24#0
    assert // can only call when not creating
    // voting/voting.py:49
    // class VotingRoundApp(ARC4Contract):
    txn GroupIndex                                                                            tmp%26#0
    int 1                                                                                     tmp%26#0,1
    -                                                                                         gtxn_idx%0#0
    l-load-copy gtxn_idx%0#0 0                                                                gtxn_idx%0#0,gtxn_idx%0#0 (copy)
    gtxns TypeEnum                                                                            gtxn_idx%0#0,gtxn_type%0#0
    int pay                                                                                   gtxn_idx%0#0,gtxn_type%0#0,pay
    ==                                                                                        gtxn_idx%0#0,gtxn_type_matches%0#0
    assert // transaction type is pay                                                         gtxn_idx%0#0
    // voting/voting.py:82
    // @arc4.abimethod
    l-load gtxn_idx%0#0 0                                                                     gtxn_idx%0#0
    callsub bootstrap
    int 1                                                                                     examples.voting.voting.VotingRoundApp.__puya_arc4_router__%0#0
    v-store tmp%0#0
    b main_after_inlined_examples.voting.voting.VotingRoundApp.__puya_arc4_router__@11 

main_close_route@7:
    // voting/voting.py:110
    // @arc4.abimethod
    txn OnCompletion                                                                          tmp%27#0
    !                                                                                         tmp%28#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                         tmp%29#0
    assert // can only call when not creating
    callsub close
    int 1                                                                                     examples.voting.voting.VotingRoundApp.__puya_arc4_router__%0#0
    v-store tmp%0#0
    b main_after_inlined_examples.voting.voting.VotingRoundApp.__puya_arc4_router__@11 

main_get_preconditions_route@8:
    // voting/voting.py:160
    // @arc4.abimethod(readonly=True)
    txn OnCompletion                                                                          tmp%31#0
    !                                                                                         tmp%32#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                         tmp%33#0
    assert // can only call when not creating
    // voting/voting.py:49
    // class VotingRoundApp(ARC4Contract):
    txna ApplicationArgs 1                                                                    tmp%35#0
    extract 2 0                                                                               tmp%36#0
    // voting/voting.py:160
    // @arc4.abimethod(readonly=True)
    callsub get_preconditions                                                                 tmp%37#0
    byte 0x151f7c75                                                                           tmp%37#0,0x151f7c75
    l-load tmp%37#0 1                                                                         0x151f7c75,tmp%37#0
    concat                                                                                    tmp%38#0
    log
    int 1                                                                                     examples.voting.voting.VotingRoundApp.__puya_arc4_router__%0#0
    v-store tmp%0#0
    b main_after_inlined_examples.voting.voting.VotingRoundApp.__puya_arc4_router__@11 

main_vote_route@9:
    // voting/voting.py:169
    // @arc4.abimethod
    txn OnCompletion                                                                          tmp%39#0
    !                                                                                         tmp%40#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                         tmp%41#0
    assert // can only call when not creating
    // voting/voting.py:49
    // class VotingRoundApp(ARC4Contract):
    txn GroupIndex                                                                            tmp%43#0
    int 1                                                                                     tmp%43#0,1
    -                                                                                         gtxn_idx%1#0
    l-load-copy gtxn_idx%1#0 0                                                                gtxn_idx%1#0,gtxn_idx%1#0 (copy)
    gtxns TypeEnum                                                                            gtxn_idx%1#0,gtxn_type%1#0
    int pay                                                                                   gtxn_idx%1#0,gtxn_type%1#0,pay
    ==                                                                                        gtxn_idx%1#0,gtxn_type_matches%1#0
    assert // transaction type is pay                                                         gtxn_idx%1#0
    txna ApplicationArgs 1                                                                    gtxn_idx%1#0,tmp%44#0
    extract 2 0                                                                               gtxn_idx%1#0,tmp%45#0
    txna ApplicationArgs 2                                                                    gtxn_idx%1#0,tmp%45#0,tmp%46#0
    // voting/voting.py:169
    // @arc4.abimethod
    l-load gtxn_idx%1#0 2                                                                     tmp%45#0,tmp%46#0,gtxn_idx%1#0
    l-load tmp%45#0 2                                                                         tmp%46#0,gtxn_idx%1#0,tmp%45#0
    l-load tmp%46#0 2                                                                         gtxn_idx%1#0,tmp%45#0,tmp%46#0
    callsub vote
    int 1                                                                                     examples.voting.voting.VotingRoundApp.__puya_arc4_router__%0#0
    v-store tmp%0#0
    b main_after_inlined_examples.voting.voting.VotingRoundApp.__puya_arc4_router__@11 

main_after_if_else@10:
    // voting/voting.py:49
    // class VotingRoundApp(ARC4Contract):
    int 0                                                                                     examples.voting.voting.VotingRoundApp.__puya_arc4_router__%0#0
    v-store tmp%0#0
    b main_after_inlined_examples.voting.voting.VotingRoundApp.__puya_arc4_router__@11 

main_after_inlined_examples.voting.voting.VotingRoundApp.__puya_arc4_router__@11:
    v-load tmp%0#0                                                                            tmp%0#0
    return


// _puya_lib.util.ensure_budget(required_budget: uint64, fee_source: uint64) -> void:
ensure_budget:                                                                                (𝕡) required_budget#0,fee_source#0 |
    p-load required_budget#0                                                                  (𝕡) required_budget#0,fee_source#0 | required_budget#0 (copy)
    int 10                                                                                    (𝕡) required_budget#0,fee_source#0 | required_budget#0 (copy),10
    +                                                                                         (𝕡) required_budget#0,fee_source#0 | required_budget_with_buffer#0
    v-store required_budget_with_buffer#0                                                     (𝕡) required_budget#0,fee_source#0 |
    b ensure_budget_while_top@1                                                               (𝕡) required_budget#0,fee_source#0 |

ensure_budget_while_top@1:                                                                    (𝕡) required_budget#0,fee_source#0 |
    global OpcodeBudget                                                                       (𝕡) required_budget#0,fee_source#0 | tmp%0#0
    v-load required_budget_with_buffer#0                                                      (𝕡) required_budget#0,fee_source#0 | tmp%0#0,required_budget_with_buffer#0
    l-load tmp%0#0 1                                                                          (𝕡) required_budget#0,fee_source#0 | required_budget_with_buffer#0,tmp%0#0
    >                                                                                         (𝕡) required_budget#0,fee_source#0 | tmp%1#0
    bz ensure_budget_after_while@7 ; b ensure_budget_while_body@2                             (𝕡) required_budget#0,fee_source#0 |

ensure_budget_while_body@2:                                                                   (𝕡) required_budget#0,fee_source#0 |
    itxn_begin                                                                                (𝕡) required_budget#0,fee_source#0 |
    int appl                                                                                  (𝕡) required_budget#0,fee_source#0 | appl
    itxn_field TypeEnum                                                                       (𝕡) required_budget#0,fee_source#0 |
    int DeleteApplication                                                                     (𝕡) required_budget#0,fee_source#0 | DeleteApplication
    itxn_field OnCompletion                                                                   (𝕡) required_budget#0,fee_source#0 |
    byte 0x068101                                                                             (𝕡) required_budget#0,fee_source#0 | 0x068101
    itxn_field ApprovalProgram                                                                (𝕡) required_budget#0,fee_source#0 |
    byte 0x068101                                                                             (𝕡) required_budget#0,fee_source#0 | 0x068101
    itxn_field ClearStateProgram                                                              (𝕡) required_budget#0,fee_source#0 |
    p-load fee_source#0                                                                       (𝕡) required_budget#0,fee_source#0 | fee_source#0 (copy)
    switch ensure_budget_switch_case_0@3 ensure_budget_switch_case_1@4 ; b ensure_budget_switch_case_next@6 (𝕡) required_budget#0,fee_source#0 | 

ensure_budget_switch_case_0@3:                                                                (𝕡) required_budget#0,fee_source#0 |
    int 0                                                                                     (𝕡) required_budget#0,fee_source#0 | 0
    itxn_field Fee                                                                            (𝕡) required_budget#0,fee_source#0 |
    b ensure_budget_switch_case_next@6                                                        (𝕡) required_budget#0,fee_source#0 |

ensure_budget_switch_case_1@4:                                                                (𝕡) required_budget#0,fee_source#0 |
    global MinTxnFee                                                                          (𝕡) required_budget#0,fee_source#0 | tmp%2#0
    itxn_field Fee                                                                            (𝕡) required_budget#0,fee_source#0 |
    b ensure_budget_switch_case_next@6                                                        (𝕡) required_budget#0,fee_source#0 |

ensure_budget_switch_case_next@6:                                                             (𝕡) required_budget#0,fee_source#0 |
    itxn_submit                                                                               (𝕡) required_budget#0,fee_source#0 |
    b ensure_budget_while_top@1                                                               (𝕡) required_budget#0,fee_source#0 |

ensure_budget_after_while@7:                                                                  (𝕡) required_budget#0,fee_source#0 |
    retsub


// examples.voting.voting.itoa(i: uint64) -> bytes:
itoa:                                                                                         (𝕡) i#0 |
    // voting/voting.py:253
    // if i < radix:
    p-load i#0                                                                                (𝕡) i#0 | i#0 (copy)
    // voting/voting.py:252
    // radix = digits.length
    int 10                                                                                    (𝕡) i#0 | i#0 (copy),10
    // voting/voting.py:253
    // if i < radix:
    <                                                                                         (𝕡) i#0 | tmp%0#0
    bz itoa_after_if_else@2 ; b itoa_if_body@1                                                (𝕡) i#0 |

itoa_if_body@1:                                                                               (𝕡) i#0 |
    // voting/voting.py:251
    // digits = Bytes(b"0123456789")
    byte 0x30313233343536373839                                                               (𝕡) i#0 | 0x30313233343536373839
    // voting/voting.py:254
    // return String.from_bytes(digits[i])
    p-load i#0                                                                                (𝕡) i#0 | 0x30313233343536373839,i#0 (copy)
    int 1                                                                                     (𝕡) i#0 | 0x30313233343536373839,i#0 (copy),1
    extract3                                                                                  (𝕡) i#0 | tmp%1#0
    retsub                                                                                    tmp%1#0

itoa_after_if_else@2:                                                                         (𝕡) i#0 |
    // voting/voting.py:255
    // return itoa(i // radix) + String.from_bytes(digits[i % radix])
    p-load i#0                                                                                (𝕡) i#0 | i#0 (copy)
    // voting/voting.py:252
    // radix = digits.length
    int 10                                                                                    (𝕡) i#0 | i#0 (copy),10
    // voting/voting.py:255
    // return itoa(i // radix) + String.from_bytes(digits[i % radix])
    /                                                                                         (𝕡) i#0 | tmp%2#0
    callsub itoa                                                                              (𝕡) i#0 | tmp%3#0
    p-load i#0                                                                                (𝕡) i#0 | tmp%3#0,i#0 (copy)
    // voting/voting.py:252
    // radix = digits.length
    int 10                                                                                    (𝕡) i#0 | tmp%3#0,i#0 (copy),10
    // voting/voting.py:255
    // return itoa(i // radix) + String.from_bytes(digits[i % radix])
    %                                                                                         (𝕡) i#0 | tmp%3#0,tmp%4#0
    // voting/voting.py:251
    // digits = Bytes(b"0123456789")
    byte 0x30313233343536373839                                                               (𝕡) i#0 | tmp%3#0,tmp%4#0,0x30313233343536373839
    // voting/voting.py:255
    // return itoa(i // radix) + String.from_bytes(digits[i % radix])
    l-load tmp%4#0 1                                                                          (𝕡) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0
    int 1                                                                                     (𝕡) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0,1
    extract3                                                                                  (𝕡) i#0 | tmp%3#0,tmp%5#0
    l-load tmp%3#0 1                                                                          (𝕡) i#0 | tmp%5#0,tmp%3#0
    l-load tmp%5#0 1                                                                          (𝕡) i#0 | tmp%3#0,tmp%5#0
    concat                                                                                    (𝕡) i#0 | tmp%6#0
    retsub                                                                                    tmp%6#0


// examples.voting.voting.VotingRoundApp.create(vote_id: bytes, snapshot_public_key: bytes, metadata_ipfs_cid: bytes, start_time: uint64, end_time: uint64, option_counts: bytes, quorum: uint64, nft_image_url: bytes) -> void:
create:                                                                                       (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:70
    // assert start_time < end_time, "End time should be after start time"
    p-load start_time#0                                                                       (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | start_time#0 (copy)
    p-load end_time#0                                                                         (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | start_time#0 (copy),end_time#0 (copy)
    <                                                                                         (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%0#0
    assert // End time should be after start time                                             (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:71
    // assert end_time >= Global.latest_timestamp, "End time should be in the future"
    global LatestTimestamp                                                                    (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%1#0
    p-load end_time#0                                                                         (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%1#0,end_time#0 (copy)
    l-load tmp%1#0 1                                                                          (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | end_time#0 (copy),tmp%1#0
    >=                                                                                        (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%2#0
    assert // End time should be in the future                                                (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:73
    // self.vote_id = vote_id
    byte "vote_id"                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "vote_id"
    p-load vote_id#0                                                                          (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "vote_id",vote_id#0 (copy)
    app_global_put                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:74
    // self.snapshot_public_key = snapshot_public_key
    byte "snapshot_public_key"                                                                (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "snapshot_public_key"
    p-load snapshot_public_key#0                                                              (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "snapshot_public_key",snapshot_public_key#0 (copy)
    app_global_put                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:75
    // self.metadata_ipfs_cid = metadata_ipfs_cid
    byte "metadata_ipfs_cid"                                                                  (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "metadata_ipfs_cid"
    p-load metadata_ipfs_cid#0                                                                (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "metadata_ipfs_cid",metadata_ipfs_cid#0 (copy)
    app_global_put                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:76
    // self.start_time = start_time
    byte "start_time"                                                                         (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "start_time"
    p-load start_time#0                                                                       (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "start_time",start_time#0 (copy)
    app_global_put                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:77
    // self.end_time = end_time
    byte "end_time"                                                                           (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "end_time"
    p-load end_time#0                                                                         (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "end_time",end_time#0 (copy)
    app_global_put                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:78
    // self.quorum = quorum
    byte "quorum"                                                                             (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "quorum"
    p-load quorum#0                                                                           (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "quorum",quorum#0 (copy)
    app_global_put                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:79
    // self.nft_image_url = nft_image_url
    byte "nft_image_url"                                                                      (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "nft_image_url"
    p-load nft_image_url#0                                                                    (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "nft_image_url",nft_image_url#0 (copy)
    app_global_put                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:219
    // assert option_counts.length, "option_counts should be non-empty"
    p-load option_counts#0                                                                    (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | option_counts#0 (copy)
    int 0                                                                                     (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | option_counts#0 (copy),0
    extract_uint16                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%0#1
    l-store-copy tmp%0#1 0                                                                    (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%0#1,tmp%0#1 (copy)
    v-store tmp%0#1                                                                           (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%0#1
    l-load-copy tmp%0#1 0                                                                     (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%0#1,tmp%0#1 (copy)
    assert // option_counts should be non-empty                                               (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%0#1
    // voting/voting.py:220
    // assert option_counts.length <= 112, "Can't have more than 112 questions"
    l-load tmp%0#1 0                                                                          (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%0#1
    int 112                                                                                   (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%0#1,112
    <=                                                                                        (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | tmp%3#0
    assert // Can't have more than 112 questions                                              (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:222
    // total_options = UInt64(0)
    int 0                                                                                     (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | 0
    v-store total_options#0                                                                   (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    int 0                                                                                     (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | 0
    v-store item_index_internal%0#0                                                           (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    b create_for_header@2                                                                     (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |

create_for_header@2:                                                                          (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:223
    // for item in option_counts:
    v-load item_index_internal%0#0                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0
    v-load tmp%0#1                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0,tmp%0#1
    <                                                                                         (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | continue_looping%0#0
    bz create_after_for@5 ; b create_for_body@3                                               (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |

create_for_body@3:                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:223
    // for item in option_counts:
    p-load option_counts#0                                                                    (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | option_counts#0 (copy)
    extract 2 0                                                                               (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | array_head_and_tail%0#0
    v-load item_index_internal%0#0                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | array_head_and_tail%0#0,item_index_internal%0#0
    l-store-copy item_index_internal%0#0 1                                                    (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0,array_head_and_tail%0#0,item_index_internal%0#0 (copy)
    int 1                                                                                     (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0,array_head_and_tail%0#0,item_index_internal%0#0 (copy),1
    extract3 // on error: Index access is out of bounds                                       (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0,item#0
    // voting/voting.py:224
    // total_options += item.native
    btoi                                                                                      (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0,tmp%4#0
    v-load total_options#0                                                                    (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0,tmp%4#0,total_options#0
    l-load tmp%4#0 1                                                                          (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0,total_options#0,tmp%4#0
    +                                                                                         (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0,total_options#0
    v-store total_options#0                                                                   (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0
    l-load item_index_internal%0#0 0                                                          (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0
    int 1                                                                                     (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0,1
    +                                                                                         (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | item_index_internal%0#0
    v-store item_index_internal%0#0                                                           (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    b create_for_header@2                                                                     (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |

create_after_for@5:                                                                           (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    // voting/voting.py:225
    // assert total_options <= 128, "Can't have more than 128 vote options"
    v-load total_options#0                                                                    (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | total_options#0
    l-store-copy total_options#0 0                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | total_options#0,total_options#0 (copy)
    int 128                                                                                   (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | total_options#0,total_options#0 (copy),128
    <=                                                                                        (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | total_options#0,tmp%5#0
    assert // Can't have more than 128 vote options                                           (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | total_options#0
    // voting/voting.py:227
    // self.option_counts = option_counts.copy()
    byte "option_counts"                                                                      (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | total_options#0,"option_counts"
    p-load option_counts#0                                                                    (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | total_options#0,"option_counts",option_counts#0 (copy)
    app_global_put                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | total_options#0
    // voting/voting.py:228
    // self.total_options = total_options
    byte "total_options"                                                                      (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | total_options#0,"total_options"
    l-load total_options#0 1                                                                  (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 | "total_options",total_options#0
    app_global_put                                                                            (𝕡) vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0,quorum#0,nft_image_url#0 |
    retsub


// examples.voting.voting.VotingRoundApp.bootstrap(fund_min_bal_req: uint64) -> void:
bootstrap:                                                                                    (𝕡) fund_min_bal_req#0 |
    // voting/voting.py:84
    // assert not self.is_bootstrapped, "Must not be already bootstrapped"
    int 0                                                                                     (𝕡) fund_min_bal_req#0 | 0
    byte "is_bootstrapped"                                                                    (𝕡) fund_min_bal_req#0 | 0,"is_bootstrapped"
    app_global_get_ex                                                                         (𝕡) fund_min_bal_req#0 | maybe_value%0#0,maybe_exists%0#0
    assert // check self.is_bootstrapped exists                                               (𝕡) fund_min_bal_req#0 | maybe_value%0#0
    l-load maybe_value%0#0 0                                                                  (𝕡) fund_min_bal_req#0 | maybe_value%0#0
    !                                                                                         (𝕡) fund_min_bal_req#0 | tmp%0#0
    assert // Must not be already bootstrapped                                                (𝕡) fund_min_bal_req#0 |
    // voting/voting.py:85
    // self.is_bootstrapped = True
    byte "is_bootstrapped"                                                                    (𝕡) fund_min_bal_req#0 | "is_bootstrapped"
    int 1                                                                                     (𝕡) fund_min_bal_req#0 | "is_bootstrapped",1
    app_global_put                                                                            (𝕡) fund_min_bal_req#0 |
    // voting/voting.py:88
    // fund_min_bal_req.receiver == Global.current_application_address
    p-load fund_min_bal_req#0                                                                 (𝕡) fund_min_bal_req#0 | fund_min_bal_req#0 (copy)
    gtxns Receiver                                                                            (𝕡) fund_min_bal_req#0 | tmp%1#0
    global CurrentApplicationAddress                                                          (𝕡) fund_min_bal_req#0 | tmp%1#0,tmp%2#0
    l-load tmp%1#0 1                                                                          (𝕡) fund_min_bal_req#0 | tmp%2#0,tmp%1#0
    l-load tmp%2#0 1                                                                          (𝕡) fund_min_bal_req#0 | tmp%1#0,tmp%2#0
    ==                                                                                        (𝕡) fund_min_bal_req#0 | tmp%3#0
    // voting/voting.py:87-89
    // assert (
    //     fund_min_bal_req.receiver == Global.current_application_address
    // ), "Payment must be to app address"
    assert // Payment must be to app address                                                  (𝕡) fund_min_bal_req#0 |
    // voting/voting.py:91
    // tally_box_size = self.total_options * VOTE_COUNT_BYTES
    int 0                                                                                     (𝕡) fund_min_bal_req#0 | 0
    byte "total_options"                                                                      (𝕡) fund_min_bal_req#0 | 0,"total_options"
    app_global_get_ex                                                                         (𝕡) fund_min_bal_req#0 | maybe_value%1#0,maybe_exists%1#0
    assert // check self.total_options exists                                                 (𝕡) fund_min_bal_req#0 | maybe_value%1#0
    l-load maybe_value%1#0 0                                                                  (𝕡) fund_min_bal_req#0 | maybe_value%1#0
    int 8                                                                                     (𝕡) fund_min_bal_req#0 | maybe_value%1#0,8
    *                                                                                         (𝕡) fund_min_bal_req#0 | tally_box_size#0
    // voting/voting.py:102
    // + (tally_box_size * BOX_BYTE_MIN_BALANCE)
    l-load-copy tally_box_size#0 0                                                            (𝕡) fund_min_bal_req#0 | tally_box_size#0,tally_box_size#0 (copy)
    int 400                                                                                   (𝕡) fund_min_bal_req#0 | tally_box_size#0,tally_box_size#0 (copy),400
    *                                                                                         (𝕡) fund_min_bal_req#0 | tally_box_size#0,tmp%4#0
    // voting/voting.py:94-100
    // ASSET_MIN_BALANCE * 2
    // # create NFT fee
    // + 1000
    // # tally box
    // + BOX_FLAT_MIN_BALANCE
    // # tally box key "V"
    // + BOX_BYTE_MIN_BALANCE
    int 203900                                                                                (𝕡) fund_min_bal_req#0 | tally_box_size#0,tmp%4#0,203900
    // voting/voting.py:92-103
    // min_balance_req = (
    //     # minimum balance req for: ALGOs + Vote result NFT asset
    //     ASSET_MIN_BALANCE * 2
    //     # create NFT fee
    //     + 1000
    //     # tally box
    //     + BOX_FLAT_MIN_BALANCE
    //     # tally box key "V"
    //     + BOX_BYTE_MIN_BALANCE
    //     # tally box value
    //     + (tally_box_size * BOX_BYTE_MIN_BALANCE)
    // )
    l-load tmp%4#0 1                                                                          (𝕡) fund_min_bal_req#0 | tally_box_size#0,203900,tmp%4#0
    // voting/voting.py:94-102
    // ASSET_MIN_BALANCE * 2
    // # create NFT fee
    // + 1000
    // # tally box
    // + BOX_FLAT_MIN_BALANCE
    // # tally box key "V"
    // + BOX_BYTE_MIN_BALANCE
    // # tally box value
    // + (tally_box_size * BOX_BYTE_MIN_BALANCE)
    +                                                                                         (𝕡) fund_min_bal_req#0 | tally_box_size#0,min_balance_req#0
    // voting/voting.py:104
    // log(min_balance_req)
    l-load-copy min_balance_req#0 0                                                           (𝕡) fund_min_bal_req#0 | tally_box_size#0,min_balance_req#0,min_balance_req#0 (copy)
    itob                                                                                      (𝕡) fund_min_bal_req#0 | tally_box_size#0,min_balance_req#0,tmp%5#0
    log                                                                                       (𝕡) fund_min_bal_req#0 | tally_box_size#0,min_balance_req#0
    // voting/voting.py:106
    // fund_min_bal_req.amount == min_balance_req
    p-load fund_min_bal_req#0                                                                 (𝕡) fund_min_bal_req#0 | tally_box_size#0,min_balance_req#0,fund_min_bal_req#0 (copy)
    gtxns Amount                                                                              (𝕡) fund_min_bal_req#0 | tally_box_size#0,min_balance_req#0,tmp%6#0
    l-load min_balance_req#0 1                                                                (𝕡) fund_min_bal_req#0 | tally_box_size#0,tmp%6#0,min_balance_req#0
    ==                                                                                        (𝕡) fund_min_bal_req#0 | tally_box_size#0,tmp%7#0
    // voting/voting.py:105-107
    // assert (
    //     fund_min_bal_req.amount == min_balance_req
    // ), "Payment must be for the exact min balance requirement"
    assert // Payment must be for the exact min balance requirement                           (𝕡) fund_min_bal_req#0 | tally_box_size#0
    // voting/voting.py:108
    // assert self.tally_box.create(size=tally_box_size)
    byte "V"                                                                                  (𝕡) fund_min_bal_req#0 | tally_box_size#0,"V"
    l-load tally_box_size#0 1                                                                 (𝕡) fund_min_bal_req#0 | "V",tally_box_size#0
    box_create                                                                                (𝕡) fund_min_bal_req#0 | tmp%8#0
    assert                                                                                    (𝕡) fund_min_bal_req#0 |
    retsub


// examples.voting.voting.VotingRoundApp.close() -> void:
close:
    // voting/voting.py:112
    // ensure_budget(20000, fee_source=OpUpFeeSource.GroupCredit)
    int 20000                                                                                 20000
    int 0                                                                                     20000,0
    callsub ensure_budget
    // voting/voting.py:113
    // assert not self.close_time, "Already closed"
    int 0                                                                                     0
    byte "close_time"                                                                         0,"close_time"
    app_global_get_ex                                                                         maybe_value%0#0,maybe_exists%0#0
    l-store maybe_exists%0#0 1                                                                maybe_exists%0#0,maybe_value%0#0
    pop 1                                                                                     maybe_exists%0#0
    l-load maybe_exists%0#0 0                                                                 maybe_exists%0#0
    !                                                                                         tmp%0#0
    assert // Already closed
    // voting/voting.py:114
    // self.close_time.value = Global.latest_timestamp
    global LatestTimestamp                                                                    new_state_value%0#0
    byte "close_time"                                                                         new_state_value%0#0,"close_time"
    l-load new_state_value%0#0 1                                                              "close_time",new_state_value%0#0
    app_global_put
    // voting/voting.py:119
    // + self.vote_id
    int 0                                                                                     0
    byte "vote_id"                                                                            0,"vote_id"
    app_global_get_ex                                                                         maybe_value%1#0,maybe_exists%1#0
    assert // check self.vote_id exists                                                       maybe_value%1#0
    // voting/voting.py:117-118
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    byte "{\"standard\":\"arc69\",\"description\":\"This is a voting result NFT for voting round with ID " maybe_value%1#0,"{\"standard\":\"arc69\",\"description\":\"This is a voting result NFT for voting round with ID "
    // voting/voting.py:117-119
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    // + self.vote_id
    l-load maybe_value%1#0 1                                                                  "{\"standard\":\"arc69\",\"description\":\"This is a voting result NFT for voting round with ID ",maybe_value%1#0
    concat                                                                                    tmp%1#0
    // voting/voting.py:120
    // + '.","properties":{"metadata":"ipfs://'
    byte ".\",\"properties\":{\"metadata\":\"ipfs://"                                         tmp%1#0,".\",\"properties\":{\"metadata\":\"ipfs://"
    // voting/voting.py:117-120
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    // + self.vote_id
    // + '.","properties":{"metadata":"ipfs://'
    concat                                                                                    tmp%2#0
    // voting/voting.py:121
    // + self.metadata_ipfs_cid
    int 0                                                                                     tmp%2#0,0
    byte "metadata_ipfs_cid"                                                                  tmp%2#0,0,"metadata_ipfs_cid"
    app_global_get_ex                                                                         tmp%2#0,maybe_value%2#0,maybe_exists%2#0
    assert // check self.metadata_ipfs_cid exists                                             tmp%2#0,maybe_value%2#0
    // voting/voting.py:117-121
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    // + self.vote_id
    // + '.","properties":{"metadata":"ipfs://'
    // + self.metadata_ipfs_cid
    l-load tmp%2#0 1                                                                          maybe_value%2#0,tmp%2#0
    l-load maybe_value%2#0 1                                                                  tmp%2#0,maybe_value%2#0
    concat                                                                                    tmp%3#0
    // voting/voting.py:122
    // + '","id":"'
    byte "\",\"id\":\""                                                                       tmp%3#0,"\",\"id\":\""
    // voting/voting.py:117-122
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    // + self.vote_id
    // + '.","properties":{"metadata":"ipfs://'
    // + self.metadata_ipfs_cid
    // + '","id":"'
    concat                                                                                    tmp%4#0
    // voting/voting.py:123
    // + self.vote_id
    int 0                                                                                     tmp%4#0,0
    byte "vote_id"                                                                            tmp%4#0,0,"vote_id"
    app_global_get_ex                                                                         tmp%4#0,maybe_value%3#0,maybe_exists%3#0
    assert // check self.vote_id exists                                                       tmp%4#0,maybe_value%3#0
    // voting/voting.py:117-123
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    // + self.vote_id
    // + '.","properties":{"metadata":"ipfs://'
    // + self.metadata_ipfs_cid
    // + '","id":"'
    // + self.vote_id
    l-load tmp%4#0 1                                                                          maybe_value%3#0,tmp%4#0
    l-load maybe_value%3#0 1                                                                  tmp%4#0,maybe_value%3#0
    concat                                                                                    tmp%5#0
    // voting/voting.py:124
    // + '","quorum":'
    byte "\",\"quorum\":"                                                                     tmp%5#0,"\",\"quorum\":"
    // voting/voting.py:117-124
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    // + self.vote_id
    // + '.","properties":{"metadata":"ipfs://'
    // + self.metadata_ipfs_cid
    // + '","id":"'
    // + self.vote_id
    // + '","quorum":'
    concat                                                                                    tmp%6#0
    // voting/voting.py:125
    // + itoa(self.quorum)
    int 0                                                                                     tmp%6#0,0
    byte "quorum"                                                                             tmp%6#0,0,"quorum"
    app_global_get_ex                                                                         tmp%6#0,maybe_value%4#0,maybe_exists%4#0
    assert // check self.quorum exists                                                        tmp%6#0,maybe_value%4#0
    l-load maybe_value%4#0 0                                                                  tmp%6#0,maybe_value%4#0
    callsub itoa                                                                              tmp%6#0,tmp%7#0
    // voting/voting.py:117-125
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    // + self.vote_id
    // + '.","properties":{"metadata":"ipfs://'
    // + self.metadata_ipfs_cid
    // + '","id":"'
    // + self.vote_id
    // + '","quorum":'
    // + itoa(self.quorum)
    l-load tmp%6#0 1                                                                          tmp%7#0,tmp%6#0
    l-load tmp%7#0 1                                                                          tmp%6#0,tmp%7#0
    concat                                                                                    tmp%8#0
    // voting/voting.py:126
    // + ',"voterCount":'
    byte ",\"voterCount\":"                                                                   tmp%8#0,",\"voterCount\":"
    // voting/voting.py:117-126
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    // + self.vote_id
    // + '.","properties":{"metadata":"ipfs://'
    // + self.metadata_ipfs_cid
    // + '","id":"'
    // + self.vote_id
    // + '","quorum":'
    // + itoa(self.quorum)
    // + ',"voterCount":'
    concat                                                                                    tmp%9#0
    // voting/voting.py:127
    // + itoa(self.voter_count)
    int 0                                                                                     tmp%9#0,0
    byte "voter_count"                                                                        tmp%9#0,0,"voter_count"
    app_global_get_ex                                                                         tmp%9#0,maybe_value%5#0,maybe_exists%5#0
    assert // check self.voter_count exists                                                   tmp%9#0,maybe_value%5#0
    l-load maybe_value%5#0 0                                                                  tmp%9#0,maybe_value%5#0
    callsub itoa                                                                              tmp%9#0,tmp%10#0
    // voting/voting.py:117-127
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    // + self.vote_id
    // + '.","properties":{"metadata":"ipfs://'
    // + self.metadata_ipfs_cid
    // + '","id":"'
    // + self.vote_id
    // + '","quorum":'
    // + itoa(self.quorum)
    // + ',"voterCount":'
    // + itoa(self.voter_count)
    l-load tmp%9#0 1                                                                          tmp%10#0,tmp%9#0
    l-load tmp%10#0 1                                                                         tmp%9#0,tmp%10#0
    concat                                                                                    tmp%11#0
    // voting/voting.py:128
    // + ',"tallies":['
    byte ",\"tallies\":["                                                                     tmp%11#0,",\"tallies\":["
    // voting/voting.py:117-128
    // '{"standard":"arc69",'
    // '"description":"This is a voting result NFT for voting round with ID '
    // + self.vote_id
    // + '.","properties":{"metadata":"ipfs://'
    // + self.metadata_ipfs_cid
    // + '","id":"'
    // + self.vote_id
    // + '","quorum":'
    // + itoa(self.quorum)
    // + ',"voterCount":'
    // + itoa(self.voter_count)
    // + ',"tallies":['
    concat                                                                                    note#0
    // voting/voting.py:116-129
    // note = (
    //     '{"standard":"arc69",'
    //     '"description":"This is a voting result NFT for voting round with ID '
    //     + self.vote_id
    //     + '.","properties":{"metadata":"ipfs://'
    //     + self.metadata_ipfs_cid
    //     + '","id":"'
    //     + self.vote_id
    //     + '","quorum":'
    //     + itoa(self.quorum)
    //     + ',"voterCount":'
    //     + itoa(self.voter_count)
    //     + ',"tallies":['
    // )
    v-store note#0
    // voting/voting.py:131
    // current_index = UInt64(0)
    int 0                                                                                     0
    v-store current_index#0
    // voting/voting.py:132
    // for question_index, question_options in uenumerate(self.option_counts):
    int 0                                                                                     0
    byte "option_counts"                                                                      0,"option_counts"
    app_global_get_ex                                                                         maybe_value%6#0,maybe_exists%6#0
    l-store maybe_exists%6#0 1                                                                maybe_exists%6#0,maybe_value%6#0
    l-store-copy maybe_value%6#0 1                                                            maybe_value%6#0,maybe_exists%6#0,maybe_value%6#0 (copy)
    v-store maybe_value%6#0                                                                   maybe_value%6#0,maybe_exists%6#0
    l-load maybe_exists%6#0 0                                                                 maybe_value%6#0,maybe_exists%6#0
    assert // check self.option_counts exists                                                 maybe_value%6#0
    l-load maybe_value%6#0 0                                                                  maybe_value%6#0
    int 0                                                                                     maybe_value%6#0,0
    extract_uint16                                                                            array_length%0#0
    v-store array_length%0#0
    int 0                                                                                     item_index_internal%0#0
    v-store question_index#0
    b close_for_header@1

close_for_header@1:
    // voting/voting.py:132
    // for question_index, question_options in uenumerate(self.option_counts):
    v-load question_index#0                                                                   question_index#0
    v-load array_length%0#0                                                                   question_index#0,array_length%0#0
    <                                                                                         continue_looping%0#0
    bz close_after_for@14 ; b close_for_body@2

close_for_body@2:
    // voting/voting.py:132
    // for question_index, question_options in uenumerate(self.option_counts):
    v-load maybe_value%6#0                                                                    maybe_value%6#0
    extract 2 0                                                                               array_head_and_tail%0#0
    v-load question_index#0                                                                   array_head_and_tail%0#0,question_index#0
    l-store-copy question_index#0 1                                                           question_index#0,array_head_and_tail%0#0,question_index#0 (copy)
    int 1                                                                                     question_index#0,array_head_and_tail%0#0,question_index#0 (copy),1
    extract3 // on error: Index access is out of bounds                                       question_index#0,question_options#0
    v-store question_options#0                                                                question_index#0
    v-load note#0                                                                             question_index#0,note#17
    v-store note#17                                                                           question_index#0
    // voting/voting.py:133
    // if question_index > 0:
    l-load question_index#0 0                                                                 question_index#0
    bz close_after_if_else@4 ; b close_if_body@3

close_if_body@3:
    // voting/voting.py:134
    // note += ","
    v-load note#0                                                                             note#0
    byte ","                                                                                  note#0,","
    concat                                                                                    note#0
    v-store note#17
    b close_after_if_else@4

close_after_if_else@4:
    v-load note#17                                                                            note#0
    l-store-copy note#0 0                                                                     note#0,note#0 (copy)
    v-store note#0                                                                            note#0
    // voting/voting.py:135
    // if question_options > 0:
    v-load question_options#0                                                                 note#0,question_options#0
    byte 0x00                                                                                 note#0,question_options#0,0x00
    b>                                                                                        note#0,tmp%13#0
    v-load current_index#0                                                                    note#0,tmp%13#0,current_index#15
    v-store current_index#15                                                                  note#0,tmp%13#0
    l-load note#0 1                                                                           tmp%13#0,note#0
    v-store note#17                                                                           tmp%13#0
    l-load tmp%13#0 0                                                                         tmp%13#0
    bz close_after_if_else@12 ; b close_if_body@5

close_if_body@5:
    // voting/voting.py:136
    // note += "["
    v-load note#0                                                                             note#0
    byte "["                                                                                  note#0,"["
    concat                                                                                    note#0
    v-store note#0
    // voting/voting.py:137
    // for option_index in urange(question_options.native):
    v-load question_options#0                                                                 question_options#0
    btoi                                                                                      tmp%14#0
    v-store tmp%14#0
    int 0                                                                                     0
    v-store option_index#0
    b close_for_header@6

close_for_header@6:
    // voting/voting.py:137
    // for option_index in urange(question_options.native):
    v-load option_index#0                                                                     option_index#0
    v-load tmp%14#0                                                                           option_index#0,tmp%14#0
    <                                                                                         continue_looping%1#0
    bz close_after_for@11 ; b close_for_body@7

close_for_body@7:
    v-load note#0                                                                             note#17
    v-store note#17
    // voting/voting.py:138
    // if option_index > 0:
    v-load option_index#0                                                                     option_index#0
    bz close_after_if_else@9 ; b close_if_body@8

close_if_body@8:
    // voting/voting.py:139
    // note += ","
    v-load note#0                                                                             note#0
    byte ","                                                                                  note#0,","
    concat                                                                                    note#0
    v-store note#17
    b close_after_if_else@9

close_after_if_else@9:
    v-load note#17                                                                            note#0
    // voting/voting.py:241
    // return op.btoi(self.tally_box.extract(index, VOTE_COUNT_BYTES))
    byte "V"                                                                                  note#0,"V"
    v-load current_index#0                                                                    note#0,"V",current_index#0
    l-store-copy current_index#0 2                                                            current_index#0,note#0,"V",current_index#0 (copy)
    int 8                                                                                     current_index#0,note#0,"V",current_index#0 (copy),8
    box_extract                                                                               current_index#0,note#0,tmp%0#1
    btoi                                                                                      current_index#0,note#0,votes_for_option#0
    // voting/voting.py:141
    // note += itoa(votes_for_option)
    callsub itoa                                                                              current_index#0,note#0,tmp%16#0
    l-load note#0 1                                                                           current_index#0,tmp%16#0,note#0
    l-load tmp%16#0 1                                                                         current_index#0,note#0,tmp%16#0
    concat                                                                                    current_index#0,note#0
    v-store note#0                                                                            current_index#0
    // voting/voting.py:142
    // current_index += 1
    l-load current_index#0 0                                                                  current_index#0
    int 1                                                                                     current_index#0,1
    +                                                                                         current_index#0
    v-store current_index#0
    // voting/voting.py:137
    // for option_index in urange(question_options.native):
    v-load option_index#0                                                                     option_index#0
    int 1                                                                                     option_index#0,1
    +                                                                                         option_index#0
    v-store option_index#0
    b close_for_header@6

close_after_for@11:
    // voting/voting.py:143
    // note += "]"
    v-load note#0                                                                             note#0
    byte "]"                                                                                  note#0,"]"
    concat                                                                                    note#0
    v-load current_index#0                                                                    note#0,current_index#15
    v-store current_index#15                                                                  note#0
    l-load note#0 0                                                                           note#0
    v-store note#17
    b close_after_if_else@12

close_after_if_else@12:
    v-load current_index#15                                                                   current_index#0
    v-store current_index#0
    v-load note#17                                                                            note#0
    v-store note#0
    v-load question_index#0                                                                   question_index#0
    int 1                                                                                     question_index#0,1
    +                                                                                         item_index_internal%0#0
    v-store question_index#0
    b close_for_header@1

close_after_for@14:
    // voting/voting.py:144
    // note += "]}}"
    v-load note#0                                                                             note#0
    byte "]}}"                                                                                note#0,"]}}"
    concat                                                                                    note#0
    // voting/voting.py:146-156
    // itxn.AssetConfig(
    //     total=1,
    //     decimals=0,
    //     default_frozen=False,
    //     asset_name="[VOTE RESULT] " + self.vote_id,
    //     unit_name="VOTERSLT",
    //     url=self.nft_image_url,
    //     note=note,
    //     fee=Global.min_txn_fee,
    // )
    // .submit()
    itxn_begin                                                                                note#0
    // voting/voting.py:154
    // fee=Global.min_txn_fee,
    global MinTxnFee                                                                          note#0,inner_txn_params%0%%param_Fee_idx_0#0
    // voting/voting.py:150
    // asset_name="[VOTE RESULT] " + self.vote_id,
    int 0                                                                                     note#0,inner_txn_params%0%%param_Fee_idx_0#0,0
    byte "vote_id"                                                                            note#0,inner_txn_params%0%%param_Fee_idx_0#0,0,"vote_id"
    app_global_get_ex                                                                         note#0,inner_txn_params%0%%param_Fee_idx_0#0,maybe_value%7#0,maybe_exists%7#0
    assert // check self.vote_id exists                                                       note#0,inner_txn_params%0%%param_Fee_idx_0#0,maybe_value%7#0
    byte "[VOTE RESULT] "                                                                     note#0,inner_txn_params%0%%param_Fee_idx_0#0,maybe_value%7#0,"[VOTE RESULT] "
    l-load maybe_value%7#0 1                                                                  note#0,inner_txn_params%0%%param_Fee_idx_0#0,"[VOTE RESULT] ",maybe_value%7#0
    concat                                                                                    note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0
    // voting/voting.py:152
    // url=self.nft_image_url,
    int 0                                                                                     note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,0
    byte "nft_image_url"                                                                      note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,0,"nft_image_url"
    app_global_get_ex                                                                         note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%8#0,maybe_exists%8#0
    assert // check self.nft_image_url exists                                                 note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%8#0
    l-load note#0 3                                                                           inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%8#0,note#0
    itxn_field Note                                                                           inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%8#0
    l-load maybe_value%8#0 0                                                                  inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%8#0
    itxn_field ConfigAssetURL                                                                 inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0
    // voting/voting.py:151
    // unit_name="VOTERSLT",
    byte "VOTERSLT"                                                                           inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,"VOTERSLT"
    itxn_field ConfigAssetUnitName                                                            inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0
    l-load inner_txn_params%0%%param_ConfigAssetName_idx_0#0 0                                inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0
    itxn_field ConfigAssetName                                                                inner_txn_params%0%%param_Fee_idx_0#0
    // voting/voting.py:149
    // default_frozen=False,
    int 0                                                                                     inner_txn_params%0%%param_Fee_idx_0#0,0
    itxn_field ConfigAssetDefaultFrozen                                                       inner_txn_params%0%%param_Fee_idx_0#0
    // voting/voting.py:148
    // decimals=0,
    int 0                                                                                     inner_txn_params%0%%param_Fee_idx_0#0,0
    itxn_field ConfigAssetDecimals                                                            inner_txn_params%0%%param_Fee_idx_0#0
    // voting/voting.py:147
    // total=1,
    int 1                                                                                     inner_txn_params%0%%param_Fee_idx_0#0,1
    itxn_field ConfigAssetTotal                                                               inner_txn_params%0%%param_Fee_idx_0#0
    // voting/voting.py:146
    // itxn.AssetConfig(
    int acfg                                                                                  inner_txn_params%0%%param_Fee_idx_0#0,acfg
    itxn_field TypeEnum                                                                       inner_txn_params%0%%param_Fee_idx_0#0
    l-load inner_txn_params%0%%param_Fee_idx_0#0 0                                            inner_txn_params%0%%param_Fee_idx_0#0
    itxn_field Fee
    // voting/voting.py:146-156
    // itxn.AssetConfig(
    //     total=1,
    //     decimals=0,
    //     default_frozen=False,
    //     asset_name="[VOTE RESULT] " + self.vote_id,
    //     unit_name="VOTERSLT",
    //     url=self.nft_image_url,
    //     note=note,
    //     fee=Global.min_txn_fee,
    // )
    // .submit()
    itxn_submit
    // voting/voting.py:146-157
    // itxn.AssetConfig(
    //     total=1,
    //     decimals=0,
    //     default_frozen=False,
    //     asset_name="[VOTE RESULT] " + self.vote_id,
    //     unit_name="VOTERSLT",
    //     url=self.nft_image_url,
    //     note=note,
    //     fee=Global.min_txn_fee,
    // )
    // .submit()
    // .created_asset.id
    itxn CreatedAssetID                                                                       new_state_value%1#0
    // voting/voting.py:145
    // self.nft_asset_id = (
    byte "nft_asset_id"                                                                       new_state_value%1#0,"nft_asset_id"
    // voting/voting.py:145-158
    // self.nft_asset_id = (
    //     itxn.AssetConfig(
    //         total=1,
    //         decimals=0,
    //         default_frozen=False,
    //         asset_name="[VOTE RESULT] " + self.vote_id,
    //         unit_name="VOTERSLT",
    //         url=self.nft_image_url,
    //         note=note,
    //         fee=Global.min_txn_fee,
    //     )
    //     .submit()
    //     .created_asset.id
    // )
    l-load new_state_value%1#0 1                                                              "nft_asset_id",new_state_value%1#0
    app_global_put
    retsub


// examples.voting.voting.VotingRoundApp.get_preconditions(signature: bytes) -> bytes:
get_preconditions:                                                                            (𝕡) signature#0 |
    // voting/voting.py:163
    // is_voting_open=arc4.UInt64(self.voting_open()),
    callsub voting_open                                                                       (𝕡) signature#0 | to_encode%0#0
    itob                                                                                      (𝕡) signature#0 | val_as_bytes%0#0
    // voting/voting.py:164
    // is_allowed_to_vote=arc4.UInt64(self.allowed_to_vote(signature)),
    p-load signature#0                                                                        (𝕡) signature#0 | val_as_bytes%0#0,signature#0 (copy)
    callsub allowed_to_vote                                                                   (𝕡) signature#0 | val_as_bytes%0#0,to_encode%1#0
    itob                                                                                      (𝕡) signature#0 | val_as_bytes%0#0,val_as_bytes%1#0
    // voting/voting.py:215
    // return Txn.sender in self.votes_by_account
    txn Sender                                                                                (𝕡) signature#0 | val_as_bytes%0#0,val_as_bytes%1#0,tmp%0#0
    box_len                                                                                   (𝕡) signature#0 | val_as_bytes%0#0,val_as_bytes%1#0,maybe_value%0#0,maybe_exists%0#0
    l-store maybe_exists%0#0 1                                                                (𝕡) signature#0 | val_as_bytes%0#0,val_as_bytes%1#0,maybe_exists%0#0,maybe_value%0#0
    pop 1                                                                                     (𝕡) signature#0 | val_as_bytes%0#0,val_as_bytes%1#0,maybe_exists%0#0
    // voting/voting.py:165
    // has_already_voted=arc4.UInt64(self.already_voted()),
    l-load maybe_exists%0#0 0                                                                 (𝕡) signature#0 | val_as_bytes%0#0,val_as_bytes%1#0,maybe_exists%0#0
    itob                                                                                      (𝕡) signature#0 | val_as_bytes%0#0,val_as_bytes%1#0,val_as_bytes%2#0
    // voting/voting.py:166
    // current_time=arc4.UInt64(Global.latest_timestamp),
    global LatestTimestamp                                                                    (𝕡) signature#0 | val_as_bytes%0#0,val_as_bytes%1#0,val_as_bytes%2#0,to_encode%3#0
    itob                                                                                      (𝕡) signature#0 | val_as_bytes%0#0,val_as_bytes%1#0,val_as_bytes%2#0,val_as_bytes%3#0
    // voting/voting.py:162-167
    // return VotingPreconditions(
    //     is_voting_open=arc4.UInt64(self.voting_open()),
    //     is_allowed_to_vote=arc4.UInt64(self.allowed_to_vote(signature)),
    //     has_already_voted=arc4.UInt64(self.already_voted()),
    //     current_time=arc4.UInt64(Global.latest_timestamp),
    // )
    l-load val_as_bytes%0#0 3                                                                 (𝕡) signature#0 | val_as_bytes%1#0,val_as_bytes%2#0,val_as_bytes%3#0,val_as_bytes%0#0
    l-load val_as_bytes%1#0 3                                                                 (𝕡) signature#0 | val_as_bytes%2#0,val_as_bytes%3#0,val_as_bytes%0#0,val_as_bytes%1#0
    concat                                                                                    (𝕡) signature#0 | val_as_bytes%2#0,val_as_bytes%3#0,encoded_tuple_buffer%2#0
    l-load val_as_bytes%2#0 2                                                                 (𝕡) signature#0 | val_as_bytes%3#0,encoded_tuple_buffer%2#0,val_as_bytes%2#0
    concat                                                                                    (𝕡) signature#0 | val_as_bytes%3#0,encoded_tuple_buffer%3#0
    l-load val_as_bytes%3#0 1                                                                 (𝕡) signature#0 | encoded_tuple_buffer%3#0,val_as_bytes%3#0
    concat                                                                                    (𝕡) signature#0 | encoded_tuple_buffer%4#0
    retsub                                                                                    encoded_tuple_buffer%4#0


// examples.voting.voting.VotingRoundApp.vote(fund_min_bal_req: uint64, signature: bytes, answer_ids: bytes) -> void:
vote:                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    // voting/voting.py:176
    // ensure_budget(7700, fee_source=OpUpFeeSource.GroupCredit)
    int 7700                                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | 7700
    int 0                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | 7700,0
    callsub ensure_budget                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    // voting/voting.py:178
    // assert self.allowed_to_vote(signature), "Not allowed to vote"
    p-load signature#0                                                                        (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | signature#0 (copy)
    callsub allowed_to_vote                                                                   (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%0#0
    assert // Not allowed to vote                                                             (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    // voting/voting.py:179
    // assert self.voting_open(), "Voting not open"
    callsub voting_open                                                                       (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%1#0
    assert // Voting not open                                                                 (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    // voting/voting.py:215
    // return Txn.sender in self.votes_by_account
    txn Sender                                                                                (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%0#2
    box_len                                                                                   (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | maybe_value%0#1,maybe_exists%0#0
    l-store maybe_exists%0#0 1                                                                (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | maybe_exists%0#0,maybe_value%0#1
    pop 1                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | maybe_exists%0#0
    // voting/voting.py:180
    // assert not self.already_voted(), "Already voted"
    l-load maybe_exists%0#0 0                                                                 (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | maybe_exists%0#0
    !                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%3#0
    assert // Already voted                                                                   (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    // voting/voting.py:181
    // questions_count = self.option_counts.length
    int 0                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | 0
    byte "option_counts"                                                                      (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | 0,"option_counts"
    app_global_get_ex                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | maybe_value%0#0,maybe_exists%0#0
    assert // check self.option_counts exists                                                 (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | maybe_value%0#0
    l-load maybe_value%0#0 0                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | maybe_value%0#0
    int 0                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | maybe_value%0#0,0
    extract_uint16                                                                            (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | questions_count#0
    l-store-copy questions_count#0 0                                                          (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | questions_count#0,questions_count#0 (copy)
    v-store questions_count#0                                                                 (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | questions_count#0
    // voting/voting.py:182
    // assert answer_ids.length == questions_count, "Number of answers incorrect"
    p-load answer_ids#0                                                                       (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | questions_count#0,answer_ids#0 (copy)
    int 0                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | questions_count#0,answer_ids#0 (copy),0
    extract_uint16                                                                            (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | questions_count#0,tmp%4#0
    l-load-copy tmp%4#0 0                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | questions_count#0,tmp%4#0,tmp%4#0 (copy)
    l-load questions_count#0 2                                                                (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%4#0,tmp%4#0 (copy),questions_count#0
    ==                                                                                        (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%4#0,tmp%5#0
    assert // Number of answers incorrect                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%4#0
    // voting/voting.py:185
    // (32 + 2 + VOTE_INDEX_BYTES * answer_ids.length) * BOX_BYTE_MIN_BALANCE
    int 34                                                                                    (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%4#0,34
    l-load tmp%4#0 1                                                                          (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | 34,tmp%4#0
    +                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%8#0
    int 400                                                                                   (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%8#0,400
    *                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%9#0
    // voting/voting.py:184
    // min_bal_req = BOX_FLAT_MIN_BALANCE + (
    int 2500                                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%9#0,2500
    // voting/voting.py:184-186
    // min_bal_req = BOX_FLAT_MIN_BALANCE + (
    //     (32 + 2 + VOTE_INDEX_BYTES * answer_ids.length) * BOX_BYTE_MIN_BALANCE
    // )
    l-load tmp%9#0 1                                                                          (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | 2500,tmp%9#0
    +                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0
    // voting/voting.py:188
    // fund_min_bal_req.receiver == Global.current_application_address
    p-load fund_min_bal_req#0                                                                 (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0,fund_min_bal_req#0 (copy)
    gtxns Receiver                                                                            (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0,tmp%10#0
    global CurrentApplicationAddress                                                          (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0,tmp%10#0,tmp%11#0
    l-load tmp%10#0 1                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0,tmp%11#0,tmp%10#0
    l-load tmp%11#0 1                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0,tmp%10#0,tmp%11#0
    ==                                                                                        (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0,tmp%12#0
    // voting/voting.py:187-189
    // assert (
    //     fund_min_bal_req.receiver == Global.current_application_address
    // ), "Payment must be to app address"
    assert // Payment must be to app address                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0
    // voting/voting.py:191
    // log(min_bal_req)
    l-load-copy min_bal_req#0 0                                                               (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0,min_bal_req#0 (copy)
    itob                                                                                      (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0,tmp%13#0
    log                                                                                       (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0
    // voting/voting.py:192
    // assert fund_min_bal_req.amount == min_bal_req, "Payment must be the exact min balance"
    p-load fund_min_bal_req#0                                                                 (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0,fund_min_bal_req#0 (copy)
    gtxns Amount                                                                              (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | min_bal_req#0,tmp%14#0
    l-load min_bal_req#0 1                                                                    (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%14#0,min_bal_req#0
    ==                                                                                        (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | tmp%15#0
    assert // Payment must be the exact min balance                                           (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    // voting/voting.py:194
    // cumulative_offset = UInt64(0)
    int 0                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | 0
    v-store cumulative_offset#0                                                               (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    // voting/voting.py:195
    // for question_index in urange(questions_count):
    int 0                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | 0
    v-store question_index#0                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    b vote_for_header@1                                                                       (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |

vote_for_header@1:                                                                            (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    // voting/voting.py:195
    // for question_index in urange(questions_count):
    v-load question_index#0                                                                   (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0
    v-load questions_count#0                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,questions_count#0
    <                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | continue_looping%0#0
    bz vote_after_for@4 ; b vote_for_body@2                                                   (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |

vote_for_body@2:                                                                              (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    // voting/voting.py:197
    // answer_option_index = answer_ids[question_index].native
    p-load answer_ids#0                                                                       (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | answer_ids#0 (copy)
    extract 2 0                                                                               (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | array_head_and_tail%0#0
    v-load question_index#0                                                                   (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | array_head_and_tail%0#0,question_index#0
    l-store-copy question_index#0 1                                                           (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,array_head_and_tail%0#0,question_index#0 (copy)
    int 1                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,array_head_and_tail%0#0,question_index#0 (copy),1
    extract3 // on error: Index access is out of bounds                                       (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,tmp%16#0
    btoi                                                                                      (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0
    // voting/voting.py:198
    // options_count = self.option_counts[question_index].native
    int 0                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,0
    byte "option_counts"                                                                      (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,0,"option_counts"
    app_global_get_ex                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,maybe_value%1#0,maybe_exists%1#0
    assert // check self.option_counts exists                                                 (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,maybe_value%1#0
    l-load maybe_value%1#0 0                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,maybe_value%1#0
    extract 2 0                                                                               (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,array_head_and_tail%1#0
    l-load-copy question_index#0 2                                                            (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,array_head_and_tail%1#0,question_index#0 (copy)
    int 1                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,array_head_and_tail%1#0,question_index#0 (copy),1
    extract3 // on error: Index access is out of bounds                                       (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,tmp%17#0
    btoi                                                                                      (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,options_count#0
    // voting/voting.py:199
    // assert answer_option_index < options_count, "Answer option index invalid"
    l-load-copy answer_option_index#0 1                                                       (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,options_count#0,answer_option_index#0 (copy)
    l-load-copy options_count#0 1                                                             (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,options_count#0,answer_option_index#0 (copy),options_count#0 (copy)
    <                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,options_count#0,tmp%18#0
    assert // Answer option index invalid                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,options_count#0
    // voting/voting.py:200
    // self.increment_vote_in_box(cumulative_offset + answer_option_index)
    v-load cumulative_offset#0                                                                (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,options_count#0,cumulative_offset#0
    l-store-copy cumulative_offset#0 1                                                        (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,answer_option_index#0,cumulative_offset#0,options_count#0,cumulative_offset#0 (copy)
    l-load answer_option_index#0 3                                                            (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,cumulative_offset#0 (copy),answer_option_index#0
    +                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,index#0
    // voting/voting.py:241
    // return op.btoi(self.tally_box.extract(index, VOTE_COUNT_BYTES))
    byte "V"                                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,index#0,"V"
    l-load-copy index#0 1                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,index#0,"V",index#0 (copy)
    int 8                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,index#0,"V",index#0 (copy),8
    box_extract                                                                               (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,index#0,tmp%0#2
    btoi                                                                                      (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,index#0,current_vote#0
    // voting/voting.py:246
    // self.tally_box.replace(index, op.itob(current_vote + 1))
    int 1                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,index#0,current_vote#0,1
    +                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,index#0,tmp%0#1
    itob                                                                                      (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,index#0,tmp%1#1
    byte "V"                                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,index#0,tmp%1#1,"V"
    l-load index#0 2                                                                          (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,tmp%1#1,"V",index#0
    l-load tmp%1#1 2                                                                          (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0,"V",index#0,tmp%1#1
    box_replace                                                                               (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0
    // voting/voting.py:201
    // cumulative_offset += options_count
    l-load cumulative_offset#0 1                                                              (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,options_count#0,cumulative_offset#0
    l-load options_count#0 1                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0,options_count#0
    +                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,cumulative_offset#0
    v-store cumulative_offset#0                                                               (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0
    // voting/voting.py:202
    // self.votes_by_account[Txn.sender] = answer_ids.copy()
    txn Sender                                                                                (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,tmp%20#0
    l-load-copy tmp%20#0 0                                                                    (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,tmp%20#0,tmp%20#0 (copy)
    box_del                                                                                   (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,tmp%20#0,{box_del}
    pop 1                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,tmp%20#0
    l-load tmp%20#0 0                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,tmp%20#0
    p-load answer_ids#0                                                                       (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,tmp%20#0,answer_ids#0 (copy)
    box_put                                                                                   (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0
    // voting/voting.py:203
    // self.voter_count += 1
    int 0                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,0
    byte "voter_count"                                                                        (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,0,"voter_count"
    app_global_get_ex                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,maybe_value%2#0,maybe_exists%2#0
    assert // check self.voter_count exists                                                   (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,maybe_value%2#0
    l-load maybe_value%2#0 0                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,maybe_value%2#0
    int 1                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,maybe_value%2#0,1
    +                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,new_state_value%0#0
    byte "voter_count"                                                                        (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,new_state_value%0#0,"voter_count"
    l-load new_state_value%0#0 1                                                              (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,"voter_count",new_state_value%0#0
    app_global_put                                                                            (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0
    // voting/voting.py:195
    // for question_index in urange(questions_count):
    l-load question_index#0 0                                                                 (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0
    int 1                                                                                     (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0,1
    +                                                                                         (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 | question_index#0
    v-store question_index#0                                                                  (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    b vote_for_header@1                                                                       (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |

vote_after_for@4:                                                                             (𝕡) fund_min_bal_req#0,signature#0,answer_ids#0 |
    retsub


// examples.voting.voting.VotingRoundApp.voting_open() -> uint64:
voting_open:
    // voting/voting.py:208
    // self.is_bootstrapped
    int 0                                                                                     0
    byte "is_bootstrapped"                                                                    0,"is_bootstrapped"
    app_global_get_ex                                                                         maybe_value%0#0,maybe_exists%0#0
    assert // check self.is_bootstrapped exists                                               maybe_value%0#0
    // voting/voting.py:208-210
    // self.is_bootstrapped
    // and not self.close_time
    // and self.start_time <= Global.latest_timestamp <= self.end_time
    l-load maybe_value%0#0 0                                                                  maybe_value%0#0
    bz voting_open_bool_false@5 ; b voting_open_and_contd@1

voting_open_and_contd@1:
    // voting/voting.py:209
    // and not self.close_time
    int 0                                                                                     0
    byte "close_time"                                                                         0,"close_time"
    app_global_get_ex                                                                         maybe_value%1#0,maybe_exists%1#0
    l-store maybe_exists%1#0 1                                                                maybe_exists%1#0,maybe_value%1#0
    pop 1                                                                                     maybe_exists%1#0
    l-load maybe_exists%1#0 0                                                                 maybe_exists%1#0
    bz voting_open_and_contd@2 ; b voting_open_bool_false@5

voting_open_and_contd@2:
    // voting/voting.py:210
    // and self.start_time <= Global.latest_timestamp <= self.end_time
    int 0                                                                                     0
    byte "start_time"                                                                         0,"start_time"
    app_global_get_ex                                                                         maybe_value%2#0,maybe_exists%2#0
    assert // check self.start_time exists                                                    maybe_value%2#0
    global LatestTimestamp                                                                    maybe_value%2#0,awst_tmp%0#0
    l-store-copy awst_tmp%0#0 0                                                               maybe_value%2#0,awst_tmp%0#0,awst_tmp%0#0 (copy)
    v-store awst_tmp%0#0                                                                      maybe_value%2#0,awst_tmp%0#0
    l-load maybe_value%2#0 1                                                                  awst_tmp%0#0,maybe_value%2#0
    l-load awst_tmp%0#0 1                                                                     maybe_value%2#0,awst_tmp%0#0
    <=                                                                                        tmp%0#0
    bz voting_open_bool_false@5 ; b voting_open_and_contd@3

voting_open_and_contd@3:
    // voting/voting.py:210
    // and self.start_time <= Global.latest_timestamp <= self.end_time
    int 0                                                                                     0
    byte "end_time"                                                                           0,"end_time"
    app_global_get_ex                                                                         maybe_value%3#0,maybe_exists%3#0
    assert // check self.end_time exists                                                      maybe_value%3#0
    v-load awst_tmp%0#0                                                                       maybe_value%3#0,awst_tmp%0#0
    l-load maybe_value%3#0 1                                                                  awst_tmp%0#0,maybe_value%3#0
    <=                                                                                        tmp%1#0
    bz voting_open_bool_false@5 ; b voting_open_bool_true@4

voting_open_bool_true@4:
    int 1                                                                                     1
    v-store and_result%0#0
    b voting_open_bool_merge@6

voting_open_bool_false@5:
    int 0                                                                                     0
    v-store and_result%0#0
    b voting_open_bool_merge@6

voting_open_bool_merge@6:
    // voting/voting.py:207-211
    // return (
    //     self.is_bootstrapped
    //     and not self.close_time
    //     and self.start_time <= Global.latest_timestamp <= self.end_time
    // )
    v-load and_result%0#0                                                                     and_result%0#0
    retsub                                                                                    and_result%0#0


// examples.voting.voting.VotingRoundApp.allowed_to_vote(signature: bytes) -> uint64:
allowed_to_vote:                                                                              (𝕡) signature#0 |
    // voting/voting.py:232
    // ensure_budget(2000)
    int 2000                                                                                  (𝕡) signature#0 | 2000
    int 0                                                                                     (𝕡) signature#0 | 2000,0
    callsub ensure_budget                                                                     (𝕡) signature#0 |
    // voting/voting.py:234
    // Txn.sender.bytes,
    txn Sender                                                                                (𝕡) signature#0 | tmp%0#0
    // voting/voting.py:236
    // self.snapshot_public_key,
    int 0                                                                                     (𝕡) signature#0 | tmp%0#0,0
    byte "snapshot_public_key"                                                                (𝕡) signature#0 | tmp%0#0,0,"snapshot_public_key"
    app_global_get_ex                                                                         (𝕡) signature#0 | tmp%0#0,maybe_value%0#0,maybe_exists%0#0
    assert // check self.snapshot_public_key exists                                           (𝕡) signature#0 | tmp%0#0,maybe_value%0#0
    // voting/voting.py:233-237
    // return op.ed25519verify_bare(
    //     Txn.sender.bytes,
    //     signature,
    //     self.snapshot_public_key,
    // )
    l-load tmp%0#0 1                                                                          (𝕡) signature#0 | maybe_value%0#0,tmp%0#0
    p-load signature#0                                                                        (𝕡) signature#0 | maybe_value%0#0,tmp%0#0,signature#0 (copy)
    l-load maybe_value%0#0 2                                                                  (𝕡) signature#0 | tmp%0#0,signature#0 (copy),maybe_value%0#0
    ed25519verify_bare                                                                        (𝕡) signature#0 | tmp%1#0
    retsub                                                                                    tmp%1#0


