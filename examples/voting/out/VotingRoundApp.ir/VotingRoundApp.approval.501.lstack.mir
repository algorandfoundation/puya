// Op                                                                                             Stack (out)
// examples.voting.voting.VotingRoundApp.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    main_block@0:
        txn ApplicationID                                                                         tmp%0#0
        l-load tmp%0#0 0                                                                          tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // voting/voting.py:51
        // self.is_bootstrapped = False
        byte "is_bootstrapped"                                                                    "is_bootstrapped"
        int 0                                                                                     "is_bootstrapped",0
        app_global_put
        // voting/voting.py:53
        // self.voter_count = UInt64(0)
        byte "voter_count"                                                                        "voter_count"
        int 0                                                                                     "voter_count",0
        app_global_put
        b main_after_if_else@2

    main_after_if_else@2:
        // voting/voting.py:49
        // class VotingRoundApp(ARC4Contract):
        txn OnCompletion                                                                          tmp%0#2
        l-load tmp%0#2 0                                                                          tmp%0#2
        !                                                                                         tmp%1#0
        l-load tmp%1#0 0                                                                          tmp%1#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                                         tmp%2#0
        l-load tmp%2#0 0                                                                          tmp%2#0
        bz main_create_NoOp@9 ; b main_call_NoOp@4

    main_call_NoOp@4:
        // voting/voting.py:49
        // class VotingRoundApp(ARC4Contract):
        txna ApplicationArgs 0                                                                    tmp%4#0
        method bootstrap(pay)void                                                                 tmp%4#0,Method(bootstrap(pay)void)
        method close()void                                                                        tmp%4#0,Method(bootstrap(pay)void),Method(close()void)
        method get_preconditions(byte[])(uint64,uint64,uint64,uint64)                             tmp%4#0,Method(bootstrap(pay)void),Method(close()void),Method(get_preconditions(byte[])(uint64,uint64,uint64,uint64))
        method vote(pay,byte[],uint8[])void                                                       tmp%4#0,Method(bootstrap(pay)void),Method(close()void),Method(get_preconditions(byte[])(uint64,uint64,uint64,uint64)),Method(vote(pay,byte[],uint8[])void)
        l-load tmp%4#0 4                                                                          Method(bootstrap(pay)void),Method(close()void),Method(get_preconditions(byte[])(uint64,uint64,uint64,uint64)),Method(vote(pay,byte[],uint8[])void),tmp%4#0
        match main_bootstrap_route@5 main_close_route@6 main_get_preconditions_route@7 main_vote_route@8 ; b main_after_if_else@11 

    main_bootstrap_route@5:
        // voting/voting.py:82
        // @arc4.abimethod
        callsub bootstrap
        b main_after_if_else@11

    main_close_route@6:
        // voting/voting.py:110
        // @arc4.abimethod
        callsub close
        b main_after_if_else@11

    main_get_preconditions_route@7:
        // voting/voting.py:160
        // @arc4.abimethod(readonly=True)
        callsub get_preconditions
        b main_after_if_else@11

    main_vote_route@8:
        // voting/voting.py:169
        // @arc4.abimethod
        callsub vote
        b main_after_if_else@11

    main_create_NoOp@9:
        // voting/voting.py:49
        // class VotingRoundApp(ARC4Contract):
        txna ApplicationArgs 0                                                                    tmp%5#0
        method create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void               tmp%5#0,Method(create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void)
        l-load tmp%5#0 1                                                                          Method(create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void),tmp%5#0
        match main_create_route@10 ; b main_after_if_else@11

    main_create_route@10:
        // voting/voting.py:58
        // @arc4.abimethod(create="require")
        callsub create
        b main_after_if_else@11

    main_after_if_else@11:
        // voting/voting.py:49
        // class VotingRoundApp(ARC4Contract):
        err


// _puya_lib.util.ensure_budget(required_budget: uint64, fee_source: uint64) -> void:
subroutine ensure_budget:
    ensure_budget_block@0:                                                                        (洧도) required_budget#0,fee_source#0 |
        p-load required_budget#0                                                                  (洧도) required_budget#0,fee_source#0 | required_budget#0 (copy)
        int 10                                                                                    (洧도) required_budget#0,fee_source#0 | required_budget#0 (copy),10
        +                                                                                         (洧도) required_budget#0,fee_source#0 | required_budget_with_buffer#0
        v-store required_budget_with_buffer#0                                                     (洧도) required_budget#0,fee_source#0 |
        b ensure_budget_while_top@1                                                               (洧도) required_budget#0,fee_source#0 |

    ensure_budget_while_top@1:                                                                    (洧도) required_budget#0,fee_source#0 |
        global OpcodeBudget                                                                       (洧도) required_budget#0,fee_source#0 | tmp%1#0
        v-load required_budget_with_buffer#0                                                      (洧도) required_budget#0,fee_source#0 | tmp%1#0,required_budget_with_buffer#0
        l-load tmp%1#0 1                                                                          (洧도) required_budget#0,fee_source#0 | required_budget_with_buffer#0,tmp%1#0
        >                                                                                         (洧도) required_budget#0,fee_source#0 | tmp%2#0
        l-load tmp%2#0 0                                                                          (洧도) required_budget#0,fee_source#0 | tmp%2#0
        bz ensure_budget_after_while@6 ; b ensure_budget_while_body@2                             (洧도) required_budget#0,fee_source#0 |

    ensure_budget_while_body@2:                                                                   (洧도) required_budget#0,fee_source#0 |
        itxn_begin                                                                                (洧도) required_budget#0,fee_source#0 |
        int appl                                                                                  (洧도) required_budget#0,fee_source#0 | appl
        itxn_field TypeEnum                                                                       (洧도) required_budget#0,fee_source#0 |
        int DeleteApplication                                                                     (洧도) required_budget#0,fee_source#0 | DeleteApplication
        itxn_field OnCompletion                                                                   (洧도) required_budget#0,fee_source#0 |
        byte 0x068101                                                                             (洧도) required_budget#0,fee_source#0 | 0x068101
        itxn_field ApprovalProgram                                                                (洧도) required_budget#0,fee_source#0 |
        byte 0x068101                                                                             (洧도) required_budget#0,fee_source#0 | 0x068101
        itxn_field ClearStateProgram                                                              (洧도) required_budget#0,fee_source#0 |
        p-load fee_source#0                                                                       (洧도) required_budget#0,fee_source#0 | fee_source#0 (copy)
        switch ensure_budget_switch_case_0@3 ensure_budget_switch_case_1@4 ; b ensure_budget_switch_case_next@5 (洧도) required_budget#0,fee_source#0 | 

    ensure_budget_switch_case_0@3:                                                                (洧도) required_budget#0,fee_source#0 |
        int 0                                                                                     (洧도) required_budget#0,fee_source#0 | 0
        itxn_field Fee                                                                            (洧도) required_budget#0,fee_source#0 |
        b ensure_budget_switch_case_next@5                                                        (洧도) required_budget#0,fee_source#0 |

    ensure_budget_switch_case_1@4:                                                                (洧도) required_budget#0,fee_source#0 |
        global MinTxnFee                                                                          (洧도) required_budget#0,fee_source#0 | tmp%3#0
        l-load tmp%3#0 0                                                                          (洧도) required_budget#0,fee_source#0 | tmp%3#0
        itxn_field Fee                                                                            (洧도) required_budget#0,fee_source#0 |
        b ensure_budget_switch_case_next@5                                                        (洧도) required_budget#0,fee_source#0 |

    ensure_budget_switch_case_next@5:                                                             (洧도) required_budget#0,fee_source#0 |
        itxn_submit                                                                               (洧도) required_budget#0,fee_source#0 |
        b ensure_budget_while_top@1                                                               (洧도) required_budget#0,fee_source#0 |

    ensure_budget_after_while@6:                                                                  (洧도) required_budget#0,fee_source#0 |
        retsub


// examples.voting.voting.itoa(i: uint64) -> bytes:
subroutine itoa:
    itoa_block@0:                                                                                 (洧도) i#0 |
        // voting/voting.py:253
        // if i < radix:
        p-load i#0                                                                                (洧도) i#0 | i#0 (copy)
        // voting/voting.py:252
        // radix = digits.length
        int 10                                                                                    (洧도) i#0 | i#0 (copy),10
        // voting/voting.py:253
        // if i < radix:
        <                                                                                         (洧도) i#0 | tmp%1#0
        l-load tmp%1#0 0                                                                          (洧도) i#0 | tmp%1#0
        bz itoa_after_if_else@2 ; b itoa_if_body@1                                                (洧도) i#0 |

    itoa_if_body@1:                                                                               (洧도) i#0 |
        // voting/voting.py:251
        // digits = Bytes(b"0123456789")
        byte 0x30313233343536373839                                                               (洧도) i#0 | 0x30313233343536373839
        // voting/voting.py:254
        // return String.from_bytes(digits[i])
        p-load i#0                                                                                (洧도) i#0 | 0x30313233343536373839,i#0 (copy)
        int 1                                                                                     (洧도) i#0 | 0x30313233343536373839,i#0 (copy),1
        extract3                                                                                  (洧도) i#0 | extract%0#0
        l-load extract%0#0 0                                                                      (洧도) i#0 | extract%0#0
        retsub                                                                                    extract%0#0

    itoa_after_if_else@2:                                                                         (洧도) i#0 |
        // voting/voting.py:255
        // return itoa(i // radix) + String.from_bytes(digits[i % radix])
        p-load i#0                                                                                (洧도) i#0 | i#0 (copy)
        // voting/voting.py:252
        // radix = digits.length
        int 10                                                                                    (洧도) i#0 | i#0 (copy),10
        // voting/voting.py:255
        // return itoa(i // radix) + String.from_bytes(digits[i % radix])
        /                                                                                         (洧도) i#0 | tmp%2#0
        l-load tmp%2#0 0                                                                          (洧도) i#0 | tmp%2#0
        callsub itoa                                                                              (洧도) i#0 | tmp%3#0
        p-load i#0                                                                                (洧도) i#0 | tmp%3#0,i#0 (copy)
        // voting/voting.py:252
        // radix = digits.length
        int 10                                                                                    (洧도) i#0 | tmp%3#0,i#0 (copy),10
        // voting/voting.py:255
        // return itoa(i // radix) + String.from_bytes(digits[i % radix])
        %                                                                                         (洧도) i#0 | tmp%3#0,tmp%4#0
        // voting/voting.py:251
        // digits = Bytes(b"0123456789")
        byte 0x30313233343536373839                                                               (洧도) i#0 | tmp%3#0,tmp%4#0,0x30313233343536373839
        // voting/voting.py:255
        // return itoa(i // radix) + String.from_bytes(digits[i % radix])
        l-load tmp%4#0 1                                                                          (洧도) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0
        int 1                                                                                     (洧도) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0,1
        extract3                                                                                  (洧도) i#0 | tmp%3#0,extract%1#0
        l-load tmp%3#0 1                                                                          (洧도) i#0 | extract%1#0,tmp%3#0
        l-load extract%1#0 1                                                                      (洧도) i#0 | tmp%3#0,extract%1#0
        concat                                                                                    (洧도) i#0 | tmp%5#0
        l-load tmp%5#0 0                                                                          (洧도) i#0 | tmp%5#0
        retsub                                                                                    tmp%5#0


// examples.voting.voting.VotingRoundApp.create[routing]() -> void:
subroutine create:
    create_block@0:
        // voting/voting.py:58
        // @arc4.abimethod(create="require")
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(len+utf8[])%0#0
        l-load reinterpret_Encoded(len+utf8[])%0#0 0                                              reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                               vote_id#0
        txna ApplicationArgs 2                                                                    vote_id#0,reinterpret_Encoded(len+uint8[])%0#0
        l-load reinterpret_Encoded(len+uint8[])%0#0 0                                             vote_id#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                               vote_id#0,snapshot_public_key#0
        txna ApplicationArgs 3                                                                    vote_id#0,snapshot_public_key#0,reinterpret_Encoded(len+utf8[])%1#0
        l-load reinterpret_Encoded(len+utf8[])%1#0 0                                              vote_id#0,snapshot_public_key#0,reinterpret_Encoded(len+utf8[])%1#0
        extract 2 0                                                                               vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0
        txna ApplicationArgs 4                                                                    vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,reinterpret_Encoded(uint64)%0#0
        l-load reinterpret_Encoded(uint64)%0#0 0                                                  vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,reinterpret_Encoded(uint64)%0#0
        btoi                                                                                      vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0
        txna ApplicationArgs 5                                                                    vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,reinterpret_Encoded(uint64)%1#0
        l-load reinterpret_Encoded(uint64)%1#0 0                                                  vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,reinterpret_Encoded(uint64)%1#0
        btoi                                                                                      vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0
        txna ApplicationArgs 6                                                                    vote_id#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0
        l-store-copy option_counts#0 4                                                            vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,option_counts#0 (copy)
        v-store option_counts#0                                                                   vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0
        txna ApplicationArgs 7                                                                    vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,reinterpret_Encoded(uint64)%2#0
        l-load reinterpret_Encoded(uint64)%2#0 0                                                  vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,reinterpret_Encoded(uint64)%2#0
        btoi                                                                                      vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0
        txna ApplicationArgs 8                                                                    vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,reinterpret_Encoded(len+utf8[])%2#0
        l-load reinterpret_Encoded(len+utf8[])%2#0 0                                              vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,reinterpret_Encoded(len+utf8[])%2#0
        extract 2 0                                                                               vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0
        // voting/voting.py:70
        // assert start_time < end_time, "End time should be after start time"
        l-load-copy start_time#0 3                                                                vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,start_time#0 (copy)
        l-load-copy end_time#0 3                                                                  vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,start_time#0 (copy),end_time#0 (copy)
        <                                                                                         vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,tmp%0#1
        l-load tmp%0#1 0                                                                          vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,tmp%0#1
        assert // End time should be after start time                                             vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0
        // voting/voting.py:71
        // assert end_time >= Global.latest_timestamp, "End time should be in the future"
        global LatestTimestamp                                                                    vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,tmp%1#1
        l-load-copy end_time#0 3                                                                  vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,tmp%1#1,end_time#0 (copy)
        l-load tmp%1#1 1                                                                          vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,end_time#0 (copy),tmp%1#1
        >=                                                                                        vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,tmp%2#1
        l-load tmp%2#1 0                                                                          vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,tmp%2#1
        assert // End time should be in the future                                                vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0
        // voting/voting.py:73
        // self.vote_id = vote_id
        byte "vote_id"                                                                            vote_id#0,option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,"vote_id"
        l-load vote_id#0 8                                                                        option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,"vote_id",vote_id#0
        app_global_put                                                                            option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0
        // voting/voting.py:74
        // self.snapshot_public_key = snapshot_public_key
        byte "snapshot_public_key"                                                                option_counts#0,snapshot_public_key#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,"snapshot_public_key"
        l-load snapshot_public_key#0 6                                                            option_counts#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,"snapshot_public_key",snapshot_public_key#0
        app_global_put                                                                            option_counts#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0
        // voting/voting.py:75
        // self.metadata_ipfs_cid = metadata_ipfs_cid
        byte "metadata_ipfs_cid"                                                                  option_counts#0,metadata_ipfs_cid#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,"metadata_ipfs_cid"
        l-load metadata_ipfs_cid#0 5                                                              option_counts#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,"metadata_ipfs_cid",metadata_ipfs_cid#0
        app_global_put                                                                            option_counts#0,start_time#0,end_time#0,quorum#0,nft_image_url#0
        // voting/voting.py:76
        // self.start_time = start_time
        byte "start_time"                                                                         option_counts#0,start_time#0,end_time#0,quorum#0,nft_image_url#0,"start_time"
        l-load start_time#0 4                                                                     option_counts#0,end_time#0,quorum#0,nft_image_url#0,"start_time",start_time#0
        app_global_put                                                                            option_counts#0,end_time#0,quorum#0,nft_image_url#0
        // voting/voting.py:77
        // self.end_time = end_time
        byte "end_time"                                                                           option_counts#0,end_time#0,quorum#0,nft_image_url#0,"end_time"
        l-load end_time#0 3                                                                       option_counts#0,quorum#0,nft_image_url#0,"end_time",end_time#0
        app_global_put                                                                            option_counts#0,quorum#0,nft_image_url#0
        // voting/voting.py:78
        // self.quorum = quorum
        byte "quorum"                                                                             option_counts#0,quorum#0,nft_image_url#0,"quorum"
        l-load quorum#0 2                                                                         option_counts#0,nft_image_url#0,"quorum",quorum#0
        app_global_put                                                                            option_counts#0,nft_image_url#0
        // voting/voting.py:79
        // self.nft_image_url = nft_image_url
        byte "nft_image_url"                                                                      option_counts#0,nft_image_url#0,"nft_image_url"
        l-load nft_image_url#0 1                                                                  option_counts#0,"nft_image_url",nft_image_url#0
        app_global_put                                                                            option_counts#0
        // voting/voting.py:219
        // assert option_counts.length, "option_counts should be non-empty"
        l-load option_counts#0 0                                                                  option_counts#0
        int 0                                                                                     option_counts#0,0
        extract_uint16                                                                            aggregate%array_length%0#0
        l-store-copy aggregate%array_length%0#0 0                                                 aggregate%array_length%0#0,aggregate%array_length%0#0 (copy)
        v-store aggregate%array_length%0#0                                                        aggregate%array_length%0#0
        l-load-copy aggregate%array_length%0#0 0                                                  aggregate%array_length%0#0,aggregate%array_length%0#0 (copy)
        assert // option_counts should be non-empty                                               aggregate%array_length%0#0
        // voting/voting.py:220
        // assert option_counts.length <= 112, "Can't have more than 112 questions"
        l-load aggregate%array_length%0#0 0                                                       aggregate%array_length%0#0
        int 112                                                                                   aggregate%array_length%0#0,112
        <=                                                                                        tmp%3#0
        l-load tmp%3#0 0                                                                          tmp%3#0
        assert // Can't have more than 112 questions
        // voting/voting.py:222
        // total_options = UInt64(0)
        int 0                                                                                     0
        v-store total_options#0
        int 0                                                                                     0
        v-store item_index_internal%0#0
        b create_for_header@2

    create_for_header@2:
        // voting/voting.py:223
        // for item in option_counts:
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        v-load aggregate%array_length%0#0                                                         item_index_internal%0#0,aggregate%array_length%0#0
        <                                                                                         continue_looping%0#0
        l-load continue_looping%0#0 0                                                             continue_looping%0#0
        bz create_after_for@4 ; b create_for_body@3

    create_for_body@3:
        // voting/voting.py:223
        // for item in option_counts:
        v-load option_counts#0                                                                    option_counts#0
        extract 2 0                                                                               aggregate%array_trimmed%0#0
        // voting/voting.py:224
        // total_options += item.native
        l-load aggregate%array_trimmed%0#0 0                                                      aggregate%array_trimmed%0#0
        v-load item_index_internal%0#0                                                            aggregate%array_trimmed%0#0,item_index_internal%0#0
        l-store-copy item_index_internal%0#0 1                                                    item_index_internal%0#0,aggregate%array_trimmed%0#0,item_index_internal%0#0 (copy)
        getbyte                                                                                   item_index_internal%0#0,tmp%4#0
        v-load total_options#0                                                                    item_index_internal%0#0,tmp%4#0,total_options#0
        l-load tmp%4#0 1                                                                          item_index_internal%0#0,total_options#0,tmp%4#0
        +                                                                                         item_index_internal%0#0,total_options#0
        v-store total_options#0                                                                   item_index_internal%0#0
        l-load item_index_internal%0#0 0                                                          item_index_internal%0#0
        int 1                                                                                     item_index_internal%0#0,1
        +                                                                                         item_index_internal%0#0
        v-store item_index_internal%0#0
        b create_for_header@2

    create_after_for@4:
        // voting/voting.py:225
        // assert total_options <= 128, "Can't have more than 128 vote options"
        v-load total_options#0                                                                    total_options#0
        l-store-copy total_options#0 0                                                            total_options#0,total_options#0 (copy)
        int 128                                                                                   total_options#0,total_options#0 (copy),128
        <=                                                                                        total_options#0,tmp%6#0
        l-load tmp%6#0 0                                                                          total_options#0,tmp%6#0
        assert // Can't have more than 128 vote options                                           total_options#0
        // voting/voting.py:227
        // self.option_counts = option_counts.copy()
        byte "option_counts"                                                                      total_options#0,"option_counts"
        v-load option_counts#0                                                                    total_options#0,"option_counts",option_counts#0
        app_global_put                                                                            total_options#0
        // voting/voting.py:228
        // self.total_options = total_options
        byte "total_options"                                                                      total_options#0,"total_options"
        l-load total_options#0 1                                                                  "total_options",total_options#0
        app_global_put
        // voting/voting.py:58
        // @arc4.abimethod(create="require")
        int 1                                                                                     1
        return


// examples.voting.voting.VotingRoundApp.bootstrap[routing]() -> void:
subroutine bootstrap:
    bootstrap_block@0:
        // voting/voting.py:82
        // @arc4.abimethod
        txn GroupIndex                                                                            tmp%0#0
        l-load tmp%0#0 0                                                                          tmp%0#0
        int 1                                                                                     tmp%0#0,1
        -                                                                                         fund_min_bal_req#0
        l-load-copy fund_min_bal_req#0 0                                                          fund_min_bal_req#0,fund_min_bal_req#0 (copy)
        gtxns TypeEnum                                                                            fund_min_bal_req#0,gtxn_type%0#0
        l-load gtxn_type%0#0 0                                                                    fund_min_bal_req#0,gtxn_type%0#0
        int pay                                                                                   fund_min_bal_req#0,gtxn_type%0#0,pay
        ==                                                                                        fund_min_bal_req#0,gtxn_type_matches%0#0
        l-load gtxn_type_matches%0#0 0                                                            fund_min_bal_req#0,gtxn_type_matches%0#0
        assert // transaction type is pay                                                         fund_min_bal_req#0
        // voting/voting.py:84
        // assert not self.is_bootstrapped, "Must not be already bootstrapped"
        int 0                                                                                     fund_min_bal_req#0,0
        byte "is_bootstrapped"                                                                    fund_min_bal_req#0,0,"is_bootstrapped"
        app_global_get_ex                                                                         fund_min_bal_req#0,maybe_value%0#0,maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                 fund_min_bal_req#0,maybe_value%0#0,maybe_exists%0#0
        assert // check self.is_bootstrapped exists                                               fund_min_bal_req#0,maybe_value%0#0
        l-load maybe_value%0#0 0                                                                  fund_min_bal_req#0,maybe_value%0#0
        !                                                                                         fund_min_bal_req#0,tmp%0#1
        l-load tmp%0#1 0                                                                          fund_min_bal_req#0,tmp%0#1
        assert // Must not be already bootstrapped                                                fund_min_bal_req#0
        // voting/voting.py:85
        // self.is_bootstrapped = True
        byte "is_bootstrapped"                                                                    fund_min_bal_req#0,"is_bootstrapped"
        int 1                                                                                     fund_min_bal_req#0,"is_bootstrapped",1
        app_global_put                                                                            fund_min_bal_req#0
        // voting/voting.py:88
        // fund_min_bal_req.receiver == Global.current_application_address
        l-load-copy fund_min_bal_req#0 0                                                          fund_min_bal_req#0,fund_min_bal_req#0 (copy)
        gtxns Receiver                                                                            fund_min_bal_req#0,tmp%1#0
        global CurrentApplicationAddress                                                          fund_min_bal_req#0,tmp%1#0,tmp%2#0
        l-load tmp%1#0 1                                                                          fund_min_bal_req#0,tmp%2#0,tmp%1#0
        l-load tmp%2#0 1                                                                          fund_min_bal_req#0,tmp%1#0,tmp%2#0
        ==                                                                                        fund_min_bal_req#0,tmp%3#0
        // voting/voting.py:87-89
        // assert (
        //     fund_min_bal_req.receiver == Global.current_application_address
        // ), "Payment must be to app address"
        l-load tmp%3#0 0                                                                          fund_min_bal_req#0,tmp%3#0
        assert // Payment must be to app address                                                  fund_min_bal_req#0
        // voting/voting.py:91
        // tally_box_size = self.total_options * VOTE_COUNT_BYTES
        int 0                                                                                     fund_min_bal_req#0,0
        byte "total_options"                                                                      fund_min_bal_req#0,0,"total_options"
        app_global_get_ex                                                                         fund_min_bal_req#0,maybe_value%1#0,maybe_exists%1#0
        l-load maybe_exists%1#0 0                                                                 fund_min_bal_req#0,maybe_value%1#0,maybe_exists%1#0
        assert // check self.total_options exists                                                 fund_min_bal_req#0,maybe_value%1#0
        l-load maybe_value%1#0 0                                                                  fund_min_bal_req#0,maybe_value%1#0
        int 8                                                                                     fund_min_bal_req#0,maybe_value%1#0,8
        *                                                                                         fund_min_bal_req#0,tally_box_size#0
        // voting/voting.py:102
        // + (tally_box_size * BOX_BYTE_MIN_BALANCE)
        l-load-copy tally_box_size#0 0                                                            fund_min_bal_req#0,tally_box_size#0,tally_box_size#0 (copy)
        int 400                                                                                   fund_min_bal_req#0,tally_box_size#0,tally_box_size#0 (copy),400
        *                                                                                         fund_min_bal_req#0,tally_box_size#0,tmp%5#0
        // voting/voting.py:94-100
        // ASSET_MIN_BALANCE * 2
        // # create NFT fee
        // + 1000
        // # tally box
        // + BOX_FLAT_MIN_BALANCE
        // # tally box key "V"
        // + BOX_BYTE_MIN_BALANCE
        int 203900                                                                                fund_min_bal_req#0,tally_box_size#0,tmp%5#0,203900
        // voting/voting.py:94-102
        // ASSET_MIN_BALANCE * 2
        // # create NFT fee
        // + 1000
        // # tally box
        // + BOX_FLAT_MIN_BALANCE
        // # tally box key "V"
        // + BOX_BYTE_MIN_BALANCE
        // # tally box value
        // + (tally_box_size * BOX_BYTE_MIN_BALANCE)
        l-load tmp%5#0 1                                                                          fund_min_bal_req#0,tally_box_size#0,203900,tmp%5#0
        +                                                                                         fund_min_bal_req#0,tally_box_size#0,min_balance_req#0
        // voting/voting.py:104
        // log(min_balance_req)
        l-load-copy min_balance_req#0 0                                                           fund_min_bal_req#0,tally_box_size#0,min_balance_req#0,min_balance_req#0 (copy)
        itob                                                                                      fund_min_bal_req#0,tally_box_size#0,min_balance_req#0,tmp%7#0
        l-load tmp%7#0 0                                                                          fund_min_bal_req#0,tally_box_size#0,min_balance_req#0,tmp%7#0
        log                                                                                       fund_min_bal_req#0,tally_box_size#0,min_balance_req#0
        // voting/voting.py:106
        // fund_min_bal_req.amount == min_balance_req
        l-load fund_min_bal_req#0 2                                                               tally_box_size#0,min_balance_req#0,fund_min_bal_req#0
        gtxns Amount                                                                              tally_box_size#0,min_balance_req#0,tmp%8#0
        l-load tmp%8#0 0                                                                          tally_box_size#0,min_balance_req#0,tmp%8#0
        l-load min_balance_req#0 1                                                                tally_box_size#0,tmp%8#0,min_balance_req#0
        ==                                                                                        tally_box_size#0,tmp%9#0
        // voting/voting.py:105-107
        // assert (
        //     fund_min_bal_req.amount == min_balance_req
        // ), "Payment must be for the exact min balance requirement"
        l-load tmp%9#0 0                                                                          tally_box_size#0,tmp%9#0
        assert // Payment must be for the exact min balance requirement                           tally_box_size#0
        // voting/voting.py:108
        // assert self.tally_box.create(size=tally_box_size)
        byte "V"                                                                                  tally_box_size#0,"V"
        l-load tally_box_size#0 1                                                                 "V",tally_box_size#0
        box_create                                                                                tmp%10#0
        l-load tmp%10#0 0                                                                         tmp%10#0
        assert
        // voting/voting.py:82
        // @arc4.abimethod
        int 1                                                                                     1
        return


// examples.voting.voting.VotingRoundApp.close[routing]() -> void:
subroutine close:
    close_block@0:
        // voting/voting.py:112
        // ensure_budget(20000, fee_source=OpUpFeeSource.GroupCredit)
        int 20000                                                                                 20000
        int 0                                                                                     20000,0
        callsub ensure_budget
        // voting/voting.py:113
        // assert not self.close_time, "Already closed"
        int 0                                                                                     0
        byte "close_time"                                                                         0,"close_time"
        app_global_get_ex                                                                         _%0#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                maybe_exists%0#0,_%0#0
        v-store _%0#0                                                                             maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                 maybe_exists%0#0
        !                                                                                         tmp%0#0
        l-load tmp%0#0 0                                                                          tmp%0#0
        assert // Already closed
        // voting/voting.py:114
        // self.close_time.value = Global.latest_timestamp
        global LatestTimestamp                                                                    tmp%1#0
        byte "close_time"                                                                         tmp%1#0,"close_time"
        l-load tmp%1#0 1                                                                          "close_time",tmp%1#0
        app_global_put
        // voting/voting.py:119
        // + self.vote_id
        int 0                                                                                     0
        byte "vote_id"                                                                            0,"vote_id"
        app_global_get_ex                                                                         maybe_value%0#0,maybe_exists%1#0
        l-load maybe_exists%1#0 0                                                                 maybe_value%0#0,maybe_exists%1#0
        assert // check self.vote_id exists                                                       maybe_value%0#0
        // voting/voting.py:117-118
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        byte "{\"standard\":\"arc69\",\"description\":\"This is a voting result NFT for voting round with ID " maybe_value%0#0,"{\"standard\":\"arc69\",\"description\":\"This is a voting result NFT for voting round with ID "
        // voting/voting.py:117-119
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        l-load-copy maybe_value%0#0 1                                                             maybe_value%0#0,"{\"standard\":\"arc69\",\"description\":\"This is a voting result NFT for voting round with ID ",maybe_value%0#0 (copy)
        concat                                                                                    maybe_value%0#0,tmp%2#0
        // voting/voting.py:117-120
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        l-load tmp%2#0 0                                                                          maybe_value%0#0,tmp%2#0
        // voting/voting.py:120
        // + '.","properties":{"metadata":"ipfs://'
        byte ".\",\"properties\":{\"metadata\":\"ipfs://"                                         maybe_value%0#0,tmp%2#0,".\",\"properties\":{\"metadata\":\"ipfs://"
        // voting/voting.py:117-120
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        concat                                                                                    maybe_value%0#0,tmp%3#0
        // voting/voting.py:121
        // + self.metadata_ipfs_cid
        int 0                                                                                     maybe_value%0#0,tmp%3#0,0
        byte "metadata_ipfs_cid"                                                                  maybe_value%0#0,tmp%3#0,0,"metadata_ipfs_cid"
        app_global_get_ex                                                                         maybe_value%0#0,tmp%3#0,maybe_value%1#0,maybe_exists%2#0
        l-load maybe_exists%2#0 0                                                                 maybe_value%0#0,tmp%3#0,maybe_value%1#0,maybe_exists%2#0
        assert // check self.metadata_ipfs_cid exists                                             maybe_value%0#0,tmp%3#0,maybe_value%1#0
        // voting/voting.py:117-121
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        l-load tmp%3#0 1                                                                          maybe_value%0#0,maybe_value%1#0,tmp%3#0
        l-load maybe_value%1#0 1                                                                  maybe_value%0#0,tmp%3#0,maybe_value%1#0
        concat                                                                                    maybe_value%0#0,tmp%4#0
        // voting/voting.py:117-122
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        l-load tmp%4#0 0                                                                          maybe_value%0#0,tmp%4#0
        // voting/voting.py:122
        // + '","id":"'
        byte "\",\"id\":\""                                                                       maybe_value%0#0,tmp%4#0,"\",\"id\":\""
        // voting/voting.py:117-122
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        concat                                                                                    maybe_value%0#0,tmp%5#0
        // voting/voting.py:117-123
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        // + self.vote_id
        l-load tmp%5#0 0                                                                          maybe_value%0#0,tmp%5#0
        l-load maybe_value%0#0 1                                                                  tmp%5#0,maybe_value%0#0
        concat                                                                                    tmp%6#0
        // voting/voting.py:117-124
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        // + self.vote_id
        // + '","quorum":'
        l-load tmp%6#0 0                                                                          tmp%6#0
        // voting/voting.py:124
        // + '","quorum":'
        byte "\",\"quorum\":"                                                                     tmp%6#0,"\",\"quorum\":"
        // voting/voting.py:117-124
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        // + self.vote_id
        // + '","quorum":'
        concat                                                                                    tmp%7#0
        // voting/voting.py:125
        // + itoa(self.quorum)
        int 0                                                                                     tmp%7#0,0
        byte "quorum"                                                                             tmp%7#0,0,"quorum"
        app_global_get_ex                                                                         tmp%7#0,maybe_value%3#0,maybe_exists%4#0
        l-load maybe_exists%4#0 0                                                                 tmp%7#0,maybe_value%3#0,maybe_exists%4#0
        assert // check self.quorum exists                                                        tmp%7#0,maybe_value%3#0
        l-load maybe_value%3#0 0                                                                  tmp%7#0,maybe_value%3#0
        callsub itoa                                                                              tmp%7#0,tmp%8#0
        // voting/voting.py:117-125
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        // + self.vote_id
        // + '","quorum":'
        // + itoa(self.quorum)
        l-load tmp%7#0 1                                                                          tmp%8#0,tmp%7#0
        l-load tmp%8#0 1                                                                          tmp%7#0,tmp%8#0
        concat                                                                                    tmp%9#0
        // voting/voting.py:117-126
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        // + self.vote_id
        // + '","quorum":'
        // + itoa(self.quorum)
        // + ',"voterCount":'
        l-load tmp%9#0 0                                                                          tmp%9#0
        // voting/voting.py:126
        // + ',"voterCount":'
        byte ",\"voterCount\":"                                                                   tmp%9#0,",\"voterCount\":"
        // voting/voting.py:117-126
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        // + self.vote_id
        // + '","quorum":'
        // + itoa(self.quorum)
        // + ',"voterCount":'
        concat                                                                                    tmp%10#0
        // voting/voting.py:127
        // + itoa(self.voter_count)
        int 0                                                                                     tmp%10#0,0
        byte "voter_count"                                                                        tmp%10#0,0,"voter_count"
        app_global_get_ex                                                                         tmp%10#0,maybe_value%4#0,maybe_exists%5#0
        l-load maybe_exists%5#0 0                                                                 tmp%10#0,maybe_value%4#0,maybe_exists%5#0
        assert // check self.voter_count exists                                                   tmp%10#0,maybe_value%4#0
        l-load maybe_value%4#0 0                                                                  tmp%10#0,maybe_value%4#0
        callsub itoa                                                                              tmp%10#0,tmp%11#0
        // voting/voting.py:117-127
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        // + self.vote_id
        // + '","quorum":'
        // + itoa(self.quorum)
        // + ',"voterCount":'
        // + itoa(self.voter_count)
        l-load tmp%10#0 1                                                                         tmp%11#0,tmp%10#0
        l-load tmp%11#0 1                                                                         tmp%10#0,tmp%11#0
        concat                                                                                    tmp%12#0
        // voting/voting.py:117-128
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        // + self.vote_id
        // + '","quorum":'
        // + itoa(self.quorum)
        // + ',"voterCount":'
        // + itoa(self.voter_count)
        // + ',"tallies":['
        l-load tmp%12#0 0                                                                         tmp%12#0
        // voting/voting.py:128
        // + ',"tallies":['
        byte ",\"tallies\":["                                                                     tmp%12#0,",\"tallies\":["
        // voting/voting.py:117-128
        // '{"standard":"arc69",'
        // '"description":"This is a voting result NFT for voting round with ID '
        // + self.vote_id
        // + '.","properties":{"metadata":"ipfs://'
        // + self.metadata_ipfs_cid
        // + '","id":"'
        // + self.vote_id
        // + '","quorum":'
        // + itoa(self.quorum)
        // + ',"voterCount":'
        // + itoa(self.voter_count)
        // + ',"tallies":['
        concat                                                                                    note#0
        v-store note#0
        // voting/voting.py:131
        // current_index = UInt64(0)
        int 0                                                                                     0
        v-store current_index#0
        // voting/voting.py:132
        // for question_index, question_options in uenumerate(self.option_counts):
        int 0                                                                                     0
        byte "option_counts"                                                                      0,"option_counts"
        app_global_get_ex                                                                         maybe_value%5#0,maybe_exists%6#0
        l-store maybe_exists%6#0 1                                                                maybe_exists%6#0,maybe_value%5#0
        l-store-copy maybe_value%5#0 1                                                            maybe_value%5#0,maybe_exists%6#0,maybe_value%5#0 (copy)
        v-store maybe_value%5#0                                                                   maybe_value%5#0,maybe_exists%6#0
        l-load maybe_exists%6#0 0                                                                 maybe_value%5#0,maybe_exists%6#0
        assert // check self.option_counts exists                                                 maybe_value%5#0
        l-load maybe_value%5#0 0                                                                  maybe_value%5#0
        int 0                                                                                     maybe_value%5#0,0
        extract_uint16                                                                            aggregate%array_length%0#0
        v-store aggregate%array_length%0#0
        int 0                                                                                     0
        l-store item_index_internal%0#0 0                                                         item_index_internal%0#0
        l-load item_index_internal%0#0 0                                                          item_index_internal%0#0
        v-store question_index#0
        b close_for_header@2

    close_for_header@2:
        // voting/voting.py:132
        // for question_index, question_options in uenumerate(self.option_counts):
        v-load question_index#0                                                                   question_index#0
        v-load aggregate%array_length%0#0                                                         question_index#0,aggregate%array_length%0#0
        <                                                                                         continue_looping%0#0
        l-load continue_looping%0#0 0                                                             continue_looping%0#0
        bz close_after_for@15 ; b close_for_body@3

    close_for_body@3:
        // voting/voting.py:132
        // for question_index, question_options in uenumerate(self.option_counts):
        v-load maybe_value%5#0                                                                    maybe_value%5#0
        extract 2 0                                                                               aggregate%array_trimmed%0#0
        l-store-copy aggregate%array_trimmed%0#0 0                                                aggregate%array_trimmed%0#0,aggregate%array_trimmed%0#0 (copy)
        v-store aggregate%array_trimmed%0#0                                                       aggregate%array_trimmed%0#0
        l-load aggregate%array_trimmed%0#0 0                                                      aggregate%array_trimmed%0#0
        v-load question_index#0                                                                   aggregate%array_trimmed%0#0,question_index#0
        l-store-copy question_index#0 1                                                           question_index#0,aggregate%array_trimmed%0#0,question_index#0 (copy)
        int 1                                                                                     question_index#0,aggregate%array_trimmed%0#0,question_index#0 (copy),1
        extract3 // on error: index access is out of bounds                                       question_index#0,question_options#0
        v-store question_options#0                                                                question_index#0
        // voting/voting.py:133
        // if question_index > 0:
        l-load question_index#0 0                                                                 question_index#0
        bz close_after_if_else@5 ; b close_if_body@4

    close_if_body@4:
        // voting/voting.py:134
        // note += ","
        v-load note#0                                                                             note#0
        byte ","                                                                                  note#0,","
        concat                                                                                    note#0
        v-store note#0
        b close_after_if_else@5

    close_after_if_else@5:
        // voting/voting.py:135
        // if question_options > 0:
        v-load question_options#0                                                                 question_options#0
        byte 0x00                                                                                 question_options#0,0x00
        b>                                                                                        tmp%16#0
        l-load tmp%16#0 0                                                                         tmp%16#0
        bz close_after_if_else@13 ; b close_if_body@6

    close_if_body@6:
        // voting/voting.py:136
        // note += "["
        v-load note#0                                                                             note#0
        byte "["                                                                                  note#0,"["
        concat                                                                                    note#0
        v-store note#0
        // voting/voting.py:137
        // for option_index in urange(question_options.native):
        v-load aggregate%array_trimmed%0#0                                                        aggregate%array_trimmed%0#0
        v-load question_index#0                                                                   aggregate%array_trimmed%0#0,question_index#0
        getbyte                                                                                   tmp%18#0
        v-store tmp%18#0
        int 0                                                                                     0
        l-store value_internal%0#0 0                                                              value_internal%0#0
        l-load value_internal%0#0 0                                                               value_internal%0#0
        v-store option_index#1
        b close_for_header@7

    close_for_header@7:
        // voting/voting.py:137
        // for option_index in urange(question_options.native):
        v-load option_index#1                                                                     option_index#1
        v-load tmp%18#0                                                                           option_index#1,tmp%18#0
        <                                                                                         continue_looping%1#0
        l-load continue_looping%1#0 0                                                             continue_looping%1#0
        bz close_after_for@12 ; b close_for_body@8

    close_for_body@8:
        // voting/voting.py:138
        // if option_index > 0:
        v-load option_index#1                                                                     option_index#1
        bz close_after_if_else@10 ; b close_if_body@9

    close_if_body@9:
        // voting/voting.py:139
        // note += ","
        v-load note#0                                                                             note#0
        byte ","                                                                                  note#0,","
        concat                                                                                    note#0
        v-store note#0
        b close_after_if_else@10

    close_after_if_else@10:
        // voting/voting.py:241
        // return op.btoi(self.tally_box.extract(index, VOTE_COUNT_BYTES))
        byte "V"                                                                                  "V"
        v-load current_index#0                                                                    "V",current_index#0
        l-store-copy current_index#0 1                                                            current_index#0,"V",current_index#0 (copy)
        int 8                                                                                     current_index#0,"V",current_index#0 (copy),8
        box_extract                                                                               current_index#0,tmp%0#1
        l-load tmp%0#1 0                                                                          current_index#0,tmp%0#1
        btoi                                                                                      current_index#0,votes_for_option#0
        // voting/voting.py:141
        // note += itoa(votes_for_option)
        l-load votes_for_option#0 0                                                               current_index#0,votes_for_option#0
        callsub itoa                                                                              current_index#0,tmp%22#0
        v-load note#0                                                                             current_index#0,tmp%22#0,note#0
        l-load tmp%22#0 1                                                                         current_index#0,note#0,tmp%22#0
        concat                                                                                    current_index#0,note#0
        v-store note#0                                                                            current_index#0
        // voting/voting.py:142
        // current_index += 1
        l-load current_index#0 0                                                                  current_index#0
        int 1                                                                                     current_index#0,1
        +                                                                                         current_index#0
        v-store current_index#0
        // voting/voting.py:137
        // for option_index in urange(question_options.native):
        v-load option_index#1                                                                     option_index#1
        int 1                                                                                     option_index#1,1
        +                                                                                         value_internal%0#0
        l-load value_internal%0#0 0                                                               value_internal%0#0
        v-store option_index#1
        b close_for_header@7

    close_after_for@12:
        // voting/voting.py:143
        // note += "]"
        v-load note#0                                                                             note#0
        byte "]"                                                                                  note#0,"]"
        concat                                                                                    note#0
        v-store note#0
        b close_after_if_else@13

    close_after_if_else@13:
        v-load question_index#0                                                                   question_index#0
        int 1                                                                                     question_index#0,1
        +                                                                                         item_index_internal%0#0
        l-load item_index_internal%0#0 0                                                          item_index_internal%0#0
        v-store question_index#0
        b close_for_header@2

    close_after_for@15:
        // voting/voting.py:144
        // note += "]}}"
        v-load note#0                                                                             note#0
        byte "]}}"                                                                                note#0,"]}}"
        concat                                                                                    note#0
        // voting/voting.py:146-156
        // itxn.AssetConfig(
        //     total=1,
        //     decimals=0,
        //     default_frozen=False,
        //     asset_name="[VOTE RESULT] " + self.vote_id,
        //     unit_name="VOTERSLT",
        //     url=self.nft_image_url,
        //     note=note,
        //     fee=Global.min_txn_fee,
        // )
        // .submit()
        itxn_begin                                                                                note#0
        // voting/voting.py:154
        // fee=Global.min_txn_fee,
        global MinTxnFee                                                                          note#0,inner_txn_params%0%%param_Fee_idx_0#0
        // voting/voting.py:150
        // asset_name="[VOTE RESULT] " + self.vote_id,
        int 0                                                                                     note#0,inner_txn_params%0%%param_Fee_idx_0#0,0
        byte "vote_id"                                                                            note#0,inner_txn_params%0%%param_Fee_idx_0#0,0,"vote_id"
        app_global_get_ex                                                                         note#0,inner_txn_params%0%%param_Fee_idx_0#0,maybe_value%6#0,maybe_exists%7#0
        l-load maybe_exists%7#0 0                                                                 note#0,inner_txn_params%0%%param_Fee_idx_0#0,maybe_value%6#0,maybe_exists%7#0
        assert // check self.vote_id exists                                                       note#0,inner_txn_params%0%%param_Fee_idx_0#0,maybe_value%6#0
        byte "[VOTE RESULT] "                                                                     note#0,inner_txn_params%0%%param_Fee_idx_0#0,maybe_value%6#0,"[VOTE RESULT] "
        l-load maybe_value%6#0 1                                                                  note#0,inner_txn_params%0%%param_Fee_idx_0#0,"[VOTE RESULT] ",maybe_value%6#0
        concat                                                                                    note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0
        // voting/voting.py:152
        // url=self.nft_image_url,
        int 0                                                                                     note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,0
        byte "nft_image_url"                                                                      note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,0,"nft_image_url"
        app_global_get_ex                                                                         note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%7#0,maybe_exists%8#0
        l-load maybe_exists%8#0 0                                                                 note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%7#0,maybe_exists%8#0
        assert // check self.nft_image_url exists                                                 note#0,inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%7#0
        l-load note#0 3                                                                           inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%7#0,note#0
        itxn_field Note                                                                           inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%7#0
        l-load maybe_value%7#0 0                                                                  inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,maybe_value%7#0
        itxn_field ConfigAssetURL                                                                 inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0
        // voting/voting.py:151
        // unit_name="VOTERSLT",
        byte "VOTERSLT"                                                                           inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0,"VOTERSLT"
        itxn_field ConfigAssetUnitName                                                            inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0
        l-load inner_txn_params%0%%param_ConfigAssetName_idx_0#0 0                                inner_txn_params%0%%param_Fee_idx_0#0,inner_txn_params%0%%param_ConfigAssetName_idx_0#0
        itxn_field ConfigAssetName                                                                inner_txn_params%0%%param_Fee_idx_0#0
        // voting/voting.py:149
        // default_frozen=False,
        int 0                                                                                     inner_txn_params%0%%param_Fee_idx_0#0,0
        itxn_field ConfigAssetDefaultFrozen                                                       inner_txn_params%0%%param_Fee_idx_0#0
        // voting/voting.py:148
        // decimals=0,
        int 0                                                                                     inner_txn_params%0%%param_Fee_idx_0#0,0
        itxn_field ConfigAssetDecimals                                                            inner_txn_params%0%%param_Fee_idx_0#0
        // voting/voting.py:147
        // total=1,
        int 1                                                                                     inner_txn_params%0%%param_Fee_idx_0#0,1
        itxn_field ConfigAssetTotal                                                               inner_txn_params%0%%param_Fee_idx_0#0
        // voting/voting.py:146
        // itxn.AssetConfig(
        int acfg                                                                                  inner_txn_params%0%%param_Fee_idx_0#0,acfg
        itxn_field TypeEnum                                                                       inner_txn_params%0%%param_Fee_idx_0#0
        l-load inner_txn_params%0%%param_Fee_idx_0#0 0                                            inner_txn_params%0%%param_Fee_idx_0#0
        itxn_field Fee
        // voting/voting.py:146-156
        // itxn.AssetConfig(
        //     total=1,
        //     decimals=0,
        //     default_frozen=False,
        //     asset_name="[VOTE RESULT] " + self.vote_id,
        //     unit_name="VOTERSLT",
        //     url=self.nft_image_url,
        //     note=note,
        //     fee=Global.min_txn_fee,
        // )
        // .submit()
        itxn_submit
        // voting/voting.py:146-157
        // itxn.AssetConfig(
        //     total=1,
        //     decimals=0,
        //     default_frozen=False,
        //     asset_name="[VOTE RESULT] " + self.vote_id,
        //     unit_name="VOTERSLT",
        //     url=self.nft_image_url,
        //     note=note,
        //     fee=Global.min_txn_fee,
        // )
        // .submit()
        // .created_asset.id
        itxn CreatedAssetID                                                                       tmp%27#0
        // voting/voting.py:145
        // self.nft_asset_id = (
        byte "nft_asset_id"                                                                       tmp%27#0,"nft_asset_id"
        // voting/voting.py:145-158
        // self.nft_asset_id = (
        //     itxn.AssetConfig(
        //         total=1,
        //         decimals=0,
        //         default_frozen=False,
        //         asset_name="[VOTE RESULT] " + self.vote_id,
        //         unit_name="VOTERSLT",
        //         url=self.nft_image_url,
        //         note=note,
        //         fee=Global.min_txn_fee,
        //     )
        //     .submit()
        //     .created_asset.id
        // )
        l-load tmp%27#0 1                                                                         "nft_asset_id",tmp%27#0
        app_global_put
        // voting/voting.py:110
        // @arc4.abimethod
        int 1                                                                                     1
        return


// examples.voting.voting.VotingRoundApp.get_preconditions[routing]() -> void:
subroutine get_preconditions:
    get_preconditions_block@0:
        // voting/voting.py:160
        // @arc4.abimethod(readonly=True)
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(len+uint8[])%0#0
        l-load reinterpret_Encoded(len+uint8[])%0#0 0                                             reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                               signature#0
        // voting/voting.py:163
        // is_voting_open=arc4.UInt64(self.voting_open()),
        callsub voting_open                                                                       signature#0,tmp%0#1
        l-load tmp%0#1 0                                                                          signature#0,tmp%0#1
        itob                                                                                      signature#0,aggregate%val_as_bytes%0#0
        // voting/voting.py:164
        // is_allowed_to_vote=arc4.UInt64(self.allowed_to_vote(signature)),
        l-load signature#0 1                                                                      aggregate%val_as_bytes%0#0,signature#0
        callsub allowed_to_vote                                                                   aggregate%val_as_bytes%0#0,tmp%2#1
        l-load tmp%2#1 0                                                                          aggregate%val_as_bytes%0#0,tmp%2#1
        itob                                                                                      aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        // voting/voting.py:215
        // return Txn.sender in self.votes_by_account
        txn Sender                                                                                aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0,materialized_values%0#0
        l-load materialized_values%0#0 0                                                          aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0,materialized_values%0#0
        box_len                                                                                   aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0,_%0#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0,maybe_exists%0#0,_%0#0
        v-store _%0#0                                                                             aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0,maybe_exists%0#0
        // voting/voting.py:165
        // has_already_voted=arc4.UInt64(self.already_voted()),
        l-load maybe_exists%0#0 0                                                                 aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0,maybe_exists%0#0
        itob                                                                                      aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0,aggregate%val_as_bytes%2#0
        // voting/voting.py:166
        // current_time=arc4.UInt64(Global.latest_timestamp),
        global LatestTimestamp                                                                    aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0,aggregate%val_as_bytes%2#0,tmp%6#0
        l-load tmp%6#0 0                                                                          aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0,aggregate%val_as_bytes%2#0,tmp%6#0
        itob                                                                                      aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0,aggregate%val_as_bytes%2#0,aggregate%val_as_bytes%3#0
        // voting/voting.py:162-167
        // return VotingPreconditions(
        //     is_voting_open=arc4.UInt64(self.voting_open()),
        //     is_allowed_to_vote=arc4.UInt64(self.allowed_to_vote(signature)),
        //     has_already_voted=arc4.UInt64(self.already_voted()),
        //     current_time=arc4.UInt64(Global.latest_timestamp),
        // )
        l-load aggregate%val_as_bytes%0#0 3                                                       aggregate%val_as_bytes%1#0,aggregate%val_as_bytes%2#0,aggregate%val_as_bytes%3#0,aggregate%val_as_bytes%0#0
        l-load aggregate%val_as_bytes%1#0 3                                                       aggregate%val_as_bytes%2#0,aggregate%val_as_bytes%3#0,aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                                    aggregate%val_as_bytes%2#0,aggregate%val_as_bytes%3#0,aggregate%head%1#0
        l-load aggregate%head%1#0 0                                                               aggregate%val_as_bytes%2#0,aggregate%val_as_bytes%3#0,aggregate%head%1#0
        l-load aggregate%val_as_bytes%2#0 2                                                       aggregate%val_as_bytes%3#0,aggregate%head%1#0,aggregate%val_as_bytes%2#0
        concat                                                                                    aggregate%val_as_bytes%3#0,aggregate%head%2#0
        l-load aggregate%head%2#0 0                                                               aggregate%val_as_bytes%3#0,aggregate%head%2#0
        l-load aggregate%val_as_bytes%3#0 1                                                       aggregate%head%2#0,aggregate%val_as_bytes%3#0
        concat                                                                                    aggregate%head%3#0
        // voting/voting.py:160
        // @arc4.abimethod(readonly=True)
        byte 0x151f7c75                                                                           aggregate%head%3#0,0x151f7c75
        l-load aggregate%head%3#0 1                                                               0x151f7c75,aggregate%head%3#0
        concat                                                                                    tmp%2#0
        l-load tmp%2#0 0                                                                          tmp%2#0
        log
        int 1                                                                                     1
        return


// examples.voting.voting.VotingRoundApp.vote[routing]() -> void:
subroutine vote:
    vote_block@0:
        // voting/voting.py:169
        // @arc4.abimethod
        txn GroupIndex                                                                            tmp%0#0
        l-load tmp%0#0 0                                                                          tmp%0#0
        int 1                                                                                     tmp%0#0,1
        -                                                                                         fund_min_bal_req#0
        l-load-copy fund_min_bal_req#0 0                                                          fund_min_bal_req#0,fund_min_bal_req#0 (copy)
        gtxns TypeEnum                                                                            fund_min_bal_req#0,gtxn_type%0#0
        l-load gtxn_type%0#0 0                                                                    fund_min_bal_req#0,gtxn_type%0#0
        int pay                                                                                   fund_min_bal_req#0,gtxn_type%0#0,pay
        ==                                                                                        fund_min_bal_req#0,gtxn_type_matches%0#0
        l-load gtxn_type_matches%0#0 0                                                            fund_min_bal_req#0,gtxn_type_matches%0#0
        assert // transaction type is pay                                                         fund_min_bal_req#0
        txna ApplicationArgs 1                                                                    fund_min_bal_req#0,reinterpret_Encoded(len+uint8[])%0#0
        l-load reinterpret_Encoded(len+uint8[])%0#0 0                                             fund_min_bal_req#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                               fund_min_bal_req#0,signature#0
        txna ApplicationArgs 2                                                                    fund_min_bal_req#0,signature#0,answer_ids#0
        l-store-copy answer_ids#0 1                                                               fund_min_bal_req#0,answer_ids#0,signature#0,answer_ids#0 (copy)
        v-store answer_ids#0                                                                      fund_min_bal_req#0,answer_ids#0,signature#0
        // voting/voting.py:176
        // ensure_budget(7700, fee_source=OpUpFeeSource.GroupCredit)
        int 7700                                                                                  fund_min_bal_req#0,answer_ids#0,signature#0,7700
        int 0                                                                                     fund_min_bal_req#0,answer_ids#0,signature#0,7700,0
        callsub ensure_budget                                                                     fund_min_bal_req#0,answer_ids#0,signature#0
        // voting/voting.py:178
        // assert self.allowed_to_vote(signature), "Not allowed to vote"
        l-load signature#0 0                                                                      fund_min_bal_req#0,answer_ids#0,signature#0
        callsub allowed_to_vote                                                                   fund_min_bal_req#0,answer_ids#0,tmp%0#1
        l-load tmp%0#1 0                                                                          fund_min_bal_req#0,answer_ids#0,tmp%0#1
        assert // Not allowed to vote                                                             fund_min_bal_req#0,answer_ids#0
        // voting/voting.py:179
        // assert self.voting_open(), "Voting not open"
        callsub voting_open                                                                       fund_min_bal_req#0,answer_ids#0,tmp%1#1
        l-load tmp%1#1 0                                                                          fund_min_bal_req#0,answer_ids#0,tmp%1#1
        assert // Voting not open                                                                 fund_min_bal_req#0,answer_ids#0
        // voting/voting.py:215
        // return Txn.sender in self.votes_by_account
        txn Sender                                                                                fund_min_bal_req#0,answer_ids#0,materialized_values%0#0
        l-load materialized_values%0#0 0                                                          fund_min_bal_req#0,answer_ids#0,materialized_values%0#0
        box_len                                                                                   fund_min_bal_req#0,answer_ids#0,_%0#0,maybe_exists%0#0
        l-store maybe_exists%0#0 1                                                                fund_min_bal_req#0,answer_ids#0,maybe_exists%0#0,_%0#0
        v-store _%0#0                                                                             fund_min_bal_req#0,answer_ids#0,maybe_exists%0#0
        // voting/voting.py:180
        // assert not self.already_voted(), "Already voted"
        l-load maybe_exists%0#0 0                                                                 fund_min_bal_req#0,answer_ids#0,maybe_exists%0#0
        !                                                                                         fund_min_bal_req#0,answer_ids#0,tmp%3#0
        l-load tmp%3#0 0                                                                          fund_min_bal_req#0,answer_ids#0,tmp%3#0
        assert // Already voted                                                                   fund_min_bal_req#0,answer_ids#0
        // voting/voting.py:181
        // questions_count = self.option_counts.length
        int 0                                                                                     fund_min_bal_req#0,answer_ids#0,0
        byte "option_counts"                                                                      fund_min_bal_req#0,answer_ids#0,0,"option_counts"
        app_global_get_ex                                                                         fund_min_bal_req#0,answer_ids#0,maybe_value%0#0,maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                 fund_min_bal_req#0,answer_ids#0,maybe_value%0#0,maybe_exists%0#0
        assert // check self.option_counts exists                                                 fund_min_bal_req#0,answer_ids#0,maybe_value%0#0
        l-load maybe_value%0#0 0                                                                  fund_min_bal_req#0,answer_ids#0,maybe_value%0#0
        int 0                                                                                     fund_min_bal_req#0,answer_ids#0,maybe_value%0#0,0
        extract_uint16                                                                            fund_min_bal_req#0,answer_ids#0,questions_count#0
        l-store-copy questions_count#0 0                                                          fund_min_bal_req#0,answer_ids#0,questions_count#0,questions_count#0 (copy)
        v-store questions_count#0                                                                 fund_min_bal_req#0,answer_ids#0,questions_count#0
        // voting/voting.py:182
        // assert answer_ids.length == questions_count, "Number of answers incorrect"
        l-load answer_ids#0 1                                                                     fund_min_bal_req#0,questions_count#0,answer_ids#0
        int 0                                                                                     fund_min_bal_req#0,questions_count#0,answer_ids#0,0
        extract_uint16                                                                            fund_min_bal_req#0,questions_count#0,aggregate%array_length%1#0
        l-load-copy aggregate%array_length%1#0 0                                                  fund_min_bal_req#0,questions_count#0,aggregate%array_length%1#0,aggregate%array_length%1#0 (copy)
        l-load questions_count#0 2                                                                fund_min_bal_req#0,aggregate%array_length%1#0,aggregate%array_length%1#0 (copy),questions_count#0
        ==                                                                                        fund_min_bal_req#0,aggregate%array_length%1#0,tmp%6#0
        l-load tmp%6#0 0                                                                          fund_min_bal_req#0,aggregate%array_length%1#0,tmp%6#0
        assert // Number of answers incorrect                                                     fund_min_bal_req#0,aggregate%array_length%1#0
        // voting/voting.py:185
        // (32 + 2 + VOTE_INDEX_BYTES * answer_ids.length) * BOX_BYTE_MIN_BALANCE
        int 34                                                                                    fund_min_bal_req#0,aggregate%array_length%1#0,34
        l-load aggregate%array_length%1#0 1                                                       fund_min_bal_req#0,34,aggregate%array_length%1#0
        +                                                                                         fund_min_bal_req#0,tmp%9#0
        l-load tmp%9#0 0                                                                          fund_min_bal_req#0,tmp%9#0
        int 400                                                                                   fund_min_bal_req#0,tmp%9#0,400
        *                                                                                         fund_min_bal_req#0,tmp%10#0
        // voting/voting.py:184
        // min_bal_req = BOX_FLAT_MIN_BALANCE + (
        int 2500                                                                                  fund_min_bal_req#0,tmp%10#0,2500
        // voting/voting.py:184-186
        // min_bal_req = BOX_FLAT_MIN_BALANCE + (
        //     (32 + 2 + VOTE_INDEX_BYTES * answer_ids.length) * BOX_BYTE_MIN_BALANCE
        // )
        l-load tmp%10#0 1                                                                         fund_min_bal_req#0,2500,tmp%10#0
        +                                                                                         fund_min_bal_req#0,min_bal_req#0
        // voting/voting.py:188
        // fund_min_bal_req.receiver == Global.current_application_address
        l-load-copy fund_min_bal_req#0 1                                                          fund_min_bal_req#0,min_bal_req#0,fund_min_bal_req#0 (copy)
        gtxns Receiver                                                                            fund_min_bal_req#0,min_bal_req#0,tmp%12#0
        global CurrentApplicationAddress                                                          fund_min_bal_req#0,min_bal_req#0,tmp%12#0,tmp%13#0
        l-load tmp%12#0 1                                                                         fund_min_bal_req#0,min_bal_req#0,tmp%13#0,tmp%12#0
        l-load tmp%13#0 1                                                                         fund_min_bal_req#0,min_bal_req#0,tmp%12#0,tmp%13#0
        ==                                                                                        fund_min_bal_req#0,min_bal_req#0,tmp%14#0
        // voting/voting.py:187-189
        // assert (
        //     fund_min_bal_req.receiver == Global.current_application_address
        // ), "Payment must be to app address"
        l-load tmp%14#0 0                                                                         fund_min_bal_req#0,min_bal_req#0,tmp%14#0
        assert // Payment must be to app address                                                  fund_min_bal_req#0,min_bal_req#0
        // voting/voting.py:191
        // log(min_bal_req)
        l-load-copy min_bal_req#0 0                                                               fund_min_bal_req#0,min_bal_req#0,min_bal_req#0 (copy)
        itob                                                                                      fund_min_bal_req#0,min_bal_req#0,tmp%15#0
        l-load tmp%15#0 0                                                                         fund_min_bal_req#0,min_bal_req#0,tmp%15#0
        log                                                                                       fund_min_bal_req#0,min_bal_req#0
        // voting/voting.py:192
        // assert fund_min_bal_req.amount == min_bal_req, "Payment must be the exact min balance"
        l-load fund_min_bal_req#0 1                                                               min_bal_req#0,fund_min_bal_req#0
        gtxns Amount                                                                              min_bal_req#0,tmp%16#0
        l-load tmp%16#0 0                                                                         min_bal_req#0,tmp%16#0
        l-load min_bal_req#0 1                                                                    tmp%16#0,min_bal_req#0
        ==                                                                                        tmp%17#0
        l-load tmp%17#0 0                                                                         tmp%17#0
        assert // Payment must be the exact min balance
        // voting/voting.py:194
        // cumulative_offset = UInt64(0)
        int 0                                                                                     0
        v-store cumulative_offset#0
        // voting/voting.py:195
        // for question_index in urange(questions_count):
        int 0                                                                                     0
        l-store value_internal%0#0 0                                                              value_internal%0#0
        l-load value_internal%0#0 0                                                               value_internal%0#0
        v-store question_index#1
        b vote_for_header@2

    vote_for_header@2:
        // voting/voting.py:195
        // for question_index in urange(questions_count):
        v-load question_index#1                                                                   question_index#1
        v-load questions_count#0                                                                  question_index#1,questions_count#0
        <                                                                                         continue_looping%0#0
        l-load continue_looping%0#0 0                                                             continue_looping%0#0
        bz vote_after_for@5 ; b vote_for_body@3

    vote_for_body@3:
        // voting/voting.py:197
        // answer_option_index = answer_ids[question_index].native
        v-load answer_ids#0                                                                       answer_ids#0
        l-store-copy answer_ids#0 0                                                               answer_ids#0,answer_ids#0 (copy)
        extract 2 0                                                                               answer_ids#0,aggregate%array_trimmed%0#0
        l-load aggregate%array_trimmed%0#0 0                                                      answer_ids#0,aggregate%array_trimmed%0#0
        v-load question_index#1                                                                   answer_ids#0,aggregate%array_trimmed%0#0,question_index#1
        l-store-copy question_index#1 1                                                           answer_ids#0,question_index#1,aggregate%array_trimmed%0#0,question_index#1 (copy)
        getbyte                                                                                   answer_ids#0,question_index#1,answer_option_index#0
        // voting/voting.py:198
        // options_count = self.option_counts[question_index].native
        int 0                                                                                     answer_ids#0,question_index#1,answer_option_index#0,0
        byte "option_counts"                                                                      answer_ids#0,question_index#1,answer_option_index#0,0,"option_counts"
        app_global_get_ex                                                                         answer_ids#0,question_index#1,answer_option_index#0,maybe_value%1#0,maybe_exists%1#0
        l-load maybe_exists%1#0 0                                                                 answer_ids#0,question_index#1,answer_option_index#0,maybe_value%1#0,maybe_exists%1#0
        assert // check self.option_counts exists                                                 answer_ids#0,question_index#1,answer_option_index#0,maybe_value%1#0
        l-load maybe_value%1#0 0                                                                  answer_ids#0,question_index#1,answer_option_index#0,maybe_value%1#0
        extract 2 0                                                                               answer_ids#0,question_index#1,answer_option_index#0,aggregate%array_trimmed%1#0
        l-load aggregate%array_trimmed%1#0 0                                                      answer_ids#0,question_index#1,answer_option_index#0,aggregate%array_trimmed%1#0
        l-load-copy question_index#1 2                                                            answer_ids#0,question_index#1,answer_option_index#0,aggregate%array_trimmed%1#0,question_index#1 (copy)
        getbyte                                                                                   answer_ids#0,question_index#1,answer_option_index#0,options_count#0
        // voting/voting.py:199
        // assert answer_option_index < options_count, "Answer option index invalid"
        l-load-copy answer_option_index#0 1                                                       answer_ids#0,question_index#1,answer_option_index#0,options_count#0,answer_option_index#0 (copy)
        l-load-copy options_count#0 1                                                             answer_ids#0,question_index#1,answer_option_index#0,options_count#0,answer_option_index#0 (copy),options_count#0 (copy)
        <                                                                                         answer_ids#0,question_index#1,answer_option_index#0,options_count#0,tmp%20#0
        l-load tmp%20#0 0                                                                         answer_ids#0,question_index#1,answer_option_index#0,options_count#0,tmp%20#0
        assert // Answer option index invalid                                                     answer_ids#0,question_index#1,answer_option_index#0,options_count#0
        // voting/voting.py:200
        // self.increment_vote_in_box(cumulative_offset + answer_option_index)
        v-load cumulative_offset#0                                                                answer_ids#0,question_index#1,answer_option_index#0,options_count#0,cumulative_offset#0
        l-store-copy cumulative_offset#0 1                                                        answer_ids#0,question_index#1,answer_option_index#0,cumulative_offset#0,options_count#0,cumulative_offset#0 (copy)
        l-load answer_option_index#0 3                                                            answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,cumulative_offset#0 (copy),answer_option_index#0
        +                                                                                         answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0
        // voting/voting.py:241
        // return op.btoi(self.tally_box.extract(index, VOTE_COUNT_BYTES))
        byte "V"                                                                                  answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,"V"
        l-load-copy index#0 1                                                                     answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,"V",index#0 (copy)
        int 8                                                                                     answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,"V",index#0 (copy),8
        box_extract                                                                               answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,tmp%0#2
        l-load tmp%0#2 0                                                                          answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,tmp%0#2
        btoi                                                                                      answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,current_vote#0
        // voting/voting.py:246
        // self.tally_box.replace(index, op.itob(current_vote + 1))
        l-load current_vote#0 0                                                                   answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,current_vote#0
        int 1                                                                                     answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,current_vote#0,1
        +                                                                                         answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,tmp%1#2
        l-load tmp%1#2 0                                                                          answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,tmp%1#2
        itob                                                                                      answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,tmp%2#1
        byte "V"                                                                                  answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,index#0,tmp%2#1,"V"
        l-load index#0 2                                                                          answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,tmp%2#1,"V",index#0
        l-load tmp%2#1 2                                                                          answer_ids#0,question_index#1,cumulative_offset#0,options_count#0,"V",index#0,tmp%2#1
        box_replace                                                                               answer_ids#0,question_index#1,cumulative_offset#0,options_count#0
        // voting/voting.py:201
        // cumulative_offset += options_count
        l-load cumulative_offset#0 1                                                              answer_ids#0,question_index#1,options_count#0,cumulative_offset#0
        l-load options_count#0 1                                                                  answer_ids#0,question_index#1,cumulative_offset#0,options_count#0
        +                                                                                         answer_ids#0,question_index#1,cumulative_offset#0
        v-store cumulative_offset#0                                                               answer_ids#0,question_index#1
        // voting/voting.py:202
        // self.votes_by_account[Txn.sender] = answer_ids.copy()
        txn Sender                                                                                answer_ids#0,question_index#1,materialized_values%0#0
        l-load-copy materialized_values%0#0 0                                                     answer_ids#0,question_index#1,materialized_values%0#0,materialized_values%0#0 (copy)
        box_del                                                                                   answer_ids#0,question_index#1,materialized_values%0#0,{box_del}
        pop 1                                                                                     answer_ids#0,question_index#1,materialized_values%0#0
        l-load materialized_values%0#0 0                                                          answer_ids#0,question_index#1,materialized_values%0#0
        l-load answer_ids#0 2                                                                     question_index#1,materialized_values%0#0,answer_ids#0
        box_put                                                                                   question_index#1
        // voting/voting.py:203
        // self.voter_count += 1
        int 0                                                                                     question_index#1,0
        byte "voter_count"                                                                        question_index#1,0,"voter_count"
        app_global_get_ex                                                                         question_index#1,maybe_value%2#0,maybe_exists%2#0
        l-load maybe_exists%2#0 0                                                                 question_index#1,maybe_value%2#0,maybe_exists%2#0
        assert // check self.voter_count exists                                                   question_index#1,maybe_value%2#0
        l-load maybe_value%2#0 0                                                                  question_index#1,maybe_value%2#0
        int 1                                                                                     question_index#1,maybe_value%2#0,1
        +                                                                                         question_index#1,tmp%23#0
        byte "voter_count"                                                                        question_index#1,tmp%23#0,"voter_count"
        l-load tmp%23#0 1                                                                         question_index#1,"voter_count",tmp%23#0
        app_global_put                                                                            question_index#1
        // voting/voting.py:195
        // for question_index in urange(questions_count):
        l-load question_index#1 0                                                                 question_index#1
        int 1                                                                                     question_index#1,1
        +                                                                                         value_internal%0#0
        l-load value_internal%0#0 0                                                               value_internal%0#0
        v-store question_index#1
        b vote_for_header@2

    vote_after_for@5:
        // voting/voting.py:169
        // @arc4.abimethod
        int 1                                                                                     1
        return


// examples.voting.voting.VotingRoundApp.voting_open() -> uint64:
subroutine voting_open:
    voting_open_block@0:
        // voting/voting.py:208
        // self.is_bootstrapped
        int 0                                                                                     0
        byte "is_bootstrapped"                                                                    0,"is_bootstrapped"
        app_global_get_ex                                                                         maybe_value%0#0,maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                 maybe_value%0#0,maybe_exists%0#0
        assert // check self.is_bootstrapped exists                                               maybe_value%0#0
        // voting/voting.py:208-210
        // self.is_bootstrapped
        // and not self.close_time
        // and self.start_time <= Global.latest_timestamp <= self.end_time
        l-load maybe_value%0#0 0                                                                  maybe_value%0#0
        bz voting_open_bool_false@5 ; b voting_open_and_contd@1

    voting_open_and_contd@1:
        // voting/voting.py:209
        // and not self.close_time
        int 0                                                                                     0
        byte "close_time"                                                                         0,"close_time"
        app_global_get_ex                                                                         _%0#0,maybe_exists%1#0
        l-store maybe_exists%1#0 1                                                                maybe_exists%1#0,_%0#0
        v-store _%0#0                                                                             maybe_exists%1#0
        l-load maybe_exists%1#0 0                                                                 maybe_exists%1#0
        bz voting_open_and_contd@2 ; b voting_open_bool_false@5

    voting_open_and_contd@2:
        // voting/voting.py:210
        // and self.start_time <= Global.latest_timestamp <= self.end_time
        int 0                                                                                     0
        byte "start_time"                                                                         0,"start_time"
        app_global_get_ex                                                                         maybe_value%1#0,maybe_exists%2#0
        l-load maybe_exists%2#0 0                                                                 maybe_value%1#0,maybe_exists%2#0
        assert // check self.start_time exists                                                    maybe_value%1#0
        global LatestTimestamp                                                                    maybe_value%1#0,awst_tmp%0#0
        l-store-copy awst_tmp%0#0 0                                                               maybe_value%1#0,awst_tmp%0#0,awst_tmp%0#0 (copy)
        v-store awst_tmp%0#0                                                                      maybe_value%1#0,awst_tmp%0#0
        l-load maybe_value%1#0 1                                                                  awst_tmp%0#0,maybe_value%1#0
        l-load awst_tmp%0#0 1                                                                     maybe_value%1#0,awst_tmp%0#0
        <=                                                                                        tmp%0#0
        l-load tmp%0#0 0                                                                          tmp%0#0
        bz voting_open_bool_false@5 ; b voting_open_and_contd@3

    voting_open_and_contd@3:
        // voting/voting.py:210
        // and self.start_time <= Global.latest_timestamp <= self.end_time
        int 0                                                                                     0
        byte "end_time"                                                                           0,"end_time"
        app_global_get_ex                                                                         maybe_value%2#0,maybe_exists%3#0
        l-load maybe_exists%3#0 0                                                                 maybe_value%2#0,maybe_exists%3#0
        assert // check self.end_time exists                                                      maybe_value%2#0
        v-load awst_tmp%0#0                                                                       maybe_value%2#0,awst_tmp%0#0
        l-load maybe_value%2#0 1                                                                  awst_tmp%0#0,maybe_value%2#0
        <=                                                                                        tmp%1#0
        l-load tmp%1#0 0                                                                          tmp%1#0
        bz voting_open_bool_false@5 ; b voting_open_bool_true@4

    voting_open_bool_true@4:
        int 1                                                                                     1
        v-store and_result%0#0
        b voting_open_bool_merge@6

    voting_open_bool_false@5:
        int 0                                                                                     0
        v-store and_result%0#0
        b voting_open_bool_merge@6

    voting_open_bool_merge@6:
        // voting/voting.py:207-211
        // return (
        //     self.is_bootstrapped
        //     and not self.close_time
        //     and self.start_time <= Global.latest_timestamp <= self.end_time
        // )
        v-load and_result%0#0                                                                     and_result%0#0
        retsub                                                                                    and_result%0#0


// examples.voting.voting.VotingRoundApp.allowed_to_vote(signature: bytes) -> uint64:
subroutine allowed_to_vote:
    allowed_to_vote_block@0:                                                                      (洧도) signature#0 |
        // voting/voting.py:232
        // ensure_budget(2000)
        int 2000                                                                                  (洧도) signature#0 | 2000
        int 0                                                                                     (洧도) signature#0 | 2000,0
        callsub ensure_budget                                                                     (洧도) signature#0 |
        // voting/voting.py:234
        // Txn.sender.bytes,
        txn Sender                                                                                (洧도) signature#0 | tmp%0#0
        // voting/voting.py:236
        // self.snapshot_public_key,
        int 0                                                                                     (洧도) signature#0 | tmp%0#0,0
        byte "snapshot_public_key"                                                                (洧도) signature#0 | tmp%0#0,0,"snapshot_public_key"
        app_global_get_ex                                                                         (洧도) signature#0 | tmp%0#0,maybe_value%0#0,maybe_exists%0#0
        l-load maybe_exists%0#0 0                                                                 (洧도) signature#0 | tmp%0#0,maybe_value%0#0,maybe_exists%0#0
        assert // check self.snapshot_public_key exists                                           (洧도) signature#0 | tmp%0#0,maybe_value%0#0
        // voting/voting.py:233-237
        // return op.ed25519verify_bare(
        //     Txn.sender.bytes,
        //     signature,
        //     self.snapshot_public_key,
        // )
        l-load tmp%0#0 1                                                                          (洧도) signature#0 | maybe_value%0#0,tmp%0#0
        p-load signature#0                                                                        (洧도) signature#0 | maybe_value%0#0,tmp%0#0,signature#0 (copy)
        l-load maybe_value%0#0 2                                                                  (洧도) signature#0 | tmp%0#0,signature#0 (copy),maybe_value%0#0
        ed25519verify_bare                                                                        (洧도) signature#0 | tmp%1#0
        l-load tmp%1#0 0                                                                          (洧도) signature#0 | tmp%1#0
        retsub                                                                                    tmp%1#0


