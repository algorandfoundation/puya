PC  Teal                                    Stack
1   #pragma version 8
7   #pragma version 8
22  int 0                                   0
23  dup                                     0, 0
24  int 0                                   0, 0, 0
25  byte 0x00020102                         0, 0, 0, 0x00020102
31  int 0                                   0, 0, 0, 0x00020102, 0
32  extract_uint16                          0, 0, 0, 2
33  int 0                                   0, 0, 0, 2, 0
34  dup                                     0, 0, 0, 2, 0, 0
35  dig 2                                   0, 0, 0, 2, 0, 0, 2
37  <                                       0, 0, 0, 2, 0, 1
38  bz main_after_for@4                     0, 0, 0, 2, 0
41  byte 0x0102                             0, 0, 0, 2, 0, 0x0102
45  dig 1                                   0, 0, 0, 2, 0, 0x0102, 0
47  dup                                     0, 0, 0, 2, 0, 0x0102, 0, 0
48  cover 2                                 0, 0, 0, 2, 0, 0, 0x0102, 0
50  int 1                                   0, 0, 0, 2, 0, 0, 0x0102, 0, 1
51  extract3                                0, 0, 0, 2, 0, 0, 0x01
52  btoi                                    0, 0, 0, 2, 0, 0, 1
53  dig 4                                   0, 0, 0, 2, 0, 0, 1, 0
55  +                                       0, 0, 0, 2, 0, 0, 1
56  bury 4                                  0, 0, 1, 2, 0, 0
58  int 1                                   0, 0, 1, 2, 0, 0, 1
59  +                                       0, 0, 1, 2, 0, 1
60  bury 1                                  0, 0, 1, 2, 1
62  b main_for_header@1                     0, 0, 1, 2, 1
34  dup                                     0, 0, 1, 2, 1, 1
35  dig 2                                   0, 0, 1, 2, 1, 1, 2
37  <                                       0, 0, 1, 2, 1, 1
38  bz main_after_for@4                     0, 0, 1, 2, 1
41  byte 0x0102                             0, 0, 1, 2, 1, 0x0102
45  dig 1                                   0, 0, 1, 2, 1, 0x0102, 1
47  dup                                     0, 0, 1, 2, 1, 0x0102, 1, 1
48  cover 2                                 0, 0, 1, 2, 1, 1, 0x0102, 1
50  int 1                                   0, 0, 1, 2, 1, 1, 0x0102, 1, 1
51  extract3                                0, 0, 1, 2, 1, 1, 0x02
52  btoi                                    0, 0, 1, 2, 1, 1, 2
53  dig 4                                   0, 0, 1, 2, 1, 1, 2, 1
55  +                                       0, 0, 1, 2, 1, 1, 3
56  bury 4                                  0, 0, 3, 2, 1, 1
58  int 1                                   0, 0, 3, 2, 1, 1, 1
59  +                                       0, 0, 3, 2, 1, 2
60  bury 1                                  0, 0, 3, 2, 2
62  b main_for_header@1                     0, 0, 3, 2, 2
34  dup                                     0, 0, 3, 2, 2, 2
35  dig 2                                   0, 0, 3, 2, 2, 2, 2
37  <                                       0, 0, 3, 2, 2, 0
38  bz main_after_for@4                     0, 0, 3, 2, 2
65  dig 2                                   0, 0, 3, 2, 2, 3
67  int 3                                   0, 0, 3, 2, 2, 3, 3
69  ==                                      0, 0, 3, 2, 2, 1
70  assert                                  0, 0, 3, 2, 2
71  byte 0x00010001                         0, 0, 3, 2, 2, 0x00010001
77  int 0                                   0, 0, 3, 2, 2, 0x00010001, 0
78  extract_uint16                          0, 0, 3, 2, 2, 1
79  bury 2                                  0, 0, 3, 1, 2
81  int 0                                   0, 0, 3, 1, 2, 0
82  bury 1                                  0, 0, 3, 1, 0
84  dup                                     0, 0, 3, 1, 0, 0
85  dig 2                                   0, 0, 3, 1, 0, 0, 1
87  <                                       0, 0, 3, 1, 0, 1
88  bz main_after_for@8                     0, 0, 3, 1, 0
91  dup                                     0, 0, 3, 1, 0, 0
92  dup                                     0, 0, 3, 1, 0, 0, 0
93  int 2                                   0, 0, 3, 1, 0, 0, 0, 2
94  *                                       0, 0, 3, 1, 0, 0, 0
95  byte 0x0001                             0, 0, 3, 1, 0, 0, 0, 0x0001
99  swap                                    0, 0, 3, 1, 0, 0, 0x0001, 0
100 int 2                                   0, 0, 3, 1, 0, 0, 0x0001, 0, 2
101 extract3                                0, 0, 3, 1, 0, 0, 0x0001
102 btoi                                    0, 0, 3, 1, 0, 0, 1
103 dig 4                                   0, 0, 3, 1, 0, 0, 1, 3
105 +                                       0, 0, 3, 1, 0, 0, 4
106 bury 4                                  0, 0, 4, 1, 0, 0
108 int 1                                   0, 0, 4, 1, 0, 0, 1
109 +                                       0, 0, 4, 1, 0, 1
110 bury 1                                  0, 0, 4, 1, 1
112 b main_for_header@5                     0, 0, 4, 1, 1
84  dup                                     0, 0, 4, 1, 1, 1
85  dig 2                                   0, 0, 4, 1, 1, 1, 1
87  <                                       0, 0, 4, 1, 1, 0
88  bz main_after_for@8                     0, 0, 4, 1, 1
115 dig 2                                   0, 0, 4, 1, 1, 4
117 int 4                                   0, 0, 4, 1, 1, 4, 4
118 ==                                      0, 0, 4, 1, 1, 1
119 assert                                  0, 0, 4, 1, 1
120 int 4                                   0, 0, 4, 1, 1, 4
121 itob                                    0, 0, 4, 1, 1, 0x0000000000000004
122 extract 6 2                             0, 0, 4, 1, 1, 0x0004
125 byte 0x0002                             0, 0, 4, 1, 1, 0x0004, 0x0002
129 swap                                    0, 0, 4, 1, 1, 0x0002, 0x0004
130 concat                                  0, 0, 4, 1, 1, 0x00020004
131 int 11                                  0, 0, 4, 1, 1, 0x00020004, 11
133 itob                                    0, 0, 4, 1, 1, 0x00020004, 0x000000000000000B
134 extract 6 2                             0, 0, 4, 1, 1, 0x00020004, 0x000B
137 concat                                  0, 0, 4, 1, 1, 0x00020004000B
138 byte "\x00\x05Hello"                    0, 0, 4, 1, 1, 0x00020004000B, 0x000548656C6C6F
139 concat                                  0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F
140 byte "\x00\x05World"                    0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F, 0x0005576F726C64
149 concat                                  0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64
150 dup                                     0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x00020004000B000548656C6C6F0005576F726C64
151 int 0                                   0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x00020004000B000548656C6C6F0005576F726C64, 0
152 extract_uint16                          0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 2
153 int 2                                   0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 2, 2
154 ==                                      0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 1
155 assert                                  0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64
156 dup                                     0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x00020004000B000548656C6C6F0005576F726C64
157 int 0                                   0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x00020004000B000548656C6C6F0005576F726C64, 0
158 extract_uint16                          0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 2
159 int 0                                   0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 2, 0
160 >                                       0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 1
161 assert                                  0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64
162 dup                                     0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x00020004000B000548656C6C6F0005576F726C64
163 extract 2 0                             0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64
166 dup                                     0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64
167 int 0                                   0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 0
168 extract_uint16                          0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 4
169 dig 1                                   0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 4, 0x0004000B000548656C6C6F0005576F726C64
171 dig 1                                   0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 4, 0x0004000B000548656C6C6F0005576F726C64, 4
173 extract_uint16                          0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 4, 5
174 int 2                                   0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 4, 5, 2
175 +                                       0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 4, 7
176 extract3                                0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x000548656C6C6F
177 byte "\x00\x05Hello"                    0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x000548656C6C6F, 0x000548656C6C6F
178 ==                                      0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 1
179 assert                                  0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64
180 byte ""                                 0, 0, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x
181 bury 5                                  0, 0x, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64
183 dup                                     0, 0x, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x00020004000B000548656C6C6F0005576F726C64
184 int 0                                   0, 0x, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 0x00020004000B000548656C6C6F0005576F726C64, 0
185 extract_uint16                          0, 0x, 4, 1, 1, 0x00020004000B000548656C6C6F0005576F726C64, 2
186 bury 3                                  0, 0x, 4, 2, 1, 0x00020004000B000548656C6C6F0005576F726C64
188 extract 2 0                             0, 0x, 4, 2, 1, 0x0004000B000548656C6C6F0005576F726C64
191 bury 5                                  0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 1
193 int 0                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 1, 0
194 bury 1                                  0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0
196 dup                                     0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0
197 dig 2                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 2
199 <                                       0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 1
200 bz main_after_for@15                    0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0
203 dup                                     0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0
204 dup                                     0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0
205 int 2                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0, 2
206 *                                       0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0
207 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0, 0x0004000B000548656C6C6F0005576F726C64
209 dup                                     0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64
210 uncover 2                               0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 0
212 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0x0004000B000548656C6C6F0005576F726C64, 4
213 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0x0004000B000548656C6C6F0005576F726C64, 4, 0x0004000B000548656C6C6F0005576F726C64
215 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0x0004000B000548656C6C6F0005576F726C64, 4, 0x0004000B000548656C6C6F0005576F726C64, 4
217 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0x0004000B000548656C6C6F0005576F726C64, 4, 5
218 int 2                                   0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0x0004000B000548656C6C6F0005576F726C64, 4, 5, 2
219 +                                       0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0x0004000B000548656C6C6F0005576F726C64, 4, 7
220 extract3                                0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0, 0x000548656C6C6F
221 swap                                    0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0x000548656C6C6F, 0
222 !                                       0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0x000548656C6C6F, 1
223 bz main_else_body@12                    0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, 0x000548656C6C6F
226 extract 2 0                             0x0004000B000548656C6C6F0005576F726C64, 0x, 4, 2, 0, "Hello"
229 bury 4                                  0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 0
231 b main_after_if_else@13                 0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 0
246 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 0, 0
247 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 0, 0, 1
248 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 0, 1
249 bury 1                                  0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1
251 b main_for_header@9                     0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1
196 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1
197 dig 2                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 2
199 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1
200 bz main_after_for@15                    0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1
203 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1
204 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 1
205 int 2                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 1, 2
206 *                                       0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 2
207 dig 6                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 2, 0x0004000B000548656C6C6F0005576F726C64
209 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 2, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64
210 uncover 2                               0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 0x0004000B000548656C6C6F0005576F726C64, 0x0004000B000548656C6C6F0005576F726C64, 2
212 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 0x0004000B000548656C6C6F0005576F726C64, 11
213 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 0x0004000B000548656C6C6F0005576F726C64, 11, 0x0004000B000548656C6C6F0005576F726C64
215 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 0x0004000B000548656C6C6F0005576F726C64, 11, 0x0004000B000548656C6C6F0005576F726C64, 11
217 extract_uint16                          0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 0x0004000B000548656C6C6F0005576F726C64, 11, 5
218 int 2                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 0x0004000B000548656C6C6F0005576F726C64, 11, 5, 2
219 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 0x0004000B000548656C6C6F0005576F726C64, 11, 7
220 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 1, 0x0005576F726C64
221 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 0x0005576F726C64, 1
222 !                                       0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 0x0005576F726C64, 0
223 bz main_else_body@12                    0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, 0x0005576F726C64
234 extract 2 0                             0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, "World"
237 byte " "                                0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, "World", " "
238 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, " ", "World"
239 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, " World"
240 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, " World", "Hello"
242 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, "Hello", " World"
243 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Hello", 4, 2, 1, "Hello World"
244 bury 4                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 1
246 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 1, 1
247 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 1, 1, 1
248 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 1, 2
249 bury 1                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2
251 b main_for_header@9                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2
196 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2, 2
197 dig 2                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2, 2, 2
199 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2, 0
200 bz main_after_for@15                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2
254 dig 3                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2, "Hello World"
256 byte "Hello World"                      0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2, "Hello World", "Hello World"
269 ==                                      0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2, 1
270 assert                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2
271 int 0                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 2, 2, 0
272 bury 2                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2
274 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0
276 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 4
277 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 1
278 bz main_after_for@19                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2
281 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0
283 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 0
284 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 0, 4
285 *                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 0
286 byte 0x000000010000000a000000ff00000080 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 0, 0x000000010000000A000000FF00000080
304 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 0x000000010000000A000000FF00000080, 0
305 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 0x000000010000000A000000FF00000080, 0, 4
306 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 0x00000001
307 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 1
308 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 1, 4
310 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 4, 0, 2, 0, 5
311 bury 4                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 0, 2, 0
313 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 0, 2, 0, 1
314 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 0, 2, 1
315 bury 2                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2
317 b main_for_header@16                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2
274 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1
276 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 4
277 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1
278 bz main_after_for@19                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2
281 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1
283 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 1
284 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 1, 4
285 *                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 4
286 byte 0x000000010000000a000000ff00000080 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 4, 0x000000010000000A000000FF00000080
304 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 0x000000010000000A000000FF00000080, 4
305 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 0x000000010000000A000000FF00000080, 4, 4
306 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 0x0000000A
307 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 10
308 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 10, 5
310 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 5, 1, 2, 1, 15
311 bury 4                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 1, 2, 1
313 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 1, 2, 1, 1
314 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 1, 2, 2
315 bury 2                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2
317 b main_for_header@16                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2
274 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2
276 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 4
277 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 1
278 bz main_after_for@19                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2
281 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2
283 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 2
284 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 2, 4
285 *                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 8
286 byte 0x000000010000000a000000ff00000080 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 8, 0x000000010000000A000000FF00000080
304 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 0x000000010000000A000000FF00000080, 8
305 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 0x000000010000000A000000FF00000080, 8, 4
306 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 0x000000FF
307 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 255
308 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 255, 15
310 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 15, 2, 2, 2, 270
311 bury 4                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 2, 2, 2
313 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 2, 2, 2, 1
314 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 2, 2, 3
315 bury 2                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2
317 b main_for_header@16                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2
274 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3
276 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 4
277 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 1
278 bz main_after_for@19                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2
281 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3
283 dup                                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 3
284 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 3, 4
285 *                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 12
286 byte 0x000000010000000a000000ff00000080 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 12, 0x000000010000000A000000FF00000080
304 swap                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 0x000000010000000A000000FF00000080, 12
305 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 0x000000010000000A000000FF00000080, 12, 4
306 extract3                                0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 0x00000080
307 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 128
308 dig 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 128, 270
310 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 270, 3, 2, 3, 398
311 bury 4                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 3, 2, 3
313 int 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 3, 2, 3, 1
314 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 3, 2, 4
315 bury 2                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2
317 b main_for_header@16                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2
274 dig 1                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 4
276 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 4, 4
277 <                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0
278 bz main_after_for@19                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2
320 dig 2                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 398
322 int 398                                 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 398, 398
325 ==                                      0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 1
326 assert                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2
327 byte 0x65                               0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, "e"
328 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 101
329 byte 0x65                               0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 101, "e"
330 btoi                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 101, 101
331 +                                       0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 202
332 int 202                                 0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 202, 202
335 ==                                      0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 1
336 assert                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2
337 int 4                                   0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 4
338 itob                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0x0000000000000004
339 extract 6 2                             0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0x0004
342 int 10                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0x0004, 10
344 itob                                    0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0x0004, 0x000000000000000A
345 extract 6 2                             0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0x0004, 0x000A
348 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0x0004000A
349 byte "\x00\x04Ping"                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0x0004000A, 0x000450696E67
357 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0x0004000A000450696E67
358 byte "\x00\x04Pong"                     0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0x0004000A000450696E67, 0x0004506F6E67
366 concat                                  0x0004000B000548656C6C6F0005576F726C64, "Hello World", 398, 4, 2, 0x0004000A000450696E670004506F6E67
367 bury 5                                  0x0004000A000450696E670004506F6E67, "Hello World", 398, 4, 2
369 byte ""                                 0x0004000A000450696E670004506F6E67, "Hello World", 398, 4, 2, 0x
370 bury 4                                  0x0004000A000450696E670004506F6E67, 0x, 398, 4, 2
372 int 0                                   0x0004000A000450696E670004506F6E67, 0x, 398, 4, 2, 0
373 bury 3                                  0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2
375 dig 2                                   0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0
377 int 2                                   0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 2
378 <                                       0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 1
379 bz main_after_for@26                    0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2
382 dig 2                                   0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0
384 dup                                     0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0
385 int 2                                   0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0, 2
386 *                                       0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0
387 dig 6                                   0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0, 0x0004000A000450696E670004506F6E67
389 dup                                     0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0, 0x0004000A000450696E670004506F6E67, 0x0004000A000450696E670004506F6E67
390 uncover 2                               0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0x0004000A000450696E670004506F6E67, 0x0004000A000450696E670004506F6E67, 0
392 extract_uint16                          0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0x0004000A000450696E670004506F6E67, 4
393 dig 1                                   0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0x0004000A000450696E670004506F6E67, 4, 0x0004000A000450696E670004506F6E67
395 dig 1                                   0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0x0004000A000450696E670004506F6E67, 4, 0x0004000A000450696E670004506F6E67, 4
397 extract_uint16                          0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0x0004000A000450696E670004506F6E67, 4, 4
398 int 2                                   0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0x0004000A000450696E670004506F6E67, 4, 4, 2
399 +                                       0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0x0004000A000450696E670004506F6E67, 4, 6
400 extract3                                0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0, 0x000450696E67
401 swap                                    0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0x000450696E67, 0
402 !                                       0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0x000450696E67, 1
403 bz main_else_body@23                    0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, 0x000450696E67
406 extract 2 0                             0x0004000A000450696E670004506F6E67, 0x, 0, 4, 2, "Ping"
409 bury 4                                  0x0004000A000450696E670004506F6E67, "Ping", 0, 4, 2
411 b main_after_if_else@24                 0x0004000A000450696E670004506F6E67, "Ping", 0, 4, 2
426 dig 2                                   0x0004000A000450696E670004506F6E67, "Ping", 0, 4, 2, 0
428 int 1                                   0x0004000A000450696E670004506F6E67, "Ping", 0, 4, 2, 0, 1
429 +                                       0x0004000A000450696E670004506F6E67, "Ping", 0, 4, 2, 1
430 bury 3                                  0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2
432 b main_for_header@20                    0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2
375 dig 2                                   0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1
377 int 2                                   0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 2
378 <                                       0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1
379 bz main_after_for@26                    0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2
382 dig 2                                   0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1
384 dup                                     0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 1
385 int 2                                   0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 1, 2
386 *                                       0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 2
387 dig 6                                   0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 2, 0x0004000A000450696E670004506F6E67
389 dup                                     0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 2, 0x0004000A000450696E670004506F6E67, 0x0004000A000450696E670004506F6E67
390 uncover 2                               0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 0x0004000A000450696E670004506F6E67, 0x0004000A000450696E670004506F6E67, 2
392 extract_uint16                          0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 0x0004000A000450696E670004506F6E67, 10
393 dig 1                                   0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 0x0004000A000450696E670004506F6E67, 10, 0x0004000A000450696E670004506F6E67
395 dig 1                                   0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 0x0004000A000450696E670004506F6E67, 10, 0x0004000A000450696E670004506F6E67, 10
397 extract_uint16                          0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 0x0004000A000450696E670004506F6E67, 10, 4
398 int 2                                   0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 0x0004000A000450696E670004506F6E67, 10, 4, 2
399 +                                       0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 0x0004000A000450696E670004506F6E67, 10, 6
400 extract3                                0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 1, 0x0004506F6E67
401 swap                                    0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 0x0004506F6E67, 1
402 !                                       0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 0x0004506F6E67, 0
403 bz main_else_body@23                    0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, 0x0004506F6E67
414 extract 2 0                             0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, "Pong"
417 byte " "                                0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, "Pong", " "
418 swap                                    0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, " ", "Pong"
419 concat                                  0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, " Pong"
420 dig 4                                   0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, " Pong", "Ping"
422 swap                                    0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, "Ping", " Pong"
423 concat                                  0x0004000A000450696E670004506F6E67, "Ping", 1, 4, 2, "Ping Pong"
424 bury 4                                  0x0004000A000450696E670004506F6E67, "Ping Pong", 1, 4, 2
426 dig 2                                   0x0004000A000450696E670004506F6E67, "Ping Pong", 1, 4, 2, 1
428 int 1                                   0x0004000A000450696E670004506F6E67, "Ping Pong", 1, 4, 2, 1, 1
429 +                                       0x0004000A000450696E670004506F6E67, "Ping Pong", 1, 4, 2, 2
430 bury 3                                  0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2
432 b main_for_header@20                    0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2
375 dig 2                                   0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2, 2
377 int 2                                   0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2, 2, 2
378 <                                       0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2, 0
379 bz main_after_for@26                    0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2
435 dig 3                                   0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2, "Ping Pong"
437 byte "Ping Pong"                        0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2, "Ping Pong", "Ping Pong"
448 ==                                      0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2, 1
449 assert                                  0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2
450 int 1                                   0x0004000A000450696E670004506F6E67, "Ping Pong", 2, 4, 2, 1
451 return                                  1