{
    "hints": {
        "create(byte[32])void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "verify(byte[32][],byte[32])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpleGFtcGxlcy5tZXJrbGUuY29udHJhY3QuTWVya2xlVHJlZS5hcHByb3ZhbF9wcm9ncmFtOgogICAgLy8gbWVya2xlL2NvbnRyYWN0LnB5OjE0CiAgICAvLyBjbGFzcyBNZXJrbGVUcmVlKGFyYzQuQVJDNENvbnRyYWN0KToKICAgIG1ldGhvZCAiY3JlYXRlKGJ5dGVbMzJdKXZvaWQiCiAgICBtZXRob2QgInZlcmlmeShieXRlWzMyXVtdLGJ5dGVbMzJdKWJvb2wiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX2NyZWF0ZV9yb3V0ZUAxIG1haW5fdmVyaWZ5X3JvdXRlQDIKICAgIGVyciAvLyByZWplY3QgdHJhbnNhY3Rpb24KCm1haW5fY3JlYXRlX3JvdXRlQDE6CiAgICAvLyBtZXJrbGUvY29udHJhY3QucHk6MzEKICAgIC8vIEBhcmM0LmFiaW1ldGhvZChjcmVhdGU9VHJ1ZSkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBpcyBjcmVhdGluZwogICAgLy8gbWVya2xlL2NvbnRyYWN0LnB5OjE0CiAgICAvLyBjbGFzcyBNZXJrbGVUcmVlKGFyYzQuQVJDNENvbnRyYWN0KToKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIC8vIG1lcmtsZS9jb250cmFjdC5weTozMQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKGNyZWF0ZT1UcnVlKQogICAgY2FsbHN1YiBjcmVhdGUKICAgIGludCAxCiAgICByZXR1cm4KCm1haW5fdmVyaWZ5X3JvdXRlQDI6CiAgICAvLyBtZXJrbGUvY29udHJhY3QucHk6MzUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGlzIG5vdCBjcmVhdGluZwogICAgLy8gbWVya2xlL2NvbnRyYWN0LnB5OjE0CiAgICAvLyBjbGFzcyBNZXJrbGVUcmVlKGFyYzQuQVJDNENvbnRyYWN0KToKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIC8vIG1lcmtsZS9jb250cmFjdC5weTozNQogICAgLy8gQGFyYzQuYWJpbWV0aG9kCiAgICBjYWxsc3ViIHZlcmlmeQogICAgYnl0ZSAweDAwCiAgICBpbnQgMAogICAgdW5jb3ZlciAyCiAgICBzZXRiaXQKICAgIGJ5dGUgMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludCAxCiAgICByZXR1cm4KCgovLyBleGFtcGxlcy5tZXJrbGUuY29udHJhY3QuTWVya2xlVHJlZS5jcmVhdGUocm9vdDogYnl0ZXMpIC0+IHZvaWQ6CmNyZWF0ZToKICAgIC8vIG1lcmtsZS9jb250cmFjdC5weTozMS0zMgogICAgLy8gQGFyYzQuYWJpbWV0aG9kKGNyZWF0ZT1UcnVlKQogICAgLy8gZGVmIGNyZWF0ZShzZWxmLCByb290OiBCeXRlczMyKSAtPiBOb25lOgogICAgcHJvdG8gMSAwCiAgICAvLyBtZXJrbGUvY29udHJhY3QucHk6MzMKICAgIC8vIHNlbGYucm9vdCA9IHJvb3QuY29weSgpCiAgICBieXRlICJyb290IgogICAgZnJhbWVfZGlnIC0xCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgcmV0c3ViCgoKLy8gZXhhbXBsZXMubWVya2xlLmNvbnRyYWN0Lk1lcmtsZVRyZWUudmVyaWZ5KHByb29mOiBieXRlcywgbGVhZjogYnl0ZXMpIC0+IHVpbnQ2NDoKdmVyaWZ5OgogICAgLy8gbWVya2xlL2NvbnRyYWN0LnB5OjM1LTM2CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIC8vIGRlZiB2ZXJpZnkoc2VsZiwgcHJvb2Y6IFByb29mLCBsZWFmOiBCeXRlczMyKSAtPiBib29sOgogICAgcHJvdG8gMiAxCiAgICAvLyBtZXJrbGUvY29udHJhY3QucHk6MzcKICAgIC8vIHJldHVybiBzZWxmLnJvb3QgPT0gc2VsZi5jb21wdXRlX3Jvb3RfaGFzaChwcm9vZiwgbGVhZikKICAgIGludCAwCiAgICBieXRlICJyb290IgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayByb290IGV4aXN0cwogICAgZnJhbWVfZGlnIC0yCiAgICBmcmFtZV9kaWcgLTEKICAgIGNhbGxzdWIgY29tcHV0ZV9yb290X2hhc2gKICAgIGZyYW1lX2J1cnkgLTEKICAgIGZyYW1lX2J1cnkgLTIKICAgID09CiAgICByZXRzdWIKCgovLyBleGFtcGxlcy5tZXJrbGUuY29udHJhY3QuTWVya2xlVHJlZS5jb21wdXRlX3Jvb3RfaGFzaChwcm9vZjogYnl0ZXMsIGxlYWY6IGJ5dGVzKSAtPiBieXRlcywgYnl0ZXMsIGJ5dGVzOgpjb21wdXRlX3Jvb3RfaGFzaDoKICAgIC8vIG1lcmtsZS9jb250cmFjdC5weToyNC0yNQogICAgLy8gQHN1YnJvdXRpbmUKICAgIC8vIGRlZiBjb21wdXRlX3Jvb3RfaGFzaChzZWxmLCBwcm9vZjogUHJvb2YsIGxlYWY6IEJ5dGVzMzIpIC0+IEJ5dGVzMzI6CiAgICBwcm90byAyIDMKICAgIC8vIG1lcmtsZS9jb250cmFjdC5weToyNwogICAgLy8gZm9yIHByb29mX2hhc2ggaW4gcHJvb2Y6CiAgICBmcmFtZV9kaWcgLTIKICAgIGludCAwCiAgICBleHRyYWN0X3VpbnQxNgogICAgZnJhbWVfZGlnIC0yCiAgICBleHRyYWN0IDIgMAogICAgaW50IDAKICAgIGZyYW1lX2RpZyAtMQoKY29tcHV0ZV9yb290X2hhc2hfZm9yX2hlYWRlckAxOgogICAgLy8gbWVya2xlL2NvbnRyYWN0LnB5OjI3CiAgICAvLyBmb3IgcHJvb2ZfaGFzaCBpbiBwcm9vZjoKICAgIGZyYW1lX2RpZyAyCiAgICBmcmFtZV9kaWcgMAogICAgPAogICAgYnogY29tcHV0ZV9yb290X2hhc2hfYWZ0ZXJfZm9yQDQKICAgIGZyYW1lX2RpZyAyCiAgICBkdXAKICAgIGludCAzMgogICAgKgogICAgZnJhbWVfZGlnIDEKICAgIHN3YXAKICAgIGludCAzMgogICAgZXh0cmFjdDMKICAgIC8vIG1lcmtsZS9jb250cmFjdC5weToyOAogICAgLy8gY29tcHV0ZWQgPSBzZWxmLmhhc2hfcGFpcihjb21wdXRlZCwgcHJvb2ZfaGFzaCkKICAgIGZyYW1lX2RpZyAzCiAgICBzd2FwCiAgICBjYWxsc3ViIGhhc2hfcGFpcgogICAgcG9wbiAyCiAgICBmcmFtZV9idXJ5IDMKICAgIGludCAxCiAgICArCiAgICBmcmFtZV9idXJ5IDIKICAgIGIgY29tcHV0ZV9yb290X2hhc2hfZm9yX2hlYWRlckAxCgpjb21wdXRlX3Jvb3RfaGFzaF9hZnRlcl9mb3JANDoKICAgIC8vIG1lcmtsZS9jb250cmFjdC5weToyOQogICAgLy8gcmV0dXJuIGNvbXB1dGVkCiAgICBmcmFtZV9kaWcgMwogICAgZnJhbWVfZGlnIC0yCiAgICBmcmFtZV9kaWcgLTEKICAgIGZyYW1lX2J1cnkgMgogICAgZnJhbWVfYnVyeSAxCiAgICBmcmFtZV9idXJ5IDAKICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLm1lcmtsZS5jb250cmFjdC5NZXJrbGVUcmVlLmhhc2hfcGFpcihhOiBieXRlcywgYjogYnl0ZXMpIC0+IGJ5dGVzLCBieXRlcywgYnl0ZXM6Cmhhc2hfcGFpcjoKICAgIC8vIG1lcmtsZS9jb250cmFjdC5weToxNS0xNgogICAgLy8gQHN1YnJvdXRpbmUKICAgIC8vIGRlZiBoYXNoX3BhaXIoc2VsZiwgYTogQnl0ZXMzMiwgYjogQnl0ZXMzMikgLT4gQnl0ZXMzMjoKICAgIHByb3RvIDIgMwogICAgLy8gbWVya2xlL2NvbnRyYWN0LnB5OjE5CiAgICAvLyBpZiBCaWdVSW50LmZyb21fYnl0ZXMoYS5ieXRlcykgPCBCaWdVSW50LmZyb21fYnl0ZXMoYi5ieXRlcykKICAgIGZyYW1lX2RpZyAtMgogICAgZnJhbWVfZGlnIC0xCiAgICBiPAogICAgLy8gbWVya2xlL2NvbnRyYWN0LnB5OjE4LTIwCiAgICAvLyBhLmJ5dGVzICsgYi5ieXRlcwogICAgLy8gaWYgQmlnVUludC5mcm9tX2J5dGVzKGEuYnl0ZXMpIDwgQmlnVUludC5mcm9tX2J5dGVzKGIuYnl0ZXMpCiAgICAvLyBlbHNlIGIuYnl0ZXMgKyBhLmJ5dGVzCiAgICBieiBoYXNoX3BhaXJfdGVybmFyeV9mYWxzZUAyCiAgICBmcmFtZV9kaWcgLTIKICAgIGZyYW1lX2RpZyAtMQogICAgLy8gbWVya2xlL2NvbnRyYWN0LnB5OjE4CiAgICAvLyBhLmJ5dGVzICsgYi5ieXRlcwogICAgY29uY2F0CiAgICBiIGhhc2hfcGFpcl90ZXJuYXJ5X21lcmdlQDMKCmhhc2hfcGFpcl90ZXJuYXJ5X2ZhbHNlQDI6CiAgICAvLyBtZXJrbGUvY29udHJhY3QucHk6MTgtMjAKICAgIC8vIGEuYnl0ZXMgKyBiLmJ5dGVzCiAgICAvLyBpZiBCaWdVSW50LmZyb21fYnl0ZXMoYS5ieXRlcykgPCBCaWdVSW50LmZyb21fYnl0ZXMoYi5ieXRlcykKICAgIC8vIGVsc2UgYi5ieXRlcyArIGEuYnl0ZXMKICAgIGZyYW1lX2RpZyAtMQogICAgZnJhbWVfZGlnIC0yCiAgICAvLyBtZXJrbGUvY29udHJhY3QucHk6MjAKICAgIC8vIGVsc2UgYi5ieXRlcyArIGEuYnl0ZXMKICAgIGNvbmNhdAoKaGFzaF9wYWlyX3Rlcm5hcnlfbWVyZ2VAMzoKICAgIC8vIG1lcmtsZS9jb250cmFjdC5weToxNy0yMQogICAgLy8gaGFzaF9ieXRlcyA9IG9wLnNoYTI1NigKICAgIC8vICAgICBhLmJ5dGVzICsgYi5ieXRlcwogICAgLy8gICAgIGlmIEJpZ1VJbnQuZnJvbV9ieXRlcyhhLmJ5dGVzKSA8IEJpZ1VJbnQuZnJvbV9ieXRlcyhiLmJ5dGVzKQogICAgLy8gICAgIGVsc2UgYi5ieXRlcyArIGEuYnl0ZXMKICAgIC8vICkKICAgIHNoYTI1NgogICAgLy8gbWVya2xlL2NvbnRyYWN0LnB5OjIyCiAgICAvLyByZXR1cm4gQnl0ZXMzMi5mcm9tX2J5dGVzKGhhc2hfYnl0ZXMpCiAgICBmcmFtZV9kaWcgLTIKICAgIGZyYW1lX2RpZyAtMQogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpleGFtcGxlcy5tZXJrbGUuY29udHJhY3QuTWVya2xlVHJlZS5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgLy8gbWVya2xlL2NvbnRyYWN0LnB5OjE0CiAgICAvLyBjbGFzcyBNZXJrbGVUcmVlKGFyYzQuQVJDNENvbnRyYWN0KToKICAgIGludCAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "root": {
                    "type": "bytes",
                    "key": "root"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "MerkleTree",
        "methods": [
            {
                "name": "create",
                "args": [
                    {
                        "type": "byte[32]",
                        "name": "root"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify",
                "args": [
                    {
                        "type": "byte[32][]",
                        "name": "proof"
                    },
                    {
                        "type": "byte[32]",
                        "name": "leaf"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}