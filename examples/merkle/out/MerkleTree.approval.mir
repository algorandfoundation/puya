// Op                                                          //                                                           Op Description                                                                                                                        Stack (out)                                                                                                                                                         Live (out)            X stack                                                                                              Source code                                                                                          Source line

#pragma version 10

// examples.merkle.contract.MerkleTree.approval_program() -> uint64:
main_block@0:
    txna ApplicationArgs 0                                     //                                                                                                                                                                                                 {txna}                                                                                                                                                                                                                                                                                         class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    //                                                         virtual: store tmp%0#0 to l-stack (no copy)                  tmp%0#0                                                                                                                                                                                                                                                                                                                         class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    method "create(byte[32])void"                              //                                                                                                                                                                                                 tmp%0#0,method<"create(byte[32])void">                                                                                                                                                                                                                                                         class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    method "verify(byte[32][],byte[32])bool"                   //                                                                                                                                                                                                 tmp%0#0,method<"create(byte[32])void">,method<"verify(byte[32][],byte[32])bool">                                                                                                                                                                                                               class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    uncover 2                                                  //                                                           load tmp%0#0 from l-stack (no copy)                                                                                                   method<"create(byte[32])void">,method<"verify(byte[32][],byte[32])bool">,tmp%0#0                                                                                                                                                                                                               class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    match main_create_route@1 main_verify_route@2              //                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    err // reject transactionclass MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14

main_create_route@1:
    txn OnCompletion                                           //                                                                                                                                                                                                 {txn}                                                                                                                                                                                                                                                                                          arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    //                                                         virtual: store tmp%1#0 to l-stack (no copy)                  tmp%1#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    //                                                         virtual: load tmp%1#0 from l-stack (no copy)                 tmp%1#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    !                                                          //                                                                                                                                                                                                 {!}                                                                                                                                                                                                                                                                                            arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    //                                                         virtual: store tmp%2#0 to l-stack (no copy)                  tmp%2#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    //                                                         virtual: load tmp%2#0 from l-stack (no copy)                 tmp%2#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    assert // OnCompletion is NoOparc4.abimethod(create=True)                                                                          merkle/contract.py:31
    txn ApplicationID                                          //                                                                                                                                                                                                 {txn}                                                                                                                                                                                                                                                                                          arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    //                                                         virtual: store tmp%3#0 to l-stack (no copy)                  tmp%3#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    //                                                         virtual: load tmp%3#0 from l-stack (no copy)                 tmp%3#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    !                                                          //                                                                                                                                                                                                 {!}                                                                                                                                                                                                                                                                                            arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    //                                                         virtual: store tmp%4#0 to l-stack (no copy)                  tmp%4#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    //                                                         virtual: load tmp%4#0 from l-stack (no copy)                 tmp%4#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    assert // is creatingarc4.abimethod(create=True)                                                                          merkle/contract.py:31
    txna ApplicationArgs 1                                     //                                                                                                                                                                                                 {txna}                                                                                                                                                                                                                                                                                         class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    //                                                         virtual: store tmp%5#0 to l-stack (no copy)                  tmp%5#0                                                                                                                                                                                                                                                                                                                         class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    //                                                         virtual: load tmp%5#0 from l-stack (no copy)                 tmp%5#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod(create=True)                                                                          merkle/contract.py:31
    callsub createarc4.abimethod(create=True)                                                                          merkle/contract.py:31
    intarc4.abimethod(create=True)                                                                          merkle/contract.py:31
    returnarc4.abimethod(create=True)                                                                          merkle/contract.py:31

main_verify_route@2:
    txn OnCompletion                                           //                                                                                                                                                                                                 {txn}                                                                                                                                                                                                                                                                                          arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: store tmp%6#0 to l-stack (no copy)                  tmp%6#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: load tmp%6#0 from l-stack (no copy)                 tmp%6#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod                                                                                       merkle/contract.py:35
    !                                                          //                                                                                                                                                                                                 {!}                                                                                                                                                                                                                                                                                            arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: store tmp%7#0 to l-stack (no copy)                  tmp%7#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: load tmp%7#0 from l-stack (no copy)                 tmp%7#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod                                                                                       merkle/contract.py:35
    assert // OnCompletion is NoOparc4.abimethod                                                                                       merkle/contract.py:35
    txn ApplicationID                                          //                                                                                                                                                                                                 {txn}                                                                                                                                                                                                                                                                                          arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: store tmp%8#0 to l-stack (no copy)                  tmp%8#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: load tmp%8#0 from l-stack (no copy)                 tmp%8#0                                                                                                                                                                                                                                                                                                                         arc4.abimethod                                                                                       merkle/contract.py:35
    assert // is not creatingarc4.abimethod                                                                                       merkle/contract.py:35
    txna ApplicationArgs 1                                     //                                                                                                                                                                                                 {txna}                                                                                                                                                                                                                                                                                         class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    //                                                         virtual: store tmp%9#0 to l-stack (no copy)                  tmp%9#0                                                                                                                                                                                                                                                                                                                         class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    txna ApplicationArgs 2                                     //                                                                                                                                                                                                 tmp%9#0,{txna}                                                                                                                                                                                                                                                                                 class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    //                                                         virtual: store tmp%10#0 to l-stack (no copy)                 tmp%9#0,tmp%10#0                                                                                                                                                                                                                                                                                                                class MerkleTree(arc4.ARC4Contract):                                                                 merkle/contract.py:14
    //                                                         virtual: load tmp%9#0 from l-stack (no copy)                 tmp%10#0,tmp%9#0                                                                                                                                                                                                                                                                                                                arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: load tmp%10#0 from l-stack (no copy)                tmp%9#0,tmp%10#0                                                                                                                                                                                                                                                                                                                arc4.abimethod                                                                                       merkle/contract.py:35
    callsub verify                                             //                                                                                                                                                                                                 {verify}                                                                                                                                                                                                                                                                                       arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: store tmp%11#0 to l-stack (no copy)                 tmp%11#0                                                                                                                                                                                                                                                                                                                        arc4.abimethod                                                                                       merkle/contract.py:35
    byte 0x00                                                  //                                                                                                                                                                                                 tmp%11#0,0x00                                                                                                                                                                                                                                                                                  arc4.abimethod                                                                                       merkle/contract.py:35
    int 0                                                      //                                                                                                                                                                                                 tmp%11#0,0x00,0
    uncover 2                                                  //                                                           load tmp%11#0 from l-stack (no copy)                                                                                                  0x00,0,tmp%11#0                                                                                                                                                                                                                                                                                arc4.abimethod                                                                                       merkle/contract.py:35
    setbit                                                     //                                                                                                                                                                                                 {setbit}                                                                                                                                                                                                                                                                                       arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: store tmp%12#0 to l-stack (no copy)                 tmp%12#0                                                                                                                                                                                                                                                                                                                        arc4.abimethod                                                                                       merkle/contract.py:35
    byte 0x151f7c75                                            //                                                                                                                                                                                                 tmp%12#0,0x151f7c75                                                                                                                                                                                                                                                                            arc4.abimethod                                                                                       merkle/contract.py:35
    swap                                                       //                                                           load tmp%12#0 from l-stack (no copy)                                                                                                  0x151f7c75,tmp%12#0                                                                                                                                                                                                                                                                            arc4.abimethod                                                                                       merkle/contract.py:35
    concat                                                     //                                                                                                                                                                                                 {concat}                                                                                                                                                                                                                                                                                       arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: store tmp%13#0 to l-stack (no copy)                 tmp%13#0                                                                                                                                                                                                                                                                                                                        arc4.abimethod                                                                                       merkle/contract.py:35
    //                                                         virtual: load tmp%13#0 from l-stack (no copy)                tmp%13#0                                                                                                                                                                                                                                                                                                                        arc4.abimethod                                                                                       merkle/contract.py:35
    logarc4.abimethod                                                                                       merkle/contract.py:35
    int 1                                                      //                                                                                                                                                                                                 1                                                                                                                                                                                                                                                                                              arc4.abimethod                                                                                       merkle/contract.py:35
    returnarc4.abimethod                                                                                       merkle/contract.py:35


// examples.merkle.contract.MerkleTree.create(root: bytes) -> void:
create:
    proto 1 0                                                  //                                                                                                                                                                                                 (𝕡) root#0 |                                                                                                                                                                                                                                                                                   @arc4.abimethod(create=True)\ndef create(self, root: Bytes32) -> None:                               merkle/contract.py:31-32

create_block@0:
    byte "root"                                                //                                                                                                                                                                                                 (𝕡) root#0 | "root"                                                                                                                                                                                                                                                                            self.root                                                                                            merkle/contract.py:33
    frame_dig -1                                               //                                                           load root#0 from parameters                                                                                                           (𝕡) root#0 | "root",root#0                                                                                                                                                                                                                                                                     self.root = root.copy()                                                                              merkle/contract.py:33
    app_global_put                                             //                                                                                                                                                                                                 (𝕡) root#0 |                                                                                                                                                                                                                                                                                   self.root = root.copy()                                                                              merkle/contract.py:33
    retsub                                                     //


// examples.merkle.contract.MerkleTree.verify(proof: bytes, leaf: bytes) -> uint64:
verify:
    proto 2 1                                                  //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 |                                                                                                                                                                                                                                                                           @arc4.abimethod\ndef verify(self, proof: Proof, leaf: Bytes32) -> bool:                              merkle/contract.py:35-36

verify_block@0:
    int 0                                                      //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | 0                                                                                                                                                                                                                                                                         self.root                                                                                            merkle/contract.py:37
    byte "root"                                                //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | 0,"root"                                                                                                                                                                                                                                                                  self.root                                                                                            merkle/contract.py:37
    app_global_get_ex                                          //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                                               self.root                                                                                            merkle/contract.py:37
    //                                                         virtual: store root_exists%1#0 to l-stack (no copy)          (𝕡) proof#0,leaf#0 | root_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                                                                                                      self.root                                                                                            merkle/contract.py:37
    //                                                         virtual: store root_value%0#0 to l-stack (no copy)           (𝕡) proof#0,leaf#0 | root_value%0#0,root_exists%1#0                                                                                                                                                                                                                                                                             self.root                                                                                            merkle/contract.py:37
    //                                                         virtual: load root_exists%1#0 from l-stack (no copy)         (𝕡) proof#0,leaf#0 | root_value%0#0,root_exists%1#0                                                                                                                                                                                                                                                                             self.root                                                                                            merkle/contract.py:37
    assert // check root exists                                //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | root_value%0#0                                                                                                                                                                                                                                                            self.root                                                                                            merkle/contract.py:37
    frame_dig -2                                               //                                                           load proof#0 from parameters                                                                                                          (𝕡) proof#0,leaf#0 | root_value%0#0,proof#0                                                                                                                                                                                                                                                    self.compute_root_hash(proof, leaf)                                                                  merkle/contract.py:37
    frame_dig -1                                               //                                                           load leaf#0 from parameters                                                                                                           (𝕡) proof#0,leaf#0 | root_value%0#0,proof#0,leaf#0                                                                                                                                                                                                                                             self.compute_root_hash(proof, leaf)                                                                  merkle/contract.py:37
    callsub compute_root_hash                                  //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | root_value%0#0,{compute_root_hash}.0,{compute_root_hash}.1,{compute_root_hash}.2                                                                                                                                                                                          self.compute_root_hash(proof, leaf)                                                                  merkle/contract.py:37
    frame_bury -1                                              //                                                           store leaf#0 to parameters (no copy)                                                                                                  (𝕡) proof#0,leaf#0 | root_value%0#0,{compute_root_hash}.0,{compute_root_hash}.1                                                                                                                                                                                                                self.compute_root_hash(proof, leaf)                                                                  merkle/contract.py:37
    frame_bury -2                                              //                                                           store proof#0 to parameters (no copy)                                                                                                 (𝕡) proof#0,leaf#0 | root_value%0#0,{compute_root_hash}.0                                                                                                                                                                                                                                      self.compute_root_hash(proof, leaf)                                                                  merkle/contract.py:37
    //                                                         virtual: store compute_root_hash%2#0 to l-stack (no copy)    (𝕡) proof#0,leaf#0 | root_value%0#0,compute_root_hash%2#0                                                                                                                                                                                                                                                                       self.compute_root_hash(proof, leaf)                                                                  merkle/contract.py:37
    //                                                         virtual: load root_value%0#0 from l-stack (no copy)          (𝕡) proof#0,leaf#0 | compute_root_hash%2#0,root_value%0#0                                                                                                                                                                                                                                                                       self.root == self.compute_root_hash(proof, leaf)                                                     merkle/contract.py:37
    //                                                         virtual: load compute_root_hash%2#0 from l-stack (no copy)   (𝕡) proof#0,leaf#0 | root_value%0#0,compute_root_hash%2#0                                                                                                                                                                                                                                                                       self.root == self.compute_root_hash(proof, leaf)                                                     merkle/contract.py:37
    ==                                                         //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | {==}                                                                                                                                                                                                                                                                      self.root == self.compute_root_hash(proof, leaf)                                                     merkle/contract.py:37
    //                                                         virtual: store tmp%5#0 to l-stack (no copy)                  (𝕡) proof#0,leaf#0 | tmp%5#0                                                                                                                                                                                                                                                                                                    self.root == self.compute_root_hash(proof, leaf)                                                     merkle/contract.py:37
    //                                                         virtual: load tmp%5#0 from l-stack (no copy)                 (𝕡) proof#0,leaf#0 | tmp%5#0                                                                                                                                                                                                                                                                                                    return self.root == self.compute_root_hash(proof, leaf)                                              merkle/contract.py:37
    retsub                                                     //                                                                                                                                                                                                 tmp%5#0                                                                                                                                                                                                                                                                                        return self.root == self.compute_root_hash(proof, leaf)                                              merkle/contract.py:37


// examples.merkle.contract.MerkleTree.compute_root_hash(proof: bytes, leaf: bytes) -> bytes, bytes, bytes:
compute_root_hash:
    proto 2 3                                                  //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 |                                                                                                                                                                                                                                                                           @subroutine\ndef compute_root_hash(self, proof: Proof, leaf: Bytes32) -> Bytes32:                    merkle/contract.py:24-25

compute_root_hash_block@0:
    frame_dig -2                                               //                                                           load proof#0 from parameters                                                                                                          (𝕡) proof#0,leaf#0 | proof#0                                                                                                                                                                                                                                                                   for proof_hash in proof:                                                                             merkle/contract.py:27
    int 0                                                      //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | proof#0,0                                                                                                                                                                                                                                                                 for proof_hash in proof:                                                                             merkle/contract.py:27
    extract_uint16                                             //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | {extract_uint16}                                                                                                                                                                                                                                                          for proof_hash in proof:                                                                             merkle/contract.py:27
    //                                                         virtual: store array_length%1#0 to f-stack                   (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0 |                                                                                                                                                                                                                                                                                     for proof_hash in proof:                                                                             merkle/contract.py:27
    frame_dig -2                                               //                                                           load proof#0 from parameters                                                                                                          (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0 | proof#0                                                                                                                                                                                                                                            for proof_hash in proof:                                                                             merkle/contract.py:27
    extract 2 0                                                //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0 | {extract}                                                                                                                                                                                                                                          for proof_hash in proof:                                                                             merkle/contract.py:27
    //                                                         virtual: store array_value%2#0 to f-stack                    (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0 |                                                                                                                                                                                                                                                                     for proof_hash in proof:                                                                             merkle/contract.py:27
    int 0                                                      //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0 | 0
    //                                                         virtual: store item_index_internal%3#0 to f-stack            (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0 |
    frame_dig -1                                               //                                                           load leaf#0 from parameters                                                                                                           (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0 | leaf#0
    //                                                         virtual: store computed#1 to f-stack                         (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 |
    // Implicit fall through to compute_root_hash_for_header@1 //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 |

compute_root_hash_for_header@1:
    frame_dig 2                                                //                                                           load item_index_internal%3#0 from f-stack                                                                                             (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0                                                                                                                                                                         for proof_hash in proof:                                                                             merkle/contract.py:27
    frame_dig 0                                                //                                                           load array_length%1#0 from f-stack                                                                                                    (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,array_length%1#0                                                                                                                                                        for proof_hash in proof:                                                                             merkle/contract.py:27
    <                                                          //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | {<}                                                                                                                                                                                             for proof_hash in proof:                                                                             merkle/contract.py:27
    //                                                         virtual: store continue_looping%5#0 to l-stack (no copy)     (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | continue_looping%5#0                                                                                                                                                                                                             for proof_hash in proof:                                                                             merkle/contract.py:27
    //                                                         virtual: load continue_looping%5#0 from l-stack (no copy)    (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | continue_looping%5#0                                                                                                                                                                                                             for proof_hash in proof:                                                                             merkle/contract.py:27
    bz compute_root_hash_after_for@4                           //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 |                                                                                                                                                                                                 for proof_hash in proof:                                                                             merkle/contract.py:27
    // Implicit fall through to compute_root_hash_for_body@2   //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 |                                                                                                                                                                                                 for proof_hash in proof:                                                                             merkle/contract.py:27

compute_root_hash_for_body@2:
    frame_dig 2                                                //                                                           load item_index_internal%3#0 from f-stack                                                                                             (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0                                                                                                                                                                         for proof_hash in proof:                                                                             merkle/contract.py:27
    dup                                                        //                                                           store item_index_internal%3#0 to l-stack (copy)                                                                                       (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,item_index_internal%3#0                                                                                                                                                 for proof_hash in proof:                                                                             merkle/contract.py:27
    int 32                                                     //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,item_index_internal%3#0,32                                                                                                                                              for proof_hash in proof:                                                                             merkle/contract.py:27
    *                                                          //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,{*}                                                                                                                                                                     for proof_hash in proof:                                                                             merkle/contract.py:27
    //                                                         virtual: store item_index%6#0 to l-stack (no copy)           (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,item_index%6#0                                                                                                                                                                                           for proof_hash in proof:                                                                             merkle/contract.py:27
    frame_dig 1                                                //                                                           load array_value%2#0 from f-stack                                                                                                     (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,item_index%6#0,array_value%2#0                                                                                                                                          proof_hash                                                                                           merkle/contract.py:27
    swap                                                       //                                                           load item_index%6#0 from l-stack (no copy)                                                                                            (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,array_value%2#0,item_index%6#0                                                                                                                                          proof_hash                                                                                           merkle/contract.py:27
    int 32                                                     //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,array_value%2#0,item_index%6#0,32                                                                                                                                       for proof_hash in proof:                                                                             merkle/contract.py:27
    extract3                                                   //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,{extract3}                                                                                                                                                              for proof_hash in proof:                                                                             merkle/contract.py:27
    //                                                         virtual: store proof_hash#0 to l-stack (no copy)             (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,proof_hash#0                                                                                                                                                                                             proof_hash                                                                                           merkle/contract.py:27
    frame_dig 3                                                //                                                           load computed#1 from f-stack                                                                                                          (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,proof_hash#0,computed#1                                                                                                                                                 self.hash_pair(computed, proof_hash)                                                                 merkle/contract.py:28
    swap                                                       //                                                           load proof_hash#0 from l-stack (no copy)                                                                                              (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,computed#1,proof_hash#0                                                                                                                                                 self.hash_pair(computed, proof_hash)                                                                 merkle/contract.py:28
    callsub hash_pair                                          //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,{hash_pair}.0,{hash_pair}.1,{hash_pair}.2                                                                                                                               self.hash_pair(computed, proof_hash)                                                                 merkle/contract.py:28
    pop                                                        //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,{hash_pair}.0,{hash_pair}.1                                                                                                                                             self.hash_pair(computed, proof_hash)                                                                 merkle/contract.py:28
    pop                                                        //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,{hash_pair}.0                                                                                                                                                           self.hash_pair(computed, proof_hash)                                                                 merkle/contract.py:28
    frame_bury 3                                               //                                                           store computed#1 to f-stack                                                                                                           (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0                                                                                                                                                                         self.hash_pair(computed, proof_hash)                                                                 merkle/contract.py:28
    //                                                         virtual: load item_index_internal%3#0 from l-stack (no copy) (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0
    int 1                                                      //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | item_index_internal%3#0,1
    +                                                          //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | {+}
    frame_bury 2                                               //                                                           store item_index_internal%3#0 to f-stack                                                                                              (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 |
    b compute_root_hash_for_header@1                           //                                                                                                                                                                                                 (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 |

compute_root_hash_after_for@4:
    frame_dig 3                                                //                                                           load computed#1 from f-stack                                                                                                          (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | computed#1                                                                                                                                                                                      return computed                                                                                      merkle/contract.py:29
    frame_dig -2                                               //                                                           load proof#0 from parameters                                                                                                          (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | computed#1,proof#0                                                                                                                                                                              return computed                                                                                      merkle/contract.py:29
    frame_dig -1                                               //                                                           load leaf#0 from parameters                                                                                                           (𝕡) proof#0,leaf#0 | (𝕗) array_length%1#0,array_value%2#0,item_index_internal%3#0,computed#1 | computed#1,proof#0,leaf#0                                                                                                                                                                       return computed                                                                                      merkle/contract.py:29
    frame_bury 2
    frame_bury 1
    frame_bury 0
    retsub                                                     //                                                                                                                                                                                                 computed#1,proof#0,leaf#0                                                                                                                                                                                                                                                                      return computed                                                                                      merkle/contract.py:29


// examples.merkle.contract.MerkleTree.hash_pair(a: bytes, b: bytes) -> bytes, bytes, bytes:
hash_pair:
    proto 2 3                                                  //                                                                                                                                                                                                 (𝕡) a#0,b#0 |                                                                                                                                                                                                                                                                                  @subroutine\ndef hash_pair(self, a: Bytes32, b: Bytes32) -> Bytes32:                                 merkle/contract.py:15-16

hash_pair_block@0:
    frame_dig -2                                               //                                                           load a#0 from parameters                                                                                                              (𝕡) a#0,b#0 | a#0                                                                                                                                                                                                                                                                              BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)                                            merkle/contract.py:19
    frame_dig -1                                               //                                                           load b#0 from parameters                                                                                                              (𝕡) a#0,b#0 | a#0,b#0                                                                                                                                                                                                                                                                          BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)                                            merkle/contract.py:19
    b<                                                         //                                                                                                                                                                                                 (𝕡) a#0,b#0 | {b<}                                                                                                                                                                                                                                                                             BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)                                            merkle/contract.py:19
    //                                                         virtual: store tmp%0#0 to l-stack (no copy)                  (𝕡) a#0,b#0 | tmp%0#0                                                                                                                                                                                                                                                                                                           BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)                                            merkle/contract.py:19
    //                                                         virtual: load tmp%0#0 from l-stack (no copy)                 (𝕡) a#0,b#0 | tmp%0#0                                                                                                                                                                                                                                                                                                           a.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)\nelse b.bytes + a... merkle/contract.py:18-20
    bz hash_pair_ternary_false@2                               //                                                                                                                                                                                                 (𝕡) a#0,b#0 |                                                                                                                                                                                                                                                                                  a.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)\nelse b.bytes + a... merkle/contract.py:18-20
    // Implicit fall through to hash_pair_ternary_true@1       //                                                                                                                                                                                                 (𝕡) a#0,b#0 |                                                                                                                                                                                                                                                                                  a.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)\nelse b.bytes + a... merkle/contract.py:18-20

hash_pair_ternary_true@1:
    frame_dig -2                                               //                                                           load a#0 from parameters                                                                                                              (𝕡) a#0,b#0 | a#0                                                                                                                                                                                                                                                                              a.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)\nelse b.bytes + a... merkle/contract.py:18-20
    frame_dig -1                                               //                                                           load b#0 from parameters                                                                                                              (𝕡) a#0,b#0 | a#0,b#0                                                                                                                                                                                                                                                                          a.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)\nelse b.bytes + a... merkle/contract.py:18-20
    concat                                                     //                                                                                                                                                                                                 (𝕡) a#0,b#0 | {concat}                                                                                                                                                                                                                                                                         a.bytes + b.bytes                                                                                    merkle/contract.py:18
    //                                                         virtual: store ternary_result%1#0 to x-stack (no copy)       (𝕡) a#0,b#0 | (𝕏) ternary_result%1#0 |                                                                                                                                                                                                                                                                                          a.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)\nelse b.bytes + a... merkle/contract.py:18-20
    b hash_pair_ternary_merge@3                                //                                                                                                                                                                                                 (𝕡) a#0,b#0 | (𝕏) ternary_result%1#0 |                                                                                                                                                    ternary_result%1#0

hash_pair_ternary_false@2:
    frame_dig -1                                               //                                                           load b#0 from parameters                                                                                                              (𝕡) a#0,b#0 | b#0                                                                                                                                                                                                                                                                              a.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)\nelse b.bytes + a... merkle/contract.py:18-20
    frame_dig -2                                               //                                                           load a#0 from parameters                                                                                                              (𝕡) a#0,b#0 | b#0,a#0                                                                                                                                                                                                                                                                          a.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)\nelse b.bytes + a... merkle/contract.py:18-20
    concat                                                     //                                                                                                                                                                                                 (𝕡) a#0,b#0 | {concat}                                                                                                                                                                                                                                                                         b.bytes + a.bytes                                                                                    merkle/contract.py:20
    //                                                         virtual: store ternary_result%1#0 to x-stack (no copy)       (𝕡) a#0,b#0 | (𝕏) ternary_result%1#0 |                                                                                                                                                                                                                                                                                          a.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)\nelse b.bytes + a... merkle/contract.py:18-20
    // Implicit fall through to hash_pair_ternary_merge@3      //                                                                                                                                                                                                 (𝕡) a#0,b#0 | (𝕏) ternary_result%1#0 |                                                                                                                                                    ternary_result%1#0

hash_pair_ternary_merge@3:
    //                                                         virtual: load ternary_result%1#0 from x-stack                (𝕡) a#0,b#0 | ternary_result%1#0                                                                                                                                                                                                                                                                          ternary_result%1#0    hash_bytes = op.sha256(\na.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b... merkle/contract.py:17-21
    sha256                                                     //                                                                                                                                                                                                 (𝕡) a#0,b#0 | {sha256}                                                                                                                                                                                                                                                                         op.sha256(\na.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b.bytes)\nelse... merkle/contract.py:17-21
    //                                                         virtual: store hash_bytes#0 to l-stack (no copy)             (𝕡) a#0,b#0 | hash_bytes#0                                                                                                                                                                                                                                                                                                      hash_bytes = op.sha256(\na.bytes + b.bytes\nif BigUInt.from_bytes(a.bytes) < BigUInt.from_bytes(b... merkle/contract.py:17-21
    //                                                         virtual: load hash_bytes#0 from l-stack (no copy)            (𝕡) a#0,b#0 | hash_bytes#0                                                                                                                                                                                                                                                                                                      return Bytes32.from_bytes(hash_bytes)                                                                merkle/contract.py:22
    frame_dig -2                                               //                                                           load a#0 from parameters                                                                                                              (𝕡) a#0,b#0 | hash_bytes#0,a#0                                                                                                                                                                                                                                                                 return Bytes32.from_bytes(hash_bytes)                                                                merkle/contract.py:22
    frame_dig -1                                               //                                                           load b#0 from parameters                                                                                                              (𝕡) a#0,b#0 | hash_bytes#0,a#0,b#0                                                                                                                                                                                                                                                             return Bytes32.from_bytes(hash_bytes)                                                                merkle/contract.py:22
    retsub                                                     //                                                                                                                                                                                                 hash_bytes#0,a#0,b#0                                                                                                                                                                                                                                                                           return Bytes32.from_bytes(hash_bytes)                                                                merkle/contract.py:22

