>> poetry run puyapy -O1 --output-ssa-ir --output-optimization-ir --output-final-ir --output-cssa-ir --output-post-ssa-ir --output-parallel-copies-ir --out-dir=out --debug-level=1 --log-level=debug byte_constants.py
debug: Building AWST for __init__.py
debug: Building AWST for embedded puyapy lib at <puya>/puyapy.py
debug: Building AWST for byte_constants.py
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Sealing block@0: // L16
debug: Terminated block@0: // L16
debug: Output IR to <git root>/examples/out/byte_constants_ByteConstantsContract.ssa.ir
info: Optimizing examples.byte_constants.ByteConstantsContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.byte_constants.ByteConstantsContract.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable base_64#0
debug: Removing unused variable base_32#0
debug: Removing unused variable base_16#0
debug: Removing unused variable utf8#0
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.byte_constants.ByteConstantsContract.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to <git root>/examples/out/byte_constants_ByteConstantsContract.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.byte_constants.ByteConstantsContract.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.byte_constants.ByteConstantsContract.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: No optimizations performed in pass 2, ending loop
debug: Output IR to <git root>/examples/out/byte_constants_ByteConstantsContract.cssa.ir
debug: Removing Phis from examples.byte_constants.ByteConstantsContract.approval_program
debug: Removing Phis from examples.byte_constants.ByteConstantsContract.clear_state_program
debug: Output IR to <git root>/examples/out/byte_constants_ByteConstantsContract.post_ssa.ir
debug: Sequentializing parallel copies in examples.byte_constants.ByteConstantsContract.approval_program
debug: Sequentializing parallel copies in examples.byte_constants.ByteConstantsContract.clear_state_program
debug: Output IR to <git root>/examples/out/byte_constants_ByteConstantsContract.parallel_copies.ir
debug: Coalescing local variables in examples.byte_constants.ByteConstantsContract.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.byte_constants.ByteConstantsContract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Output IR to <git root>/examples/out/byte_constants_ByteConstantsContract.final.ir
debug: Inserted main_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[8]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[10]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[13]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[15]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[18]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[20]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[23]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[25]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[28]: 'store result#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[30]: 'load result#0' with 'load result#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[34]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[36]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[38]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[40]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[31]: 'store result#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[33]: 'load result#0' with 'load result#0 from l-stack (no copy)'
info: Writing out/byte_constants.approval.teal
info: Writing out/byte_constants.approval.debug.teal
info: Writing out/byte_constants.clear.teal
info: Writing out/byte_constants.clear.debug.teal
>> exit code = 0