>> poetry run puya -O1 --output-ssa-ir --output-optimization-ir --output-final-ir --output-cssa-ir --output-post-ssa-ir --output-parallel-copies-ir --out-dir=out --debug-level=1 --log-level=debug everything
debug: Building AWST for __init__.py
debug: Building AWST for everything/constants.py
debug: Building AWST for everything/__init__.py
debug: Building AWST for embedded algopy lib at <puya>/algopy.py
debug: Building AWST for everything/my_base.py
debug: Building AWST for everything/contract.py
debug: Sealing block@0: // L34
debug: Terminated block@0: // L34
debug: Sealing block@0: // L70
debug: Terminated block@0: // L70
debug: Sealing block@0: // L16
debug: Terminated block@0: // L16
debug: Sealing block@0: // L8
debug: Terminated block@0: // L8
debug: Sealing block@0: // L40
debug: Terminated block@0: // L40
debug: Sealing block@None: // if_body_L42
debug: Sealing block@None: // else_body_L42
debug: Terminated block@1: // if_body_L42
debug: Sealing block@None: // if_body_L44
debug: Sealing block@None: // else_body_L44
debug: Terminated block@2: // if_body_L44
debug: Sealing block@3: // after_if_else_L44
debug: Terminated block@3: // after_if_else_L44
debug: Sealing block@4: // after_if_else_L42
debug: Created Phi assignment: let name#1: bytes = undefined while trying to resolve 'name' in block@4: // after_if_else_L42
debug: Added name#0 to Phi node: let name#1: bytes = Phi(name#0 <- block@0) in block@0: // L40
debug: Created Phi assignment: let name#2: bytes = undefined while trying to resolve 'name' in block@3: // after_if_else_L44
debug: Added name#0 to Phi node: let name#2: bytes = Phi(name#0 <- block@1) in block@1: // if_body_L42
debug: Added name#0 to Phi node: let name#2: bytes = Phi(name#0 <- block@1, name#0 <- block@2) in block@2: // if_body_L44
debug: Replacing trivial Phi node: let name#2: bytes = Phi(name#0 <- block@1, name#0 <- block@2) (name#2) with name#0
debug: Deleting Phi assignment: let name#2: bytes = Phi(name#0 <- block@1, name#0 <- block@2)
debug: Replaced trivial Phi node: let name#2: bytes = Phi(name#0 <- block@1, name#0 <- block@2) (name#2) with name#0 in current definition for 1 blocks
debug: Added name#0 to Phi node: let name#1: bytes = Phi(name#0 <- block@0, name#0 <- block@3) in block@3: // after_if_else_L44
debug: Replacing trivial Phi node: let name#1: bytes = Phi(name#0 <- block@0, name#0 <- block@3) (name#1) with name#0
debug: Deleting Phi assignment: let name#1: bytes = Phi(name#0 <- block@0, name#0 <- block@3)
debug: Replaced trivial Phi node: let name#1: bytes = Phi(name#0 <- block@0, name#0 <- block@3) (name#1) with name#0 in current definition for 1 blocks
debug: Terminated block@4: // after_if_else_L42
debug: Sealing block@0: // L19
debug: Terminated block@0: // L19
debug: Sealing block@0: // L49
debug: Terminated block@0: // L49
debug: Sealing block@None: // if_body_L52
debug: Sealing block@None: // else_body_L52
debug: Terminated block@1: // if_body_L52
debug: Sealing block@2: // after_if_else_L52
debug: Terminated block@2: // after_if_else_L52
debug: Sealing block@0: // L57
debug: Terminated block@0: // L57
debug: Sealing block@0: // L14
debug: Terminated block@0: // L14
debug: Sealing block@0: // L62
debug: Terminated block@0: // L62
debug: Sealing block@0: // L74
debug: Terminated block@0: // L74
debug: Sealing block@0: // L79
debug: Terminated block@0: // L79
debug: Sealing block@0: // L30
debug: Terminated block@0: // L30
debug: Sealing block@0: // L29
debug: Terminated block@0: // L29
debug: Sealing block@None: // on_create_L30
debug: Terminated block@1: // on_create_L30
debug: Sealing block@2: // entrypoint_L30
debug: Terminated block@2: // entrypoint_L30
debug: Sealing block@None: // abi_routing_L29
debug: Sealing block@None: // else_body_L29
debug: Terminated block@3: // abi_routing_L29
debug: Sealing block@None: // switch_case_default_L29
debug: Sealing block@None: // create_route_L33
debug: Sealing block@None: // register_route_L39
debug: Sealing block@None: // say_hello_route_L48
debug: Sealing block@None: // calculate_route_L56
debug: Sealing block@None: // close_out_route_L61
debug: Terminated block@4: // create_route_L33
debug: Terminated block@5: // register_route_L39
debug: Terminated block@6: // say_hello_route_L48
debug: Terminated block@7: // calculate_route_L56
debug: Terminated block@8: // close_out_route_L61
debug: Terminated block@9: // switch_case_default_L29
debug: Sealing block@10: // switch_case_next_L29
debug: Terminated block@10: // switch_case_next_L29
debug: Sealing block@11: // after_if_else_L29
debug: Terminated block@11: // after_if_else_L29
debug: Sealing block@0: // L65
debug: Terminated block@0: // L65
debug: Output IR to <git root>/examples/everything/out/contract_Everything.ssa.ir
info: Optimizing examples.everything.contract.Everything at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine examples.everything.contract.Everything.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@10: // switch_case_next_L29 with block@9: // switch_case_default_L29 in block@11: // after_if_else_L29
debug: Merged linear block@10: // switch_case_next_L29 into block@9: // switch_case_default_L29
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@9: // switch_case_default_L29
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything._check_ban_list
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.get_banned
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable addr#0
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.my_base.MyBase.remember_creator
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.register
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%2#0, sender_name#0
debug: Replacing {tuple_assignment%2#0} with sender_name#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%3#0, sender_name_existed#0
debug: Replacing {tuple_assignment%3#0} with sender_name_existed#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@3: // after_if_else_L44
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.my_base.multiplicative_identity
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.say_hello
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, name#0
debug: Replacing {tuple_assignment%0#0} with name#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%1#0, exists#0
debug: Replacing {tuple_assignment%1#0} with exists#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.calculate
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.my_base.MyMiddleBase.calculate
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.close_out
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything._remove_sender
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.positive_one
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Output IR to <git root>/examples/everything/out/contract_Everything.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine examples.everything.contract.Everything.approval_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.create
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything._check_ban_list
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.get_banned
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.my_base.MyBase.remember_creator
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.register
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.my_base.multiplicative_identity
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.say_hello
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.calculate
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.my_base.MyMiddleBase.calculate
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.close_out
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything._remove_sender
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.positive_one
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.__init__
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizing subroutine examples.everything.contract.Everything.clear_state_program
debug: Optimizer: Arithmetic Simplification
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Simplify Conditional Branches
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: No optimizations performed in pass 2, ending loop
debug: Output IR to <git root>/examples/everything/out/contract_Everything.cssa.ir
debug: Removing Phis from examples.everything.contract.Everything.approval_program
debug: Removing Phis from examples.everything.contract.Everything.create
debug: Removing Phis from examples.everything.contract.Everything._check_ban_list
debug: Removing Phis from examples.everything.contract.get_banned
debug: Removing Phis from examples.everything.my_base.MyBase.remember_creator
debug: Removing Phis from examples.everything.contract.Everything.register
debug: Removing Phis from examples.everything.my_base.multiplicative_identity
debug: Removing Phis from examples.everything.contract.Everything.say_hello
debug: Removing Phis from examples.everything.contract.Everything.calculate
debug: Removing Phis from examples.everything.my_base.MyMiddleBase.calculate
debug: Removing Phis from examples.everything.contract.Everything.close_out
debug: Removing Phis from examples.everything.contract.Everything._remove_sender
debug: Removing Phis from examples.everything.contract.positive_one
debug: Removing Phis from examples.everything.contract.Everything.__init__
debug: Removing Phis from examples.everything.contract.Everything.clear_state_program
debug: Output IR to <git root>/examples/everything/out/contract_Everything.post_ssa.ir
debug: Sequentializing parallel copies in examples.everything.contract.Everything.approval_program
debug: Sequentializing parallel copies in examples.everything.contract.Everything.create
debug: Sequentializing parallel copies in examples.everything.contract.Everything._check_ban_list
debug: Sequentializing parallel copies in examples.everything.contract.get_banned
debug: Sequentializing parallel copies in examples.everything.my_base.MyBase.remember_creator
debug: Sequentializing parallel copies in examples.everything.contract.Everything.register
debug: Sequentializing parallel copies in examples.everything.my_base.multiplicative_identity
debug: Sequentializing parallel copies in examples.everything.contract.Everything.say_hello
debug: Sequentializing parallel copies in examples.everything.contract.Everything.calculate
debug: Sequentializing parallel copies in examples.everything.my_base.MyMiddleBase.calculate
debug: Sequentializing parallel copies in examples.everything.contract.Everything.close_out
debug: Sequentializing parallel copies in examples.everything.contract.Everything._remove_sender
debug: Sequentializing parallel copies in examples.everything.contract.positive_one
debug: Sequentializing parallel copies in examples.everything.contract.Everything.__init__
debug: Sequentializing parallel copies in examples.everything.contract.Everything.clear_state_program
debug: Output IR to <git root>/examples/everything/out/contract_Everything.parallel_copies.ir
debug: Coalescing local variables in examples.everything.contract.Everything.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.Everything.create using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.Everything._check_ban_list using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.get_banned using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.my_base.MyBase.remember_creator using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.Everything.register using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.my_base.multiplicative_identity using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.Everything.say_hello using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.Everything.calculate using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.my_base.MyMiddleBase.calculate using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.Everything.close_out using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.Everything._remove_sender using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.positive_one using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.Everything.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in examples.everything.contract.Everything.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Output IR to <git root>/examples/everything/out/contract_Everything.final.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[3]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_abi_routing@3.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced main_abi_routing@3.ops[8]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted main_create_route@4.ops[14]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced main_create_route@4.ops[16]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted main_register_route@5.ops[5]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced main_register_route@5.ops[7]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted main_register_route@5.ops[10]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced main_register_route@5.ops[12]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted main_register_route@5.ops[15]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced main_register_route@5.ops[17]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted main_register_route@5.ops[20]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced main_register_route@5.ops[22]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted main_register_route@5.ops[1]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced main_register_route@5.ops[4]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted main_say_hello_route@6.ops[1]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced main_say_hello_route@6.ops[3]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted main_say_hello_route@6.ops[5]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced main_say_hello_route@6.ops[7]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted main_say_hello_route@6.ops[10]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced main_say_hello_route@6.ops[12]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted main_say_hello_route@6.ops[19]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced main_say_hello_route@6.ops[21]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted main_say_hello_route@6.ops[15]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced main_say_hello_route@6.ops[18]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@7.ops[1]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced main_calculate_route@7.ops[3]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@7.ops[5]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced main_calculate_route@7.ops[7]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@7.ops[10]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced main_calculate_route@7.ops[12]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@7.ops[25]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced main_calculate_route@7.ops[27]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@7.ops[17]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced main_calculate_route@7.ops[20]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@7.ops[22]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced main_calculate_route@7.ops[25]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted main_calculate_route@7.ops[15]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced main_calculate_route@7.ops[20]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted main_close_out_route@8.ops[1]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced main_close_out_route@8.ops[3]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted main_close_out_route@8.ops[6]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced main_close_out_route@8.ops[8]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted main_close_out_route@8.ops[11]: 'store tmp%26#0 to l-stack (copy)'
debug: Replaced main_close_out_route@8.ops[13]: 'load tmp%26#0' with 'load tmp%26#0 from l-stack (no copy)'
debug: Found 2 edge set/s for examples.everything.contract.Everything.approval_program
debug: Inserted _check_ban_list_block@0.ops[7]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _check_ban_list_block@0.ops[9]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted _check_ban_list_block@0.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced _check_ban_list_block@0.ops[6]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted _check_ban_list_block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced _check_ban_list_block@0.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted remember_creator_block@0.ops[1]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced remember_creator_block@0.ops[4]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted register_block@0.ops[2]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced register_block@0.ops[4]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted register_block@0.ops[7]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced register_block@0.ops[9]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted register_if_body@1.ops[4]: 'store sender_name_existed#0 to l-stack (copy)'
debug: Replaced register_if_body@1.ops[7]: 'load sender_name_existed#0' with 'load sender_name_existed#0 from l-stack (no copy)'
debug: Inserted register_if_body@2.ops[3]: 'store app_global_get_ex_did_exist%5#0 to l-stack (copy)'
debug: Replaced register_if_body@2.ops[6]: 'load app_global_get_ex_did_exist%5#0' with 'load app_global_get_ex_did_exist%5#0 from l-stack (no copy)'
debug: Inserted register_if_body@2.ops[9]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced register_if_body@2.ops[12]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted register_if_body@2.ops[14]: 'store new_state_value%7#0 to l-stack (copy)'
debug: Replaced register_if_body@2.ops[17]: 'load new_state_value%7#0' with 'load new_state_value%7#0 from l-stack (no copy)'
debug: Inserted register_if_body@2.ops[5]: 'store app_global_get_ex_value%4#0 to l-stack (copy)'
debug: Replaced register_if_body@2.ops[12]: 'load app_global_get_ex_value%4#0' with 'load app_global_get_ex_value%4#0 from l-stack (no copy)'
debug: Found 1 edge set/s for examples.everything.contract.Everything.register
debug: Inserted say_hello_block@0.ops[5]: 'store exists#0 to l-stack (copy)'
debug: Replaced say_hello_block@0.ops[8]: 'load exists#0' with 'load exists#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[6]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[8]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[11]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[13]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[15]: 'store length%5#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[17]: 'load length%5#0' with 'load length%5#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[19]: 'store value_as_bytes%6#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[21]: 'load value_as_bytes%6#0' with 'load value_as_bytes%6#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[23]: 'store value_as_uint16%7#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[25]: 'load value_as_uint16%7#0' with 'load value_as_uint16%7#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[28]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[30]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[2]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[5]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted say_hello_after_if_else@2.ops[15]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced say_hello_after_if_else@2.ops[28]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Found 1 edge set/s for examples.everything.contract.Everything.say_hello
debug: examples.everything.contract.Everything.say_hello f-stack entry: []
debug: examples.everything.contract.Everything.say_hello f-stack on first store: ['name#0']
debug: Inserted calculate_block@0.ops[3]: 'store c#0 to l-stack (copy)'
debug: Replaced calculate_block@0.ops[5]: 'load c#0' with 'load c#0 from l-stack (no copy)'
debug: Inserted calculate_block@0.ops[14]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced calculate_block@0.ops[16]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted calculate_block@0.ops[18]: 'store val_as_bytes%3#0 to l-stack (copy)'
debug: Replaced calculate_block@0.ops[20]: 'load val_as_bytes%3#0' with 'load val_as_bytes%3#0 from l-stack (no copy)'
debug: Inserted calculate_block@0.ops[10]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced calculate_block@0.ops[13]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted calculate_block@0.ops[7]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced calculate_block@0.ops[13]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted MyMiddleBase.calculate_block@0.ops[9]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced MyMiddleBase.calculate_block@0.ops[11]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted MyMiddleBase.calculate_block@0.ops[13]: 'store val_as_bytes%3#0 to l-stack (copy)'
debug: Replaced MyMiddleBase.calculate_block@0.ops[15]: 'load val_as_bytes%3#0' with 'load val_as_bytes%3#0 from l-stack (no copy)'
debug: Inserted MyMiddleBase.calculate_block@0.ops[5]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced MyMiddleBase.calculate_block@0.ops[8]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted MyMiddleBase.calculate_block@0.ops[2]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced MyMiddleBase.calculate_block@0.ops[8]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[3]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[6]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[9]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[14]: 'store new_state_value%3#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[17]: 'load new_state_value%3#0' with 'load new_state_value%3#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[5]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[12]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[3]: 'store app_global_get_ex_did_exist%1#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[6]: 'load app_global_get_ex_did_exist%1#0' with 'load app_global_get_ex_did_exist%1#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[9]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[12]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[14]: 'store new_state_value%3#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[17]: 'load new_state_value%3#0' with 'load new_state_value%3#0 from l-stack (no copy)'
debug: Inserted _remove_sender_block@0.ops[5]: 'store app_global_get_ex_value%0#0 to l-stack (copy)'
debug: Replaced _remove_sender_block@0.ops[12]: 'load app_global_get_ex_value%0#0' with 'load app_global_get_ex_value%0#0 from l-stack (no copy)'
info: Writing everything/out/contract.approval.teal
info: Writing everything/out/contract.approval.debug.teal
info: Writing everything/out/contract.clear.teal
info: Writing everything/out/contract.clear.debug.teal
info: Writing everything/out/application.json
>> exit code = 0