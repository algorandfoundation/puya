{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "register(string)void": {
            "call_config": {
                "no_op": "CALL",
                "opt_in": "CALL"
            }
        },
        "say_hello()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "calculate(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "close_out()void": {
            "call_config": {
                "close_out": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QuRXZlcnl0aGluZy5hcHByb3ZhbF9wcm9ncmFtKCkgLT4gdWludDY0OgptYWluX2Jsb2NrQDA6CiAgICAgICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICAgICBibnogbWFpbl9lbnRyeXBvaW50QDIKCm1haW5fb25fY3JlYXRlQDE6CiAgICAgICAgY2FsbHN1YiBfX2luaXRfXwoKbWFpbl9lbnRyeXBvaW50QDI6CiAgICAgICAgdHhuIE51bUFwcEFyZ3MKICAgICAgICBieiBtYWluX2FmdGVyX2lmX2Vsc2VAMTEKCm1haW5fYWJpX3JvdXRpbmdAMzoKICAgICAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICAgICAgbWV0aG9kICJjcmVhdGUoKXZvaWQiCiAgICAgICAgbWV0aG9kICJyZWdpc3RlcihzdHJpbmcpdm9pZCIKICAgICAgICBtZXRob2QgInNheV9oZWxsbygpc3RyaW5nIgogICAgICAgIG1ldGhvZCAiY2FsY3VsYXRlKHVpbnQ2NCx1aW50NjQpdWludDY0IgogICAgICAgIG1ldGhvZCAiY2xvc2Vfb3V0KCl2b2lkIgogICAgICAgIHVuY292ZXIgNQogICAgICAgIG1hdGNoIG1haW5fY3JlYXRlX3JvdXRlQDQgbWFpbl9yZWdpc3Rlcl9yb3V0ZUA1IG1haW5fc2F5X2hlbGxvX3JvdXRlQDYgbWFpbl9jYWxjdWxhdGVfcm91dGVANyBtYWluX2Nsb3NlX291dF9yb3V0ZUA4CiAgICAgICAgYiBtYWluX2FmdGVyX2lmX2Vsc2VAMTEKCm1haW5fY3JlYXRlX3JvdXRlQDQ6CiAgICAgICAgdHhuIE9uQ29tcGxldGlvbgogICAgICAgICEKICAgICAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIE5vT3AKICAgICAgICB0eG4gQXBwbGljYXRpb25JRAogICAgICAgICEKICAgICAgICBhc3NlcnQgLy8gaXMgY3JlYXRpbmcKICAgICAgICBjYWxsc3ViIGNyZWF0ZQogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgptYWluX3JlZ2lzdGVyX3JvdXRlQDU6CiAgICAgICAgaW50IDEKICAgICAgICB0eG4gT25Db21wbGV0aW9uCiAgICAgICAgc2hsCiAgICAgICAgaW50IDMKICAgICAgICAmCiAgICAgICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBvbmUgb2YgTm9PcCwgT3B0SW4KICAgICAgICB0eG4gQXBwbGljYXRpb25JRAogICAgICAgIGFzc2VydCAvLyBpcyBub3QgY3JlYXRpbmcKICAgICAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICAgICAgY2FsbHN1YiByZWdpc3RlcgogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgptYWluX3NheV9oZWxsb19yb3V0ZUA2OgogICAgICAgIHR4biBPbkNvbXBsZXRpb24KICAgICAgICAhCiAgICAgICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICAgICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICAgICBhc3NlcnQgLy8gaXMgbm90IGNyZWF0aW5nCiAgICAgICAgY2FsbHN1YiBzYXlfaGVsbG8KICAgICAgICBieXRlIDB4MTUxZjdjNzUKICAgICAgICBzd2FwCiAgICAgICAgY29uY2F0CiAgICAgICAgbG9nCiAgICAgICAgaW50IDEKICAgICAgICByZXR1cm4KCm1haW5fY2FsY3VsYXRlX3JvdXRlQDc6CiAgICAgICAgdHhuIE9uQ29tcGxldGlvbgogICAgICAgICEKICAgICAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIE5vT3AKICAgICAgICB0eG4gQXBwbGljYXRpb25JRAogICAgICAgIGFzc2VydCAvLyBpcyBub3QgY3JlYXRpbmcKICAgICAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICAgICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgICAgIGNhbGxzdWIgY2FsY3VsYXRlCiAgICAgICAgYnl0ZSAweDE1MWY3Yzc1CiAgICAgICAgc3dhcAogICAgICAgIGNvbmNhdAogICAgICAgIGxvZwogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgptYWluX2Nsb3NlX291dF9yb3V0ZUA4OgogICAgICAgIHR4biBPbkNvbXBsZXRpb24KICAgICAgICBpbnQgQ2xvc2VPdXQKICAgICAgICA9PQogICAgICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgQ2xvc2VPdXQKICAgICAgICB0eG4gQXBwbGljYXRpb25JRAogICAgICAgIGFzc2VydCAvLyBpcyBub3QgY3JlYXRpbmcKICAgICAgICBjYWxsc3ViIGNsb3NlX291dAogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgptYWluX2FmdGVyX2lmX2Vsc2VAMTE6CiAgICAgICAgZXJyIC8vIHJlamVjdCB0cmFuc2FjdGlvbgoKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QuRXZlcnl0aGluZy5jcmVhdGUoKSAtPiB2b2lkOgpjcmVhdGU6CiAgICAgICAgcHJvdG8gMCAwCgpjcmVhdGVfYmxvY2tAMDoKICAgICAgICBjYWxsc3ViIF9jaGVja19iYW5fbGlzdAogICAgICAgIGNhbGxzdWIgcmVtZW1iZXJfY3JlYXRvcgogICAgICAgIGJ5dGUgImNvdW50ZXIiCiAgICAgICAgaW50IDAKICAgICAgICBhcHBfZ2xvYmFsX3B1dAogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QuRXZlcnl0aGluZy5fY2hlY2tfYmFuX2xpc3QoKSAtPiB2b2lkOgpfY2hlY2tfYmFuX2xpc3Q6CiAgICAgICAgcHJvdG8gMCAwCgpfY2hlY2tfYmFuX2xpc3RfYmxvY2tAMDoKICAgICAgICB0eG4gU2VuZGVyCiAgICAgICAgY2FsbHN1YiBnZXRfYmFubmVkCiAgICAgICAgIT0KICAgICAgICBhc3NlcnQgLy8gWW91IGFyZSBiYW5uZWQsIGdvb2RieWUKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLmNvbnRyYWN0LmdldF9iYW5uZWQoKSAtPiBieXRlczoKZ2V0X2Jhbm5lZDoKICAgICAgICBwcm90byAwIDEKCmdldF9iYW5uZWRfYmxvY2tAMDoKICAgICAgICBhZGRyIFZDTUpLV09ZNVA1UDdTS01aRkZPQ0VST1BKQ1pPVElKTU5JWU5VQ0tIN0xSTzQ1Sk1KUDZVWUJJSkEKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLm15X2Jhc2UuTXlCYXNlLnJlbWVtYmVyX2NyZWF0b3IoKSAtPiB2b2lkOgpyZW1lbWJlcl9jcmVhdG9yOgogICAgICAgIHByb3RvIDAgMAoKcmVtZW1iZXJfY3JlYXRvcl9ibG9ja0AwOgogICAgICAgIGJ5dGUgImNyZWF0b3IiCiAgICAgICAgdHhuIFNlbmRlcgogICAgICAgIGFwcF9nbG9iYWxfcHV0CiAgICAgICAgcmV0c3ViCgoKLy8gZXhhbXBsZXMuZXZlcnl0aGluZy5jb250cmFjdC5FdmVyeXRoaW5nLnJlZ2lzdGVyKG5hbWUjMDogYnl0ZXMpIC0+IHZvaWQ6CnJlZ2lzdGVyOgogICAgICAgIHByb3RvIDEgMAoKcmVnaXN0ZXJfYmxvY2tAMDoKICAgICAgICBjYWxsc3ViIF9jaGVja19iYW5fbGlzdAogICAgICAgIHR4biBPbkNvbXBsZXRpb24KICAgICAgICBpbnQgT3B0SW4KICAgICAgICA9PQogICAgICAgIGJ6IHJlZ2lzdGVyX2FmdGVyX2lmX2Vsc2VANAoKcmVnaXN0ZXJfaWZfYm9keUAxOgogICAgICAgIGludCAwCiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJuYW1lIgogICAgICAgIGFwcF9sb2NhbF9nZXRfZXgKICAgICAgICBzd2FwCiAgICAgICAgcG9wCiAgICAgICAgYm56IHJlZ2lzdGVyX2FmdGVyX2lmX2Vsc2VANAoKcmVnaXN0ZXJfaWZfYm9keUAyOgogICAgICAgIGludCAwCiAgICAgICAgYnl0ZSAiY291bnRlciIKICAgICAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgICAgIGFzc2VydCAvLyBjaGVjayB2YWx1ZSBleGlzdHMKICAgICAgICBjYWxsc3ViIG11bHRpcGxpY2F0aXZlX2lkZW50aXR5CiAgICAgICAgKwogICAgICAgIGJ5dGUgImNvdW50ZXIiCiAgICAgICAgc3dhcAogICAgICAgIGFwcF9nbG9iYWxfcHV0CgpyZWdpc3Rlcl9hZnRlcl9pZl9lbHNlQDQ6CiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJuYW1lIgogICAgICAgIGZyYW1lX2RpZyAtMQogICAgICAgIGFwcF9sb2NhbF9wdXQKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLm15X2Jhc2UubXVsdGlwbGljYXRpdmVfaWRlbnRpdHkoKSAtPiB1aW50NjQ6Cm11bHRpcGxpY2F0aXZlX2lkZW50aXR5OgogICAgICAgIHByb3RvIDAgMQoKbXVsdGlwbGljYXRpdmVfaWRlbnRpdHlfYmxvY2tAMDoKICAgICAgICBpbnQgMQogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QuRXZlcnl0aGluZy5zYXlfaGVsbG8oKSAtPiBieXRlczoKc2F5X2hlbGxvOgogICAgICAgIHByb3RvIDAgMQoKc2F5X2hlbGxvX2Jsb2NrQDA6CiAgICAgICAgY2FsbHN1YiBfY2hlY2tfYmFuX2xpc3QKICAgICAgICBpbnQgMAogICAgICAgIGludCAwCiAgICAgICAgYnl0ZSAibmFtZSIKICAgICAgICBhcHBfbG9jYWxfZ2V0X2V4CiAgICAgICAgYm56IHNheV9oZWxsb19hZnRlcl9pZl9lbHNlQDIKCnNheV9oZWxsb19pZl9ib2R5QDE6CiAgICAgICAgYnl0ZSAiXHgwMFx4MGZIb3dkeSBzdHJhbmdlciEiCiAgICAgICAgc3dhcAogICAgICAgIHJldHN1YgoKc2F5X2hlbGxvX2FmdGVyX2lmX2Vsc2VAMjoKICAgICAgICBmcmFtZV9kaWcgMAogICAgICAgIGV4dHJhY3QgMiAwCiAgICAgICAgYnl0ZSAiSGVsbG8sICIKICAgICAgICBzd2FwCiAgICAgICAgY29uY2F0CiAgICAgICAgYnl0ZSAiISIKICAgICAgICBjb25jYXQKICAgICAgICBkdXAKICAgICAgICBsZW4KICAgICAgICBpdG9iCiAgICAgICAgZXh0cmFjdCA2IDIKICAgICAgICBzd2FwCiAgICAgICAgY29uY2F0CiAgICAgICAgc3dhcAogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QuRXZlcnl0aGluZy5jYWxjdWxhdGUoYSMwOiBieXRlcywgYiMwOiBieXRlcykgLT4gYnl0ZXM6CmNhbGN1bGF0ZToKICAgICAgICBwcm90byAyIDEKCmNhbGN1bGF0ZV9ibG9ja0AwOgogICAgICAgIGZyYW1lX2RpZyAtMgogICAgICAgIGZyYW1lX2RpZyAtMQogICAgICAgIGNhbGxzdWIgTXlNaWRkbGVCYXNlLmNhbGN1bGF0ZQogICAgICAgIGJ0b2kKICAgICAgICBmcmFtZV9kaWcgLTEKICAgICAgICBidG9pCiAgICAgICAgKgogICAgICAgIGl0b2IKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLm15X2Jhc2UuTXlNaWRkbGVCYXNlLmNhbGN1bGF0ZShhIzA6IGJ5dGVzLCBiIzA6IGJ5dGVzKSAtPiBieXRlczoKTXlNaWRkbGVCYXNlLmNhbGN1bGF0ZToKICAgICAgICBwcm90byAyIDEKCk15TWlkZGxlQmFzZS5jYWxjdWxhdGVfYmxvY2tAMDoKICAgICAgICBmcmFtZV9kaWcgLTIKICAgICAgICBidG9pCiAgICAgICAgZnJhbWVfZGlnIC0xCiAgICAgICAgYnRvaQogICAgICAgICsKICAgICAgICBpdG9iCiAgICAgICAgcmV0c3ViCgoKLy8gZXhhbXBsZXMuZXZlcnl0aGluZy5jb250cmFjdC5FdmVyeXRoaW5nLmNsb3NlX291dCgpIC0+IHZvaWQ6CmNsb3NlX291dDoKICAgICAgICBwcm90byAwIDAKCmNsb3NlX291dF9ibG9ja0AwOgogICAgICAgIGNhbGxzdWIgX3JlbW92ZV9zZW5kZXIKICAgICAgICByZXRzdWIKCgovLyBleGFtcGxlcy5ldmVyeXRoaW5nLmNvbnRyYWN0LkV2ZXJ5dGhpbmcuX3JlbW92ZV9zZW5kZXIoKSAtPiB2b2lkOgpfcmVtb3ZlX3NlbmRlcjoKICAgICAgICBwcm90byAwIDAKCl9yZW1vdmVfc2VuZGVyX2Jsb2NrQDA6CiAgICAgICAgaW50IDAKICAgICAgICBieXRlICJjb3VudGVyIgogICAgICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICAgICAgYXNzZXJ0IC8vIGNoZWNrIHZhbHVlIGV4aXN0cwogICAgICAgIGNhbGxzdWIgcG9zaXRpdmVfb25lCiAgICAgICAgLQogICAgICAgIGJ5dGUgImNvdW50ZXIiCiAgICAgICAgc3dhcAogICAgICAgIGFwcF9nbG9iYWxfcHV0CiAgICAgICAgcmV0c3ViCgoKLy8gZXhhbXBsZXMuZXZlcnl0aGluZy5jb250cmFjdC5wb3NpdGl2ZV9vbmUoKSAtPiB1aW50NjQ6CnBvc2l0aXZlX29uZToKICAgICAgICBwcm90byAwIDEKCnBvc2l0aXZlX29uZV9ibG9ja0AwOgogICAgICAgIGludCAxCiAgICAgICAgcmV0c3ViCgoKLy8gZXhhbXBsZXMuZXZlcnl0aGluZy5jb250cmFjdC5FdmVyeXRoaW5nLl9faW5pdF9fKCkgLT4gdm9pZDoKX19pbml0X186CiAgICAgICAgcHJvdG8gMCAwCgpfX2luaXRfX19ibG9ja0AwOgogICAgICAgIHJldHN1YgoK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QuRXZlcnl0aGluZy5jbGVhcl9zdGF0ZV9wcm9ncmFtKCkgLT4gdWludDY0OgptYWluX2Jsb2NrQDA6CiAgICAgICAgY2FsbHN1YiBfcmVtb3ZlX3NlbmRlcgogICAgICAgIGludCAxCiAgICAgICAgcmV0dXJuCgoKLy8gZXhhbXBsZXMuZXZlcnl0aGluZy5jb250cmFjdC5FdmVyeXRoaW5nLl9yZW1vdmVfc2VuZGVyKCkgLT4gdm9pZDoKX3JlbW92ZV9zZW5kZXI6CiAgICAgICAgcHJvdG8gMCAwCgpfcmVtb3ZlX3NlbmRlcl9ibG9ja0AwOgogICAgICAgIGludCAwCiAgICAgICAgYnl0ZSAiY291bnRlciIKICAgICAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgICAgIGFzc2VydCAvLyBjaGVjayB2YWx1ZSBleGlzdHMKICAgICAgICBjYWxsc3ViIHBvc2l0aXZlX29uZQogICAgICAgIC0KICAgICAgICBieXRlICJjb3VudGVyIgogICAgICAgIHN3YXAKICAgICAgICBhcHBfZ2xvYmFsX3B1dAogICAgICAgIHJldHN1YgoKCi8vIGV4YW1wbGVzLmV2ZXJ5dGhpbmcuY29udHJhY3QucG9zaXRpdmVfb25lKCkgLT4gdWludDY0Ogpwb3NpdGl2ZV9vbmU6CiAgICAgICAgcHJvdG8gMCAxCgpwb3NpdGl2ZV9vbmVfYmxvY2tAMDoKICAgICAgICBpbnQgMQogICAgICAgIHJldHN1YgoK"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 1,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "counter": {
                    "type": "uint64",
                    "key": "counter"
                },
                "creator": {
                    "type": "bytes",
                    "key": "creator"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "name": {
                    "type": "bytes",
                    "key": "name"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "MyContract",
        "methods": [
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "register",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "say_hello",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "calculate",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "close_out",
                "args": [],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}