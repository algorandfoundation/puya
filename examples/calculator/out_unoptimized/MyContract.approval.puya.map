{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBmB;;AAAX;AACe;AAAZ;AAAX;;;AAAA;;;AACgB;AAAJ;;AACI;AAAJ;;AACS;AAAT;;AAFI;AAGA;AAAJ;AAFI;AAGA;AAAJ;;;;AAYK;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAT;;AACW;;;AAAU;;AAAA;;;AAAV;AAA4B;;AAAA;;;AAA5B;AAAsC;;;;;AAAtC;AAA+C;;AAAA;;;AAA/C;AACX;AACO;AAAP;AAbW;AAAY;AAAZ;AAAP;AACW;;;AACF;AAAT;;AACU;;;AACA;;;AACV;;AAAA;AACA;AAAA;AACI;;AAAA;AAAJ;;AACI;AAAJ;;;;;AA3BZ;;;;;;AAEa;AACD;AAAR;AACG;;AAAA;AAAP;;;AAAA;;;AAFa;AAGE;;AAAA;AAAA;AAAP;;AAAA;AACQ;;AAAA;;AAAA;AAAA;;AAAA;AAAL;;;AAAA;;AAA0B;;AAAA;;AAAA;AAJxB;AAIiB;;AAAA;AAAA;AAAnB;AAAP;;AAAA;AA4BJ;;;;;;AAEW;;AAAU;AAAV;AAAX;;;AAAA;;;AACmB;;;;;AAAP;AACC;;AAAU;AAAV;AAAb;;;AAAA;;;AACmB;AAAP;AACC;;AAAU;AAAV;AAAb;;;AAAA;;;AACmB;;;;;AAAP;AACC;;AAAU;;AAAV;AAAb;;;AAAA;;;AACmB;;;;;;AAAP;AAEO;AAAP;AAEZ;;;;;;AAEW;;AAAgB;AAAhB;AAAX;;;AAAA;;;AACmB;;AAAA;;AAAA;;;AAAP;AACC;;AAAgB;AAAhB;AAAb;;;AAAA;;;AACmB;;AAAA;;AAAA;;;AAAP;AACC;;AAAgB;AAAhB;AAAb;;;AAAA;;;AACmB;;AAAA;;AAAA;;;AAAP;AACC;;AAAgB;;AAAhB;AAAb;;;AAAA;;;AACmB;;AAAA;;AAAA;;;AAAP;AAEA;AAEZ;;;;;;AAEe;;AAAA;;AAAA;AAAP;AAER;;;;;;AAEe;;AAAA;;AAAA;AAAP;AAER;;;;;;AAEe;;AAAA;;AAAA;AAAP;AAER;;;;;;AAEe;;AAAA;;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "examples.calculator.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 3 2"
    },
    "7": {
      "op": "bytecblock \"\" 0x30313233343536373839 0x202d20"
    },
    "25": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "a#0"
      ]
    },
    "26": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "a#0",
        "action#0"
      ]
    },
    "27": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0"
      ]
    },
    "28": {
      "op": "b main_block@0"
    },
    "31": {
      "block": "main_block@0",
      "stack_in": [
        "a#0",
        "action#0",
        "b#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "tmp%0#0"
      ]
    },
    "33": {
      "op": "dup",
      "defined_out": [
        "num_args#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "num_args#0"
      ]
    },
    "34": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "num_args#0",
        "0"
      ]
    },
    "35": {
      "op": "==",
      "defined_out": [
        "num_args#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "tmp%1#0"
      ]
    },
    "36": {
      "op": "bz main_else_body@2",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "39": {
      "op": "b main_if_body@1"
    },
    "42": {
      "block": "main_if_body@1",
      "stack_in": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "0"
      ]
    },
    "43": {
      "op": "bury 4",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "45": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "0"
      ]
    },
    "46": {
      "op": "bury 2",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "48": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "0"
      ]
    },
    "49": {
      "op": "bury 3",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "51": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "0"
      ]
    },
    "52": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "tmp%2#0"
      ]
    },
    "53": {
      "op": "log",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "54": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "0"
      ]
    },
    "55": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "tmp%3#0"
      ]
    },
    "56": {
      "op": "log",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "57": {
      "op": "b main_after_if_else@3"
    },
    "60": {
      "block": "main_after_if_else@3",
      "stack_in": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "action#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "action#0"
      ]
    },
    "62": {
      "op": "dup",
      "defined_out": [
        "action#0",
        "action#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "action#0",
        "action#0 (copy)"
      ]
    },
    "63": {
      "op": "dig 5",
      "defined_out": [
        "a#0",
        "action#0",
        "action#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "action#0",
        "action#0 (copy)",
        "a#0"
      ]
    },
    "65": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "action#0",
        "action#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "action#0",
        "action#0 (copy)",
        "a#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "66": {
      "op": "cover 2",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "action#0",
        "a#0",
        "action#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "68": {
      "op": "dig 5",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "action#0",
        "action#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "action#0",
        "a#0",
        "action#0 (copy)",
        "a#0 (copy)",
        "b#0"
      ]
    },
    "70": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "action#0",
        "action#0 (copy)",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "action#0",
        "a#0",
        "action#0 (copy)",
        "a#0 (copy)",
        "b#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "71": {
      "op": "cover 5",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "b#0",
        "action#0",
        "a#0",
        "action#0 (copy)",
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "73": {
      "callsub": "examples.calculator.contract.MyContract.do_calc",
      "op": "callsub do_calc",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "b#0",
        "action#0",
        "a#0",
        "tmp%11#0"
      ]
    },
    "76": {
      "op": "cover 3",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result#0",
        "b#0",
        "action#0",
        "a#0"
      ]
    },
    "78": {
      "callsub": "examples.calculator.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result#0",
        "b#0",
        "action#0",
        "tmp%12#0"
      ]
    },
    "81": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result#0",
        "b#0",
        "tmp%12#0",
        "action#0"
      ]
    },
    "83": {
      "callsub": "examples.calculator.contract.MyContract.op",
      "op": "callsub op",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result#0",
        "b#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "86": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result#0",
        "b#0",
        "tmp%14#0"
      ]
    },
    "87": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result#0",
        "tmp%14#0",
        "b#0"
      ]
    },
    "89": {
      "callsub": "examples.calculator.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "92": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result#0",
        "tmp%16#0"
      ]
    },
    "93": {
      "op": "pushbytes 0x203d20",
      "defined_out": [
        "0x203d20",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result#0",
        "tmp%16#0",
        "0x203d20"
      ]
    },
    "98": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result#0",
        "tmp%17#0"
      ]
    },
    "99": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "tmp%17#0",
        "result#0"
      ]
    },
    "101": {
      "callsub": "examples.calculator.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "104": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result_b#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "result_b#0"
      ]
    },
    "105": {
      "op": "log",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "106": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "a#0",
        "action#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "1"
      ]
    },
    "107": {
      "op": "return",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "108": {
      "block": "main_else_body@2",
      "stack_in": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ],
      "op": "dup",
      "defined_out": [
        "num_args#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "num_args#0"
      ]
    },
    "109": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "num_args#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "num_args#0",
        "3"
      ]
    },
    "110": {
      "op": "==",
      "defined_out": [
        "num_args#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "tmp%4#0"
      ]
    },
    "111": {
      "error": "Expected 3 args",
      "op": "assert // Expected 3 args",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "112": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "action_b#0",
        "num_args#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "action_b#0"
      ]
    },
    "115": {
      "op": "btoi",
      "defined_out": [
        "num_args#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "tmp%6#0"
      ]
    },
    "116": {
      "op": "bury 3",
      "defined_out": [
        "num_args#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "118": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a_bytes#0",
        "num_args#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "a_bytes#0"
      ]
    },
    "121": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a_bytes#0",
        "b_bytes#0",
        "num_args#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "a_bytes#0",
        "b_bytes#0"
      ]
    },
    "124": {
      "op": "dig 1",
      "defined_out": [
        "a_bytes#0",
        "a_bytes#0 (copy)",
        "b_bytes#0",
        "num_args#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "a_bytes#0",
        "b_bytes#0",
        "a_bytes#0 (copy)"
      ]
    },
    "126": {
      "op": "log",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "a_bytes#0",
        "b_bytes#0"
      ]
    },
    "127": {
      "op": "dup",
      "defined_out": [
        "a_bytes#0",
        "b_bytes#0",
        "b_bytes#0 (copy)",
        "num_args#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "a_bytes#0",
        "b_bytes#0",
        "b_bytes#0 (copy)"
      ]
    },
    "128": {
      "op": "log",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "a_bytes#0",
        "b_bytes#0"
      ]
    },
    "129": {
      "op": "uncover 1",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "b_bytes#0",
        "a_bytes#0"
      ]
    },
    "131": {
      "op": "btoi",
      "defined_out": [
        "b_bytes#0",
        "num_args#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "b_bytes#0",
        "tmp%9#0"
      ]
    },
    "132": {
      "op": "bury 5",
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "b_bytes#0"
      ]
    },
    "134": {
      "op": "btoi",
      "defined_out": [
        "num_args#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "tmp%10#0"
      ]
    },
    "135": {
      "op": "bury 2",
      "defined_out": [
        "num_args#0"
      ],
      "stack_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ]
    },
    "137": {
      "op": "b main_after_if_else@3"
    },
    "140": {
      "subroutine": "examples.calculator.contract.itoa",
      "params": {
        "i#0": "uint64"
      },
      "block": "itoa",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "143": {
      "op": "b itoa_block@0"
    },
    "146": {
      "block": "itoa_block@0",
      "stack_in": [],
      "op": "bytec_1 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "147": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "148": {
      "op": "dup",
      "defined_out": [
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0"
      ]
    },
    "149": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)",
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "151": {
      "op": ">",
      "defined_out": [
        "radix#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%1#0"
      ]
    },
    "152": {
      "op": "bz itoa_after_if_else@2",
      "stack_out": [
        "radix#0"
      ]
    },
    "155": {
      "op": "b itoa_if_body@1"
    },
    "158": {
      "block": "itoa_if_body@1",
      "stack_in": [
        "radix#0"
      ],
      "op": "bytec_1 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839"
      ]
    },
    "159": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x30313233343536373839",
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839",
        "i#0 (copy)"
      ]
    },
    "161": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "0x30313233343536373839",
        "i#0 (copy)",
        "1"
      ]
    },
    "162": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "radix#0",
        "extract%0#0"
      ]
    },
    "163": {
      "op": "uncover 1"
    },
    "165": {
      "retsub": true,
      "op": "retsub"
    },
    "166": {
      "block": "itoa_after_if_else@2",
      "stack_in": [
        "radix#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "168": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0 (copy)",
        "radix#0"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)",
        "radix#0"
      ]
    },
    "170": {
      "op": "dup",
      "defined_out": [
        "i#0 (copy)",
        "radix#0",
        "radix#0 (copy)"
      ],
      "stack_out": [
        "radix#0",
        "i#0 (copy)",
        "radix#0 (copy)",
        "radix#0 (copy)"
      ]
    },
    "171": {
      "op": "cover 2",
      "stack_out": [
        "radix#0",
        "radix#0",
        "i#0 (copy)",
        "radix#0 (copy)"
      ]
    },
    "173": {
      "op": "/",
      "defined_out": [
        "radix#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "tmp%2#0"
      ]
    },
    "174": {
      "callsub": "examples.calculator.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "radix#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "radix#0",
        "radix#0",
        "tmp%3#0"
      ]
    },
    "177": {
      "op": "cover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "radix#0"
      ]
    },
    "179": {
      "op": "frame_dig -1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "radix#0",
        "i#0 (copy)"
      ]
    },
    "181": {
      "op": "uncover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "i#0 (copy)",
        "radix#0"
      ]
    },
    "183": {
      "op": "%",
      "defined_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "184": {
      "op": "bytec_1 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839",
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "tmp%4#0",
        "0x30313233343536373839"
      ]
    },
    "185": {
      "op": "uncover 1",
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0"
      ]
    },
    "187": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "radix#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0",
        "1"
      ]
    },
    "188": {
      "op": "extract3",
      "defined_out": [
        "extract%1#0",
        "radix#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%3#0",
        "extract%1#0"
      ]
    },
    "189": {
      "op": "concat",
      "defined_out": [
        "radix#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "radix#0",
        "tmp%5#0"
      ]
    },
    "190": {
      "op": "uncover 1"
    },
    "192": {
      "retsub": true,
      "op": "retsub"
    },
    "193": {
      "subroutine": "examples.calculator.contract.MyContract.op",
      "params": {
        "action#0": "uint64"
      },
      "block": "op",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "196": {
      "op": "b op_block@0"
    },
    "199": {
      "block": "op_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "action#0 (copy)"
      ],
      "stack_out": [
        "action#0 (copy)"
      ]
    },
    "201": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "action#0 (copy)"
      ],
      "stack_out": [
        "action#0 (copy)",
        "1"
      ]
    },
    "202": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "203": {
      "op": "bz op_else_body@2",
      "stack_out": []
    },
    "206": {
      "op": "b op_if_body@1"
    },
    "209": {
      "block": "op_if_body@1",
      "stack_in": [],
      "op": "pushbytes 0x202b20",
      "defined_out": [
        "0x202b20"
      ],
      "stack_out": [
        "0x202b20"
      ]
    },
    "214": {
      "retsub": true,
      "op": "retsub"
    },
    "215": {
      "block": "op_else_body@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "action#0 (copy)"
      ],
      "stack_out": [
        "action#0 (copy)"
      ]
    },
    "217": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "action#0 (copy)"
      ],
      "stack_out": [
        "action#0 (copy)",
        "2"
      ]
    },
    "218": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "219": {
      "op": "bz op_else_body@4",
      "stack_out": []
    },
    "222": {
      "op": "b op_if_body@3"
    },
    "225": {
      "block": "op_if_body@3",
      "stack_in": [],
      "op": "bytec_2 // 0x202d20",
      "defined_out": [
        "0x202d20"
      ],
      "stack_out": [
        "0x202d20"
      ]
    },
    "226": {
      "retsub": true,
      "op": "retsub"
    },
    "227": {
      "block": "op_else_body@4",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "action#0 (copy)"
      ],
      "stack_out": [
        "action#0 (copy)"
      ]
    },
    "229": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "action#0 (copy)"
      ],
      "stack_out": [
        "action#0 (copy)",
        "3"
      ]
    },
    "230": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "231": {
      "op": "bz op_else_body@6",
      "stack_out": []
    },
    "234": {
      "op": "b op_if_body@5"
    },
    "237": {
      "block": "op_if_body@5",
      "stack_in": [],
      "op": "pushbytes 0x202a20",
      "defined_out": [
        "0x202a20"
      ],
      "stack_out": [
        "0x202a20"
      ]
    },
    "242": {
      "retsub": true,
      "op": "retsub"
    },
    "243": {
      "block": "op_else_body@6",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "action#0 (copy)"
      ],
      "stack_out": [
        "action#0 (copy)"
      ]
    },
    "245": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "action#0 (copy)"
      ],
      "stack_out": [
        "action#0 (copy)",
        "4"
      ]
    },
    "247": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "248": {
      "op": "bz op_else_body@8",
      "stack_out": []
    },
    "251": {
      "op": "b op_if_body@7"
    },
    "254": {
      "block": "op_if_body@7",
      "stack_in": [],
      "op": "pushbytes 0x202f2f20",
      "defined_out": [
        "0x202f2f20"
      ],
      "stack_out": [
        "0x202f2f20"
      ]
    },
    "260": {
      "retsub": true,
      "op": "retsub"
    },
    "261": {
      "block": "op_else_body@8",
      "stack_in": [],
      "op": "bytec_2 // 0x202d20",
      "defined_out": [
        "0x202d20"
      ],
      "stack_out": [
        "0x202d20"
      ]
    },
    "262": {
      "retsub": true,
      "op": "retsub"
    },
    "263": {
      "subroutine": "examples.calculator.contract.MyContract.do_calc",
      "params": {
        "maybe_action#0": "uint64",
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "do_calc",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "266": {
      "op": "b do_calc_block@0"
    },
    "269": {
      "block": "do_calc_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "maybe_action#0 (copy)"
      ],
      "stack_out": [
        "maybe_action#0 (copy)"
      ]
    },
    "271": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_action#0 (copy)"
      ],
      "stack_out": [
        "maybe_action#0 (copy)",
        "1"
      ]
    },
    "272": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "273": {
      "op": "bz do_calc_else_body@2",
      "stack_out": []
    },
    "276": {
      "op": "b do_calc_if_body@1"
    },
    "279": {
      "block": "do_calc_if_body@1",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "281": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "283": {
      "callsub": "examples.calculator.contract.MyContract.add",
      "op": "callsub add",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "286": {
      "retsub": true,
      "op": "retsub"
    },
    "287": {
      "block": "do_calc_else_body@2",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "maybe_action#0 (copy)"
      ],
      "stack_out": [
        "maybe_action#0 (copy)"
      ]
    },
    "289": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "maybe_action#0 (copy)"
      ],
      "stack_out": [
        "maybe_action#0 (copy)",
        "2"
      ]
    },
    "290": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "291": {
      "op": "bz do_calc_else_body@4",
      "stack_out": []
    },
    "294": {
      "op": "b do_calc_if_body@3"
    },
    "297": {
      "block": "do_calc_if_body@3",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "299": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "301": {
      "callsub": "examples.calculator.contract.MyContract.sub",
      "op": "callsub sub",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "304": {
      "retsub": true,
      "op": "retsub"
    },
    "305": {
      "block": "do_calc_else_body@4",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "maybe_action#0 (copy)"
      ],
      "stack_out": [
        "maybe_action#0 (copy)"
      ]
    },
    "307": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "maybe_action#0 (copy)"
      ],
      "stack_out": [
        "maybe_action#0 (copy)",
        "3"
      ]
    },
    "308": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "309": {
      "op": "bz do_calc_else_body@6",
      "stack_out": []
    },
    "312": {
      "op": "b do_calc_if_body@5"
    },
    "315": {
      "block": "do_calc_if_body@5",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "317": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "319": {
      "callsub": "examples.calculator.contract.MyContract.mul",
      "op": "callsub mul",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "322": {
      "retsub": true,
      "op": "retsub"
    },
    "323": {
      "block": "do_calc_else_body@6",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "maybe_action#0 (copy)"
      ],
      "stack_out": [
        "maybe_action#0 (copy)"
      ]
    },
    "325": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "maybe_action#0 (copy)"
      ],
      "stack_out": [
        "maybe_action#0 (copy)",
        "4"
      ]
    },
    "327": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "328": {
      "op": "bz do_calc_else_body@8",
      "stack_out": []
    },
    "331": {
      "op": "b do_calc_if_body@7"
    },
    "334": {
      "block": "do_calc_if_body@7",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "336": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "338": {
      "callsub": "examples.calculator.contract.MyContract.div",
      "op": "callsub div",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "341": {
      "retsub": true,
      "op": "retsub"
    },
    "342": {
      "error": "unknown operation",
      "block": "do_calc_else_body@8",
      "stack_in": [],
      "op": "err // unknown operation"
    },
    "343": {
      "subroutine": "examples.calculator.contract.MyContract.add",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "add",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "346": {
      "op": "b add_block@0"
    },
    "349": {
      "block": "add_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "351": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "353": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "354": {
      "retsub": true,
      "op": "retsub"
    },
    "355": {
      "subroutine": "examples.calculator.contract.MyContract.sub",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "sub",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "358": {
      "op": "b sub_block@0"
    },
    "361": {
      "block": "sub_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "363": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "365": {
      "op": "-",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "366": {
      "retsub": true,
      "op": "retsub"
    },
    "367": {
      "subroutine": "examples.calculator.contract.MyContract.mul",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "mul",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "370": {
      "op": "b mul_block@0"
    },
    "373": {
      "block": "mul_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "375": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "377": {
      "op": "*",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "378": {
      "retsub": true,
      "op": "retsub"
    },
    "379": {
      "subroutine": "examples.calculator.contract.MyContract.div",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "div",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "382": {
      "op": "b div_block@0"
    },
    "385": {
      "block": "div_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "387": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "389": {
      "op": "/",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "390": {
      "retsub": true,
      "op": "retsub"
    }
  }
}