#pragma version 11
#pragma typetrack false

// examples.calculator.contract.MyContract.approval_program() -> uint64:
main:
    intcblock 0 1 3 10
    bytecblock 0x30313233343536373839
    intc_0 // 0
    pushbytes ""
    dupn 4
    txn NumAppArgs
    dup
    bnz main_else_body@2
    intc_0 // 0
    bury 6
    intc_0 // 0
    bury 4
    intc_0 // 0
    bury 5
    intc_0 // 0
    itob
    dup
    log
    log

main_after_if_else@3:
    dig 4
    intc_1 // 1
    ==
    dup
    bury 3
    bz main_else_body@6
    dig 5
    dig 4
    +
    bury 3

main_after_inlined_examples.calculator.contract.MyContract.do_calc@13:
    dig 5
    callsub itoa
    bury 7
    dig 1
    bz main_else_body@16
    pushbytes 0x202b20

main_after_inlined_examples.calculator.contract.MyContract.op@23:
    dig 7
    swap
    concat
    dig 4
    callsub itoa
    concat
    pushbytes 0x203d20
    concat
    dig 3
    callsub itoa
    concat
    log
    intc_1 // 1
    return

main_else_body@16:
    dig 4
    pushint 2 // 2
    ==
    bz main_else_body@18

main_if_body@17:
    pushbytes 0x202d20
    b main_after_inlined_examples.calculator.contract.MyContract.op@23

main_else_body@18:
    dig 4
    intc_2 // 3
    ==
    bz main_else_body@20
    pushbytes 0x202a20
    b main_after_inlined_examples.calculator.contract.MyContract.op@23

main_else_body@20:
    dig 4
    pushint 4 // 4
    ==
    bz main_if_body@17
    pushbytes 0x202f2f20
    b main_after_inlined_examples.calculator.contract.MyContract.op@23

main_else_body@6:
    dig 4
    pushint 2 // 2
    ==
    bz main_else_body@8
    dig 5
    dig 4
    -
    bury 3
    b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13

main_else_body@8:
    dig 4
    intc_2 // 3
    ==
    bz main_else_body@10
    dig 5
    dig 4
    *
    bury 3
    b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13

main_else_body@10:
    dig 4
    pushint 4 // 4
    ==
    assert // unknown operation
    dig 5
    dig 4
    /
    bury 3
    b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13

main_else_body@2:
    dup
    intc_2 // 3
    ==
    assert // Expected 3 args
    txna ApplicationArgs 0
    btoi
    bury 5
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    dig 1
    log
    dup
    log
    swap
    btoi
    bury 7
    btoi
    bury 4
    b main_after_if_else@3


// examples.calculator.contract.itoa(i: uint64) -> bytes:
itoa:
    proto 1 1
    frame_dig -1
    intc_3 // 10
    <
    bz itoa_after_if_else@2
    bytec_0 // 0x30313233343536373839
    frame_dig -1
    intc_1 // 1
    extract3
    retsub

itoa_after_if_else@2:
    frame_dig -1
    intc_3 // 10
    /
    callsub itoa
    frame_dig -1
    intc_3 // 10
    %
    bytec_0 // 0x30313233343536373839
    swap
    intc_1 // 1
    extract3
    concat
    retsub
