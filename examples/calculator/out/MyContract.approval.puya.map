{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBmB;;AAAA;AACnB;;;AACgB;AAAJ;;AACI;AAAJ;;AACS;AAAT;;AAFI;AAGA;AAAJ;AAAA;AACA;AAgCD;;AAAgB;AAAhB;AAAA;AAAA;;AAAX;;;AAae;;AAAA;;AAAA;;;AAhCI;;AAAA;;;AAAA;;AAMnB;;AAAA;;;AACmB;;;;;AAPA;;AAAA;AAAA;AAA4B;;AAAA;;;AAA5B;AAAsC;;;;;AAAtC;AAA+C;;AAAA;;;AAA/C;AACX;AACO;AAAP;AAMK;;AAAU;;AAAV;AAAb;;;AACmB;AATU;;;AAUhB;;AAAU;AAAV;AAAb;;;AACmB;;;;;AAXU;;;AAYhB;;AAAU;;AAAV;AAAb;;;AACmB;;;;;;AAbU;;;AAeV;AAfU;;;AAqBhB;;AAAgB;;AAAhB;AAAb;;;AAee;;AAAA;;AAAA;;;AArCE;;;AAwBJ;;AAAgB;AAAhB;AAAb;;;AAiBe;;AAAA;;AAAA;;;AAzCE;;;AA0BJ;;AAAgB;;AAAhB;AAAb;AAmBe;;AAAA;;AAAA;;;AA7CE;;;AAVE;AAAY;AAAZ;AAAP;AACW;;;AACF;AAAA;;AACC;;;AACA;;;AACV;;AAAA;AACA;AAAA;AACI;AAAA;AAAA;;AACA;AAAA;;;;;AA3Bf;;;AAIM;;AADK;AACL;AAAP;;;AAFa;AAGE;;AAAA;AAAA;AAAP;AACQ;;AAHJ;AAGI;AAAL;;;AAA0B;;AAHzB;AAGyB;AAJxB;AAIiB;AAAA;AAAA;AAAnB;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "examples.calculator.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 3 10"
    },
    "7": {
      "op": "bytecblock 0x202d20 0x30313233343536373839"
    },
    "24": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "25": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%12#0",
        "a#0"
      ]
    },
    "27": {
      "op": "dupn 4",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1"
      ]
    },
    "29": {
      "op": "txn NumAppArgs"
    },
    "31": {
      "op": "dup",
      "defined_out": [
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "num_args#0"
      ]
    },
    "32": {
      "op": "bnz main_else_body@2",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "35": {
      "op": "intc_0 // 0",
      "defined_out": [
        "a#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a#0"
      ]
    },
    "36": {
      "op": "bury 6",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "38": {
      "op": "intc_0 // 0",
      "defined_out": [
        "a#0",
        "b#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "b#0"
      ]
    },
    "39": {
      "op": "bury 4",
      "defined_out": [
        "a#0",
        "b#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "41": {
      "op": "intc_0 // 0",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0"
      ]
    },
    "42": {
      "op": "bury 5",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "44": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "0"
      ]
    },
    "45": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%2#0"
      ]
    },
    "46": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "47": {
      "op": "log",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%2#0"
      ]
    },
    "48": {
      "op": "log",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "49": {
      "block": "main_after_if_else@3",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0"
      ]
    },
    "51": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0",
        "1"
      ]
    },
    "52": {
      "op": "==",
      "defined_out": [
        "action#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%0#1"
      ]
    },
    "53": {
      "op": "dup",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%0#1",
        "tmp%0#1"
      ]
    },
    "54": {
      "op": "bury 3",
      "defined_out": [
        "action#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%0#1"
      ]
    },
    "56": {
      "op": "bz main_else_body@6",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "59": {
      "op": "dig 5",
      "defined_out": [
        "a#0",
        "action#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a#0"
      ]
    },
    "61": {
      "op": "dig 4",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a#0",
        "b#0"
      ]
    },
    "63": {
      "op": "+",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "result#0"
      ]
    },
    "64": {
      "op": "bury 3",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "66": {
      "block": "main_after_inlined_examples.calculator.contract.MyContract.do_calc@13",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a#0"
      ]
    },
    "68": {
      "callsub": "examples.calculator.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "a#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%12#0"
      ]
    },
    "71": {
      "op": "bury 7",
      "defined_out": [
        "a#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "73": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "tmp%0#1",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%0#1"
      ]
    },
    "75": {
      "op": "bz main_else_body@16",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "78": {
      "op": "pushbytes 0x202b20",
      "defined_out": [
        "a#0",
        "tmp%0#1",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%13#0"
      ]
    },
    "83": {
      "block": "main_after_inlined_examples.calculator.contract.MyContract.op@23",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%13#0"
      ],
      "op": "dig 7",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%13#0",
        "tmp%12#0"
      ]
    },
    "85": {
      "op": "swap",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "86": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%14#0"
      ]
    },
    "87": {
      "op": "dig 4",
      "defined_out": [
        "b#0",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%14#0",
        "b#0"
      ]
    },
    "89": {
      "callsub": "examples.calculator.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "b#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "92": {
      "op": "concat",
      "defined_out": [
        "b#0",
        "tmp%12#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%16#0"
      ]
    },
    "93": {
      "op": "pushbytes 0x203d20",
      "defined_out": [
        "0x203d20",
        "b#0",
        "tmp%12#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%16#0",
        "0x203d20"
      ]
    },
    "98": {
      "op": "concat",
      "defined_out": [
        "b#0",
        "tmp%12#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%17#0"
      ]
    },
    "99": {
      "op": "dig 3",
      "defined_out": [
        "b#0",
        "result#0",
        "tmp%12#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%17#0",
        "result#0"
      ]
    },
    "101": {
      "callsub": "examples.calculator.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "b#0",
        "result#0",
        "tmp%12#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "104": {
      "op": "concat",
      "defined_out": [
        "b#0",
        "result#0",
        "result_b#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "result_b#0"
      ]
    },
    "105": {
      "op": "log",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "106": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "b#0",
        "result#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "1"
      ]
    },
    "107": {
      "op": "return",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "108": {
      "block": "main_else_body@16",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0"
      ]
    },
    "110": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0",
        "2"
      ]
    },
    "112": {
      "op": "==",
      "defined_out": [
        "action#0",
        "tmp%1#2"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%1#2"
      ]
    },
    "113": {
      "op": "bz main_else_body@18",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "116": {
      "op": "bytec_0 // 0x202d20",
      "defined_out": [
        "action#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%13#0"
      ]
    },
    "117": {
      "op": "b main_after_inlined_examples.calculator.contract.MyContract.op@23"
    },
    "120": {
      "block": "main_else_body@18",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0"
      ]
    },
    "122": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0",
        "3"
      ]
    },
    "123": {
      "op": "==",
      "defined_out": [
        "action#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%2#1"
      ]
    },
    "124": {
      "op": "bz main_else_body@20",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "127": {
      "op": "pushbytes 0x202a20",
      "defined_out": [
        "action#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%13#0"
      ]
    },
    "132": {
      "op": "b main_after_inlined_examples.calculator.contract.MyContract.op@23"
    },
    "135": {
      "block": "main_else_body@20",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0"
      ]
    },
    "137": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0",
        "4"
      ]
    },
    "139": {
      "op": "==",
      "defined_out": [
        "action#0",
        "tmp%3#2"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%3#2"
      ]
    },
    "140": {
      "op": "bz main_else_body@22",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "143": {
      "op": "pushbytes 0x202f2f20",
      "defined_out": [
        "action#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%13#0"
      ]
    },
    "149": {
      "op": "b main_after_inlined_examples.calculator.contract.MyContract.op@23"
    },
    "152": {
      "block": "main_else_body@22",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ],
      "op": "bytec_0 // 0x202d20",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%13#0"
      ]
    },
    "153": {
      "op": "b main_after_inlined_examples.calculator.contract.MyContract.op@23"
    },
    "156": {
      "block": "main_else_body@6",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0"
      ]
    },
    "158": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0",
        "2"
      ]
    },
    "160": {
      "op": "==",
      "defined_out": [
        "action#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%2#1"
      ]
    },
    "161": {
      "op": "bz main_else_body@8",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "164": {
      "op": "dig 5",
      "defined_out": [
        "a#0",
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a#0"
      ]
    },
    "166": {
      "op": "dig 4",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a#0",
        "b#0"
      ]
    },
    "168": {
      "op": "-",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "result#0"
      ]
    },
    "169": {
      "op": "bury 3",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "171": {
      "op": "b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13"
    },
    "174": {
      "block": "main_else_body@8",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0"
      ]
    },
    "176": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0",
        "3"
      ]
    },
    "177": {
      "op": "==",
      "defined_out": [
        "action#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%4#0"
      ]
    },
    "178": {
      "op": "bz main_else_body@10",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "181": {
      "op": "dig 5",
      "defined_out": [
        "a#0",
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a#0"
      ]
    },
    "183": {
      "op": "dig 4",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a#0",
        "b#0"
      ]
    },
    "185": {
      "op": "*",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "result#0"
      ]
    },
    "186": {
      "op": "bury 3",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "188": {
      "op": "b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13"
    },
    "191": {
      "block": "main_else_body@10",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0"
      ]
    },
    "193": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0",
        "4"
      ]
    },
    "195": {
      "op": "==",
      "defined_out": [
        "action#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%6#1"
      ]
    },
    "196": {
      "error": "unknown operation",
      "op": "assert // unknown operation",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "197": {
      "op": "dig 5",
      "defined_out": [
        "a#0",
        "action#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a#0"
      ]
    },
    "199": {
      "op": "dig 4",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a#0",
        "b#0"
      ]
    },
    "201": {
      "op": "/",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "result#0"
      ]
    },
    "202": {
      "op": "bury 3",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "result#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "204": {
      "op": "b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13"
    },
    "207": {
      "block": "main_else_body@2",
      "stack_in": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ],
      "op": "dup",
      "defined_out": [
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "num_args#0"
      ]
    },
    "208": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "num_args#0",
        "3"
      ]
    },
    "209": {
      "op": "==",
      "defined_out": [
        "num_args#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "tmp%4#0"
      ]
    },
    "210": {
      "error": "Expected 3 args",
      "op": "assert // Expected 3 args",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "211": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "action_b#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action_b#0"
      ]
    },
    "214": {
      "op": "btoi",
      "defined_out": [
        "action#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "action#0"
      ]
    },
    "215": {
      "op": "bury 5",
      "defined_out": [
        "action#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "217": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a_bytes#0",
        "action#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a_bytes#0"
      ]
    },
    "220": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a_bytes#0",
        "action#0",
        "b_bytes#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a_bytes#0",
        "b_bytes#0"
      ]
    },
    "223": {
      "op": "dig 1",
      "defined_out": [
        "a_bytes#0",
        "a_bytes#0 (copy)",
        "action#0",
        "b_bytes#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a_bytes#0",
        "b_bytes#0",
        "a_bytes#0 (copy)"
      ]
    },
    "225": {
      "op": "log",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a_bytes#0",
        "b_bytes#0"
      ]
    },
    "226": {
      "op": "dup",
      "defined_out": [
        "a_bytes#0",
        "action#0",
        "b_bytes#0",
        "b_bytes#0 (copy)",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a_bytes#0",
        "b_bytes#0",
        "b_bytes#0 (copy)"
      ]
    },
    "227": {
      "op": "log",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "a_bytes#0",
        "b_bytes#0"
      ]
    },
    "228": {
      "op": "swap",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "b_bytes#0",
        "a_bytes#0"
      ]
    },
    "229": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "action#0",
        "b_bytes#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "b_bytes#0",
        "a#0"
      ]
    },
    "230": {
      "op": "bury 7",
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "b_bytes#0"
      ]
    },
    "232": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0",
        "b#0"
      ]
    },
    "233": {
      "op": "bury 4",
      "defined_out": [
        "a#0",
        "action#0",
        "b#0",
        "num_args#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "a#0",
        "action#0",
        "b#0",
        "result#0",
        "tmp%0#1",
        "num_args#0"
      ]
    },
    "235": {
      "op": "b main_after_if_else@3"
    },
    "238": {
      "subroutine": "examples.calculator.contract.itoa",
      "params": {
        "i#0": "uint64"
      },
      "block": "itoa",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "241": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)"
      ]
    },
    "243": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)",
        "10"
      ]
    },
    "244": {
      "op": "<",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "245": {
      "op": "bz itoa_after_if_else@2",
      "stack_out": []
    },
    "248": {
      "op": "bytec_1 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839"
      ],
      "stack_out": [
        "0x30313233343536373839"
      ]
    },
    "249": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x30313233343536373839",
        "i#0 (copy)"
      ]
    },
    "251": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "i#0 (copy)"
      ],
      "stack_out": [
        "0x30313233343536373839",
        "i#0 (copy)",
        "1"
      ]
    },
    "252": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0"
      ]
    },
    "253": {
      "retsub": true,
      "op": "retsub"
    },
    "254": {
      "block": "itoa_after_if_else@2",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)"
      ]
    },
    "256": {
      "op": "intc_3 // 10",
      "defined_out": [
        "10",
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0 (copy)",
        "10"
      ]
    },
    "257": {
      "op": "/",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "258": {
      "callsub": "examples.calculator.contract.itoa",
      "op": "callsub itoa",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "261": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "i#0 (copy)"
      ]
    },
    "263": {
      "op": "intc_3 // 10",
      "stack_out": [
        "tmp%3#0",
        "i#0 (copy)",
        "10"
      ]
    },
    "264": {
      "op": "%",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "265": {
      "op": "bytec_1 // 0x30313233343536373839",
      "defined_out": [
        "0x30313233343536373839",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "0x30313233343536373839"
      ]
    },
    "266": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0"
      ]
    },
    "267": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0x30313233343536373839",
        "1",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0",
        "1"
      ]
    },
    "268": {
      "op": "extract3",
      "defined_out": [
        "extract%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "extract%1#0"
      ]
    },
    "269": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "270": {
      "retsub": true,
      "op": "retsub"
    }
  }
}