// Op                                                                             Stack (out)
// examples.calculator.contract.MyContract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // calculator/contract.py:20
        // num_args = Txn.num_app_args
        txn NumAppArgs                                                            num_args#0
        l-store-copy num_args#0 0                                                 num_args#0,num_args#0 (copy)
        v-store num_args#0                                                        num_args#0
        // calculator/contract.py:21
        // if num_args == 0:
        l-load num_args#0 0                                                       num_args#0
        bz main_if_body@1 ; b main_else_body@2

    main_if_body@1:
        // calculator/contract.py:22
        // a = UInt64(0)
        int 0                                                                     0
        v-store a#0
        // calculator/contract.py:23
        // b = UInt64(0)
        int 0                                                                     0
        v-store b#0
        // calculator/contract.py:24
        // action = UInt64(0)
        int 0                                                                     0
        v-store action#0
        // calculator/contract.py:22
        // a = UInt64(0)
        int 0                                                                     0
        // calculator/contract.py:25
        // log(a)
        itob                                                                      tmp%1#0
        l-load-copy tmp%1#0 0                                                     tmp%1#0,tmp%1#0 (copy)
        log                                                                       tmp%1#0
        // calculator/contract.py:26
        // log(b)
        l-load tmp%1#0 0                                                          tmp%1#0
        log
        b main_after_if_else@3

    main_else_body@2:
        // calculator/contract.py:28
        // assert num_args == 3, "Expected 3 args"
        v-load num_args#0                                                         num_args#0
        int 3                                                                     num_args#0,3
        ==                                                                        tmp%3#0
        l-load tmp%3#0 0                                                          tmp%3#0
        assert // Expected 3 args
        // calculator/contract.py:29
        // action_b = Txn.application_args(0)
        txna ApplicationArgs 0                                                    action_b#0
        // calculator/contract.py:30
        // action = op.btoi(action_b)
        l-load action_b#0 0                                                       action_b#0
        btoi                                                                      action#0
        v-store action#0
        // calculator/contract.py:31
        // a_bytes = Txn.application_args(1)
        txna ApplicationArgs 1                                                    a_bytes#0
        // calculator/contract.py:32
        // b_bytes = Txn.application_args(2)
        txna ApplicationArgs 2                                                    a_bytes#0,b_bytes#0
        // calculator/contract.py:33
        // log(a_bytes)
        l-load-copy a_bytes#0 1                                                   a_bytes#0,b_bytes#0,a_bytes#0 (copy)
        log                                                                       a_bytes#0,b_bytes#0
        // calculator/contract.py:34
        // log(b_bytes)
        l-load-copy b_bytes#0 0                                                   a_bytes#0,b_bytes#0,b_bytes#0 (copy)
        log                                                                       a_bytes#0,b_bytes#0
        // calculator/contract.py:35
        // a = op.btoi(a_bytes)
        l-load a_bytes#0 1                                                        b_bytes#0,a_bytes#0
        btoi                                                                      b_bytes#0,a#0
        v-store a#0                                                               b_bytes#0
        // calculator/contract.py:36
        // b = op.btoi(b_bytes)
        l-load b_bytes#0 0                                                        b_bytes#0
        btoi                                                                      b#0
        v-store b#0
        b main_after_if_else@3

    main_after_if_else@3:
        // calculator/contract.py:58
        // if maybe_action == ADD:
        v-load action#0                                                           action#0
        int 1                                                                     action#0,1
        ==                                                                        tmp%0#1
        l-store-copy tmp%0#1 0                                                    tmp%0#1,tmp%0#1 (copy)
        v-store tmp%0#1                                                           tmp%0#1
        l-load tmp%0#1 0                                                          tmp%0#1
        bz main_else_body@6 ; b main_if_body@5

    main_if_body@5:
        // calculator/contract.py:71
        // return a + b
        v-load a#0                                                                a#0
        v-load b#0                                                                a#0,b#0
        +                                                                         tmp%0#2
        l-load tmp%0#2 0                                                          tmp%0#2
        v-store result#0
        // calculator/contract.py:38
        // result = self.do_calc(action, a, b)
        b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13

    main_else_body@6:
        // calculator/contract.py:60
        // elif maybe_action == SUB:
        v-load action#0                                                           action#0
        int 2                                                                     action#0,2
        ==                                                                        tmp%2#1
        l-load tmp%2#1 0                                                          tmp%2#1
        bz main_else_body@8 ; b main_if_body@7

    main_if_body@7:
        // calculator/contract.py:75
        // return a - b
        v-load a#0                                                                a#0
        v-load b#0                                                                a#0,b#0
        -                                                                         tmp%0#2
        l-load tmp%0#2 0                                                          tmp%0#2
        v-store result#0
        // calculator/contract.py:38
        // result = self.do_calc(action, a, b)
        b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13

    main_else_body@8:
        // calculator/contract.py:62
        // elif maybe_action == MUL:
        v-load action#0                                                           action#0
        int 3                                                                     action#0,3
        ==                                                                        tmp%4#1
        l-load tmp%4#1 0                                                          tmp%4#1
        bz main_else_body@10 ; b main_if_body@9

    main_if_body@9:
        // calculator/contract.py:79
        // return a * b
        v-load a#0                                                                a#0
        v-load b#0                                                                a#0,b#0
        *                                                                         tmp%0#2
        l-load tmp%0#2 0                                                          tmp%0#2
        v-store result#0
        // calculator/contract.py:38
        // result = self.do_calc(action, a, b)
        b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13

    main_else_body@10:
        // calculator/contract.py:64
        // elif maybe_action == DIV:
        v-load action#0                                                           action#0
        int 4                                                                     action#0,4
        ==                                                                        tmp%6#1
        l-load tmp%6#1 0                                                          tmp%6#1
        assert // unknown operation
        // calculator/contract.py:83
        // return a // b
        v-load a#0                                                                a#0
        v-load b#0                                                                a#0,b#0
        /                                                                         tmp%0#2
        l-load tmp%0#2 0                                                          tmp%0#2
        v-store result#0
        // calculator/contract.py:38
        // result = self.do_calc(action, a, b)
        b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13

    main_after_inlined_examples.calculator.contract.MyContract.do_calc@13:
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        v-load a#0                                                                a#0
        callsub itoa                                                              tmp%4#0
        v-store tmp%4#0
        // calculator/contract.py:45
        // if action == ADD:
        v-load tmp%0#1                                                            tmp%0#1
        bz main_else_body@16 ; b main_if_body@15

    main_if_body@15:
        // calculator/contract.py:46
        // return Bytes(b" + ")
        byte 0x202b20                                                             0x202b20
        l-store examples.calculator.contract.MyContract.op%0#0 0                  examples.calculator.contract.MyContract.op%0#0
        l-load examples.calculator.contract.MyContract.op%0#0 0                   examples.calculator.contract.MyContract.op%0#0
        v-store tmp%5#0
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        b main_after_inlined_examples.calculator.contract.MyContract.op@23

    main_else_body@16:
        // calculator/contract.py:47
        // elif action == SUB:
        v-load action#0                                                           action#0
        int 2                                                                     action#0,2
        ==                                                                        tmp%1#2
        l-load tmp%1#2 0                                                          tmp%1#2
        bz main_else_body@18 ; b main_if_body@17

    main_if_body@17:
        // calculator/contract.py:48
        // return Bytes(b" - ")
        byte 0x202d20                                                             0x202d20
        l-store examples.calculator.contract.MyContract.op%0#0 0                  examples.calculator.contract.MyContract.op%0#0
        l-load examples.calculator.contract.MyContract.op%0#0 0                   examples.calculator.contract.MyContract.op%0#0
        v-store tmp%5#0
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        b main_after_inlined_examples.calculator.contract.MyContract.op@23

    main_else_body@18:
        // calculator/contract.py:49
        // elif action == MUL:
        v-load action#0                                                           action#0
        int 3                                                                     action#0,3
        ==                                                                        tmp%2#1
        l-load tmp%2#1 0                                                          tmp%2#1
        bz main_else_body@20 ; b main_if_body@19

    main_if_body@19:
        // calculator/contract.py:50
        // return Bytes(b" * ")
        byte 0x202a20                                                             0x202a20
        l-store examples.calculator.contract.MyContract.op%0#0 0                  examples.calculator.contract.MyContract.op%0#0
        l-load examples.calculator.contract.MyContract.op%0#0 0                   examples.calculator.contract.MyContract.op%0#0
        v-store tmp%5#0
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        b main_after_inlined_examples.calculator.contract.MyContract.op@23

    main_else_body@20:
        // calculator/contract.py:51
        // elif action == DIV:
        v-load action#0                                                           action#0
        int 4                                                                     action#0,4
        ==                                                                        tmp%3#0
        l-load tmp%3#0 0                                                          tmp%3#0
        bz main_else_body@22 ; b main_if_body@21

    main_if_body@21:
        // calculator/contract.py:52
        // return Bytes(b" // ")
        byte 0x202f2f20                                                           0x202f2f20
        l-store examples.calculator.contract.MyContract.op%0#0 0                  examples.calculator.contract.MyContract.op%0#0
        l-load examples.calculator.contract.MyContract.op%0#0 0                   examples.calculator.contract.MyContract.op%0#0
        v-store tmp%5#0
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        b main_after_inlined_examples.calculator.contract.MyContract.op@23

    main_else_body@22:
        // calculator/contract.py:54
        // return Bytes(b" - ")
        byte 0x202d20                                                             0x202d20
        l-store examples.calculator.contract.MyContract.op%0#0 0                  examples.calculator.contract.MyContract.op%0#0
        l-load examples.calculator.contract.MyContract.op%0#0 0                   examples.calculator.contract.MyContract.op%0#0
        v-store tmp%5#0
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        b main_after_inlined_examples.calculator.contract.MyContract.op@23

    main_after_inlined_examples.calculator.contract.MyContract.op@23:
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        v-load tmp%4#0                                                            tmp%4#0
        v-load tmp%5#0                                                            tmp%4#0,tmp%5#0
        concat                                                                    tmp%6#0
        v-load b#0                                                                tmp%6#0,b#0
        callsub itoa                                                              tmp%6#0,tmp%7#0
        l-load tmp%6#0 1                                                          tmp%7#0,tmp%6#0
        l-load tmp%7#0 1                                                          tmp%6#0,tmp%7#0
        concat                                                                    tmp%8#0
        l-load tmp%8#0 0                                                          tmp%8#0
        byte 0x203d20                                                             tmp%8#0,0x203d20
        concat                                                                    tmp%9#0
        v-load result#0                                                           tmp%9#0,result#0
        callsub itoa                                                              tmp%9#0,tmp%10#0
        l-load tmp%9#0 1                                                          tmp%10#0,tmp%9#0
        l-load tmp%10#0 1                                                         tmp%9#0,tmp%10#0
        concat                                                                    result_b#0
        // calculator/contract.py:40
        // log(result_b)
        l-load result_b#0 0                                                       result_b#0
        log
        // calculator/contract.py:41
        // return UInt64(1)
        int 1                                                                     1
        return


// examples.calculator.contract.itoa(i: uint64) -> bytes:
subroutine itoa:
    itoa_block@0:                                                                 (𝕡) i#0 |
        // calculator/contract.py:13
        // if i < radix:
        p-load i#0                                                                (𝕡) i#0 | i#0 (copy)
        // calculator/contract.py:12
        // radix = digits.length
        int 10                                                                    (𝕡) i#0 | i#0 (copy),10
        // calculator/contract.py:13
        // if i < radix:
        <                                                                         (𝕡) i#0 | tmp%0#0
        l-load tmp%0#0 0                                                          (𝕡) i#0 | tmp%0#0
        bz itoa_after_if_else@2 ; b itoa_if_body@1                                (𝕡) i#0 |

    itoa_if_body@1:                                                               (𝕡) i#0 |
        // calculator/contract.py:11
        // digits = Bytes(b"0123456789")
        byte 0x30313233343536373839                                               (𝕡) i#0 | 0x30313233343536373839
        // calculator/contract.py:14
        // return digits[i]
        p-load i#0                                                                (𝕡) i#0 | 0x30313233343536373839,i#0 (copy)
        int 1                                                                     (𝕡) i#0 | 0x30313233343536373839,i#0 (copy),1
        extract3                                                                  (𝕡) i#0 | tmp%1#0
        l-load tmp%1#0 0                                                          (𝕡) i#0 | tmp%1#0
        retsub                                                                    tmp%1#0

    itoa_after_if_else@2:                                                         (𝕡) i#0 |
        // calculator/contract.py:15
        // return itoa(i // radix) + digits[i % radix]
        p-load i#0                                                                (𝕡) i#0 | i#0 (copy)
        // calculator/contract.py:12
        // radix = digits.length
        int 10                                                                    (𝕡) i#0 | i#0 (copy),10
        // calculator/contract.py:15
        // return itoa(i // radix) + digits[i % radix]
        /                                                                         (𝕡) i#0 | tmp%2#0
        l-load tmp%2#0 0                                                          (𝕡) i#0 | tmp%2#0
        callsub itoa                                                              (𝕡) i#0 | tmp%3#0
        p-load i#0                                                                (𝕡) i#0 | tmp%3#0,i#0 (copy)
        // calculator/contract.py:12
        // radix = digits.length
        int 10                                                                    (𝕡) i#0 | tmp%3#0,i#0 (copy),10
        // calculator/contract.py:15
        // return itoa(i // radix) + digits[i % radix]
        %                                                                         (𝕡) i#0 | tmp%3#0,tmp%4#0
        // calculator/contract.py:11
        // digits = Bytes(b"0123456789")
        byte 0x30313233343536373839                                               (𝕡) i#0 | tmp%3#0,tmp%4#0,0x30313233343536373839
        // calculator/contract.py:15
        // return itoa(i // radix) + digits[i % radix]
        l-load tmp%4#0 1                                                          (𝕡) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0
        int 1                                                                     (𝕡) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0,1
        extract3                                                                  (𝕡) i#0 | tmp%3#0,tmp%5#0
        l-load tmp%3#0 1                                                          (𝕡) i#0 | tmp%5#0,tmp%3#0
        l-load tmp%5#0 1                                                          (𝕡) i#0 | tmp%3#0,tmp%5#0
        concat                                                                    (𝕡) i#0 | tmp%6#0
        l-load tmp%6#0 0                                                          (𝕡) i#0 | tmp%6#0
        retsub                                                                    tmp%6#0


