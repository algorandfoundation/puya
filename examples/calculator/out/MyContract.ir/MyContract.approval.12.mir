// Op                                                                             Stack (out)
// examples.calculator.contract.MyContract.approval_program() -> uint64:
subroutine main:
    declare bytes tmp%12#0
    declare uint64 a#0, action#0, b#0, result#0, tmp%0#1
    main_block@0:                                                                 (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1 |
        // calculator/contract.py:20
        // num_args = Txn.num_app_args
        txn NumAppArgs                                                            (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1 | num_args#0
        l-store-copy num_args#0 0                                                 (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1 | num_args#0,num_args#0
        f-store num_args#0                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | num_args#0
        // calculator/contract.py:21
        // if num_args == 0:
        l-load num_args#0 0                                                       (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | num_args#0
        bz main_if_body@1 ; b main_else_body@2                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_if_body@1:                                                               (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:22
        // a = UInt64(0)
        int 0                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a#0
        f-store a#0                                                               (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:23
        // b = UInt64(0)
        int 0                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | b#0
        f-store b#0                                                               (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:24
        // action = UInt64(0)
        int 0                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0
        f-store action#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:22
        // a = UInt64(0)
        int 0                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | 0
        // calculator/contract.py:25
        // log(a)
        itob                                                                      (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%2#0
        l-load-copy tmp%2#0 0                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%2#0,tmp%2#0 (copy)
        log                                                                       (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%2#0
        // calculator/contract.py:26
        // log(b)
        l-load tmp%2#0 0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%2#0
        log                                                                       (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        b main_after_if_else@3                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_else_body@2:                                                             (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:28
        // assert num_args == 3, "Expected 3 args"
        f-load num_args#0                                                         (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | num_args#0
        int 3                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | num_args#0,3
        ==                                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%4#0
        assert // Expected 3 args                                                 (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:29
        // action_b = Txn.application_args(0)
        txna ApplicationArgs 0                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action_b#0
        // calculator/contract.py:30
        // action = op.btoi(action_b)
        btoi                                                                      (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0
        f-store action#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:31
        // a_bytes = Txn.application_args(1)
        txna ApplicationArgs 1                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a_bytes#0
        // calculator/contract.py:32
        // b_bytes = Txn.application_args(2)
        txna ApplicationArgs 2                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a_bytes#0,b_bytes#0
        // calculator/contract.py:33
        // log(a_bytes)
        l-load-copy a_bytes#0 1                                                   (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a_bytes#0,b_bytes#0,a_bytes#0 (copy)
        log                                                                       (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a_bytes#0,b_bytes#0
        // calculator/contract.py:34
        // log(b_bytes)
        l-load-copy b_bytes#0 0                                                   (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a_bytes#0,b_bytes#0,b_bytes#0 (copy)
        log                                                                       (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a_bytes#0,b_bytes#0
        // calculator/contract.py:35
        // a = op.btoi(a_bytes)
        l-load a_bytes#0 1                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | b_bytes#0,a_bytes#0
        btoi                                                                      (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | b_bytes#0,a#0
        f-store a#0                                                               (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | b_bytes#0
        // calculator/contract.py:36
        // b = op.btoi(b_bytes)
        l-load b_bytes#0 0                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | b_bytes#0
        btoi                                                                      (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | b#0
        f-store b#0                                                               (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        b main_after_if_else@3                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_after_if_else@3:                                                         (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:58
        // if maybe_action == ADD:
        f-load action#0                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0
        int 1                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0,1
        ==                                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%0#1
        l-store-copy tmp%0#1 0                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%0#1,tmp%0#1
        f-store tmp%0#1                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%0#1
        l-load tmp%0#1 0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%0#1
        bz main_else_body@6 ; b main_if_body@5                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_if_body@5:                                                               (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:71
        // return a + b
        f-load a#0                                                                (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a#0
        f-load b#0                                                                (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a#0,b#0
        +                                                                         (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | result#0
        f-store result#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:38
        // result = self.do_calc(action, a, b)
        b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13   (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_else_body@6:                                                             (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:60
        // elif maybe_action == SUB:
        f-load action#0                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0
        int 2                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0,2
        ==                                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%2#1
        bz main_else_body@8 ; b main_if_body@7                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_if_body@7:                                                               (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:75
        // return a - b
        f-load a#0                                                                (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a#0
        f-load b#0                                                                (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a#0,b#0
        -                                                                         (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | result#0
        f-store result#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:38
        // result = self.do_calc(action, a, b)
        b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13   (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_else_body@8:                                                             (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:62
        // elif maybe_action == MUL:
        f-load action#0                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0
        int 3                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0,3
        ==                                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%4#0
        bz main_else_body@10 ; b main_if_body@9                                   (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_if_body@9:                                                               (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:79
        // return a * b
        f-load a#0                                                                (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a#0
        f-load b#0                                                                (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a#0,b#0
        *                                                                         (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | result#0
        f-store result#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:38
        // result = self.do_calc(action, a, b)
        b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13   (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_else_body@10:                                                            (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:64
        // elif maybe_action == DIV:
        f-load action#0                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0
        int 4                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0,4
        ==                                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%6#1
        assert // unknown operation                                               (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:83
        // return a // b
        f-load a#0                                                                (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a#0
        f-load b#0                                                                (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a#0,b#0
        /                                                                         (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | result#0
        f-store result#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:38
        // result = self.do_calc(action, a, b)
        b main_after_inlined_examples.calculator.contract.MyContract.do_calc@13   (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_after_inlined_examples.calculator.contract.MyContract.do_calc@13:        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        f-load a#0                                                                (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | a#0
        callsub itoa                                                              (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%12#0
        f-store tmp%12#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:45
        // if action == ADD:
        f-load tmp%0#1                                                            (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%0#1
        bz main_else_body@16 ; b main_if_body@15                                  (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_if_body@15:                                                              (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:46
        // return Bytes(b" + ")
        byte 0x202b20                                                             (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%13#0
        x-store tmp%13#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        b main_after_inlined_examples.calculator.contract.MyContract.op@23        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |

    main_else_body@16:                                                            (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:47
        // elif action == SUB:
        f-load action#0                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0
        int 2                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0,2
        ==                                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%1#2
        bz main_else_body@18 ; b main_if_body@17                                  (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_if_body@17:                                                              (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:48
        // return Bytes(b" - ")
        byte 0x202d20                                                             (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%13#0
        x-store tmp%13#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        b main_after_inlined_examples.calculator.contract.MyContract.op@23        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |

    main_else_body@18:                                                            (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:49
        // elif action == MUL:
        f-load action#0                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0
        int 3                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0,3
        ==                                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%2#1
        bz main_else_body@20 ; b main_if_body@19                                  (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_if_body@19:                                                              (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:50
        // return Bytes(b" * ")
        byte 0x202a20                                                             (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%13#0
        x-store tmp%13#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        b main_after_inlined_examples.calculator.contract.MyContract.op@23        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |

    main_else_body@20:                                                            (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:51
        // elif action == DIV:
        f-load action#0                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0
        int 4                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | action#0,4
        ==                                                                        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%3#2
        bz main_else_body@22 ; b main_if_body@21                                  (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |

    main_if_body@21:                                                              (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:52
        // return Bytes(b" // ")
        byte 0x202f2f20                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%13#0
        x-store tmp%13#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        b main_after_inlined_examples.calculator.contract.MyContract.op@23        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |

    main_else_body@22:                                                            (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:54
        // return Bytes(b" - ")
        byte 0x202d20                                                             (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%13#0
        x-store tmp%13#0                                                          (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        b main_after_inlined_examples.calculator.contract.MyContract.op@23        (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |

    main_after_inlined_examples.calculator.contract.MyContract.op@23:             (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 |
        // calculator/contract.py:39
        // result_b = itoa(a) + self.op(action) + itoa(b) + b" = " + itoa(result)
        f-load tmp%12#0                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | (𝕏) tmp%13#0 | tmp%12#0
        x-load tmp%13#0                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%12#0,tmp%13#0
        concat                                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%14#0
        f-load b#0                                                                (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%14#0,b#0
        callsub itoa                                                              (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%14#0,tmp%15#0
        l-load tmp%14#0 1                                                         (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%15#0,tmp%14#0
        l-load tmp%15#0 1                                                         (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%14#0,tmp%15#0
        concat                                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%16#0
        byte 0x203d20                                                             (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%16#0,0x203d20
        concat                                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%17#0
        f-load result#0                                                           (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%17#0,result#0
        callsub itoa                                                              (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%17#0,tmp%18#0
        l-load tmp%17#0 1                                                         (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%18#0,tmp%17#0
        l-load tmp%18#0 1                                                         (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | tmp%17#0,tmp%18#0
        concat                                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | result_b#0
        // calculator/contract.py:40
        // log(result_b)
        log                                                                       (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |
        // calculator/contract.py:41
        // return UInt64(1)
        int 1                                                                     (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 | 1
        return                                                                    (𝕗) tmp%12#0,a#0,action#0,b#0,result#0,tmp%0#1,num_args#0 |


// examples.calculator.contract.itoa(i: uint64) -> bytes:
subroutine itoa:
    itoa_block@0:                                                                 (𝕡) i#0 |
        // calculator/contract.py:13
        // if i < radix:
        p-load i#0                                                                (𝕡) i#0 | i#0 (copy)
        // calculator/contract.py:12
        // radix = digits.length
        int 10                                                                    (𝕡) i#0 | i#0 (copy),10
        // calculator/contract.py:13
        // if i < radix:
        <                                                                         (𝕡) i#0 | tmp%1#0
        bz itoa_after_if_else@2 ; b itoa_if_body@1                                (𝕡) i#0 |

    itoa_if_body@1:                                                               (𝕡) i#0 |
        // calculator/contract.py:11
        // digits = Bytes(b"0123456789")
        byte 0x30313233343536373839                                               (𝕡) i#0 | 0x30313233343536373839
        // calculator/contract.py:14
        // return digits[i]
        p-load i#0                                                                (𝕡) i#0 | 0x30313233343536373839,i#0 (copy)
        int 1                                                                     (𝕡) i#0 | 0x30313233343536373839,i#0 (copy),1
        extract3 // on error: Index access is out of bounds                       (𝕡) i#0 | read_bytes%0#0
        retsub                                                                    read_bytes%0#0

    itoa_after_if_else@2:                                                         (𝕡) i#0 |
        // calculator/contract.py:15
        // return itoa(i // radix) + digits[i % radix]
        p-load i#0                                                                (𝕡) i#0 | i#0 (copy)
        // calculator/contract.py:12
        // radix = digits.length
        int 10                                                                    (𝕡) i#0 | i#0 (copy),10
        // calculator/contract.py:15
        // return itoa(i // radix) + digits[i % radix]
        /                                                                         (𝕡) i#0 | tmp%2#0
        callsub itoa                                                              (𝕡) i#0 | tmp%3#0
        p-load i#0                                                                (𝕡) i#0 | tmp%3#0,i#0 (copy)
        // calculator/contract.py:12
        // radix = digits.length
        int 10                                                                    (𝕡) i#0 | tmp%3#0,i#0 (copy),10
        // calculator/contract.py:15
        // return itoa(i // radix) + digits[i % radix]
        %                                                                         (𝕡) i#0 | tmp%3#0,tmp%4#0
        // calculator/contract.py:11
        // digits = Bytes(b"0123456789")
        byte 0x30313233343536373839                                               (𝕡) i#0 | tmp%3#0,tmp%4#0,0x30313233343536373839
        // calculator/contract.py:15
        // return itoa(i // radix) + digits[i % radix]
        l-load tmp%4#0 1                                                          (𝕡) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0
        int 1                                                                     (𝕡) i#0 | tmp%3#0,0x30313233343536373839,tmp%4#0,1
        extract3 // on error: Index access is out of bounds                       (𝕡) i#0 | tmp%3#0,read_bytes%1#0
        l-load tmp%3#0 1                                                          (𝕡) i#0 | read_bytes%1#0,tmp%3#0
        l-load read_bytes%1#0 1                                                   (𝕡) i#0 | tmp%3#0,read_bytes%1#0
        concat                                                                    (𝕡) i#0 | tmp%5#0
        retsub                                                                    tmp%5#0


