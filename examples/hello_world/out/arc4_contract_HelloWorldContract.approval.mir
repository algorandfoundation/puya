// Op                                              //                                                         Op Description                                     Stack (out)                                       X stack                                 Source code                                                         Source line

#pragma version 10

// examples.hello_world.arc4_contract.HelloWorldContract.approval_program() -> uint64:
main_block@0:
    txn NumAppArgs                                 //                                                                                                            {txn}                                                                                     class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    //                                             virtual: store tmp%0#0 to l-stack (no copy)                tmp%0#0                                                                                              class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    //                                             virtual: load tmp%0#0 from l-stack (no copy)               tmp%0#0                                                                                              class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    bz main_bare_routing@5                         //                                                                                                                                                                                                      class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    // Implicit fall through to main_abi_routing@1 //                                                                                                                                                                                                      class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9

main_abi_routing@1:
    txna ApplicationArgs 0                         //                                                                                                            {txna}                                                                                    class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    //                                             virtual: store tmp%1#0 to l-stack (no copy)                tmp%1#0                                                                                              class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    method "hello(string)string"                   //                                                                                                            tmp%1#0,method<"hello(string)string">                                                     class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    swap                                           //                                                         load tmp%1#0 from l-stack (no copy)                method<"hello(string)string">,tmp%1#0                                                     class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    match main_hello_route@2                       //                                                                                                                                                                                                      class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    err // reject transaction                      //                                                                                                                                                                                                      class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9

main_hello_route@2:
    txn OnCompletion                               //                                                                                                            {txn}                                                                                     arc4.abimethod                                                      hello_world/arc4_contract.py:10
    //                                             virtual: store tmp%2#0 to l-stack (no copy)                tmp%2#0                                                                                              arc4.abimethod                          hello_world/arc4_contract.py:10
    //                                             virtual: load tmp%2#0 from l-stack (no copy)               tmp%2#0                                                                                              arc4.abimethod                          hello_world/arc4_contract.py:10
    !                                              //                                                                                                            {!}                                                                                       arc4.abimethod                                                      hello_world/arc4_contract.py:10
    //                                             virtual: store tmp%3#0 to l-stack (no copy)                tmp%3#0                                                                                              arc4.abimethod                          hello_world/arc4_contract.py:10
    //                                             virtual: load tmp%3#0 from l-stack (no copy)               tmp%3#0                                                                                              arc4.abimethod                          hello_world/arc4_contract.py:10
    assert // OnCompletion is NoOp                 //                                                                                                                                                                                                      arc4.abimethod                                                      hello_world/arc4_contract.py:10
    txn ApplicationID                              //                                                                                                            {txn}                                                                                     arc4.abimethod                                                      hello_world/arc4_contract.py:10
    //                                             virtual: store tmp%4#0 to l-stack (no copy)                tmp%4#0                                                                                              arc4.abimethod                          hello_world/arc4_contract.py:10
    //                                             virtual: load tmp%4#0 from l-stack (no copy)               tmp%4#0                                                                                              arc4.abimethod                          hello_world/arc4_contract.py:10
    assert // is not creating                      //                                                                                                                                                                                                      arc4.abimethod                                                      hello_world/arc4_contract.py:10
    txna ApplicationArgs 1                         //                                                                                                            {txna}                                                                                    class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    //                                             virtual: store tmp%5#0 to l-stack (no copy)                tmp%5#0                                                                                              class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    //                                             virtual: load tmp%5#0 from l-stack (no copy)               tmp%5#0                                                                                              arc4.abimethod                          hello_world/arc4_contract.py:10
    callsub hello                                  //                                                                                                            {hello}                                                                                   arc4.abimethod                                                      hello_world/arc4_contract.py:10
    //                                             virtual: store tmp%6#0 to l-stack (no copy)                tmp%6#0                                                                                              arc4.abimethod                          hello_world/arc4_contract.py:10
    byte 0x151f7c75                                //                                                                                                            tmp%6#0,0x151f7c75                                                                        arc4.abimethod                                                      hello_world/arc4_contract.py:10
    swap                                           //                                                         load tmp%6#0 from l-stack (no copy)                0x151f7c75,tmp%6#0                                                                        arc4.abimethod                                                      hello_world/arc4_contract.py:10
    concat                                         //                                                                                                            {concat}                                                                                  arc4.abimethod                                                      hello_world/arc4_contract.py:10
    //                                             virtual: store tmp%7#0 to l-stack (no copy)                tmp%7#0                                                                                              arc4.abimethod                          hello_world/arc4_contract.py:10
    //                                             virtual: load tmp%7#0 from l-stack (no copy)               tmp%7#0                                                                                              arc4.abimethod                          hello_world/arc4_contract.py:10
    log                                            //                                                                                                                                                                                                      arc4.abimethod                                                      hello_world/arc4_contract.py:10
    int 1                                          //                                                                                                            1                                                                                         arc4.abimethod                                                      hello_world/arc4_contract.py:10
    return                                         //                                                                                                                                                                                                      arc4.abimethod                                                      hello_world/arc4_contract.py:10

main_bare_routing@5:
    txn OnCompletion                               //                                                                                                            {txn}                                                                                     class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    //                                             virtual: store tmp%8#0 to l-stack (no copy)                tmp%8#0                                                                                              class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    //                                             virtual: load tmp%8#0 from l-stack (no copy)               tmp%8#0                                                                                              class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    !                                              //                                                                                                            {!}                                                                                       class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    //                                             virtual: store not%tmp%8#0 to l-stack (no copy)            not%tmp%8#0                                                                                          class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    //                                             virtual: load not%tmp%8#0 from l-stack (no copy)           not%tmp%8#0                                                                                          class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    assert // reject transaction                   //                                                                                                                                                                                                      class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    txn ApplicationID                              //                                                                                                            {txn}                                                                                     class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    //                                             virtual: store tmp%9#0 to l-stack (no copy)                tmp%9#0                                                                                              class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    //                                             virtual: load tmp%9#0 from l-stack (no copy)               tmp%9#0                                                                                              class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    !                                              //                                                                                                            {!}                                                                                       class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    //                                             virtual: store tmp%10#0 to l-stack (no copy)               tmp%10#0                                                                                             class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    //                                             virtual: load tmp%10#0 from l-stack (no copy)              tmp%10#0                                                                                             class HelloWorldContract(ARC4Contract): hello_world/arc4_contract.py:9
    assert // is creating                          //                                                                                                                                                                                                      class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    int 1                                          //                                                                                                            1                                                                                         class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9
    return                                         //                                                                                                                                                                                                      class HelloWorldContract(ARC4Contract):                             hello_world/arc4_contract.py:9


// examples.hello_world.arc4_contract.HelloWorldContract.hello(name: bytes) -> bytes:
hello:
    proto 1 1                                      //                                                                                                            (𝕡) name#0 |                                                                              @arc4.abimethod\ndef hello(self, name: arc4.String) -> arc4.String: hello_world/arc4_contract.py:10-11

hello_block@0:
    frame_dig -1                                   //                                                         load name#0 from parameters                        (𝕡) name#0 | name#0                                                                       "Hello, " + name                                                    hello_world/arc4_contract.py:12
    extract 2 0                                    //                                                                                                            (𝕡) name#0 | {extract}                                                                    "Hello, " + name                                                    hello_world/arc4_contract.py:12
    //                                             virtual: store expr_value_trimmed%1#0 to l-stack (no copy) (𝕡) name#0 | expr_value_trimmed%1#0                                                                  "Hello, " + name                        hello_world/arc4_contract.py:12
    byte "Hello, "                                 //                                                                                                            (𝕡) name#0 | expr_value_trimmed%1#0,"Hello, "                                             "Hello, " + name                                                    hello_world/arc4_contract.py:12
    swap                                           //                                                         load expr_value_trimmed%1#0 from l-stack (no copy) (𝕡) name#0 | "Hello, ",expr_value_trimmed%1#0                                             "Hello, " + name                                                    hello_world/arc4_contract.py:12
    concat                                         //                                                                                                            (𝕡) name#0 | {concat}                                                                     "Hello, " + name                                                    hello_world/arc4_contract.py:12
    //                                             virtual: store concatenated%2#0 to l-stack (no copy)       (𝕡) name#0 | concatenated%2#0                                                                        "Hello, " + name                        hello_world/arc4_contract.py:12
    dup                                            //                                                         load concatenated%2#0 from l-stack (copy)          (𝕡) name#0 | concatenated%2#0,concatenated%2#0                                            "Hello, " + name                                                    hello_world/arc4_contract.py:12
    len                                            //                                                                                                            (𝕡) name#0 | concatenated%2#0,{len}                                                       "Hello, " + name                                                    hello_world/arc4_contract.py:12
    //                                             virtual: store len_%3#0 to l-stack (no copy)               (𝕡) name#0 | concatenated%2#0,len_%3#0                                                               "Hello, " + name                        hello_world/arc4_contract.py:12
    //                                             virtual: load len_%3#0 from l-stack (no copy)              (𝕡) name#0 | concatenated%2#0,len_%3#0                                                               "Hello, " + name                        hello_world/arc4_contract.py:12
    itob                                           //                                                                                                            (𝕡) name#0 | concatenated%2#0,{itob}                                                      "Hello, " + name                                                    hello_world/arc4_contract.py:12
    //                                             virtual: store len_bytes%4#0 to l-stack (no copy)          (𝕡) name#0 | concatenated%2#0,len_bytes%4#0                                                          "Hello, " + name                        hello_world/arc4_contract.py:12
    //                                             virtual: load len_bytes%4#0 from l-stack (no copy)         (𝕡) name#0 | concatenated%2#0,len_bytes%4#0                                                          "Hello, " + name                        hello_world/arc4_contract.py:12
    extract 6 0                                    //                                                                                                            (𝕡) name#0 | concatenated%2#0,{extract}                                                   "Hello, " + name                                                    hello_world/arc4_contract.py:12
    //                                             virtual: store len_16_bit%5#0 to l-stack (no copy)         (𝕡) name#0 | concatenated%2#0,len_16_bit%5#0                                                         "Hello, " + name                        hello_world/arc4_contract.py:12
    //                                             virtual: load len_16_bit%5#0 from l-stack (no copy)        (𝕡) name#0 | concatenated%2#0,len_16_bit%5#0                                                         "Hello, " + name                        hello_world/arc4_contract.py:12
    swap                                           //                                                         load concatenated%2#0 from l-stack (no copy)       (𝕡) name#0 | len_16_bit%5#0,concatenated%2#0                                              "Hello, " + name                                                    hello_world/arc4_contract.py:12
    concat                                         //                                                                                                            (𝕡) name#0 | {concat}                                                                     "Hello, " + name                                                    hello_world/arc4_contract.py:12
    //                                             virtual: store concat_result%6#0 to l-stack (no copy)      (𝕡) name#0 | concat_result%6#0                                                                       "Hello, " + name                        hello_world/arc4_contract.py:12
    //                                             virtual: load concat_result%6#0 from l-stack (no copy)     (𝕡) name#0 | concat_result%6#0                                                                       return "Hello, " + name                 hello_world/arc4_contract.py:12
    retsub                                         //                                                                                                            concat_result%6#0                                                                         return "Hello, " + name                                             hello_world/arc4_contract.py:12

