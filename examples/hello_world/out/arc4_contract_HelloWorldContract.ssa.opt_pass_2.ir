contract examples.hello_world.arc4_contract.HelloWorldContract:
    program approval:
        subroutine examples.hello_world.arc4_contract.HelloWorldContract.approval_program() -> uint64:
            block@0: // L5
                let tmp%0#0: uint64 = (txn NumAppArgs)
                goto tmp%0#0 ? block@1 : block@5
            block@1: // abi_routing_L5
                let tmp%1#0: bytes = (txna ApplicationArgs 0)
                switch tmp%1#0 {method "say_hello(string)string" => block@2, * => block@3}
            block@2: // say_hello_route_L6
                let tmp%2#0: uint64 = (txn OnCompletion)
                let tmp%3#0: uint64 = (! tmp%2#0)
                (assert tmp%3#0) // OnCompletion is NoOp
                let tmp%4#0: uint64 = (txn ApplicationID)
                (assert tmp%4#0) // is not creating
                let tmp%5#0: bytes = (txna ApplicationArgs 1)
                let tmp%6#0: bytes = examples.hello_world.arc4_contract.HelloWorldContract.say_hello(tmp%5#0)
                let tmp%7#0: bytes = (concat 0x151f7c75 tmp%6#0)
                (log tmp%7#0)
                return 1u
            block@3: // switch_case_default_L5
                fail // reject transaction
            block@5: // bare_routing_L5
                let tmp%8#0: uint64 = (txn OnCompletion)
                goto tmp%8#0 ? block@7 : block@6
            block@6: // create_L5
                let tmp%9#0: uint64 = (txn ApplicationID)
                let tmp%10#0: uint64 = (! tmp%9#0)
                (assert tmp%10#0) // is creating
                return 1u
            block@7: // reject_bare_on_completion_L5
                fail // reject transaction
        
        subroutine examples.hello_world.arc4_contract.HelloWorldContract.say_hello(name: bytes) -> bytes:
            block@0: // L7
                let tmp%0#0: bytes = ((extract 2 0) name#0)
                let tmp%1#0: bytes = (concat "Hello " tmp%0#0)
                let length%2#0: uint64 = (len tmp%1#0)
                let value_as_bytes%3#0: bytes = (itob length%2#0)
                let value_as_uint16%4#0: bytes = ((extract 6 2) value_as_bytes%3#0)
                let tmp%5#0: bytes = (concat value_as_uint16%4#0 tmp%1#0)
                return tmp%5#0
    
    program clear-state:
        subroutine examples.hello_world.arc4_contract.HelloWorldContract.clear_state_program() -> uint64:
            block@0: // L5
                return 1u