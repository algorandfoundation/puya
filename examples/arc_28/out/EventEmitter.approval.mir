// Op                                                                          Stack (out)
// examples.arc_28.contract.EventEmitter.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                               tmp%0#0
    return


// examples.arc_28.contract.EventEmitter.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    proto 0 1

__puya_arc4_router___block@0:
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    txn NumAppArgs                                                             tmp%0#0
    bz __puya_arc4_router___bare_routing@6
    // Implicit fall through to __puya_arc4_router___abi_routing@1

__puya_arc4_router___abi_routing@1:
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    txna ApplicationArgs 0                                                     tmp%2#0
    method emit_swapped(uint64,uint64)void                                     tmp%2#0,Method(emit_swapped(uint64,uint64)void)
    method emit_ufixed(ufixed256x16,ufixed64x2)void                            tmp%2#0,Method(emit_swapped(uint64,uint64)void),Method(emit_ufixed(ufixed256x16,ufixed64x2)void)
    l-load tmp%2#0 2                                                           Method(emit_swapped(uint64,uint64)void),Method(emit_ufixed(ufixed256x16,ufixed64x2)void),tmp%2#0
    match __puya_arc4_router___emit_swapped_route@2 __puya_arc4_router___emit_ufixed_route@3 
    int 0                                                                      0
    retsub                                                                     0

__puya_arc4_router___emit_swapped_route@2:
    // arc_28/contract.py:12
    // @arc4.abimethod
    txn OnCompletion                                                           tmp%3#0
    !                                                                          tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                          tmp%5#0
    assert // can only call when not creating
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    txna ApplicationArgs 1                                                     tmp%7#0
    txna ApplicationArgs 2                                                     tmp%7#0,tmp%8#0
    // arc_28/contract.py:12
    // @arc4.abimethod
    l-load tmp%7#0 1                                                           tmp%8#0,tmp%7#0
    l-load tmp%8#0 1                                                           tmp%7#0,tmp%8#0
    callsub emit_swapped
    int 1                                                                      1
    retsub                                                                     1

__puya_arc4_router___emit_ufixed_route@3:
    // arc_28/contract.py:18
    // @arc4.abimethod()
    txn OnCompletion                                                           tmp%9#0
    !                                                                          tmp%10#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                          tmp%11#0
    assert // can only call when not creating
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    txna ApplicationArgs 1                                                     tmp%13#0
    txna ApplicationArgs 2                                                     tmp%13#0,tmp%14#0
    // arc_28/contract.py:18
    // @arc4.abimethod()
    l-load tmp%13#0 1                                                          tmp%14#0,tmp%13#0
    l-load tmp%14#0 1                                                          tmp%13#0,tmp%14#0
    callsub emit_ufixed
    int 1                                                                      1
    retsub                                                                     1

__puya_arc4_router___bare_routing@6:
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    txn OnCompletion                                                           tmp%15#0
    bnz __puya_arc4_router___after_if_else@10
    // Implicit fall through to __puya_arc4_router_____algopy_default_create@7

__puya_arc4_router_____algopy_default_create@7:
    txn ApplicationID                                                          tmp%16#0
    !                                                                          tmp%17#0
    assert // can only call when creating
    int 1                                                                      1
    retsub                                                                     1

__puya_arc4_router___after_if_else@10:
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    int 0                                                                      0
    retsub                                                                     0


// examples.arc_28.contract.EventEmitter.emit_swapped(a: bytes, b: bytes) -> void:
emit_swapped:                                                                  (洧도) a#0,b#0 |
    // arc_28/contract.py:12-13
    // @arc4.abimethod
    // def emit_swapped(self, a: arc4.UInt64, b: arc4.UInt64) -> None:
    proto 2 0                                                                  (洧도) a#0,b#0 |

emit_swapped_block@0:                                                          (洧도) a#0,b#0 |
    // arc_28/contract.py:14
    // arc4.emit(Swapped(b, a))
    p-load b#0                                                                 (洧도) a#0,b#0 | b#0 (copy)
    p-load a#0                                                                 (洧도) a#0,b#0 | b#0 (copy),a#0 (copy)
    concat                                                                     (洧도) a#0,b#0 | encoded_tuple_buffer%2#0
    method Swapped(uint64,uint64)                                              (洧도) a#0,b#0 | encoded_tuple_buffer%2#0,Method(Swapped(uint64,uint64))
    l-load encoded_tuple_buffer%2#0 1                                          (洧도) a#0,b#0 | Method(Swapped(uint64,uint64)),encoded_tuple_buffer%2#0
    concat                                                                     (洧도) a#0,b#0 | event%0#0
    l-load-copy event%0#0 0                                                    (洧도) a#0,b#0 | event%0#0,event%0#0 (copy)
    log                                                                        (洧도) a#0,b#0 | event%0#0
    // arc_28/contract.py:15
    // arc4.emit("Swapped(uint64,uint64)", b, a)
    l-load-copy event%0#0 0                                                    (洧도) a#0,b#0 | event%0#0,event%0#0 (copy)
    log                                                                        (洧도) a#0,b#0 | event%0#0
    // arc_28/contract.py:16
    // arc4.emit("Swapped", b, a)
    l-load event%0#0 0                                                         (洧도) a#0,b#0 | event%0#0
    log                                                                        (洧도) a#0,b#0 |
    retsub


// examples.arc_28.contract.EventEmitter.emit_ufixed(a: bytes, b: bytes) -> void:
emit_ufixed:                                                                   (洧도) a#0,b#0 |
    // arc_28/contract.py:18-23
    // @arc4.abimethod()
    // def emit_ufixed(
    //     self,
    //     a: arc4.BigUFixedNxM[typing.Literal[256], typing.Literal[16]],
    //     b: arc4.UFixedNxM[typing.Literal[64], typing.Literal[2]],
    // ) -> None:
    proto 2 0                                                                  (洧도) a#0,b#0 |

emit_ufixed_block@0:                                                           (洧도) a#0,b#0 |
    // arc_28/contract.py:24
    // arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)
    p-load a#0                                                                 (洧도) a#0,b#0 | a#0 (copy)
    p-load b#0                                                                 (洧도) a#0,b#0 | a#0 (copy),b#0 (copy)
    concat                                                                     (洧도) a#0,b#0 | encoded_tuple_buffer%2#0
    method AnEvent(ufixed256x16,ufixed64x2)                                    (洧도) a#0,b#0 | encoded_tuple_buffer%2#0,Method(AnEvent(ufixed256x16,ufixed64x2))
    l-load encoded_tuple_buffer%2#0 1                                          (洧도) a#0,b#0 | Method(AnEvent(ufixed256x16,ufixed64x2)),encoded_tuple_buffer%2#0
    concat                                                                     (洧도) a#0,b#0 | event%0#0
    log                                                                        (洧도) a#0,b#0 |
    retsub


