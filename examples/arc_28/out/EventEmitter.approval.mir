// Op                                                        //                                                           Op Description                                       Stack (out)                                                                                             X stack                                             Source code                                                                                          Source line

#pragma version 10

// examples.arc_28.contract.EventEmitter.approval_program() -> uint64:
main_block@0:
    txn NumAppArgs                                           //                                                                                                                {txn}                                                                                                                                                       class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    //                                                       virtual: store tmp%0#0 to l-stack (no copy)                  tmp%0#0                                                                                                                                                      class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    //                                                       virtual: load tmp%0#0 from l-stack (no copy)                 tmp%0#0                                                                                                                                                      class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    bz main_bare_routing@6                                   //                                                                                                                                                                                                                                                                            class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    // Implicit fall through to main_abi_routing@1           //                                                                                                                                                                                                                                                                            class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11

main_abi_routing@1:
    txna ApplicationArgs 0                                   //                                                                                                                {txna}                                                                                                                                                      class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    //                                                       virtual: store tmp%1#0 to l-stack (no copy)                  tmp%1#0                                                                                                                                                      class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    method "emit_swapped(uint64,uint64)void"                 //                                                                                                                tmp%1#0,method<"emit_swapped(uint64,uint64)void">                                                                                                           class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    method "emit_ufixed(ufixed256x16,ufixed64x2)void"        //                                                                                                                tmp%1#0,method<"emit_swapped(uint64,uint64)void">,method<"emit_ufixed(ufixed256x16,ufixed64x2)void">                                                        class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    uncover 2                                                //                                                           load tmp%1#0 from l-stack (no copy)                  method<"emit_swapped(uint64,uint64)void">,method<"emit_ufixed(ufixed256x16,ufixed64x2)void">,tmp%1#0                                                        class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    match main_emit_swapped_route@2 main_emit_ufixed_route@3 //                                                                                                                                                                                                                                                                            class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    err // reject transaction                                //                                                                                                                                                                                                                                                                            class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11

main_emit_swapped_route@2:
    txn OnCompletion                                         //                                                                                                                {txn}                                                                                                                                                       arc4.abimethod                                                                                       arc_28/contract.py:12
    //                                                       virtual: store tmp%2#0 to l-stack (no copy)                  tmp%2#0                                                                                                                                                      arc4.abimethod                                      arc_28/contract.py:12
    //                                                       virtual: load tmp%2#0 from l-stack (no copy)                 tmp%2#0                                                                                                                                                      arc4.abimethod                                      arc_28/contract.py:12
    !                                                        //                                                                                                                {!}                                                                                                                                                         arc4.abimethod                                                                                       arc_28/contract.py:12
    //                                                       virtual: store tmp%3#0 to l-stack (no copy)                  tmp%3#0                                                                                                                                                      arc4.abimethod                                      arc_28/contract.py:12
    //                                                       virtual: load tmp%3#0 from l-stack (no copy)                 tmp%3#0                                                                                                                                                      arc4.abimethod                                      arc_28/contract.py:12
    assert // OnCompletion is NoOp                           //                                                                                                                                                                                                                                                                            arc4.abimethod                                                                                       arc_28/contract.py:12
    txn ApplicationID                                        //                                                                                                                {txn}                                                                                                                                                       arc4.abimethod                                                                                       arc_28/contract.py:12
    //                                                       virtual: store tmp%4#0 to l-stack (no copy)                  tmp%4#0                                                                                                                                                      arc4.abimethod                                      arc_28/contract.py:12
    //                                                       virtual: load tmp%4#0 from l-stack (no copy)                 tmp%4#0                                                                                                                                                      arc4.abimethod                                      arc_28/contract.py:12
    assert // is not creating                                //                                                                                                                                                                                                                                                                            arc4.abimethod                                                                                       arc_28/contract.py:12
    txna ApplicationArgs 1                                   //                                                                                                                {txna}                                                                                                                                                      class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    //                                                       virtual: store tmp%5#0 to l-stack (no copy)                  tmp%5#0                                                                                                                                                      class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    txna ApplicationArgs 2                                   //                                                                                                                tmp%5#0,{txna}                                                                                                                                              class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    //                                                       virtual: store tmp%6#0 to l-stack (no copy)                  tmp%5#0,tmp%6#0                                                                                                                                              class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    //                                                       virtual: load tmp%5#0 from l-stack (no copy)                 tmp%6#0,tmp%5#0                                                                                                                                              arc4.abimethod                                      arc_28/contract.py:12
    //                                                       virtual: load tmp%6#0 from l-stack (no copy)                 tmp%5#0,tmp%6#0                                                                                                                                              arc4.abimethod                                      arc_28/contract.py:12
    callsub emit_swapped                                     //                                                                                                                                                                                                                                                                            arc4.abimethod                                                                                       arc_28/contract.py:12
    int 1                                                    //                                                                                                                1                                                                                                                                                           arc4.abimethod                                                                                       arc_28/contract.py:12
    return                                                   //                                                                                                                                                                                                                                                                            arc4.abimethod                                                                                       arc_28/contract.py:12

main_emit_ufixed_route@3:
    txn OnCompletion                                         //                                                                                                                {txn}                                                                                                                                                       arc4.abimethod()                                                                                     arc_28/contract.py:18
    //                                                       virtual: store tmp%7#0 to l-stack (no copy)                  tmp%7#0                                                                                                                                                      arc4.abimethod()                                    arc_28/contract.py:18
    //                                                       virtual: load tmp%7#0 from l-stack (no copy)                 tmp%7#0                                                                                                                                                      arc4.abimethod()                                    arc_28/contract.py:18
    !                                                        //                                                                                                                {!}                                                                                                                                                         arc4.abimethod()                                                                                     arc_28/contract.py:18
    //                                                       virtual: store tmp%8#0 to l-stack (no copy)                  tmp%8#0                                                                                                                                                      arc4.abimethod()                                    arc_28/contract.py:18
    //                                                       virtual: load tmp%8#0 from l-stack (no copy)                 tmp%8#0                                                                                                                                                      arc4.abimethod()                                    arc_28/contract.py:18
    assert // OnCompletion is NoOp                           //                                                                                                                                                                                                                                                                            arc4.abimethod()                                                                                     arc_28/contract.py:18
    txn ApplicationID                                        //                                                                                                                {txn}                                                                                                                                                       arc4.abimethod()                                                                                     arc_28/contract.py:18
    //                                                       virtual: store tmp%9#0 to l-stack (no copy)                  tmp%9#0                                                                                                                                                      arc4.abimethod()                                    arc_28/contract.py:18
    //                                                       virtual: load tmp%9#0 from l-stack (no copy)                 tmp%9#0                                                                                                                                                      arc4.abimethod()                                    arc_28/contract.py:18
    assert // is not creating                                //                                                                                                                                                                                                                                                                            arc4.abimethod()                                                                                     arc_28/contract.py:18
    txna ApplicationArgs 1                                   //                                                                                                                {txna}                                                                                                                                                      class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    //                                                       virtual: store tmp%10#0 to l-stack (no copy)                 tmp%10#0                                                                                                                                                     class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    txna ApplicationArgs 2                                   //                                                                                                                tmp%10#0,{txna}                                                                                                                                             class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    //                                                       virtual: store tmp%11#0 to l-stack (no copy)                 tmp%10#0,tmp%11#0                                                                                                                                            class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    //                                                       virtual: load tmp%10#0 from l-stack (no copy)                tmp%11#0,tmp%10#0                                                                                                                                            arc4.abimethod()                                    arc_28/contract.py:18
    //                                                       virtual: load tmp%11#0 from l-stack (no copy)                tmp%10#0,tmp%11#0                                                                                                                                            arc4.abimethod()                                    arc_28/contract.py:18
    callsub emit_ufixed                                      //                                                                                                                                                                                                                                                                            arc4.abimethod()                                                                                     arc_28/contract.py:18
    int 1                                                    //                                                                                                                1                                                                                                                                                           arc4.abimethod()                                                                                     arc_28/contract.py:18
    return                                                   //                                                                                                                                                                                                                                                                            arc4.abimethod()                                                                                     arc_28/contract.py:18

main_bare_routing@6:
    txn OnCompletion                                         //                                                                                                                {txn}                                                                                                                                                       class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    //                                                       virtual: store tmp%12#0 to l-stack (no copy)                 tmp%12#0                                                                                                                                                     class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    //                                                       virtual: load tmp%12#0 from l-stack (no copy)                tmp%12#0                                                                                                                                                     class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    !                                                        //                                                                                                                {!}                                                                                                                                                         class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    //                                                       virtual: store not%tmp%12#0 to l-stack (no copy)             not%tmp%12#0                                                                                                                                                 class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    //                                                       virtual: load not%tmp%12#0 from l-stack (no copy)            not%tmp%12#0                                                                                                                                                 class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    assert // reject transaction                             //                                                                                                                                                                                                                                                                            class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    txn ApplicationID                                        //                                                                                                                {txn}                                                                                                                                                       class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    //                                                       virtual: store tmp%13#0 to l-stack (no copy)                 tmp%13#0                                                                                                                                                     class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    //                                                       virtual: load tmp%13#0 from l-stack (no copy)                tmp%13#0                                                                                                                                                     class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    !                                                        //                                                                                                                {!}                                                                                                                                                         class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    //                                                       virtual: store tmp%14#0 to l-stack (no copy)                 tmp%14#0                                                                                                                                                     class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    //                                                       virtual: load tmp%14#0 from l-stack (no copy)                tmp%14#0                                                                                                                                                     class EventEmitter(ARC4Contract):                   arc_28/contract.py:11
    assert // is creating                                    //                                                                                                                                                                                                                                                                            class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    int 1                                                    //                                                                                                                1                                                                                                                                                           class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11
    return                                                   //                                                                                                                                                                                                                                                                            class EventEmitter(ARC4Contract):                                                                    arc_28/contract.py:11


// examples.arc_28.contract.EventEmitter.emit_swapped(a: bytes, b: bytes) -> void:
emit_swapped:
    proto 2 0                                                //                                                                                                                (𝕡) a#0,b#0 |                                                                                                                                               @arc4.abimethod\ndef emit_swapped(self, a: arc4.UInt64, b: arc4.UInt64) -> None:                     arc_28/contract.py:12-13

emit_swapped_block@0:
    frame_dig -1                                             //                                                           load b#0 from parameters                             (𝕡) a#0,b#0 | b#0                                                                                                                                           Swapped(b, a)                                                                                        arc_28/contract.py:14
    frame_dig -2                                             //                                                           load a#0 from parameters                             (𝕡) a#0,b#0 | b#0,a#0                                                                                                                                       Swapped(b, a)                                                                                        arc_28/contract.py:14
    concat                                                   //                                                                                                                (𝕡) a#0,b#0 | {concat}                                                                                                                                      Swapped(b, a)                                                                                        arc_28/contract.py:14
    //                                                       virtual: store encoded_tuple_buffer%2#0 to l-stack (no copy) (𝕡) a#0,b#0 | encoded_tuple_buffer%2#0                                                                                                                       Swapped(b, a)                                       arc_28/contract.py:14
    method "Swapped(uint64,uint64)"                          //                                                                                                                (𝕡) a#0,b#0 | encoded_tuple_buffer%2#0,method<"Swapped(uint64,uint64)">                                                                                     arc4.emit(Swapped(b, a))                                                                             arc_28/contract.py:14
    uncover 1                                                //                                                           load encoded_tuple_buffer%2#0 from l-stack (no copy) (𝕡) a#0,b#0 | method<"Swapped(uint64,uint64)">,encoded_tuple_buffer%2#0                                                                                     arc4.emit(Swapped(b, a))                                                                             arc_28/contract.py:14
    concat                                                   //                                                                                                                (𝕡) a#0,b#0 | {concat}                                                                                                                                      arc4.emit(Swapped(b, a))                                                                             arc_28/contract.py:14
    //                                                       virtual: store tmp%0#0 to l-stack (no copy)                  (𝕡) a#0,b#0 | tmp%0#0                                                                                                                                        arc4.emit(Swapped(b, a))                            arc_28/contract.py:14
    dup                                                      //                                                           load tmp%0#0 from l-stack (copy)                     (𝕡) a#0,b#0 | tmp%0#0,tmp%0#0                                                                                                                               arc4.emit(Swapped(b, a))                                                                             arc_28/contract.py:14
    log                                                      //                                                                                                                (𝕡) a#0,b#0 | tmp%0#0                                                                                                                                       arc4.emit(Swapped(b, a))                                                                             arc_28/contract.py:14
    dup                                                      //                                                           load tmp%0#0 from l-stack (copy)                     (𝕡) a#0,b#0 | tmp%0#0,tmp%0#0                                                                                                                               arc4.emit("Swapped(uint64,uint64)", b, a)                                                            arc_28/contract.py:15
    log                                                      //                                                                                                                (𝕡) a#0,b#0 | tmp%0#0                                                                                                                                       arc4.emit("Swapped(uint64,uint64)", b, a)                                                            arc_28/contract.py:15
    //                                                       virtual: load tmp%0#0 from l-stack (no copy)                 (𝕡) a#0,b#0 | tmp%0#0                                                                                                                                        arc4.emit("Swapped", b, a)                          arc_28/contract.py:16
    log                                                      //                                                                                                                (𝕡) a#0,b#0 |                                                                                                                                               arc4.emit("Swapped", b, a)                                                                           arc_28/contract.py:16
    retsub                                                   //


// examples.arc_28.contract.EventEmitter.emit_ufixed(a: bytes, b: bytes) -> void:
emit_ufixed:
    proto 2 0                                                //                                                                                                                (𝕡) a#0,b#0 |                                                                                                                                               @arc4.abimethod()\ndef emit_ufixed(\nself,\na: arc4.BigUFixedNxM[typing.Literal[256], typing.Lite... arc_28/contract.py:18-23

emit_ufixed_block@0:
    frame_dig -2                                             //                                                           load a#0 from parameters                             (𝕡) a#0,b#0 | a#0                                                                                                                                           arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)                                                  arc_28/contract.py:24
    frame_dig -1                                             //                                                           load b#0 from parameters                             (𝕡) a#0,b#0 | a#0,b#0                                                                                                                                       arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)                                                  arc_28/contract.py:24
    concat                                                   //                                                                                                                (𝕡) a#0,b#0 | {concat}                                                                                                                                      arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)                                                  arc_28/contract.py:24
    //                                                       virtual: store encoded_tuple_buffer%2#0 to l-stack (no copy) (𝕡) a#0,b#0 | encoded_tuple_buffer%2#0                                                                                                                       arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b) arc_28/contract.py:24
    method "AnEvent(ufixed256x16,ufixed64x2)"                //                                                                                                                (𝕡) a#0,b#0 | encoded_tuple_buffer%2#0,method<"AnEvent(ufixed256x16,ufixed64x2)">                                                                           arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)                                                  arc_28/contract.py:24
    uncover 1                                                //                                                           load encoded_tuple_buffer%2#0 from l-stack (no copy) (𝕡) a#0,b#0 | method<"AnEvent(ufixed256x16,ufixed64x2)">,encoded_tuple_buffer%2#0                                                                           arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)                                                  arc_28/contract.py:24
    concat                                                   //                                                                                                                (𝕡) a#0,b#0 | {concat}                                                                                                                                      arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)                                                  arc_28/contract.py:24
    //                                                       virtual: store tmp%0#0 to l-stack (no copy)                  (𝕡) a#0,b#0 | tmp%0#0                                                                                                                                        arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b) arc_28/contract.py:24
    //                                                       virtual: load tmp%0#0 from l-stack (no copy)                 (𝕡) a#0,b#0 | tmp%0#0                                                                                                                                        arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b) arc_28/contract.py:24
    log                                                      //                                                                                                                (𝕡) a#0,b#0 |                                                                                                                                               arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)                                                  arc_28/contract.py:24
    retsub                                                   //

