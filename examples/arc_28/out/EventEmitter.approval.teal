#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    txn ApplicationID
    !
    txn OnCompletion
    pushint 1 // 1
    shl
    +
    switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

create_NoOp:
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    txn NumAppArgs
    !
    return // on error: this contract does not implement the given ABI method for create NoOp

call_NoOp:
    // arc_28/contract.py:11
    // class EventEmitter(ARC4Contract):
    pushbytess 0x0a9542cd 0x71a3151f // method "emit_swapped(uint64,uint64)void", method "emit_ufixed(ufixed256x16,ufixed64x2)void"
    txna ApplicationArgs 0
    match emit_swapped emit_ufixed
    err // this contract does not implement the given ABI method for call NoOp


// examples.arc_28.contract.EventEmitter.emit_swapped[routing]() -> void:
emit_swapped:
    // arc_28/contract.py:12
    // @arc4.abimethod
    txna ApplicationArgs 2
    txna ApplicationArgs 1
    // arc_28/contract.py:14
    // arc4.emit(Swapped(b, a))
    concat
    pushbytes 0x1ccbd925 // method "Swapped(uint64,uint64)"
    swap
    concat
    dup
    log
    // arc_28/contract.py:15
    // arc4.emit("Swapped(uint64,uint64)", b, a)
    dup
    log
    // arc_28/contract.py:16
    // arc4.emit("Swapped", b, a)
    log
    // arc_28/contract.py:12
    // @arc4.abimethod
    pushint 1 // 1
    return


// examples.arc_28.contract.EventEmitter.emit_ufixed[routing]() -> void:
emit_ufixed:
    // arc_28/contract.py:18
    // @arc4.abimethod()
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    // arc_28/contract.py:24
    // arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)
    concat
    pushbytes 0x7389b1ba // method "AnEvent(ufixed256x16,ufixed64x2)"
    swap
    concat
    log
    // arc_28/contract.py:18
    // @arc4.abimethod()
    pushint 1 // 1
    return
