// Op                                                                      Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txn NumAppArgs                                                     tmp%0#1
        l-load tmp%0#1 0                                                   tmp%0#1
        bz main___algopy_default_create@10 ; b main_abi_routing@2

    main_abi_routing@2:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txn OnCompletion                                                   tmp%2#0
        l-load tmp%2#0 0                                                   tmp%2#0
        !                                                                  tmp%3#0
        l-load tmp%3#0 0                                                   tmp%3#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                  tmp%4#0
        l-load tmp%4#0 0                                                   tmp%4#0
        assert
        txna ApplicationArgs 0                                             tmp%5#0
        method emit_swapped(uint64,uint64)void                             tmp%5#0,Method(emit_swapped(uint64,uint64)void)
        method emit_ufixed(ufixed256x16,ufixed64x2)void                    tmp%5#0,Method(emit_swapped(uint64,uint64)void),Method(emit_ufixed(ufixed256x16,ufixed64x2)void)
        l-load tmp%5#0 2                                                   Method(emit_swapped(uint64,uint64)void),Method(emit_ufixed(ufixed256x16,ufixed64x2)void),tmp%5#0
        match main_emit_swapped_route@4 main_emit_ufixed_route@5 ; b main_after_if_else@9 

    main_emit_swapped_route@4:
        // arc_28/contract.py:12
        // @arc4.abimethod
        callsub emit_swapped
        b main_after_if_else@9

    main_emit_ufixed_route@5:
        // arc_28/contract.py:18
        // @arc4.abimethod()
        callsub emit_ufixed
        b main_after_if_else@9

    main_after_if_else@9:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        err

    main___algopy_default_create@10:
        txn OnCompletion                                                   tmp%6#0
        l-load tmp%6#0 0                                                   tmp%6#0
        !                                                                  tmp%7#0
        txn ApplicationID                                                  tmp%7#0,tmp%8#0
        l-load tmp%8#0 0                                                   tmp%7#0,tmp%8#0
        !                                                                  tmp%7#0,tmp%9#0
        l-load tmp%7#0 1                                                   tmp%9#0,tmp%7#0
        l-load tmp%9#0 1                                                   tmp%7#0,tmp%9#0
        &&                                                                 tmp%10#0
        l-load tmp%10#0 0                                                  tmp%10#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                              1
        return


// examples.arc_28.contract.EventEmitter.emit_swapped[routing]() -> void:
subroutine emit_swapped:
    emit_swapped_block@0:
        // arc_28/contract.py:12
        // @arc4.abimethod
        txna ApplicationArgs 1                                             a#0
        txna ApplicationArgs 2                                             a#0,b#0
        // arc_28/contract.py:14
        // arc4.emit(Swapped(b, a))
        l-load b#0 0                                                       a#0,b#0
        l-load a#0 1                                                       b#0,a#0
        concat                                                             aggregate%head%1#0
        method Swapped(uint64,uint64)                                      aggregate%head%1#0,Method(Swapped(uint64,uint64))
        l-load aggregate%head%1#0 1                                        Method(Swapped(uint64,uint64)),aggregate%head%1#0
        concat                                                             event%0#0
        l-load-copy event%0#0 0                                            event%0#0,event%0#0 (copy)
        log                                                                event%0#0
        // arc_28/contract.py:15
        // arc4.emit("Swapped(uint64,uint64)", b, a)
        l-load-copy event%0#0 0                                            event%0#0,event%0#0 (copy)
        log                                                                event%0#0
        // arc_28/contract.py:16
        // arc4.emit("Swapped", b, a)
        l-load event%0#0 0                                                 event%0#0
        log
        // arc_28/contract.py:12
        // @arc4.abimethod
        int 1                                                              1
        return


// examples.arc_28.contract.EventEmitter.emit_ufixed[routing]() -> void:
subroutine emit_ufixed:
    emit_ufixed_block@0:
        // arc_28/contract.py:18
        // @arc4.abimethod()
        txna ApplicationArgs 1                                             a#0
        txna ApplicationArgs 2                                             a#0,b#0
        // arc_28/contract.py:24
        // arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)
        l-load a#0 1                                                       b#0,a#0
        l-load b#0 1                                                       a#0,b#0
        concat                                                             aggregate%head%1#0
        method AnEvent(ufixed256x16,ufixed64x2)                            aggregate%head%1#0,Method(AnEvent(ufixed256x16,ufixed64x2))
        l-load aggregate%head%1#0 1                                        Method(AnEvent(ufixed256x16,ufixed64x2)),aggregate%head%1#0
        concat                                                             event%0#0
        l-load event%0#0 0                                                 event%0#0
        log
        // arc_28/contract.py:18
        // @arc4.abimethod()
        int 1                                                              1
        return


