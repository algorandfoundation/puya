// Op                                                                                   Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    block@0:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txn ApplicationID                                                               tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                  tmp%0#1
        !                                                                               tmp%1#0
        v-store tmp%1#0
        txn OnCompletion                                                                tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                  tmp%2#0
        int 1                                                                           tmp%2#0,1
        shl                                                                             tmp%3#0
        v-store tmp%3#0
        v-load tmp%1#0                                                                  tmp%1#0
        v-load tmp%3#0                                                                  tmp%1#0,tmp%3#0
        +                                                                               tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                  tmp%4#0
        switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED ; b *NOT_IMPLEMENTED 

    call_NoOp:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txna ApplicationArgs 0                                                          tmp%5#0
        v-store tmp%5#0
        method emit_swapped(uint64,uint64)void                                          Method(emit_swapped(uint64,uint64)void)
        method emit_ufixed(ufixed256x16,ufixed64x2)void                                 Method(emit_swapped(uint64,uint64)void),Method(emit_ufixed(ufixed256x16,ufixed64x2)void)
        v-load tmp%5#0                                                                  Method(emit_swapped(uint64,uint64)void),Method(emit_ufixed(ufixed256x16,ufixed64x2)void),tmp%5#0
        match emit_swapped_route@3 emit_ufixed_route@4 ; b switch_case_next@6

    emit_swapped_route@3:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        callsub emit_swapped
        b switch_case_next@6

    emit_ufixed_route@4:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        callsub emit_ufixed
        b switch_case_next@6

    switch_case_next@6:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        err // this contract does not implement the given ABI method for call NoOp

    create_NoOp:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txn NumAppArgs                                                                  tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                  tmp%6#0
        !                                                                               tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                  tmp%7#0
        assert // this contract does not implement the given ABI method for create NoOp
        int 1                                                                           1
        return

    *NOT_IMPLEMENTED:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID? 


// examples.arc_28.contract.EventEmitter.emit_swapped[routing]() -> void:
subroutine emit_swapped:
    emit_swapped_block@0:
        // arc_28/contract.py:12
        // @arc4.abimethod
        txna ApplicationArgs 1                                                          a#0
        v-store a#0
        txna ApplicationArgs 2                                                          b#0
        v-store b#0
        // arc_28/contract.py:14
        // arc4.emit(Swapped(b, a))
        v-load b#0                                                                      b#0
        v-load a#0                                                                      b#0,a#0
        concat                                                                          aggregate%head%1#0
        v-store aggregate%head%1#0
        method Swapped(uint64,uint64)                                                   Method(Swapped(uint64,uint64))
        v-load aggregate%head%1#0                                                       Method(Swapped(uint64,uint64)),aggregate%head%1#0
        concat                                                                          event%0#0
        v-store event%0#0
        v-load event%0#0                                                                event%0#0
        log
        // arc_28/contract.py:15
        // arc4.emit("Swapped(uint64,uint64)", b, a)
        v-load event%0#0                                                                event%0#0
        log
        // arc_28/contract.py:16
        // arc4.emit("Swapped", b, a)
        v-load event%0#0                                                                event%0#0
        log
        // arc_28/contract.py:12
        // @arc4.abimethod
        int 1                                                                           1
        return


// examples.arc_28.contract.EventEmitter.emit_ufixed[routing]() -> void:
subroutine emit_ufixed:
    emit_ufixed_block@0:
        // arc_28/contract.py:18
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                          a#0
        v-store a#0
        txna ApplicationArgs 2                                                          b#0
        v-store b#0
        // arc_28/contract.py:24
        // arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)
        v-load a#0                                                                      a#0
        v-load b#0                                                                      a#0,b#0
        concat                                                                          aggregate%head%1#0
        v-store aggregate%head%1#0
        method AnEvent(ufixed256x16,ufixed64x2)                                         Method(AnEvent(ufixed256x16,ufixed64x2))
        v-load aggregate%head%1#0                                                       Method(AnEvent(ufixed256x16,ufixed64x2)),aggregate%head%1#0
        concat                                                                          event%0#0
        v-store event%0#0
        v-load event%0#0                                                                event%0#0
        log
        // arc_28/contract.py:18
        // @arc4.abimethod()
        int 1                                                                           1
        return


