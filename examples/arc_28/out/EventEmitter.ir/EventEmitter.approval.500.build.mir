// Op                                                                      Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txn NumAppArgs                                                     tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                     tmp%0#1
        bz main___algopy_default_create@9 ; b main_abi_routing@2

    main_abi_routing@2:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txn OnCompletion                                                   tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                     tmp%2#0
        !                                                                  tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                     tmp%3#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                  tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                     tmp%4#0
        assert
        txna ApplicationArgs 0                                             tmp%6#0
        v-store tmp%6#0
        method emit_swapped(uint64,uint64)void                             Method(emit_swapped(uint64,uint64)void)
        method emit_ufixed(ufixed256x16,ufixed64x2)void                    Method(emit_swapped(uint64,uint64)void),Method(emit_ufixed(ufixed256x16,ufixed64x2)void)
        v-load tmp%6#0                                                     Method(emit_swapped(uint64,uint64)void),Method(emit_ufixed(ufixed256x16,ufixed64x2)void),tmp%6#0
        match main_emit_swapped_route@4 main_emit_ufixed_route@5 ; b main_after_if_else@8 

    main_emit_swapped_route@4:
        // arc_28/contract.py:12
        // @arc4.abimethod
        callsub emit_swapped
        b main_after_if_else@8

    main_emit_ufixed_route@5:
        // arc_28/contract.py:18
        // @arc4.abimethod()
        callsub emit_ufixed
        b main_after_if_else@8

    main_after_if_else@8:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        err

    main___algopy_default_create@9:
        txn OnCompletion                                                   tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                     tmp%7#0
        !                                                                  tmp%8#0
        v-store tmp%8#0
        txn ApplicationID                                                  tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                     tmp%9#0
        !                                                                  tmp%10#0
        v-store tmp%10#0
        v-load tmp%8#0                                                     tmp%8#0
        v-load tmp%10#0                                                    tmp%8#0,tmp%10#0
        &&                                                                 tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                    tmp%11#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                              1
        return


// examples.arc_28.contract.EventEmitter.emit_swapped[routing]() -> void:
subroutine emit_swapped:
    emit_swapped_block@0:
        // arc_28/contract.py:12
        // @arc4.abimethod
        txna ApplicationArgs 1                                             a#0
        v-store a#0
        v-load a#0                                                         a#0
        len                                                                len%0#0
        v-store len%0#0
        v-load len%0#0                                                     len%0#0
        int 8                                                              len%0#0,8
        ==                                                                 eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                      eq%0#0
        assert // invalid number of bytes for arc4.uint64
        txna ApplicationArgs 2                                             b#0
        v-store b#0
        v-load b#0                                                         b#0
        len                                                                len%1#0
        v-store len%1#0
        v-load len%1#0                                                     len%1#0
        int 8                                                              len%1#0,8
        ==                                                                 eq%1#0
        v-store eq%1#0
        v-load eq%1#0                                                      eq%1#0
        assert // invalid number of bytes for arc4.uint64
        // arc_28/contract.py:14
        // arc4.emit(Swapped(b, a))
        v-load b#0                                                         b#0
        v-load a#0                                                         b#0,a#0
        concat                                                             aggregate%head%1#0
        v-store aggregate%head%1#0
        method Swapped(uint64,uint64)                                      Method(Swapped(uint64,uint64))
        v-load aggregate%head%1#0                                          Method(Swapped(uint64,uint64)),aggregate%head%1#0
        concat                                                             event%0#0
        v-store event%0#0
        v-load event%0#0                                                   event%0#0
        log
        // arc_28/contract.py:15
        // arc4.emit("Swapped(uint64,uint64)", b, a)
        v-load event%0#0                                                   event%0#0
        log
        // arc_28/contract.py:16
        // arc4.emit("Swapped", b, a)
        v-load event%0#0                                                   event%0#0
        log
        // arc_28/contract.py:12
        // @arc4.abimethod
        int 1                                                              1
        return


// examples.arc_28.contract.EventEmitter.emit_ufixed[routing]() -> void:
subroutine emit_ufixed:
    emit_ufixed_block@0:
        // arc_28/contract.py:18
        // @arc4.abimethod()
        txna ApplicationArgs 1                                             a#0
        v-store a#0
        v-load a#0                                                         a#0
        len                                                                len%0#0
        v-store len%0#0
        v-load len%0#0                                                     len%0#0
        int 32                                                             len%0#0,32
        ==                                                                 eq%0#0
        v-store eq%0#0
        v-load eq%0#0                                                      eq%0#0
        assert // invalid number of bytes for arc4.ufixed256x16
        txna ApplicationArgs 2                                             b#0
        v-store b#0
        v-load b#0                                                         b#0
        len                                                                len%1#0
        v-store len%1#0
        v-load len%1#0                                                     len%1#0
        int 8                                                              len%1#0,8
        ==                                                                 eq%1#0
        v-store eq%1#0
        v-load eq%1#0                                                      eq%1#0
        assert // invalid number of bytes for arc4.ufixed64x2
        // arc_28/contract.py:24
        // arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)
        v-load a#0                                                         a#0
        v-load b#0                                                         a#0,b#0
        concat                                                             aggregate%head%1#0
        v-store aggregate%head%1#0
        method AnEvent(ufixed256x16,ufixed64x2)                            Method(AnEvent(ufixed256x16,ufixed64x2))
        v-load aggregate%head%1#0                                          Method(AnEvent(ufixed256x16,ufixed64x2)),aggregate%head%1#0
        concat                                                             event%0#0
        v-store event%0#0
        v-load event%0#0                                                   event%0#0
        log
        // arc_28/contract.py:18
        // @arc4.abimethod()
        int 1                                                              1
        return


