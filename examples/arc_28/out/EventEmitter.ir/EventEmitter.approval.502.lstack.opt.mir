// Op                                                                                 Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txn NumAppArgs                                                                tmp%0#1
        bz main_bare_routing@7 ; b main_abi_routing@2

    main_abi_routing@2:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txna ApplicationArgs 0                                                        tmp%2#0
        method emit_swapped(uint64,uint64)void                                        tmp%2#0,Method(emit_swapped(uint64,uint64)void)
        method emit_ufixed(ufixed256x16,ufixed64x2)void                               tmp%2#0,Method(emit_swapped(uint64,uint64)void),Method(emit_ufixed(ufixed256x16,ufixed64x2)void)
        l-load tmp%2#0 2                                                              Method(emit_swapped(uint64,uint64)void),Method(emit_ufixed(ufixed256x16,ufixed64x2)void),tmp%2#0
        match main_emit_swapped_route@3 main_emit_ufixed_route@4 ; b main_after_if_else@11 

    main_emit_swapped_route@3:
        // arc_28/contract.py:12
        // @arc4.abimethod
        txn OnCompletion                                                              tmp%3#0
        !                                                                             tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%5#0
        assert // can only call when not creating
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txna ApplicationArgs 1                                                        reinterpret_Encoded(uint64)%0#0
        txna ApplicationArgs 2                                                        reinterpret_Encoded(uint64)%0#0,reinterpret_Encoded(uint64)%1#0
        // arc_28/contract.py:12
        // @arc4.abimethod
        l-load reinterpret_Encoded(uint64)%0#0 1                                      reinterpret_Encoded(uint64)%1#0,reinterpret_Encoded(uint64)%0#0
        l-load reinterpret_Encoded(uint64)%1#0 1                                      reinterpret_Encoded(uint64)%0#0,reinterpret_Encoded(uint64)%1#0
        callsub emit_swapped
        int 1                                                                         examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_examples.arc_28.contract.EventEmitter.__puya_arc4_router__@12 

    main_emit_ufixed_route@4:
        // arc_28/contract.py:18
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%7#0
        !                                                                             tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%9#0
        assert // can only call when not creating
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txna ApplicationArgs 1                                                        reinterpret_Encoded(uint256)%0#0
        txna ApplicationArgs 2                                                        reinterpret_Encoded(uint256)%0#0,reinterpret_Encoded(uint64)%2#0
        // arc_28/contract.py:18
        // @arc4.abimethod()
        l-load reinterpret_Encoded(uint256)%0#0 1                                     reinterpret_Encoded(uint64)%2#0,reinterpret_Encoded(uint256)%0#0
        l-load reinterpret_Encoded(uint64)%2#0 1                                      reinterpret_Encoded(uint256)%0#0,reinterpret_Encoded(uint64)%2#0
        callsub emit_ufixed
        int 1                                                                         examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_examples.arc_28.contract.EventEmitter.__puya_arc4_router__@12 

    main_bare_routing@7:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        txn OnCompletion                                                              tmp%11#0
        bz main___algopy_default_create@8 ; b main_after_if_else@11

    main___algopy_default_create@8:
        txn ApplicationID                                                             tmp%12#0
        !                                                                             tmp%13#0
        assert // can only call when creating
        int 1                                                                         examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_examples.arc_28.contract.EventEmitter.__puya_arc4_router__@12 

    main_after_if_else@11:
        // arc_28/contract.py:11
        // class EventEmitter(ARC4Contract):
        int 0                                                                         examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_examples.arc_28.contract.EventEmitter.__puya_arc4_router__@12 

    main_after_inlined_examples.arc_28.contract.EventEmitter.__puya_arc4_router__@12:
        v-load tmp%0#0                                                                tmp%0#0
        return


// examples.arc_28.contract.EventEmitter.emit_swapped(a: bytes, b: bytes) -> void:
subroutine emit_swapped:
    emit_swapped_block@0:                                                             (洧도) a#0,b#0 |
        // arc_28/contract.py:14
        // arc4.emit(Swapped(b, a))
        p-load b#0                                                                    (洧도) a#0,b#0 | b#0 (copy)
        p-load a#0                                                                    (洧도) a#0,b#0 | b#0 (copy),a#0 (copy)
        concat                                                                        (洧도) a#0,b#0 | aggregate%head%1#1
        method Swapped(uint64,uint64)                                                 (洧도) a#0,b#0 | aggregate%head%1#1,Method(Swapped(uint64,uint64))
        l-load aggregate%head%1#1 1                                                   (洧도) a#0,b#0 | Method(Swapped(uint64,uint64)),aggregate%head%1#1
        concat                                                                        (洧도) a#0,b#0 | event%0#0
        l-load-copy event%0#0 0                                                       (洧도) a#0,b#0 | event%0#0,event%0#0 (copy)
        log                                                                           (洧도) a#0,b#0 | event%0#0
        // arc_28/contract.py:15
        // arc4.emit("Swapped(uint64,uint64)", b, a)
        l-load-copy event%0#0 0                                                       (洧도) a#0,b#0 | event%0#0,event%0#0 (copy)
        log                                                                           (洧도) a#0,b#0 | event%0#0
        // arc_28/contract.py:16
        // arc4.emit("Swapped", b, a)
        l-load event%0#0 0                                                            (洧도) a#0,b#0 | event%0#0
        log                                                                           (洧도) a#0,b#0 |
        retsub


// examples.arc_28.contract.EventEmitter.emit_ufixed(a: bytes, b: bytes) -> void:
subroutine emit_ufixed:
    emit_ufixed_block@0:                                                              (洧도) a#0,b#0 |
        // arc_28/contract.py:24
        // arc4.emit("AnEvent(ufixed256x16,ufixed64x2)", a, b)
        p-load a#0                                                                    (洧도) a#0,b#0 | a#0 (copy)
        p-load b#0                                                                    (洧도) a#0,b#0 | a#0 (copy),b#0 (copy)
        concat                                                                        (洧도) a#0,b#0 | aggregate%head%1#1
        method AnEvent(ufixed256x16,ufixed64x2)                                       (洧도) a#0,b#0 | aggregate%head%1#1,Method(AnEvent(ufixed256x16,ufixed64x2))
        l-load aggregate%head%1#1 1                                                   (洧도) a#0,b#0 | Method(AnEvent(ufixed256x16,ufixed64x2)),aggregate%head%1#1
        concat                                                                        (洧도) a#0,b#0 | event%0#0
        log                                                                           (洧도) a#0,b#0 |
        retsub


