{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAUA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;;;;;;;;AAAA;;;;;;;AAOK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAPL;;;AAAA;;;AAOK;;;AAAA;;;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADL;;;AAAA;;;AACK;;;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAEkB;AAAA;;AAAA;AAAA;;AAAA;AAAV;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAER;;;;;;AAMQ;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x 0x1ccbd925"
    },
    "13": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "14": {
      "op": "b main_block@0"
    },
    "17": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "20": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "22": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "23": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "24": {
      "op": "bz main_bare_routing@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "27": {
      "op": "b main_abi_routing@2"
    },
    "30": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "33": {
      "op": "pushbytes 0x0a9542cd // method \"emit_swapped(uint64,uint64)void\"",
      "defined_out": [
        "Method(emit_swapped(uint64,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(emit_swapped(uint64,uint64)void)"
      ]
    },
    "39": {
      "op": "pushbytes 0x71a3151f // method \"emit_ufixed(ufixed256x16,ufixed64x2)void\"",
      "defined_out": [
        "Method(emit_swapped(uint64,uint64)void)",
        "Method(emit_ufixed(ufixed256x16,ufixed64x2)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(emit_swapped(uint64,uint64)void)",
        "Method(emit_ufixed(ufixed256x16,ufixed64x2)void)"
      ]
    },
    "45": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "Method(emit_swapped(uint64,uint64)void)",
        "Method(emit_ufixed(ufixed256x16,ufixed64x2)void)",
        "tmp%2#0"
      ]
    },
    "47": {
      "op": "match main_emit_swapped_route@3 main_emit_ufixed_route@4",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "53": {
      "op": "b main_switch_case_default@5"
    },
    "56": {
      "block": "main_switch_case_default@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@6"
    },
    "59": {
      "block": "main_switch_case_next@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@11"
    },
    "62": {
      "block": "main_after_if_else@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0"
      ]
    },
    "63": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "65": {
      "op": "b main_after_inlined_examples.arc_28.contract.EventEmitter.__puya_arc4_router__@12"
    },
    "68": {
      "block": "main_after_inlined_examples.arc_28.contract.EventEmitter.__puya_arc4_router__@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "69": {
      "block": "main_emit_ufixed_route@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "71": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "NoOp"
      ]
    },
    "72": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "73": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "74": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "76": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0",
        "0"
      ]
    },
    "77": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "78": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "79": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint256)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint256)%0#0"
      ]
    },
    "82": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint256)%0#0",
        "reinterpret_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint256)%0#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "85": {
      "callsub": "examples.arc_28.contract.EventEmitter.emit_ufixed",
      "op": "callsub emit_ufixed",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "88": {
      "op": "intc_1 // 1",
      "defined_out": [
        "examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0"
      ]
    },
    "89": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "91": {
      "op": "b main_after_inlined_examples.arc_28.contract.EventEmitter.__puya_arc4_router__@12"
    },
    "94": {
      "block": "main_emit_swapped_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "96": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "97": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "98": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "99": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "101": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "102": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "103": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "104": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "107": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "110": {
      "callsub": "examples.arc_28.contract.EventEmitter.emit_swapped",
      "op": "callsub emit_swapped",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "113": {
      "op": "intc_1 // 1",
      "defined_out": [
        "examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0"
      ]
    },
    "114": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "116": {
      "op": "b main_after_inlined_examples.arc_28.contract.EventEmitter.__puya_arc4_router__@12"
    },
    "119": {
      "block": "main_bare_routing@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "121": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "0"
      ]
    },
    "122": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%11#0"
      ]
    },
    "124": {
      "op": "match main___algopy_default_create@8",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "128": {
      "op": "b main_switch_case_default@9"
    },
    "131": {
      "block": "main_switch_case_default@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@10"
    },
    "134": {
      "block": "main_switch_case_next@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@11"
    },
    "137": {
      "block": "main___algopy_default_create@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "139": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0",
        "0"
      ]
    },
    "140": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "141": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "142": {
      "op": "b main_block@13"
    },
    "145": {
      "block": "main_block@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_examples.arc_28.contract.EventEmitter.__algopy_default_create@14"
    },
    "148": {
      "block": "main_after_inlined_examples.arc_28.contract.EventEmitter.__algopy_default_create@14",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "examples.arc_28.contract.EventEmitter.__puya_arc4_router__%0#0"
      ]
    },
    "149": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "151": {
      "op": "b main_after_inlined_examples.arc_28.contract.EventEmitter.__puya_arc4_router__@12"
    },
    "154": {
      "subroutine": "examples.arc_28.contract.EventEmitter.emit_swapped",
      "params": {
        "a#0": "bytes",
        "b#0": "bytes"
      },
      "block": "emit_swapped",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "157": {
      "op": "b emit_swapped_block@0"
    },
    "160": {
      "block": "emit_swapped_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "161": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x",
        "b#0 (copy)"
      ],
      "stack_out": [
        "0x",
        "b#0 (copy)"
      ]
    },
    "163": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "164": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "a#0 (copy)"
      ]
    },
    "166": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "167": {
      "op": "bytec_1 // method \"Swapped(uint64,uint64)\"",
      "defined_out": [
        "Method(Swapped(uint64,uint64))",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "Method(Swapped(uint64,uint64))"
      ]
    },
    "168": {
      "op": "uncover 1",
      "stack_out": [
        "Method(Swapped(uint64,uint64))",
        "tmp%0#0"
      ]
    },
    "170": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "171": {
      "op": "log",
      "stack_out": []
    },
    "172": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "173": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x",
        "b#0 (copy)"
      ]
    },
    "175": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0"
      ]
    },
    "176": {
      "op": "frame_dig -2",
      "stack_out": [
        "aggregate%head%2#0",
        "a#0 (copy)"
      ]
    },
    "178": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "179": {
      "op": "bytec_1 // method \"Swapped(uint64,uint64)\"",
      "stack_out": [
        "tmp%1#0",
        "Method(Swapped(uint64,uint64))"
      ]
    },
    "180": {
      "op": "uncover 1",
      "stack_out": [
        "Method(Swapped(uint64,uint64))",
        "tmp%1#0"
      ]
    },
    "182": {
      "op": "concat",
      "defined_out": [
        "event%1#0"
      ],
      "stack_out": [
        "event%1#0"
      ]
    },
    "183": {
      "op": "log",
      "stack_out": []
    },
    "184": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "185": {
      "op": "frame_dig -1",
      "stack_out": [
        "0x",
        "b#0 (copy)"
      ]
    },
    "187": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "aggregate%head%4#0"
      ]
    },
    "188": {
      "op": "frame_dig -2",
      "stack_out": [
        "aggregate%head%4#0",
        "a#0 (copy)"
      ]
    },
    "190": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "191": {
      "op": "bytec_1 // method \"Swapped(uint64,uint64)\"",
      "stack_out": [
        "tmp%2#0",
        "Method(Swapped(uint64,uint64))"
      ]
    },
    "192": {
      "op": "uncover 1",
      "stack_out": [
        "Method(Swapped(uint64,uint64))",
        "tmp%2#0"
      ]
    },
    "194": {
      "op": "concat",
      "defined_out": [
        "event%2#0"
      ],
      "stack_out": [
        "event%2#0"
      ]
    },
    "195": {
      "op": "log",
      "stack_out": []
    },
    "196": {
      "retsub": true,
      "op": "retsub"
    },
    "197": {
      "subroutine": "examples.arc_28.contract.EventEmitter.emit_ufixed",
      "params": {
        "a#0": "bytes",
        "b#0": "bytes"
      },
      "block": "emit_ufixed",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "200": {
      "op": "b emit_ufixed_block@0"
    },
    "203": {
      "block": "emit_ufixed_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "204": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x",
        "a#0 (copy)"
      ],
      "stack_out": [
        "0x",
        "a#0 (copy)"
      ]
    },
    "206": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "207": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%0#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "b#0 (copy)"
      ]
    },
    "209": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "210": {
      "op": "pushbytes 0x7389b1ba // method \"AnEvent(ufixed256x16,ufixed64x2)\"",
      "defined_out": [
        "Method(AnEvent(ufixed256x16,ufixed64x2))",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "Method(AnEvent(ufixed256x16,ufixed64x2))"
      ]
    },
    "216": {
      "op": "uncover 1",
      "stack_out": [
        "Method(AnEvent(ufixed256x16,ufixed64x2))",
        "tmp%0#0"
      ]
    },
    "218": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "219": {
      "op": "log",
      "stack_out": []
    },
    "220": {
      "retsub": true,
      "op": "retsub"
    }
  }
}