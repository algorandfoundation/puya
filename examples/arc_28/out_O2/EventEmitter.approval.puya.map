{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";AAUA;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;AAOK;;AAAA;AAAA;AAAA;;AAAA;AAPL;;;AAAA;;;AAaQ;AAAA;;;;;;AAAA;AAAA;AAAA;AANH;;;AANA;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;;;AAGkB;AAAV;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAJH;;;AADL;;AAAA;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3": {
      "op": "bz main_bare_routing@7",
      "stack_out": []
    },
    "6": {
      "op": "pushbytess 0x0a9542cd 0x71a3151f // method \"emit_swapped(uint64,uint64)void\", method \"emit_ufixed(ufixed256x16,ufixed64x2)void\"",
      "defined_out": [
        "Method(emit_swapped(uint64,uint64)void)",
        "Method(emit_ufixed(ufixed256x16,ufixed64x2)void)"
      ],
      "stack_out": [
        "Method(emit_swapped(uint64,uint64)void)",
        "Method(emit_ufixed(ufixed256x16,ufixed64x2)void)"
      ]
    },
    "18": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(emit_swapped(uint64,uint64)void)",
        "Method(emit_ufixed(ufixed256x16,ufixed64x2)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(emit_swapped(uint64,uint64)void)",
        "Method(emit_ufixed(ufixed256x16,ufixed64x2)void)",
        "tmp%2#0"
      ]
    },
    "21": {
      "op": "match main_emit_swapped_route@3 main_emit_ufixed_route@4",
      "stack_out": []
    },
    "27": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "28": {
      "block": "main_emit_ufixed_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "30": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "31": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "32": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "34": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "35": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "38": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "41": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%3#0"
      ]
    },
    "42": {
      "op": "pushbytes 0x7389b1ba // method \"AnEvent(ufixed256x16,ufixed64x2)\"",
      "defined_out": [
        "Method(AnEvent(ufixed256x16,ufixed64x2))",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%3#0",
        "Method(AnEvent(ufixed256x16,ufixed64x2))"
      ]
    },
    "48": {
      "op": "swap",
      "stack_out": [
        "Method(AnEvent(ufixed256x16,ufixed64x2))",
        "aggregate%head%3#0"
      ]
    },
    "49": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "50": {
      "op": "log",
      "stack_out": []
    },
    "51": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "53": {
      "op": "return",
      "stack_out": []
    },
    "54": {
      "block": "main_emit_swapped_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "56": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "57": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "58": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "60": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "61": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "b#0"
      ]
    },
    "64": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "b#0",
        "a#0"
      ]
    },
    "67": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "68": {
      "op": "pushbytes 0x1ccbd925 // method \"Swapped(uint64,uint64)\"",
      "defined_out": [
        "Method(Swapped(uint64,uint64))",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "Method(Swapped(uint64,uint64))"
      ]
    },
    "74": {
      "op": "swap",
      "stack_out": [
        "Method(Swapped(uint64,uint64))",
        "aggregate%head%1#0"
      ]
    },
    "75": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "76": {
      "op": "dup",
      "defined_out": [
        "event%0#0",
        "event%0#0 (copy)"
      ],
      "stack_out": [
        "event%0#0",
        "event%0#0 (copy)"
      ]
    },
    "77": {
      "op": "log",
      "stack_out": [
        "event%0#0"
      ]
    },
    "78": {
      "op": "dup",
      "stack_out": [
        "event%0#0",
        "event%0#0 (copy)"
      ]
    },
    "79": {
      "op": "log",
      "stack_out": [
        "event%0#0"
      ]
    },
    "80": {
      "op": "log",
      "stack_out": []
    },
    "81": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "83": {
      "op": "return",
      "stack_out": []
    },
    "84": {
      "block": "main_bare_routing@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "86": {
      "op": "bnz main_after_if_else@11",
      "stack_out": []
    },
    "89": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "91": {
      "op": "!",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "92": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "93": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "95": {
      "op": "return",
      "stack_out": []
    }
  }
}