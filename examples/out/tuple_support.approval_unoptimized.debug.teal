// Op                                                                          // Op Description                                    Stack (out)                                                                                                                                                          X stack          Source code                                                                                         Source line

#pragma version 8

// examples.tuple_support.TupleSupport.approval_program() -> uint64:
main:
        byte ""
        dupn 7                                                                 // allocate 8 to stack                               (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 |

main_block@0:
        txn ApplicationID                                                      //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | {txn}
        bnz main_entrypoint@2                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 |
        // Implicit fall through to main_on_create@1                           //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 |

main_on_create@1:
        callsub __init__                                                       //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 |
        // Implicit fall through to main_entrypoint@2                          //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 |

main_entrypoint@2:
        int 101                                                                //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | 101                                                                                                                             101                                                                                                 File "tuple_support.py", line 9
        int 102                                                                //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | 101,102                                                                                                                         102                                                                                                 File "tuple_support.py", line 9
        int 103                                                                //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | 101,102,103                                                                                                                     103                                                                                                 File "tuple_support.py", line 9
        callsub add_three_values                                               //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | {add_three_values}                                                                                                              add_three_values((UInt64(101), UInt64(102), UInt64(103)))                                           File "tuple_support.py", line 9
        itob                                                                   //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | {itob}                                                                                                                          itob(total)                                                                                         File "tuple_support.py", line 10
        log                                                                    //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 |                                                                                                                                 log(itob(total))                                                                                    File "tuple_support.py", line 10
        int 1                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | 1                                                                                                                               1                                                                                                   File "tuple_support.py", line 11
        dup                                                                    // store a#0 to l-stack (copy)                       (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,a#0                                                                                                                         a                                                                                                   File "tuple_support.py", line 11
        bury 9                                                                 // store a#0 to f-stack                              (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0                                                                                                                             a                                                                                                   File "tuple_support.py", line 11
        int 2                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,2                                                                                                                           2                                                                                                   File "tuple_support.py", line 11
        dup                                                                    // store b#0 to l-stack (copy)                       (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,b#0                                                                                                                     b                                                                                                   File "tuple_support.py", line 11
        bury 6                                                                 // store b#0 to f-stack                              (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0                                                                                                                         b                                                                                                   File "tuple_support.py", line 11
        dig 1                                                                  // load a#0 from l-stack (copy)                      (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,a#0                                                                                                                     a                                                                                                   File "tuple_support.py", line 11
        dig 1                                                                  // load b#0 from l-stack (copy)                      (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,a#0,b#0                                                                                                                 b                                                                                                   File "tuple_support.py", line 11
        addw                                                                   //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,{addw}.0,{addw}.1                                                                                                       addw(a, b)                                                                                          File "tuple_support.py", line 12
        swap                                                                   // store tuple_assignment%3#0 to l-stack (no copy)   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tuple_assignment%3#0,{addw}.0                                                                                           addw(a, b)                                                                                          File "tuple_support.py", line 12
        byte "state"                                                           //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tuple_assignment%3#0,did_overflow#0,"state"                                                                             self.state                                                                                          File "tuple_support.py", line 12
        uncover 2                                                              // load tuple_assignment%3#0 from l-stack (no copy)  (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,did_overflow#0,"state",tuple_assignment%3#0                                                                             addw(a, b)                                                                                          File "tuple_support.py", line 12
        app_global_put                                                         //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,did_overflow#0                                                                                                          (did_overflow, self.state) = addw(a, b)                                                             File "tuple_support.py", line 12
        !                                                                      //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,{!}                                                                                                                     not did_overflow                                                                                    File "tuple_support.py", line 13
        assert // overflow!                                                    //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0                                                                                                                         assert not did_overflow, "overflow!"                                                                File "tuple_support.py", line 13
        dup                                                                    // load b#0 from l-stack (copy)                      (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,b#0                                                                                                                     b                                                                                                   File "tuple_support.py", line 11
        cover 2                                                                // store ab.1#0 to l-stack (no copy)                 (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,a#0,b#0                                                                                                                  ab                                                                                                  File "tuple_support.py", line 14
        dig 1                                                                  // load a#0 from l-stack (copy)                      (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,a#0,b#0,a#0                                                                                                              a                                                                                                   File "tuple_support.py", line 11
        cover 2                                                                // store ab.0#0 to l-stack (no copy)                 (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0                                                                                                           ab                                                                                                  File "tuple_support.py", line 14
        dig 1                                                                  // load a#0 from l-stack (copy)                      (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,a#0                                                                                                       a                                                                                                   File "tuple_support.py", line 11
        dig 1                                                                  // load b#0 from l-stack (copy)                      (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,a#0,b#0                                                                                                   b                                                                                                   File "tuple_support.py", line 11
        addw                                                                   //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,{addw}.0,{addw}.1                                                                                         addw(a, b)                                                                                          File "tuple_support.py", line 15
        pop                                                                    //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,{addw}.0                                                                                                  result                                                                                              File "tuple_support.py", line 15
        !                                                                      //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,{!}                                                                                                       not result[0]                                                                                       File "tuple_support.py", line 16
        assert // overflow!                                                    //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0                                                                                                           assert not result[0], "overflow!"                                                                   File "tuple_support.py", line 16
        int 3                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,3                                                                                                         3                                                                                                   File "tuple_support.py", line 17
        int 3                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,d#0,3                                                                                                     3                                                                                                   File "tuple_support.py", line 17
        swap                                                                   // store c#0 to l-stack (no copy)                    (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,c#0,d#0                                                                                                   c                                                                                                   File "tuple_support.py", line 17
        dig 4                                                                  // load ab.0#0 from l-stack (copy)                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,c#0,d#0,ab.0#0                                                                                            ab                                                                                                  File "tuple_support.py", line 14
        bury 13                                                                // store a2#0 to f-stack                             (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,c#0,d#0                                                                                                   a2                                                                                                  File "tuple_support.py", line 18
        dig 5                                                                  // load ab.1#0 from l-stack (copy)                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,c#0,d#0,ab.1#0                                                                                            ab                                                                                                  File "tuple_support.py", line 14
        bury 9                                                                 // store b2#0 to f-stack                             (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,c#0,d#0                                                                                                   b2                                                                                                  File "tuple_support.py", line 18
        bury 6                                                                 // store cd.1#0 to f-stack                           (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0,c#0                                                                                                       cd                                                                                                  File "tuple_support.py", line 19
        bury 6                                                                 // store cd.0#0 to f-stack                           (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.1#0,ab.0#0,a#0,b#0                                                                                                           cd                                                                                                  File "tuple_support.py", line 19
        uncover 3                                                              // load ab.1#0 from l-stack (no copy)                (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.0#0,a#0,b#0,ab.1#0                                                                                                           ab                                                                                                  File "tuple_support.py", line 14
        bury 8                                                                 // store ab2.1#0 to f-stack                          (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab.0#0,a#0,b#0                                                                                                                  ab2                                                                                                 File "tuple_support.py", line 20
        uncover 2                                                              // load ab.0#0 from l-stack (no copy)                (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,ab.0#0                                                                                                                  ab                                                                                                  File "tuple_support.py", line 14
        bury 8                                                                 // store ab2.0#0 to f-stack                          (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0                                                                                                                         ab2                                                                                                 File "tuple_support.py", line 20
        ==                                                                     //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | {==}                                                                                                                            a == b:                                                                                             File "tuple_support.py", line 22
        bz main_else_body@4                                                    //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 |                                                                                                                                 if a == b:                                                                                          File "tuple_support.py", line 22
        // Implicit fall through to main_if_body@3                             //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 |                                                                                                                                 if a == b:                                                                                          File "tuple_support.py", line 22

main_if_body@3:
        dig 4                                                                  // load ab2.1#0 from f-stack                         (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | ab2.1#0                                                                                                                         ab2                                                                                                 File "tuple_support.py", line 20
        dig 6                                                                  // load ab2.0#0 from f-stack                         (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.1#0 | ab2.0#0                                                                                                           ab2                                                                                                 File "tuple_support.py", line 20
        swap                                                                   // store tup.0#0 to x-stack (no copy)                (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 |                                                                                                           tup                                                                                                 File "tuple_support.py", line 23
        b main_after_if_else@5                                                 //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 |                                                                                          tup.0#0, tup.1#0

main_else_body@4:
        dup                                                                    // load cd.1#0 from f-stack                          (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | cd.1#0                                                                                                                          cd                                                                                                  File "tuple_support.py", line 19
        dig 2                                                                  // load cd.0#0 from f-stack                          (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.1#0 | cd.0#0                                                                                                            cd                                                                                                  File "tuple_support.py", line 19
        swap                                                                   // store tup.0#0 to x-stack (no copy)                (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 |                                                                                                           tup                                                                                                 File "tuple_support.py", line 23
        // Implicit fall through to main_after_if_else@5                       //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 |                                                                                          tup.0#0, tup.1#0

main_after_if_else@5:
        dig 8                                                                  // load a2#0 from f-stack                            (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a2#0                                                                                     tup.0#0, tup.1#0 a2                                                                                                  File "tuple_support.py", line 18
        dig 10                                                                 // load a#0 from f-stack                             (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a2#0,a#0                                                                                                  a                                                                                                   File "tuple_support.py", line 11
        dup
        cover 2                                                                // store a#0 to l-stack (copy)                       (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a#0,a2#0,a#0                                                                                              a                                                                                                   File "tuple_support.py", line 11
        ==                                                                     //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a#0,{==}                                                                                                  a2 == a                                                                                             File "tuple_support.py", line 26
        assert                                                                 //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a#0                                                                                                       assert a2 == a                                                                                      File "tuple_support.py", line 26
        dig 5                                                                  // load b2#0 from f-stack                            (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a#0,b2#0                                                                                                  b2                                                                                                  File "tuple_support.py", line 18
        dig 7                                                                  // load b#0 from f-stack                             (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a#0,b2#0,b#0                                                                                              b                                                                                                   File "tuple_support.py", line 11
        dup
        cover 2                                                                // store b#0 to l-stack (copy)                       (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a#0,b#0,b2#0,b#0                                                                                          b                                                                                                   File "tuple_support.py", line 11
        ==                                                                     //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a#0,b#0,{==}                                                                                              b2 == b                                                                                             File "tuple_support.py", line 27
        assert                                                                 //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a#0,b#0                                                                                                   assert b2 == b                                                                                      File "tuple_support.py", line 27
        dig 5                                                                  // load cd.0#0 from f-stack                          (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.0#0,tup.1#0 | a#0,b#0,cd.0#0                                                                                            cd                                                                                                  File "tuple_support.py", line 19
        uncover 4                                                              // load tup.0#0 from x-stack                         (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.1#0 | a#0,b#0,cd.0#0,tup.0#0                                                                                            tup                                                                                                 File "tuple_support.py", line 23
        ==                                                                     //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.1#0 | a#0,b#0,{==}                                                                                                      cd[0] == tup[0]                                                                                     File "tuple_support.py", line 28
        assert                                                                 //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.1#0 | a#0,b#0                                                                                                           assert cd[0] == tup[0]                                                                              File "tuple_support.py", line 28
        dig 3                                                                  // load cd.1#0 from f-stack                          (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | (𝕏) tup.1#0 | a#0,b#0,cd.1#0                                                                                                    cd                                                                                                  File "tuple_support.py", line 19
        uncover 3                                                              // load tup.1#0 from x-stack                         (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,cd.1#0,tup.1#0                                                                                                          tup                                                                                                 File "tuple_support.py", line 23
        ==                                                                     //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,{==}                                                                                                                    cd[1] == tup[1]                                                                                     File "tuple_support.py", line 29
        assert                                                                 //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0                                                                                                                         assert cd[1] == tup[1]                                                                              File "tuple_support.py", line 29
        byte "Hello, "                                                         //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,"Hello, "                                                                                                               b"Hello, "                                                                                          File "tuple_support.py", line 33
        byte "world!"                                                          //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,"Hello, ","world!"                                                                                                      b"world!"                                                                                           File "tuple_support.py", line 33
        callsub bytes_combine                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,{bytes_combine}                                                                                                         bytes_combine((Bytes(b"Hello, "), Bytes(b"world!")))                                                File "tuple_support.py", line 33
        log                                                                    //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0                                                                                                                         log(bytes_combine((Bytes(b"Hello, "), Bytes(b"world!"))))                                           File "tuple_support.py", line 33
        int 18446744073709551615                                               //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,18446744073709551615                                                                                                    2**64 - 1                                                                                           File "tuple_support.py", line 34
        dup                                                                    // load max_uint64#0 from l-stack (copy)             (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,max_uint64#0,max_uint64#0                                                                                               max_uint64                                                                                          File "tuple_support.py", line 34
        addw                                                                   //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,{addw}.0,{addw}.1                                                                                                       addw(max_uint64, max_uint64)                                                                        File "tuple_support.py", line 35
        swap                                                                   // store tmp%13#0 to l-stack (no copy)               (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tmp%13#0,{addw}.0                                                                                                       addw(max_uint64, max_uint64)                                                                        File "tuple_support.py", line 35
        dig 3                                                                  // load a#0 from l-stack (copy)                      (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tmp%13#0,tmp%12#0,a#0                                                                                                   a                                                                                                   File "tuple_support.py", line 11
        dig 3                                                                  // load b#0 from l-stack (copy)                      (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tmp%13#0,tmp%12#0,a#0,b#0                                                                                               b                                                                                                   File "tuple_support.py", line 11
        addw                                                                   //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tmp%13#0,tmp%12#0,{addw}.0,{addw}.1                                                                                     addw(a, b)                                                                                          File "tuple_support.py", line 35
        swap                                                                   // store tmp%15#0 to l-stack (no copy)               (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tmp%13#0,tmp%12#0,tmp%15#0,{addw}.0                                                                                     addw(a, b)                                                                                          File "tuple_support.py", line 35
        uncover 2                                                              // load tmp%12#0 from l-stack (no copy)              (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tmp%13#0,tmp%15#0,tmp%14#0,tmp%12#0                                                                                     addw(max_uint64, max_uint64)                                                                        File "tuple_support.py", line 35
        uncover 3                                                              // load tmp%13#0 from l-stack (no copy)              (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tmp%15#0,tmp%14#0,tmp%12#0,tmp%13#0                                                                                     addw(max_uint64, max_uint64)                                                                        File "tuple_support.py", line 35
        uncover 2                                                              // load tmp%14#0 from l-stack (no copy)              (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tmp%15#0,tmp%12#0,tmp%13#0,tmp%14#0                                                                                     addw(a, b)                                                                                          File "tuple_support.py", line 35
        uncover 3                                                              // load tmp%15#0 from l-stack (no copy)              (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0                                                                                     addw(a, b)                                                                                          File "tuple_support.py", line 35
        callsub addw2                                                          //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,{addw2}.0,{addw2}.1,{addw2}.2                                                                                           addw2(addw(max_uint64, max_uint64), addw(a, b))                                                     File "tuple_support.py", line 35
        cover 2                                                                // store tuple_assignment%18#0 to l-stack (no copy)  (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tuple_assignment%18#0,{addw2}.0,{addw2}.1                                                                               addw2(addw(max_uint64, max_uint64), addw(a, b))                                                     File "tuple_support.py", line 35
        swap                                                                   // store tuple_assignment%17#0 to l-stack (no copy)  (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tuple_assignment%18#0,tuple_assignment%17#0,{addw2}.0                                                                   addw2(addw(max_uint64, max_uint64), addw(a, b))                                                     File "tuple_support.py", line 35
        swap                                                                   // store hi#0 to l-stack (no copy)                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,tuple_assignment%18#0,hi#0,tuple_assignment%17#0                                                                        hi                                                                                                  File "tuple_support.py", line 35
        cover 2                                                                // store mid#0 to l-stack (no copy)                  (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,mid#0,tuple_assignment%18#0,hi#0                                                                                        mid                                                                                                 File "tuple_support.py", line 35
        swap                                                                   // load tuple_assignment%18#0 from l-stack (no copy) (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,mid#0,hi#0,tuple_assignment%18#0                                                                                        addw2(addw(max_uint64, max_uint64), addw(a, b))                                                     File "tuple_support.py", line 35
        cover 2                                                                // store lo#0 to l-stack (no copy)                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,lo#0,mid#0,hi#0                                                                                                         lo                                                                                                  File "tuple_support.py", line 35
        itob                                                                   //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,lo#0,mid#0,{itob}                                                                                                       itob(hi)                                                                                            File "tuple_support.py", line 36
        log                                                                    //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,lo#0,mid#0                                                                                                              log(itob(hi))                                                                                       File "tuple_support.py", line 36
        itob                                                                   //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,lo#0,{itob}                                                                                                             itob(mid)                                                                                           File "tuple_support.py", line 37
        log                                                                    //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,lo#0                                                                                                                    log(itob(mid))                                                                                      File "tuple_support.py", line 37
        itob                                                                   //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,{itob}                                                                                                                  itob(lo)                                                                                            File "tuple_support.py", line 38
        log                                                                    //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0                                                                                                                         log(itob(lo))                                                                                       File "tuple_support.py", line 38
        byte "na"                                                              //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,"na"                                                                                                                    b"na"                                                                                               File "tuple_support.py", line 39
        int 5                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,"na",5                                                                                                                  5                                                                                                   File "tuple_support.py", line 39
        callsub bytes_multiply                                                 //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,{bytes_multiply}                                                                                                        bytes_multiply((Bytes(b"na"), UInt64(5)))                                                           File "tuple_support.py", line 39
        log                                                                    //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0                                                                                                                         log(bytes_multiply((Bytes(b"na"), UInt64(5))))                                                      File "tuple_support.py", line 39
        int 0                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,0                                                                                                                       0                                                                                                   File "tuple_support.py", line 40
        callsub test_tuple_swap                                                //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0                                                                                                                         test_tuple_swap(zero=UInt64(0))                                                                     File "tuple_support.py", line 40
        int 1                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,1                                                                                                                       1                                                                                                   File "tuple_support.py", line 43
        int 2                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,1,2                                                                                                                     2                                                                                                   File "tuple_support.py", line 44
        int 3                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,1,2,3                                                                                                                   3                                                                                                   File "tuple_support.py", line 45
        int 4                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,1,2,3,4                                                                                                                 4                                                                                                   File "tuple_support.py", line 46
        int 5                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,1,2,3,4,5                                                                                                               5                                                                                                   File "tuple_support.py", line 47
        int 6                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,1,2,3,4,5,6                                                                                                             6                                                                                                   File "tuple_support.py", line 48
        int 7                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,1,2,3,4,5,6,7                                                                                                           7                                                                                                   File "tuple_support.py", line 49
        int 8                                                                  //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0,1,2,3,4,5,6,7,8                                                                                                         8                                                                                                   File "tuple_support.py", line 50
        callsub slicing                                                        //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | a#0,b#0                                                                                                                         slicing(                                                                                            File "tuple_support.py", line 41
        +                                                                      //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 | {+}                                                                                                                             a + b                                                                                               File "tuple_support.py", line 53
        return                                                                 //                                                   (𝕗) a#0,a2#0,ab2.0#0,ab2.1#0,b#0,b2#0,cd.0#0,cd.1#0 |                                                                                                                                 return a + b                                                                                        File "tuple_support.py", line 53


// examples.tuple_support.add_three_values(values.0#0: uint64, values.1#0: uint64, values.2#0: uint64) -> uint64:
add_three_values:
        proto 3 1                                                              //                                                   (𝕡) values.0#0,values.1#0,values.2#0 |                                                                                                                                                def add_three_values(values: tuple[UInt64, UInt64, UInt64]) -> UInt64:                              File "tuple_support.py", line 76
        byte ""
        dup                                                                    // allocate 2 to stack                               (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4 |

add_three_values_block@0:
        int 0                                                                  //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4 | 0                                                                                                        0                                                                                                   File "tuple_support.py", line 77
        // Implicit fall through to add_three_values_for_header_0@1            //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 |

add_three_values_for_header_0@1:
        int 0                                                                  //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | 0
        frame_bury 0                                                           // store tuple_index%0#0 to f-stack                  (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 |
        frame_dig -3                                                           // load values.0#0 from parameters                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | values.0#0                                                                                       values: tuple[UInt64, UInt64, UInt64]                                                               File "tuple_support.py", line 76
        b add_three_values_for_body@4                                          //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | (𝕏) value#0 |                                                                   value#0

add_three_values_for_header_1@2:
        frame_dig -2                                                           // load values.1#0 from parameters                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | values.1#0                                                                                       values: tuple[UInt64, UInt64, UInt64]                                                               File "tuple_support.py", line 76
        frame_dig 1                                                            // load tuple_index%0#4 from f-stack                 (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | (𝕏) value#0 | tuple_index%0#4
        frame_bury 0                                                           // store tuple_index%0#0 to f-stack                  (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | (𝕏) value#0 |
        b add_three_values_for_body@4                                          //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | (𝕏) value#0 |                                                                   value#0

add_three_values_for_header_2@3:
        frame_dig -1                                                           // load values.2#0 from parameters                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | values.2#0                                                                                       values: tuple[UInt64, UInt64, UInt64]                                                               File "tuple_support.py", line 76
        frame_dig 1                                                            // load tuple_index%0#4 from f-stack                 (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | (𝕏) value#0 | tuple_index%0#4
        frame_bury 0                                                           // store tuple_index%0#0 to f-stack                  (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | (𝕏) value#0 |
        // Implicit fall through to add_three_values_for_body@4                //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | (𝕏) value#0 |                                                                   value#0

add_three_values_for_body@4:
        frame_dig 2                                                            // load total#0 from f-stack                         (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | (𝕏) value#0 | total#0                                                           value#0          total                                                                                               File "tuple_support.py", line 77
        +                                                                      //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | {+}                                                                                              total += value                                                                                      File "tuple_support.py", line 80
        frame_bury 2                                                           // store total#0 to f-stack                          (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 |                                                                                                  total                                                                                               File "tuple_support.py", line 77
        // Implicit fall through to add_three_values_for_footer@5              //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 |

add_three_values_for_footer@5:
        frame_dig 0                                                            // load tuple_index%0#0 from f-stack                 (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | tuple_index%0#0
        dup                                                                    // store tuple_index%0#0 to l-stack (copy)           (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | tuple_index%0#0,tuple_index%0#0
        int 1                                                                  //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | tuple_index%0#0,tuple_index%0#0,1
        +                                                                      //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | tuple_index%0#0,{+}
        frame_bury 1                                                           // store tuple_index%0#4 to f-stack                  (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | tuple_index%0#0
        switch add_three_values_for_header_1@2 add_three_values_for_header_2@3 //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 |                                                                                                  for value in values:                                                                                File "tuple_support.py", line 78
        // Implicit fall through to add_three_values_after_for@6               //                                                   (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 |                                                                                                  for value in values:                                                                                File "tuple_support.py", line 78

add_three_values_after_for@6:
        frame_dig 2                                                            // load total#0 from f-stack                         (𝕡) values.0#0,values.1#0,values.2#0 | (𝕗) tuple_index%0#0,tuple_index%0#4,total#0 | total#0                                                                                          total                                                                                               File "tuple_support.py", line 77
        frame_bury 0
        retsub                                                                 //                                                   total#0                                                                                                                                                                               return total                                                                                        File "tuple_support.py", line 83


// examples.tuple_support.bytes_combine(arg.0#0: bytes, arg.1#0: bytes) -> bytes:
bytes_combine:
        proto 2 1                                                              //                                                   (𝕡) arg.0#0,arg.1#0 |                                                                                                                                                                 def bytes_combine(arg: tuple[Bytes, Bytes]) -> Bytes:                                               File "tuple_support.py", line 60

bytes_combine_block@0:
        frame_dig -2                                                           // load arg.0#0 from parameters                      (𝕡) arg.0#0,arg.1#0 | arg.0#0                                                                                                                                                         arg: tuple[Bytes, Bytes]                                                                            File "tuple_support.py", line 60
        frame_dig -1                                                           // load arg.1#0 from parameters                      (𝕡) arg.0#0,arg.1#0 | a#0,arg.1#0                                                                                                                                                     arg: tuple[Bytes, Bytes]                                                                            File "tuple_support.py", line 60
        concat                                                                 //                                                   (𝕡) arg.0#0,arg.1#0 | {concat}                                                                                                                                                        a + b                                                                                               File "tuple_support.py", line 62
        retsub                                                                 //                                                   result#0                                                                                                                                                                              return result                                                                                       File "tuple_support.py", line 63


// examples.tuple_support.addw2(a.0#0: uint64, a.1#0: uint64, b.0#0: uint64, b.1#0: uint64) -> uint64, uint64, uint64:
addw2:
        proto 4 3                                                              //                                                   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 |                                                                                                                                                         def addw2(a: tuple[UInt64, UInt64], b: tuple[UInt64, UInt64]) -> tuple[UInt64, UInt64, UInt64]:     File "tuple_support.py", line 87

addw2_block@0:
        frame_dig -4                                                           // load a.0#0 from parameters                        (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | a.0#0                                                                                                                                                   a: tuple[UInt64, UInt64]                                                                            File "tuple_support.py", line 87
        frame_dig -3                                                           // load a.1#0 from parameters                        (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | a_hi#0,a.1#0                                                                                                                                            a: tuple[UInt64, UInt64]                                                                            File "tuple_support.py", line 87
        frame_dig -2                                                           // load b.0#0 from parameters                        (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | a_hi#0,a_lo#0,b.0#0                                                                                                                                     b: tuple[UInt64, UInt64]                                                                            File "tuple_support.py", line 87
        swap                                                                   // store b_hi#0 to l-stack (no copy)                 (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | a_hi#0,b_hi#0,a_lo#0                                                                                                                                    b_hi                                                                                                File "tuple_support.py", line 89
        frame_dig -1                                                           // load b.1#0 from parameters                        (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | a_hi#0,b_hi#0,a_lo#0,b.1#0                                                                                                                              b: tuple[UInt64, UInt64]                                                                            File "tuple_support.py", line 87
        addw                                                                   //                                                   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | a_hi#0,b_hi#0,{addw}.0,{addw}.1                                                                                                                         addw(a_lo, b_lo)                                                                                    File "tuple_support.py", line 90
        swap                                                                   // store tuple_assignment%1#0 to l-stack (no copy)   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | a_hi#0,b_hi#0,tuple_assignment%1#0,{addw}.0                                                                                                             addw(a_lo, b_lo)                                                                                    File "tuple_support.py", line 90
        cover 2                                                                // store lo_carry#0 to l-stack (no copy)             (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | a_hi#0,lo_carry#0,b_hi#0,tuple_assignment%1#0                                                                                                           lo_carry                                                                                            File "tuple_support.py", line 90
        cover 3                                                                // store c_lo#0 to l-stack (no copy)                 (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,a_hi#0,lo_carry#0,b_hi#0                                                                                                                         c_lo                                                                                                File "tuple_support.py", line 90
        uncover 2                                                              // load a_hi#0 from l-stack (no copy)                (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0,b_hi#0,a_hi#0                                                                                                                         a_hi                                                                                                File "tuple_support.py", line 88
        addw                                                                   //                                                   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0,{addw}.0,{addw}.1                                                                                                                     addw(a_hi, b_hi)                                                                                    File "tuple_support.py", line 91
        swap                                                                   // store tuple_assignment%3#0 to l-stack (no copy)   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0,tuple_assignment%3#0,{addw}.0                                                                                                         addw(a_hi, b_hi)                                                                                    File "tuple_support.py", line 91
        swap                                                                   // store hi_carry1#0 to l-stack (no copy)            (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,lo_carry#0,hi_carry1#0,tuple_assignment%3#0                                                                                                      hi_carry1                                                                                           File "tuple_support.py", line 91
        uncover 2                                                              // load lo_carry#0 from l-stack (no copy)            (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,hi_carry1#0,c_mid#0,lo_carry#0                                                                                                                   lo_carry                                                                                            File "tuple_support.py", line 90
        addw                                                                   //                                                   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,hi_carry1#0,{addw}.0,{addw}.1                                                                                                                    addw(c_mid, lo_carry)                                                                               File "tuple_support.py", line 92
        swap                                                                   // store tuple_assignment%5#0 to l-stack (no copy)   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,hi_carry1#0,tuple_assignment%5#0,{addw}.0                                                                                                        addw(c_mid, lo_carry)                                                                               File "tuple_support.py", line 92
        swap                                                                   // store hi_carry2#0 to l-stack (no copy)            (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,hi_carry1#0,hi_carry2#0,tuple_assignment%5#0                                                                                                     hi_carry2                                                                                           File "tuple_support.py", line 92
        cover 2                                                                // store c_mid#0 to l-stack (no copy)                (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,hi_carry1#0,hi_carry2#0                                                                                                                  c_mid                                                                                               File "tuple_support.py", line 91
        addw                                                                   //                                                   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,{addw}.0,{addw}.1                                                                                                                        addw(hi_carry1, hi_carry2)                                                                          File "tuple_support.py", line 93
        swap                                                                   // store tuple_assignment%7#0 to l-stack (no copy)   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,tuple_assignment%7#0,{addw}.0                                                                                                            addw(hi_carry1, hi_carry2)                                                                          File "tuple_support.py", line 93
        !                                                                      //                                                   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,c_hi#0,{!}                                                                                                                               not did_overflow                                                                                    File "tuple_support.py", line 94
        assert // is such a thing even possible? 👽                             //                                                   (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_mid#0,c_hi#0                                                                                                                                   assert not did_overflow, "is such a thing even possible? 👽"                                         File "tuple_support.py", line 94
        swap                                                                   // load c_mid#0 from l-stack (no copy)               (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_lo#0,c_hi#0,c_mid#0                                                                                                                                   c_mid                                                                                               File "tuple_support.py", line 91
        uncover 2                                                              // load c_lo#0 from l-stack (no copy)                (𝕡) a.0#0,a.1#0,b.0#0,b.1#0 | c_hi#0,c_mid#0,c_lo#0                                                                                                                                   c_lo                                                                                                File "tuple_support.py", line 90
        retsub                                                                 //                                                   c_hi#0,c_mid#0,c_lo#0                                                                                                                                                                 return c_hi, c_mid, c_lo                                                                            File "tuple_support.py", line 95


// examples.tuple_support.bytes_multiply(arg.0#0: bytes, arg.1#0: uint64) -> bytes:
bytes_multiply:
        proto 2 1                                                              //                                                   (𝕡) arg.0#0,arg.1#0 |                                                                                                                                                                 def bytes_multiply(arg: tuple[Bytes, UInt64]) -> Bytes:                                             File "tuple_support.py", line 67

bytes_multiply_block@0:
        frame_dig -2                                                           // load arg.0#0 from parameters                      (𝕡) arg.0#0,arg.1#0 | arg.0#0                                                                                                                                                         arg: tuple[Bytes, UInt64]                                                                           File "tuple_support.py", line 67
        frame_dig -1                                                           // load arg.1#0 from parameters                      (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0 | arg.1#0                                                                                                                                               arg: tuple[Bytes, UInt64]                                                                           File "tuple_support.py", line 67
        byte ""                                                                //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0 | ""                                                                                                                                            b""                                                                                                 File "tuple_support.py", line 69
        int 0                                                                  //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0 | 0                                                                                                                                    urange(count)                                                                                       File "tuple_support.py", line 70
        // Implicit fall through to bytes_multiply_for_header@1                //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 |

bytes_multiply_for_header@1:
        frame_dig 3                                                            // load range_item%0#0 from f-stack                  (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 | range_item%0#0                                                                                                        _i                                                                                                  File "tuple_support.py", line 70
        frame_dig 1                                                            // load count#0 from f-stack                         (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 | range_item%0#0,count#0                                                                                                count                                                                                               File "tuple_support.py", line 68
        <                                                                      //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 | {<}                                                                                                                   urange(count)                                                                                       File "tuple_support.py", line 70
        bz bytes_multiply_after_for@4                                          //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 |                                                                                                                       for _i in urange(count):  # TODO: allow _                                                           File "tuple_support.py", line 70
        // Implicit fall through to bytes_multiply_for_body@2                  //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 |                                                                                                                       for _i in urange(count):  # TODO: allow _                                                           File "tuple_support.py", line 70

bytes_multiply_for_body@2:
        frame_dig 2                                                            // load result#0 from f-stack                        (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 | result#0                                                                                                              result                                                                                              File "tuple_support.py", line 69
        frame_dig 0                                                            // load b#0 from f-stack                             (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 | result#0,b#0                                                                                                          b                                                                                                   File "tuple_support.py", line 68
        concat                                                                 //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 | {concat}                                                                                                              result += b                                                                                         File "tuple_support.py", line 71
        frame_bury 2                                                           // store result#0 to f-stack                         (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 |                                                                                                                       result                                                                                              File "tuple_support.py", line 69
        // Implicit fall through to bytes_multiply_for_footer@3                //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 |

bytes_multiply_for_footer@3:
        frame_dig 3                                                            // load range_item%0#0 from f-stack                  (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 | range_item%0#0                                                                                                        _i                                                                                                  File "tuple_support.py", line 70
        int 1                                                                  //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 | range_item%0#0,1                                                                                                      urange(count)                                                                                       File "tuple_support.py", line 70
        +                                                                      //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 | {+}                                                                                                                   urange(count)                                                                                       File "tuple_support.py", line 70
        frame_bury 3                                                           // store range_item%0#0 to f-stack                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 |                                                                                                                       _i                                                                                                  File "tuple_support.py", line 70
        b bytes_multiply_for_header@1                                          //                                                   (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 |

bytes_multiply_after_for@4:
        frame_dig 2                                                            // load result#0 from f-stack                        (𝕡) arg.0#0,arg.1#0 | (𝕗) b#0,count#0,result#0,range_item%0#0 | result#0                                                                                                              result                                                                                              File "tuple_support.py", line 69
        frame_bury 0
        retsub                                                                 //                                                   result#0                                                                                                                                                                              return result                                                                                       File "tuple_support.py", line 72


// examples.tuple_support.test_tuple_swap(zero#0: uint64) -> void:
test_tuple_swap:
        proto 1 0                                                              //                                                   (𝕡) zero#0 |                                                                                                                                                                          def test_tuple_swap(zero: UInt64) -> None:                                                          File "tuple_support.py", line 99

test_tuple_swap_block@0:
        frame_dig -1                                                           // load zero#0 from parameters                       (𝕡) zero#0 | zero#0                                                                                                                                                                   zero: UInt64                                                                                        File "tuple_support.py", line 99
        int 1                                                                  //                                                   (𝕡) zero#0 | zero#0,1                                                                                                                                                                 1                                                                                                   File "tuple_support.py", line 100
        +                                                                      //                                                   (𝕡) zero#0 | {+}                                                                                                                                                                      zero + 1                                                                                            File "tuple_support.py", line 100
        frame_dig -1                                                           // load zero#0 from parameters                       (𝕡) zero#0 | a#0,zero#0                                                                                                                                                               zero: UInt64                                                                                        File "tuple_support.py", line 99
        int 2                                                                  //                                                   (𝕡) zero#0 | a#0,zero#0,2                                                                                                                                                             2                                                                                                   File "tuple_support.py", line 101
        +                                                                      //                                                   (𝕡) zero#0 | a#0,{+}                                                                                                                                                                  zero + 2                                                                                            File "tuple_support.py", line 101
        int 2                                                                  //                                                   (𝕡) zero#0 | b#0,a#1,2                                                                                                                                                                2                                                                                                   File "tuple_support.py", line 103
        ==                                                                     //                                                   (𝕡) zero#0 | b#0,{==}                                                                                                                                                                 a == 2, "a should be two"                                                                           File "tuple_support.py", line 103
        assert // a should be two                                              //                                                   (𝕡) zero#0 | b#0                                                                                                                                                                      assert a == 2, "a should be two"                                                                    File "tuple_support.py", line 103
        int 1                                                                  //                                                   (𝕡) zero#0 | b#0,1                                                                                                                                                                    1                                                                                                   File "tuple_support.py", line 104
        ==                                                                     //                                                   (𝕡) zero#0 | {==}                                                                                                                                                                     b == 1, "b should be one"                                                                           File "tuple_support.py", line 104
        assert // b should be one                                              //                                                   (𝕡) zero#0 |                                                                                                                                                                          assert b == 1, "b should be one"                                                                    File "tuple_support.py", line 104
        retsub                                                                 //


// examples.tuple_support.slicing(values.0#0: uint64, values.1#0: uint64, values.2#0: uint64, values.3#0: uint64, values.4#0: uint64, values.5#0: uint64, values.6#0: uint64, values.7#0: uint64) -> void:
slicing:
        proto 8 0                                                              //                                                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 |                                                                                         def slicing(values: tuple[UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64]) -> None: File "tuple_support.py", line 108

slicing_block@0:
        frame_dig -6                                                           // load values.2#0 from parameters                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | values.2#0                                                                              values: tuple[UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64]                       File "tuple_support.py", line 108
        frame_dig -7                                                           // load values.1#0 from parameters                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.2#0,values.1#0                                                             values: tuple[UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64]                       File "tuple_support.py", line 108
        frame_dig -8                                                           // load values.0#0 from parameters                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.2#0,one_to_three.1#0,values.0#0                                            values: tuple[UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64]                       File "tuple_support.py", line 108
        dig 1                                                                  // load one_to_three.1#0 from l-stack (copy)         (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.2#0,one_to_three.1#0,one_to_three.0#0,one_to_three.1#0                     one_to_three                                                                                        File "tuple_support.py", line 109
        uncover 3                                                              // load one_to_three.2#0 from l-stack (no copy)      (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.1#0,one_to_three.0#0,one_to_three.1#0,one_to_three.2#0                     one_to_three                                                                                        File "tuple_support.py", line 109
        callsub add_three_values                                               //                                                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.1#0,{add_three_values}                                                     add_three_values(one_to_three)                                                                      File "tuple_support.py", line 110
        frame_dig -8                                                           // load values.0#0 from parameters                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.1#0,tmp%0#0,values.0#0                                                     values: tuple[UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64]                       File "tuple_support.py", line 108
        frame_dig -7                                                           // load values.1#0 from parameters                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.1#0,tmp%0#0,values.0#0,values.1#0                                          values: tuple[UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64]                       File "tuple_support.py", line 108
        +                                                                      //                                                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.1#0,tmp%0#0,{+}                                                            values[0] + values[1]                                                                               File "tuple_support.py", line 110
        frame_dig -6                                                           // load values.2#0 from parameters                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.1#0,tmp%0#0,tmp%1#0,values.2#0                                             values: tuple[UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64, UInt64]                       File "tuple_support.py", line 108
        +                                                                      //                                                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.1#0,tmp%0#0,{+}                                                            values[0] + values[1] + values[2]                                                                   File "tuple_support.py", line 110
        ==                                                                     //                                                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.1#0,{==}                                                                   add_three_values(one_to_three) == values[0] + values[1] + values[2]                                 File "tuple_support.py", line 110
        assert                                                                 //                                                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.1#0                                                                        assert add_three_values(one_to_three) == values[0] + values[1] + values[2]                          File "tuple_support.py", line 110
        dup                                                                    // load one_to_three.1#0 from l-stack (copy)         (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | one_to_three.1#0,one_to_three.1#0                                                       one_to_three                                                                                        File "tuple_support.py", line 109
        ==                                                                     //                                                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 | {==}                                                                                    one_to_three[-2:-1][0] == one_to_three[1]                                                           File "tuple_support.py", line 112
        assert                                                                 //                                                   (𝕡) values.0#0,values.1#0,values.2#0,values.3#0,values.4#0,values.5#0,values.6#0,values.7#0 |                                                                                         assert one_to_three[-2:-1][0] == one_to_three[1]                                                    File "tuple_support.py", line 112
        retsub                                                                 //


// examples.tuple_support.TupleSupport.__init__() -> void:
__init__:
        proto 0 0                                                              //                                                                                                                                                                                                                                         def __init__(self) -> None:                                                                         File "tuple_support.py", line 5

__init___block@0:
        byte "state"                                                           //                                                   "state"                                                                                                                                                                               self.state                                                                                          File "tuple_support.py", line 6
        int 0                                                                  //                                                   "state",0                                                                                                                                                                             0                                                                                                   File "tuple_support.py", line 6
        app_global_put                                                         //                                                                                                                                                                                                                                         self.state = UInt64(0)                                                                              File "tuple_support.py", line 6
        retsub                                                                 //

