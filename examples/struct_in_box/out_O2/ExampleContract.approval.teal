#pragma version 10

examples.struct_in_box.contract.ExampleContract.approval_program:
    callsub __puya_arc4_router__
    return


// examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@7
    method "add_user((string,uint64,uint64))void"
    method "attach_asset_to_user(uint64,asset)void"
    method "get_user(uint64)(string,uint64,uint64)"
    txna ApplicationArgs 0
    match __puya_arc4_router___add_user_route@2 __puya_arc4_router___attach_asset_to_user_route@3 __puya_arc4_router___get_user_route@4
    int 0
    retsub

__puya_arc4_router___add_user_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    callsub add_user
    int 1
    retsub

__puya_arc4_router___attach_asset_to_user_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    btoi
    txnas Assets
    callsub attach_asset_to_user
    int 1
    retsub

__puya_arc4_router___get_user_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    callsub get_user
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@7:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@11
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@11:
    int 0
    retsub


// examples.struct_in_box.contract.ExampleContract.add_user(user: bytes) -> void:
add_user:
    proto 1 0
    frame_dig -1
    extract 2 8 // on error: Index access is out of bounds
    callsub box_exists
    !
    assert // User with id must not exist
    frame_dig -1
    callsub write_to_box
    frame_bury -1
    retsub


// examples.struct_in_box.contract.ExampleContract.box_exists(user_id: bytes) -> uint64:
box_exists:
    proto 1 1
    frame_dig -1
    box_get
    bury 1
    retsub


// examples.struct_in_box.contract.ExampleContract.write_to_box(user: bytes) -> bytes:
write_to_box:
    proto 1 1
    frame_dig -1
    extract 2 8 // on error: Index access is out of bounds
    dup
    box_del
    pop
    frame_dig -1
    box_put
    frame_dig -1
    retsub


// examples.struct_in_box.contract.ExampleContract.attach_asset_to_user(user_id: bytes, asset: uint64) -> void:
attach_asset_to_user:
    proto 2 0
    frame_dig -2
    callsub read_from_box
    frame_dig -1
    itob
    replace2 10
    callsub write_to_box
    pop
    retsub


// examples.struct_in_box.contract.ExampleContract.read_from_box(user_id: bytes) -> bytes:
read_from_box:
    proto 1 1
    frame_dig -1
    box_get
    assert // User with that id does not exist
    retsub


// examples.struct_in_box.contract.ExampleContract.get_user(user_id: bytes) -> bytes:
get_user:
    proto 1 1
    frame_dig -1
    callsub read_from_box
    retsub
