// Op                                                                                           Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // struct_in_box/contract.py:10
        // class ExampleContract(ARC4Contract):
        txn NumAppArgs                                                                          tmp%0#1
        l-load tmp%0#1 0                                                                        tmp%0#1
        bz main_bare_routing@8 ; b main_abi_routing@2

    main_abi_routing@2:
        // struct_in_box/contract.py:10
        // class ExampleContract(ARC4Contract):
        txna ApplicationArgs 0                                                                  tmp%2#0
        method add_user((string,uint64,uint64))void                                             tmp%2#0,Method(add_user((string,uint64,uint64))void)
        method attach_asset_to_user(uint64,uint64)void                                          tmp%2#0,Method(add_user((string,uint64,uint64))void),Method(attach_asset_to_user(uint64,uint64)void)
        method get_user(uint64)(string,uint64,uint64)                                           tmp%2#0,Method(add_user((string,uint64,uint64))void),Method(attach_asset_to_user(uint64,uint64)void),Method(get_user(uint64)(string,uint64,uint64))
        l-load tmp%2#0 3                                                                        Method(add_user((string,uint64,uint64))void),Method(attach_asset_to_user(uint64,uint64)void),Method(get_user(uint64)(string,uint64,uint64)),tmp%2#0
        match main_add_user_route@3 main_attach_asset_to_user_route@4 main_get_user_route@5 ; b main_after_if_else@12 

    main_add_user_route@3:
        // struct_in_box/contract.py:30
        // @arc4.abimethod()
        txn OnCompletion                                                                        tmp%3#0
        l-load tmp%3#0 0                                                                        tmp%3#0
        !                                                                                       tmp%4#0
        l-load tmp%4#0 0                                                                        tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                       tmp%5#0
        l-load tmp%5#0 0                                                                        tmp%5#0
        assert // can only call when not creating
        // struct_in_box/contract.py:10
        // class ExampleContract(ARC4Contract):
        txna ApplicationArgs 1                                                                  reinterpret_Encoded((len+utf8[]),uint64,uint64)%0#0
        // struct_in_box/contract.py:30
        // @arc4.abimethod()
        l-load reinterpret_Encoded((len+utf8[]),uint64,uint64)%0#0 0                            reinterpret_Encoded((len+utf8[]),uint64,uint64)%0#0
        callsub add_user
        int 1                                                                                   1
        l-store examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0 0 examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0
        l-load examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0 0 examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__@13 

    main_attach_asset_to_user_route@4:
        // struct_in_box/contract.py:35
        // @arc4.abimethod()
        txn OnCompletion                                                                        tmp%7#0
        l-load tmp%7#0 0                                                                        tmp%7#0
        !                                                                                       tmp%8#0
        l-load tmp%8#0 0                                                                        tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                       tmp%9#0
        l-load tmp%9#0 0                                                                        tmp%9#0
        assert // can only call when not creating
        // struct_in_box/contract.py:10
        // class ExampleContract(ARC4Contract):
        txna ApplicationArgs 1                                                                  reinterpret_Encoded(uint64)%0#0
        txna ApplicationArgs 2                                                                  reinterpret_Encoded(uint64)%0#0,reinterpret_Encoded(uint64)%1#0
        l-load reinterpret_Encoded(uint64)%1#0 0                                                reinterpret_Encoded(uint64)%0#0,reinterpret_Encoded(uint64)%1#0
        btoi                                                                                    reinterpret_Encoded(uint64)%0#0,tmp%11#0
        // struct_in_box/contract.py:35
        // @arc4.abimethod()
        l-load reinterpret_Encoded(uint64)%0#0 1                                                tmp%11#0,reinterpret_Encoded(uint64)%0#0
        l-load tmp%11#0 1                                                                       reinterpret_Encoded(uint64)%0#0,tmp%11#0
        callsub attach_asset_to_user
        int 1                                                                                   1
        l-store examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0 0 examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0
        l-load examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0 0 examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__@13 

    main_get_user_route@5:
        // struct_in_box/contract.py:41
        // @arc4.abimethod()
        txn OnCompletion                                                                        tmp%12#0
        l-load tmp%12#0 0                                                                       tmp%12#0
        !                                                                                       tmp%13#0
        l-load tmp%13#0 0                                                                       tmp%13#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                       tmp%14#0
        l-load tmp%14#0 0                                                                       tmp%14#0
        assert // can only call when not creating
        // struct_in_box/contract.py:10
        // class ExampleContract(ARC4Contract):
        txna ApplicationArgs 1                                                                  reinterpret_Encoded(uint64)%2#0
        // struct_in_box/contract.py:41
        // @arc4.abimethod()
        l-load reinterpret_Encoded(uint64)%2#0 0                                                reinterpret_Encoded(uint64)%2#0
        callsub get_user                                                                        tmp%16#0
        byte 0x151f7c75                                                                         tmp%16#0,0x151f7c75
        l-load tmp%16#0 1                                                                       0x151f7c75,tmp%16#0
        concat                                                                                  tmp%17#0
        l-load tmp%17#0 0                                                                       tmp%17#0
        log
        int 1                                                                                   1
        l-store examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0 0 examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0
        l-load examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0 0 examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__@13 

    main_bare_routing@8:
        // struct_in_box/contract.py:10
        // class ExampleContract(ARC4Contract):
        txn OnCompletion                                                                        tmp%18#0
        l-load tmp%18#0 0                                                                       tmp%18#0
        bz main___algopy_default_create@9 ; b main_after_if_else@12

    main___algopy_default_create@9:
        txn ApplicationID                                                                       tmp%19#0
        l-load tmp%19#0 0                                                                       tmp%19#0
        !                                                                                       tmp%20#0
        l-load tmp%20#0 0                                                                       tmp%20#0
        assert // can only call when creating
        int 1                                                                                   1
        l-store examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0 0 examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0
        l-load examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0 0 examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__@13 

    main_after_if_else@12:
        // struct_in_box/contract.py:10
        // class ExampleContract(ARC4Contract):
        int 0                                                                                   0
        l-store examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0 0 examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0
        l-load examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0 0 examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__@13 

    main_after_inlined_examples.struct_in_box.contract.ExampleContract.__puya_arc4_router__@13:
        v-load tmp%0#0                                                                          tmp%0#0
        return


// examples.struct_in_box.contract.ExampleContract.add_user(user: bytes) -> void:
subroutine add_user:
    add_user_block@0:                                                                           (𝕡) user#0 |
        // struct_in_box/contract.py:32
        // assert not self.box_exists(user.id), "User with id must not exist"
        p-load user#0                                                                           (𝕡) user#0 | user#0 (copy)
        extract 2 8                                                                             (𝕡) user#0 | user_id#0
        // struct_in_box/contract.py:27
        // _data, exists = op.Box.get(user_id.bytes)
        l-load-copy user_id#0 0                                                                 (𝕡) user#0 | user_id#0,user_id#0 (copy)
        box_len                                                                                 (𝕡) user#0 | user_id#0,_data#0,exists#0
        l-store exists#0 1                                                                      (𝕡) user#0 | user_id#0,exists#0,_data#0
        v-store _data#0                                                                         (𝕡) user#0 | user_id#0,exists#0
        // struct_in_box/contract.py:32
        // assert not self.box_exists(user.id), "User with id must not exist"
        l-load exists#0 0                                                                       (𝕡) user#0 | user_id#0,exists#0
        !                                                                                       (𝕡) user#0 | user_id#0,tmp%1#0
        l-load tmp%1#0 0                                                                        (𝕡) user#0 | user_id#0,tmp%1#0
        assert // User with id must not exist                                                   (𝕡) user#0 | user_id#0
        // struct_in_box/contract.py:21
        // op.Box.delete(box_key)
        l-load-copy user_id#0 0                                                                 (𝕡) user#0 | user_id#0,user_id#0 (copy)
        box_del                                                                                 (𝕡) user#0 | user_id#0,{box_del}
        pop 1                                                                                   (𝕡) user#0 | user_id#0
        // struct_in_box/contract.py:23
        // op.Box.put(box_key, user.bytes)
        l-load user_id#0 0                                                                      (𝕡) user#0 | user_id#0
        p-load user#0                                                                           (𝕡) user#0 | user_id#0,user#0 (copy)
        box_put                                                                                 (𝕡) user#0 |
        retsub


// examples.struct_in_box.contract.ExampleContract.attach_asset_to_user(user_id: bytes, asset: uint64) -> void:
subroutine attach_asset_to_user:
    attach_asset_to_user_block@0:                                                               (𝕡) user_id#0,asset#0 |
        // struct_in_box/contract.py:13
        // box_data, exists = op.Box.get(user_id.bytes)
        p-load user_id#0                                                                        (𝕡) user_id#0,asset#0 | user_id#0 (copy)
        box_get                                                                                 (𝕡) user_id#0,asset#0 | box_data#0,exists#0
        // struct_in_box/contract.py:14
        // assert exists, "User with that id does not exist"
        l-load exists#0 0                                                                       (𝕡) user_id#0,asset#0 | box_data#0,exists#0
        assert // User with that id does not exist                                              (𝕡) user_id#0,asset#0 | box_data#0
        // struct_in_box/contract.py:38
        // user.asset = arc4.UInt64(asset.id)
        p-load asset#0                                                                          (𝕡) user_id#0,asset#0 | box_data#0,asset#0 (copy)
        itob                                                                                    (𝕡) user_id#0,asset#0 | box_data#0,aggregate%val_as_bytes%0#0
        l-load box_data#0 1                                                                     (𝕡) user_id#0,asset#0 | aggregate%val_as_bytes%0#0,box_data#0
        l-load aggregate%val_as_bytes%0#0 1                                                     (𝕡) user_id#0,asset#0 | box_data#0,aggregate%val_as_bytes%0#0
        replace2 10                                                                             (𝕡) user_id#0,asset#0 | user#1
        // struct_in_box/contract.py:19
        // box_key = user.id.bytes
        l-load-copy user#1 0                                                                    (𝕡) user_id#0,asset#0 | user#1,user#1 (copy)
        extract 2 8                                                                             (𝕡) user_id#0,asset#0 | user#1,box_key#0
        // struct_in_box/contract.py:21
        // op.Box.delete(box_key)
        l-load-copy box_key#0 0                                                                 (𝕡) user_id#0,asset#0 | user#1,box_key#0,box_key#0 (copy)
        box_del                                                                                 (𝕡) user_id#0,asset#0 | user#1,box_key#0,{box_del}
        pop 1                                                                                   (𝕡) user_id#0,asset#0 | user#1,box_key#0
        // struct_in_box/contract.py:23
        // op.Box.put(box_key, user.bytes)
        l-load box_key#0 0                                                                      (𝕡) user_id#0,asset#0 | user#1,box_key#0
        l-load user#1 1                                                                         (𝕡) user_id#0,asset#0 | box_key#0,user#1
        box_put                                                                                 (𝕡) user_id#0,asset#0 |
        retsub


// examples.struct_in_box.contract.ExampleContract.get_user(user_id: bytes) -> bytes:
subroutine get_user:
    get_user_block@0:                                                                           (𝕡) user_id#0 |
        // struct_in_box/contract.py:13
        // box_data, exists = op.Box.get(user_id.bytes)
        p-load user_id#0                                                                        (𝕡) user_id#0 | user_id#0 (copy)
        box_get                                                                                 (𝕡) user_id#0 | box_data#0,exists#0
        // struct_in_box/contract.py:14
        // assert exists, "User with that id does not exist"
        l-load exists#0 0                                                                       (𝕡) user_id#0 | box_data#0,exists#0
        assert // User with that id does not exist                                              (𝕡) user_id#0 | box_data#0
        // struct_in_box/contract.py:43
        // return self.read_from_box(user_id)
        l-load box_data#0 0                                                                     (𝕡) user_id#0 | box_data#0
        retsub                                                                                  box_data#0


