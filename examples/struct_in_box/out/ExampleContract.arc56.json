{
    "name": "ExampleContract",
    "structs": {
        "UserStruct": [
            {
                "name": "name",
                "type": "string"
            },
            {
                "name": "id",
                "type": "uint64"
            },
            {
                "name": "asset",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "add_user",
            "args": [
                {
                    "type": "(string,uint64,uint64)",
                    "struct": "UserStruct",
                    "name": "user"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "attach_asset_to_user",
            "args": [
                {
                    "type": "uint64",
                    "name": "user_id"
                },
                {
                    "type": "uint64",
                    "name": "asset"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_user",
            "args": [
                {
                    "type": "uint64",
                    "name": "user_id"
                }
            ],
            "returns": {
                "type": "(string,uint64,uint64)",
                "struct": "UserStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        14
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        54
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        94
                    ],
                    "errorMessage": "User with id must not exist"
                },
                {
                    "pc": [
                        120,
                        144
                    ],
                    "errorMessage": "User with that id does not exist"
                },
                {
                    "pc": [
                        79
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        109,
                        117,
                        142
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                },
                {
                    "pc": [
                        84
                    ],
                    "errorMessage": "invalid number of bytes for examples.struct_in_box.contract.UserStruct"
                },
                {
                    "pc": [
                        67
                    ],
                    "errorMessage": "invalid tail pointer at index 0 of ((len+utf8[]),uint64,uint64)"
                },
                {
                    "pc": [
                        62
                    ],
                    "errorMessage": "invalid tuple encoding"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxIDggMAogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weToxMAogICAgLy8gY2xhc3MgRXhhbXBsZUNvbnRyYWN0KEFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9fX2FsZ29weV9kZWZhdWx0X2NyZWF0ZUAxMAogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQKICAgIHB1c2hieXRlc3MgMHhkYTg1MzRiZCAweGI0NjMzZGRkIDB4MTY1NDU4ODAgLy8gbWV0aG9kICJhZGRfdXNlcigoc3RyaW5nLHVpbnQ2NCx1aW50NjQpKXZvaWQiLCBtZXRob2QgImF0dGFjaF9hc3NldF90b191c2VyKHVpbnQ2NCx1aW50NjQpdm9pZCIsIG1ldGhvZCAiZ2V0X3VzZXIodWludDY0KShzdHJpbmcsdWludDY0LHVpbnQ2NCkiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBhZGRfdXNlciBhdHRhY2hfYXNzZXRfdG9fdXNlciBnZXRfdXNlcgogICAgZXJyCgptYWluX19fYWxnb3B5X2RlZmF1bHRfY3JlYXRlQDEwOgogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgICYmCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCgovLyBleGFtcGxlcy5zdHJ1Y3RfaW5fYm94LmNvbnRyYWN0LkV4YW1wbGVDb250cmFjdC5hZGRfdXNlcltyb3V0aW5nXSgpIC0+IHZvaWQ6CmFkZF91c2VyOgogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weTozMAogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGR1cAogICAgaW50Y18yIC8vIDAKICAgIGV4dHJhY3RfdWludDE2IC8vIG9uIGVycm9yOiBpbnZhbGlkIHR1cGxlIGVuY29kaW5nCiAgICBkdXAKICAgIHB1c2hpbnQgMTggLy8gMTgKICAgID09CiAgICBhc3NlcnQgLy8gaW52YWxpZCB0YWlsIHBvaW50ZXIgYXQgaW5kZXggMCBvZiAoKGxlbit1dGY4W10pLHVpbnQ2NCx1aW50NjQpCiAgICBkaWcgMQogICAgbGVuCiAgICBkaWcgMgogICAgdW5jb3ZlciAyCiAgICBkaWcgMgogICAgc3Vic3RyaW5nMwogICAgaW50Y18yIC8vIDAKICAgIGV4dHJhY3RfdWludDE2IC8vIG9uIGVycm9yOiBpbnZhbGlkIGFycmF5IGxlbmd0aCBoZWFkZXIKICAgIHB1c2hpbnQgMjAgLy8gMjAKICAgICsKICAgID09CiAgICBhc3NlcnQgLy8gaW52YWxpZCBudW1iZXIgb2YgYnl0ZXMgZm9yIGV4YW1wbGVzLnN0cnVjdF9pbl9ib3guY29udHJhY3QuVXNlclN0cnVjdAogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weTozMgogICAgLy8gYXNzZXJ0IG5vdCBzZWxmLmJveF9leGlzdHModXNlci5pZCksICJVc2VyIHdpdGggaWQgbXVzdCBub3QgZXhpc3QiCiAgICBkdXAKICAgIGV4dHJhY3QgMiA4CiAgICAvLyBzdHJ1Y3RfaW5fYm94L2NvbnRyYWN0LnB5OjI3CiAgICAvLyBfZGF0YSwgZXhpc3RzID0gb3AuQm94LmdldCh1c2VyX2lkLmJ5dGVzKQogICAgZHVwCiAgICBib3hfbGVuCiAgICBidXJ5IDEKICAgIC8vIHN0cnVjdF9pbl9ib3gvY29udHJhY3QucHk6MzIKICAgIC8vIGFzc2VydCBub3Qgc2VsZi5ib3hfZXhpc3RzKHVzZXIuaWQpLCAiVXNlciB3aXRoIGlkIG11c3Qgbm90IGV4aXN0IgogICAgIQogICAgYXNzZXJ0IC8vIFVzZXIgd2l0aCBpZCBtdXN0IG5vdCBleGlzdAogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weToyMC0yMQogICAgLy8gIyBEZWxldGUgZXhpc3RpbmcgZGF0YSwgc28gd2UgZG9uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCByZXNpemluZyB0aGUgYm94CiAgICAvLyBvcC5Cb3guZGVsZXRlKGJveF9rZXkpCiAgICBkdXAKICAgIGJveF9kZWwKICAgIHBvcAogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weToyMwogICAgLy8gb3AuQm94LnB1dChib3hfa2V5LCB1c2VyLmJ5dGVzKQogICAgc3dhcAogICAgYm94X3B1dAogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weTozMAogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCgovLyBleGFtcGxlcy5zdHJ1Y3RfaW5fYm94LmNvbnRyYWN0LkV4YW1wbGVDb250cmFjdC5hdHRhY2hfYXNzZXRfdG9fdXNlcltyb3V0aW5nXSgpIC0+IHZvaWQ6CmF0dGFjaF9hc3NldF90b191c2VyOgogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weTozNQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGR1cAogICAgbGVuCiAgICBpbnRjXzEgLy8gOAogICAgPT0KICAgIGFzc2VydCAvLyBpbnZhbGlkIG51bWJlciBvZiBieXRlcyBmb3IgYXJjNC51aW50NjQKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGR1cAogICAgbGVuCiAgICBpbnRjXzEgLy8gOAogICAgPT0KICAgIGFzc2VydCAvLyBpbnZhbGlkIG51bWJlciBvZiBieXRlcyBmb3IgYXJjNC51aW50NjQKICAgIC8vIHN0cnVjdF9pbl9ib3gvY29udHJhY3QucHk6MTMKICAgIC8vIGJveF9kYXRhLCBleGlzdHMgPSBvcC5Cb3guZ2V0KHVzZXJfaWQuYnl0ZXMpCiAgICBzd2FwCiAgICBib3hfZ2V0CiAgICAvLyBzdHJ1Y3RfaW5fYm94L2NvbnRyYWN0LnB5OjE0CiAgICAvLyBhc3NlcnQgZXhpc3RzLCAiVXNlciB3aXRoIHRoYXQgaWQgZG9lcyBub3QgZXhpc3QiCiAgICBhc3NlcnQgLy8gVXNlciB3aXRoIHRoYXQgaWQgZG9lcyBub3QgZXhpc3QKICAgIC8vIHN0cnVjdF9pbl9ib3gvY29udHJhY3QucHk6MzgKICAgIC8vIHVzZXIuYXNzZXQgPSBhcmM0LlVJbnQ2NChhc3NldC5pZCkKICAgIHN3YXAKICAgIHJlcGxhY2UyIDEwCiAgICAvLyBzdHJ1Y3RfaW5fYm94L2NvbnRyYWN0LnB5OjE5CiAgICAvLyBib3hfa2V5ID0gdXNlci5pZC5ieXRlcwogICAgZHVwCiAgICBleHRyYWN0IDIgOAogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weToyMC0yMQogICAgLy8gIyBEZWxldGUgZXhpc3RpbmcgZGF0YSwgc28gd2UgZG9uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCByZXNpemluZyB0aGUgYm94CiAgICAvLyBvcC5Cb3guZGVsZXRlKGJveF9rZXkpCiAgICBkdXAKICAgIGJveF9kZWwKICAgIHBvcAogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weToyMwogICAgLy8gb3AuQm94LnB1dChib3hfa2V5LCB1c2VyLmJ5dGVzKQogICAgc3dhcAogICAgYm94X3B1dAogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weTozNQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCgovLyBleGFtcGxlcy5zdHJ1Y3RfaW5fYm94LmNvbnRyYWN0LkV4YW1wbGVDb250cmFjdC5nZXRfdXNlcltyb3V0aW5nXSgpIC0+IHZvaWQ6CmdldF91c2VyOgogICAgLy8gc3RydWN0X2luX2JveC9jb250cmFjdC5weTo0MQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGR1cAogICAgbGVuCiAgICBpbnRjXzEgLy8gOAogICAgPT0KICAgIGFzc2VydCAvLyBpbnZhbGlkIG51bWJlciBvZiBieXRlcyBmb3IgYXJjNC51aW50NjQKICAgIC8vIHN0cnVjdF9pbl9ib3gvY29udHJhY3QucHk6MTMKICAgIC8vIGJveF9kYXRhLCBleGlzdHMgPSBvcC5Cb3guZ2V0KHVzZXJfaWQuYnl0ZXMpCiAgICBib3hfZ2V0CiAgICAvLyBzdHJ1Y3RfaW5fYm94L2NvbnRyYWN0LnB5OjE0CiAgICAvLyBhc3NlcnQgZXhpc3RzLCAiVXNlciB3aXRoIHRoYXQgaWQgZG9lcyBub3QgZXhpc3QiCiAgICBhc3NlcnQgLy8gVXNlciB3aXRoIHRoYXQgaWQgZG9lcyBub3QgZXhpc3QKICAgIC8vIHN0cnVjdF9pbl9ib3gvY29udHJhY3QucHk6NDEKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBwdXNoYnl0ZXMgMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4K",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyADAQgAMRtBACQxGRREMRhEggME2oU0vQS0Yz3dBBZUWIA2GgCOAwALADgAWQAxGRQxGBQQRCJDNhoBSSRZSYESEkRLARVLAk8CSwJSJFmBFAgSRElXAghJvUUBFERJvEhMvyJDNhoBSRUjEkQ2GgJJFSMSREy+RExcCklXAghJvEhMvyJDNhoBSRUjEkS+RIAEFR98dUxQsCJD",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}